[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-1/tp/branch/master/graph/badge.svg?token\u003dRKLSU8HQ5A)](https://codecov.io/gh/AY2122S2-CS2103T-T13-1/tp)","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"* **WoofAreYou**  is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"  * keep track of pet administrative details","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"  * keep track of pet dietary requirements","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"  * keep track of pet attendance","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"* The project simulates an ongoing software project for a desktop application (called _WoofAreYou_) used for managing pet administrative details.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"* For the detailed documentation of this project, see the **[WoofAreYou Product Website](https://ay2122s2-cs2103t-t13-1.github.io/tp/)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Dineshraj555":8,"-":6,"tobihy":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"mainClassName \u003d \u0027woofareyou.Main\u0027","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    archiveName \u003d \u0027WoofAreYou.jar\u0027","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"run {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"soloplxya":3,"tobihy":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"You can reach us at the ownerName `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"### Thia Su Mian","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"\u003cimg src\u003d\"images/tsumian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"[[github](https://github.com/tsumian)]","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"[[portfolio](team/tsumian.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"### S Dinesh Raj","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"\u003cimg src\u003d\"images/dineshraj555.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"[[github](http://github.com/dineshraj555)]","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"[[portfolio](team/dineshraj555.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"### Teo Hao Yu","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"\u003cimg src\u003d\"images/tobihy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"[[github](http://github.com/tobihy)]","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"[[portfolio](team/tobihy.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"### Shaine Goh Si Hui","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"\u003cimg src\u003d\"images/soloplxya.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"[[github](http://github.com/soloplxya)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"[[portfolio](team/soloplxya.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"* Responsibilities: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"### Lin Hui Xin Tiffany","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"\u003cimg src\u003d\"images/tiffanylin21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"[[github](http://github.com/Tiffanylin21)]","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"[[portfolio](team/tiffanylin21.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"* Responsibilities: Developer","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Dineshraj555":9,"Tiffanylin21":5,"tsumian":5,"-":35,"soloplxya":7}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S2-CS2103T-T13-1/tp/blob/master/src/main/java/woofareyou/MainApp.java).","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":79,"tobihy":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"* This project is adapted from a generic application called AddressBook-Level3 (AB3) (from https://se-education.org) as the starting point.","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PetListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"* depends on some classes in the `Model` component, as it displays `Pet` object residing in the `Model`.","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a pet).","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"* stores WoofAreYou data i.e., all `Pet` objects (which are contained in a `UniquePetList` object).","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"* stores the currently \u0027selected\u0027 `Pet` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPet\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Pet` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Pet` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"* can save both WoofAreYou data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"### Sorting feature","lastModifiedDate":"2022-04-08"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"The proposed sorting mechanism is facilitated by `SortCommand` class. It extends `Command`","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"soloplxya"},"content":"and takes in a field that the user wishes to sort WoofAreYou by. The field is parsed by","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"`SortCommandParser`.","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"The primary sorting operation that takes place in the SortCommand class is sortPetList. This operation is exposed","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"in the `Model` interface as Model#sortPetList().","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"soloplxya"},"content":"Currently, pet list can only be sorted by pet name or owner name. Each class implements the `Comparable` interface so that","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"they can be compared and sorted alphabetically.","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"soloplxya"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"soloplxya"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"The following activity diagram summarizes what happens when a user executes a new sort command:","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"soloplxya"},"content":"![SortActivityDiagram](images/SortActivityDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"soloplxya"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"soloplxya"},"content":"* **Alternative 1 (current choice):** Currently the comparator classes for both owner name and pet name are generated","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"soloplxya"},"content":"  within the `sortPetList` method in `UniquePetList`.","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"soloplxya"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"soloplxya"},"content":"    * Cons: May be confusing to edit if there are more comparator classes in the future.","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"soloplxya"},"content":"* **Alternative 2:** Generate a new package containing the various comparator classes.","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"soloplxya"},"content":"    * Pros: Cleaner code. Better for future scalability.","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"soloplxya"},"content":"    * Cons: Contributes to more lines of code. Harder to set up initially.","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"tsumian"},"content":"### Charge feature","lastModifiedDate":"2022-04-08"},{"lineNumber":189,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"tsumian"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":191,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"Tiffanylin21"},"content":"The proposed charge mechanism is facilitated by `ChargeCommand` class. It extends `Command`. It takes in a pet and month the user would like to charge. These fields are parsed by `ChargeCommandParser`. Additionally, it implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"Tiffanylin21"},"content":"* `ChargeCommand#generateSuccessMessage()` — Generates a message containing the total amount chargeable to be shown to the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"Tiffanylin21"},"content":"* `ChargeCommand#execute()` — Fetches attendance details of a pet and computes a month\u0027s total amount chargeable.","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"Tiffanylin21"},"content":"* `ChargeCommand#equals()` — Checks if a `ChargeCommand` equates another.","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"Tiffanylin21"},"content":"Given below is an example usage scenario and how the charge mechanism behaves at each step.","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"Tiffanylin21"},"content":"Step 1. The user executes command `charge 1 /m03` to compute amount chargeable to the pet at index 1 in March. The `charge` command is parsed by `ChargeCommandParser` which then sends the pet index and month to create a new `ChargeCommand` instance.","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"Tiffanylin21"},"content":"The following sequence diagram shows how the charge operation works:","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"Tiffanylin21"},"content":"![ChargeSequenceDiagram](images/ChargeSequenceDiagram.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":206,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"Tiffanylin21"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ChargeCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"tsumian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":209,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"Tiffanylin21"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"Tiffanylin21"},"content":"**Aspect: How charge executes:**","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"Tiffanylin21"},"content":"* **Alternative 1 (current choice):** Gets attendance from a pet\u0027s attendanceHashMap and compute charge.","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"Tiffanylin21"},"content":"    * Pros: Saves memory.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"Tiffanylin21"},"content":"    * Cons: May have performance issues in terms of recomputing the same pet\u0027s monthly charge.","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"Tiffanylin21"},"content":"* **Alternative 2:** Save charge as an attribute for each pet.","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"Tiffanylin21"},"content":"    * Pros: Easier to get charge.","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"Tiffanylin21"},"content":"    * Cons: Will use more memory and require more code to maintain it.","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"### Appointment feature","lastModifiedDate":"2022-04-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"Dineshraj555"},"content":"The proposed appointment feature is facilitated by the `AppointmentCommand` class which extends `Command` class. The","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"Dineshraj555"},"content":"`AppointmentCommand` takes in a valid mandatory index which specifics the pet that the command is to be used on,","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"Dineshraj555"},"content":"followed by either **one** prefix (*clear*) or **two** prefixes (*dateTime* and *location*) based on the objective the","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"Dineshraj555"},"content":"user is trying to accomplish. The fields are parsed by `AppointmentCommandParser` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"Dineshraj555"},"content":"Appointment feature can be used to accomplish the following 2 tasks:","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"Dineshraj555"},"content":"1. Add and store pet\u0027s appointment details. (*dateTime and Location prefixes*)","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"Dineshraj555"},"content":"2. Clear and delete pet\u0027s appointment details. (*clear prefix*)","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"Dineshraj555"},"content":"The operation of updating the pet\u0027s appointment details and updating the pet filter list are done by methods in the","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"Dineshraj555"},"content":"Model interface as Model#setPet() and Model#updateFilterPetList() respectively.","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"Dineshraj555"},"content":"The following sequence diagram below illustrates the interactions between the `Logic` component and `Model` component","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"Dineshraj555"},"content":"for the `execute(\"app 1 clear\")` API call:","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"Dineshraj555"},"content":"![AppointmentSequenceDiagram](images/AppointmentSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"Dineshraj555"},"content":"The following activity diagram summarizes what happens when a user executes a new Appointmentcommand:","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"Dineshraj555"},"content":"![AppointmentActivityDiagram](images/AppointmentActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"Dineshraj555"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"Dineshraj555"},"content":"* **Alternative 1 (current choice):** Currently the appointment command is responsible for both the adding and clearing","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"Dineshraj555"},"content":"  of appointment details to / from a pet. These 2 tasks follow a similar command format and are differentiated only","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"Dineshraj555"},"content":"  by the prefixes / augments.","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"Dineshraj555"},"content":"    * Pros: Easy and simple to implement.","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"Dineshraj555"},"content":"    * Cons: User may struggle to get familiar with the command.","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"Dineshraj555"},"content":"* **Alternative 2:** Add a new `clear` command to clear and delete contents of variables based on input field.","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"Dineshraj555"},"content":"    * Pros: Better for future scalability.","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"Dineshraj555"},"content":"    * Cons: Complex implementation. More lines of code. Harder to set up initially.","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"### Filter feature","lastModifiedDate":"2022-04-08"},{"lineNumber":259,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"The proposed filter mechanism is facilitated by `FilterCommand` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"soloplxya"},"content":"It extends `Command` and takes in a field that the user wishes to filter WoofAreYou by followed by","lastModifiedDate":"2022-04-07"},{"lineNumber":263,"author":{"gitId":"tsumian"},"content":"a given filter word. The field is parsed by `FilterCommandParser`. A filter word will follow after the keyword to","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"indicate what the user wants to filter out specifically.","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"soloplxya"},"content":"Currently, pet list can be filtered by date, owner name and tag. Users can only filter WoofAreYou by one field at","lastModifiedDate":"2022-04-07"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"a time only. `FilterCommandParser` ensure this by throwing a `ParseException` when more than one filter field is","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"entered.","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"`FilterCommandParser` parses the arguments and classifies the fields into the three different classes as represented by","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"tsumian"},"content":"`DateContainsFilterDatePredicate`, `OwnerNameContainsFilterWordPredicate` and `TagContainsFilterWordPredicate` classes.","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"The class diagram below shows the relationship between the classes and `FilterByContainsFilterWordPredicate`.","lastModifiedDate":"2022-04-08"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"![FilterPredicatesClassDiagram](images/FilterPredicatesClassDiagram.png)","lastModifiedDate":"2022-04-08"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":277,"author":{"gitId":"tsumian"},"content":"Each class extends the `FilterByContainsFilterWordPredicate` class, which implements the `Predicate\u003cPet\u003e` interface,","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"in order for `FindCommand` to handle different fields appropriately and consequently test each pet differently for a","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"tsumian"},"content":"match in the specified field.","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"tsumian"},"content":"`FindCommand` then updates the address book using one of the three classes (`Predicates`). Each class has a different","lastModifiedDate":"2022-04-08"},{"lineNumber":282,"author":{"gitId":"tsumian"},"content":"way of testing `Pet`.","lastModifiedDate":"2022-04-08"},{"lineNumber":283,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"soloplxya"},"content":"The following sequence diagram shows how the filter operation works when `filter byTag/ beagle` is called:","lastModifiedDate":"2022-04-07"},{"lineNumber":285,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"tsumian"},"content":"![FilterSequenceDiagram](images/FilterSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"tsumian"},"content":"The following activity diagram summarizes what happens when a user executes a new `filter` command:","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"tsumian"},"content":"![FilterActivityDiagram](images/FilterActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":292,"author":{"gitId":"tsumian"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"tsumian"},"content":"* **Alternative 1 (current choice):** Currently each filter field extends its own `FilterByContainsFilterWordPredicate` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"tsumian"},"content":"    * Pros: Easy to implement and increases flexibility when testing using a `Predicate`.","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"tsumian"},"content":"    * Cons: May generate a lot more classes if filter fields were to expand in the future.","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":298,"author":{"gitId":"tsumian"},"content":"* **Alternative 2:** Generate a new package containing the various predicate and methods to identify different fields.","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"tsumian"},"content":"    * Pros: Cleaner code. Better for future scalability.","lastModifiedDate":"2022-03-25"},{"lineNumber":300,"author":{"gitId":"tsumian"},"content":"    * Cons: Requires more lines of code. Harder to set up initially. Risk being messy if not careful.","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":302,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":303,"author":{"gitId":"tsumian"},"content":"### Undo feature","lastModifiedDate":"2022-04-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"tsumian"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"tsumian"},"content":"The undo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-04-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"soloplxya"},"content":"* `VersionedAddressBook#commit()` — Saves the current WoofAreYou state in its history.","lastModifiedDate":"2022-04-07"},{"lineNumber":310,"author":{"gitId":"soloplxya"},"content":"* `VersionedAddressBook#undo()` — Restores the previous WoofAreYou state from its history.","lastModifiedDate":"2022-04-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"tsumian"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()` and `Model#undoAddressBook()` respectively.","lastModifiedDate":"2022-04-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"tsumian"},"content":"Given below is an example usage scenario and how the undo mechanism behaves at each step.","lastModifiedDate":"2022-04-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"soloplxya"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial WoofAreYou state, and the `currentStatePointer` pointing to that single WoofAreYou state.","lastModifiedDate":"2022-04-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"soloplxya"},"content":"Step 2. The user executes `delete 5` command to delete the 5th pet in WoofAreYou. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of WoofAreYou after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted WoofAreYou state.","lastModifiedDate":"2022-04-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"soloplxya"},"content":"Step 3. The user executes `add n/David …​` to add a new pet. The `add` command also calls `Model#commitAddressBook()`, causing another modified WoofAreYou state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"soloplxya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the WoofAreYou state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"soloplxya"},"content":"Step 4. The user now decides that adding the pet was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous WoofAreYou state, and restores the WoofAreYou to that state.","lastModifiedDate":"2022-04-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"tsumian"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify WoofAreYou, such as `list`, will usually not call `Model#commitAddressBook()` or `Model#undoAddressBook()` Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-04-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"tsumian"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all WoofAreYou states after the `currentStatePointer` will be purged.","lastModifiedDate":"2022-04-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"tsumian"},"content":"**Aspect: How undo executes:**","lastModifiedDate":"2022-04-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"soloplxya"},"content":"* **Alternative 1 (current choice):** Saves the entirety of WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"Tiffanylin21"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the pet being deleted).","lastModifiedDate":"2022-03-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"tsumian"},"content":"### Attendance feature","lastModifiedDate":"2022-04-08"},{"lineNumber":375,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"tsumian"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":377,"author":{"gitId":"tobihy"},"content":"The proposed attendance feature is facilitated by `AttendanceCommand`. `AttendanceCommand` consists of two subclasses,","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"tobihy"},"content":"`PresentAttendanceCommand` and `AbsentAttendanceCommand`, which allows users to either mark a pet as present or absent","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"tobihy"},"content":"on a particular day. Initially, user input, which includes the index of the pet, date, as well as pick-up and drop-off","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"tobihy"},"content":"time (if applicable), is parsed by the `PresentAttendanceCommandParser` or `AbsentAttendanceCommandParser` classes into","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"tobihy"},"content":"the command classes above. The command classes are then passed on to the Model component for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"tobihy"},"content":"The data from the input is stored into the `AttendanceHashMap` class in pets, which consists of mappings of dates to","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"tobihy"},"content":"`Attendance` objects. The class hence acts as an \"attendance sheet\", and is the main repository of data within the","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"tobihy"},"content":"Model component that facilitates `Attendance` functionalities.","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"tobihy"},"content":"The operation of updating the pet\u0027s attendance details and updating the GUI to reflect such changes are done by methods","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"tobihy"},"content":"in the Model interface as `Model#setPet()` and `Model#updateFilterPetList()` respectively. `Attendance` GUI is also","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"tobihy"},"content":"supported by the methods in `AttendanceTag`, `TransportTag` and `AttendanceUtil` classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"tobihy"},"content":"The following sequence diagram below models the interactions between the Logic as well as the Model components to","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"tobihy"},"content":"update the backend and frontend of the application.","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"tobihy"},"content":"![AbsentAttendanceSequenceDiagram](images/AbsentAttendanceSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"tobihy"},"content":"The activity diagram below illustrates the workflow of attendance commands.","lastModifiedDate":"2022-03-27"},{"lineNumber":397,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":398,"author":{"gitId":"tobihy"},"content":"![AttendanceActivityDiagram](images/AttendanceActivityDiagram.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":399,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":400,"author":{"gitId":"tobihy"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":402,"author":{"gitId":"tobihy"},"content":"**Aspect: Attendance data within `Model` component**","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":404,"author":{"gitId":"tobihy"},"content":"* **Alternative 1 (current choice):** Attendance entries in every pets\u0027 HashMaps.","lastModifiedDate":"2022-03-24"},{"lineNumber":405,"author":{"gitId":"tobihy"},"content":"    * Pros: Better OOP and performance.","lastModifiedDate":"2022-03-24"},{"lineNumber":406,"author":{"gitId":"tobihy"},"content":"    * Cons: Higher memory usage.","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"tobihy"},"content":"* **Alternative 2:** All attendance entries in a single HashMap.","lastModifiedDate":"2022-03-24"},{"lineNumber":408,"author":{"gitId":"tobihy"},"content":"    * Pros: Lesser memory usage, easier to implement.","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"tobihy"},"content":"    * Cons: May have performance issues due to nested data structure.","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"tsumian"},"content":"* Pet daycare centre owners","lastModifiedDate":"2022-04-08"},{"lineNumber":436,"author":{"gitId":"tsumian"},"content":"* Has a need to manage administrative details of pets on a daily basis","lastModifiedDate":"2022-04-08"},{"lineNumber":437,"author":{"gitId":"tsumian"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2022-04-08"},{"lineNumber":438,"author":{"gitId":"tsumian"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2022-04-08"},{"lineNumber":439,"author":{"gitId":"tsumian"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2022-04-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"tsumian"},"content":"**Value proposition**: Manage administrative duties faster than a typical mouse/ GUI driven app and Excel","lastModifiedDate":"2022-04-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                                      | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"tsumian"},"content":"|----------|-------------------|-------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":450,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | retrieve pet owner\u0027s contact                                      | contact pet owners                                                     |","lastModifiedDate":"2022-02-27"},{"lineNumber":451,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | tag different types of pets                                       | easily differentiate between the types of pets                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":452,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | track when pets require pickup or drop-off                        | schedule the school bus for each day                                   |","lastModifiedDate":"2022-02-27"},{"lineNumber":453,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | track the different food preferences required by different pets   | make sure the pets are served the right foods                          |","lastModifiedDate":"2022-02-27"},{"lineNumber":454,"author":{"gitId":"tobihy"},"content":"| `* * *`  | pet daycare owner | track the attendanceEntry of pets                                 | charge pet owners the correct amount depending on pets attendanceEntry |","lastModifiedDate":"2022-03-20"},{"lineNumber":455,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | add pets in the daycare to system                                 | I have a consolidated information sheet                                |","lastModifiedDate":"2022-02-27"},{"lineNumber":456,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | retrieve the pets addresses                                       | inform the school bus driver correctly                                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":457,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | find pets by their INDEX                                          | retrieve the pet information accordingly                               |","lastModifiedDate":"2022-04-08"},{"lineNumber":458,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | delete pet\u0027s information from the system                          | information of pets that are in the system will be up to date          |","lastModifiedDate":"2022-02-27"},{"lineNumber":459,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | tabulate the monthly charge of each pets                          | bill owners accordingly                                                |","lastModifiedDate":"2022-02-27"},{"lineNumber":460,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | track pets\u0027 grooming appointments                                 | remember to bring them for grooming                                    |","lastModifiedDate":"2022-02-27"},{"lineNumber":461,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | track the allergies that each pet has                             | avoid giving them food they may be allergic to                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":462,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | order pets chronologically by there name                          | easily search for their name in the system                             |","lastModifiedDate":"2022-02-27"},{"lineNumber":463,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | order pets\u0027 appointments chronologically                          | know what is the next appointment I should take note of                |","lastModifiedDate":"2022-02-27"},{"lineNumber":464,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | track the vet appointments of pets                                | make sure pets do not miss their medical appointments                  |","lastModifiedDate":"2022-02-27"},{"lineNumber":465,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | track the medicine that pets need to take                         | i can feed them medicine appropriately                                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":466,"author":{"gitId":"tobihy"},"content":"| `*`      | pet daycare owner | change the attendanceEntry of pets anytime I want                 | I can allow for last minute scheduling                                 |","lastModifiedDate":"2022-03-20"},{"lineNumber":467,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | update pet\u0027s information                                          |                                                                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":468,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | update pet owner\u0027s information                                    |                                                                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":469,"author":{"gitId":"tobihy"},"content":"| `*`      | pet daycare owner | access the previous attendanceEntry of pets                       | update owners if they were to enquire                                  |","lastModifiedDate":"2022-03-20"},{"lineNumber":470,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | find the number of pets present in the daycare fo each day        | arrange the necessary manpower                                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"tsumian"},"content":"(For all use cases below, the **System** is the `WoofAreYou` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-26"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"tsumian"},"content":"**Use case: Add a pet**","lastModifiedDate":"2022-02-26"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"tsumian"},"content":"1.  User adds a pet with pet details","lastModifiedDate":"2022-02-26"},{"lineNumber":481,"author":{"gitId":"tsumian"},"content":"2.  System shows confirmation message that pet details are added","lastModifiedDate":"2022-02-26"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":486,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in wrong command format.","lastModifiedDate":"2022-02-26"},{"lineNumber":489,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":490,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":491,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":492,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":493,"author":{"gitId":"tsumian"},"content":"* 1b. User keyed in a duplicate pet.","lastModifiedDate":"2022-04-08"},{"lineNumber":494,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":495,"author":{"gitId":"tsumian"},"content":"    * 1b1. System shows and error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":496,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":497,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":498,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":499,"author":{"gitId":"tsumian"},"content":"**Use case: Delete a pet**","lastModifiedDate":"2022-02-26"},{"lineNumber":500,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":501,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":502,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":503,"author":{"gitId":"tsumian"},"content":"1.  User deletes a pet with `INDEX`","lastModifiedDate":"2022-04-08"},{"lineNumber":504,"author":{"gitId":"tsumian"},"content":"2.  System shows confirmation message that pet details are deleted","lastModifiedDate":"2022-02-26"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":512,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":513,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":514,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":515,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":516,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":517,"author":{"gitId":"tsumian"},"content":"**Use case: Find pet**","lastModifiedDate":"2022-04-08"},{"lineNumber":518,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":519,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":520,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":521,"author":{"gitId":"tsumian"},"content":"1.  User finds a pet using `NAME_OF_PET`.","lastModifiedDate":"2022-04-08"},{"lineNumber":522,"author":{"gitId":"tsumian"},"content":"2.  System shows a list of pets with names matching `NAME_OF_PET`.","lastModifiedDate":"2022-04-08"},{"lineNumber":523,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":524,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":525,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":526,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":527,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":528,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":529,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid pet name.","lastModifiedDate":"2022-02-26"},{"lineNumber":530,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":531,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows empty list.","lastModifiedDate":"2022-02-26"},{"lineNumber":532,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":533,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":534,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":535,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":536,"author":{"gitId":"tsumian"},"content":"**Use case: Key in pet dietary requirements**","lastModifiedDate":"2022-04-08"},{"lineNumber":537,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":538,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":539,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":540,"author":{"gitId":"tsumian"},"content":"1.  User keys in a requirement for pet at `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":541,"author":{"gitId":"tsumian"},"content":"2.  System shows success message for diet added.","lastModifiedDate":"2022-04-08"},{"lineNumber":542,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":543,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":544,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":545,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":546,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":547,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":548,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":549,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":550,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":551,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":552,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":553,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":554,"author":{"gitId":"tsumian"},"content":"* 1b. User included special characters in dietary requirement.","lastModifiedDate":"2022-04-08"},{"lineNumber":555,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":556,"author":{"gitId":"tsumian"},"content":"    * 1b1. System shows an error message that dietary requirements only can consist of alphanumeric characters and spacing.","lastModifiedDate":"2022-04-08"},{"lineNumber":557,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":558,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":559,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":560,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":561,"author":{"gitId":"tsumian"},"content":"**Use case: Key in pet appointment**","lastModifiedDate":"2022-04-08"},{"lineNumber":562,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":563,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":564,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":565,"author":{"gitId":"tsumian"},"content":"1.  User keys in a requirement for pet at `INDEX` followed by date, time and location.","lastModifiedDate":"2022-04-08"},{"lineNumber":566,"author":{"gitId":"tsumian"},"content":"2.  System shows success message for diet added.","lastModifiedDate":"2022-04-08"},{"lineNumber":567,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":568,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":569,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":570,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":571,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":572,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":573,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":574,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":575,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":576,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":577,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":578,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":579,"author":{"gitId":"tsumian"},"content":"* 1b. User keyed in invalid format for date and time.","lastModifiedDate":"2022-04-08"},{"lineNumber":580,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":581,"author":{"gitId":"tsumian"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":582,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":583,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":584,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":585,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":586,"author":{"gitId":"tsumian"},"content":"**Use case: Mark pet as present**","lastModifiedDate":"2022-04-08"},{"lineNumber":587,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":588,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":589,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":590,"author":{"gitId":"tsumian"},"content":"1.  User keys in `INDEX`, date, pick up and drop off time.","lastModifiedDate":"2022-04-08"},{"lineNumber":591,"author":{"gitId":"tsumian"},"content":"2.  System shows success message in marking a pet as present.","lastModifiedDate":"2022-04-08"},{"lineNumber":592,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":593,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":594,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":595,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":596,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":597,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":598,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":599,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":600,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":601,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":602,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":603,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":604,"author":{"gitId":"tsumian"},"content":"* 1b. User keyed in a date format that is of invalid format.","lastModifiedDate":"2022-04-08"},{"lineNumber":605,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":606,"author":{"gitId":"tsumian"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":607,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":608,"author":{"gitId":"tsumian"},"content":"      User case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":609,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":610,"author":{"gitId":"tsumian"},"content":"* 1c. User keyed in a time format that is of invalid format.","lastModifiedDate":"2022-04-08"},{"lineNumber":611,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":612,"author":{"gitId":"tsumian"},"content":"    * 1c1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":613,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":614,"author":{"gitId":"tsumian"},"content":"      User case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":615,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":616,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":617,"author":{"gitId":"tsumian"},"content":"**Use case: Mark pet as absent**","lastModifiedDate":"2022-04-08"},{"lineNumber":618,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":619,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":620,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":621,"author":{"gitId":"tsumian"},"content":"1.  User keys in `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":622,"author":{"gitId":"tsumian"},"content":"2.  System shows success message in marking a pet as absent.","lastModifiedDate":"2022-04-08"},{"lineNumber":623,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":624,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":625,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":626,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":627,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":628,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":629,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":630,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":631,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":632,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":633,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":634,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":635,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":636,"author":{"gitId":"tsumian"},"content":"**Use case: Sort pet list**","lastModifiedDate":"2022-04-08"},{"lineNumber":637,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":638,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":639,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":640,"author":{"gitId":"tsumian"},"content":"1.  User keys in `sort` followed by the parameter they want to sort by.","lastModifiedDate":"2022-04-08"},{"lineNumber":641,"author":{"gitId":"tsumian"},"content":"2.  System shows a sorted list of pets.","lastModifiedDate":"2022-04-08"},{"lineNumber":642,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":643,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":644,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":646,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":647,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":648,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid parameter to sort by.","lastModifiedDate":"2022-04-08"},{"lineNumber":649,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":650,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":651,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":652,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":653,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":654,"author":{"gitId":"tsumian"},"content":"**Use case: Filter pet list**","lastModifiedDate":"2022-04-08"},{"lineNumber":655,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":656,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":657,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":658,"author":{"gitId":"tsumian"},"content":"1.  User keys in `filter` followed by a field to filter by.","lastModifiedDate":"2022-04-08"},{"lineNumber":659,"author":{"gitId":"tsumian"},"content":"2.  System shows a filtered pet list.","lastModifiedDate":"2022-04-08"},{"lineNumber":660,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":661,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":662,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":663,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":664,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":665,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":666,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid parameter.","lastModifiedDate":"2022-04-08"},{"lineNumber":667,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":668,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":669,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":670,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":671,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":672,"author":{"gitId":"tsumian"},"content":"* 1b. User keyed in a date format that is of invalid format for parameter `byDate/` or `byApp/`.","lastModifiedDate":"2022-04-08"},{"lineNumber":673,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":674,"author":{"gitId":"tsumian"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":675,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":676,"author":{"gitId":"tsumian"},"content":"      User case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":677,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":678,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":679,"author":{"gitId":"tsumian"},"content":"**Use case: Charge a pet**","lastModifiedDate":"2022-04-08"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":681,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":683,"author":{"gitId":"tsumian"},"content":"1.  User keys in `INDEX` a month and cost to charge per day.","lastModifiedDate":"2022-04-08"},{"lineNumber":684,"author":{"gitId":"tsumian"},"content":"2.  System shows message of how much to charge the pet for that month.","lastModifiedDate":"2022-04-08"},{"lineNumber":685,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":686,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":689,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":691,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid `INDEX`.","lastModifiedDate":"2022-04-08"},{"lineNumber":692,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":693,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":694,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":695,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":697,"author":{"gitId":"tsumian"},"content":"* 1b. User keyed in a cost that is of invalid format.","lastModifiedDate":"2022-04-08"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":699,"author":{"gitId":"tsumian"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-04-08"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":701,"author":{"gitId":"tsumian"},"content":"      User case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":702,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":703,"author":{"gitId":"tsumian"},"content":"**Use case: Undo**","lastModifiedDate":"2022-04-08"},{"lineNumber":704,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":705,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":706,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":707,"author":{"gitId":"tsumian"},"content":"1.  User keys undo.","lastModifiedDate":"2022-04-08"},{"lineNumber":708,"author":{"gitId":"tsumian"},"content":"2.  System undoes the previous command executed.","lastModifiedDate":"2022-04-08"},{"lineNumber":709,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":710,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":711,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":712,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":714,"author":{"gitId":"tsumian"},"content":"* 1a. Previous command was `clear`, `list`, `find` or `help` and user tries to undo.","lastModifiedDate":"2022-04-08"},{"lineNumber":715,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":716,"author":{"gitId":"tsumian"},"content":"    * 1a1. System will not the previous command.","lastModifiedDate":"2022-04-08"},{"lineNumber":717,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":718,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-08"},{"lineNumber":719,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":720,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":721,"author":{"gitId":"tsumian"},"content":"**Use case: Exit**","lastModifiedDate":"2022-02-26"},{"lineNumber":722,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":723,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":724,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":725,"author":{"gitId":"tsumian"},"content":"1.  User keys exit.","lastModifiedDate":"2022-02-26"},{"lineNumber":726,"author":{"gitId":"tsumian"},"content":"2.  System terminates the program.","lastModifiedDate":"2022-02-26"},{"lineNumber":727,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":728,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"tsumian"},"content":"2.  Should be able to hold up to 1000 pets without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-26"},{"lineNumber":735,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":749,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":750,"author":{"gitId":"tsumian"},"content":"**:information_source: **Note:** **","lastModifiedDate":"2022-04-08"},{"lineNumber":751,"author":{"gitId":"tsumian"},"content":"These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2022-04-08"},{"lineNumber":752,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2022-04-08"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":754,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"tsumian"},"content":"2. Saving window preferences","lastModifiedDate":"2022-04-08"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"tsumian"},"content":"    2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":769,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"tsumian"},"content":"### Adding a pet","lastModifiedDate":"2022-04-08"},{"lineNumber":772,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":773,"author":{"gitId":"tsumian"},"content":"1. Adding a pet","lastModifiedDate":"2022-04-08"},{"lineNumber":774,"author":{"gitId":"tsumian"},"content":"    1. Test case: `add n/Hazel o/Romeo Tan p/91234567 a/30 East Coast Road t/Golden Dachshund`","lastModifiedDate":"2022-04-08"},{"lineNumber":775,"author":{"gitId":"tsumian"},"content":"       Expected: A pet with all the details will be added to the pet list and success message shown in the status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":776,"author":{"gitId":"tsumian"},"content":"    2. Test case: `add`","lastModifiedDate":"2022-04-08"},{"lineNumber":777,"author":{"gitId":"tsumian"},"content":"       Expected: No pet will be added. Error details shown in the status message. Pet list remains the same.","lastModifiedDate":"2022-04-08"},{"lineNumber":778,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":779,"author":{"gitId":"tsumian"},"content":"### Editing a pet","lastModifiedDate":"2022-04-08"},{"lineNumber":780,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":781,"author":{"gitId":"tsumian"},"content":"1. Editing a pet","lastModifiedDate":"2022-04-08"},{"lineNumber":782,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":783,"author":{"gitId":"tsumian"},"content":"    2. Test case: `edit 1 p/92345678`","lastModifiedDate":"2022-04-08"},{"lineNumber":784,"author":{"gitId":"tsumian"},"content":"       Expected: Pet at index 1 will have the owner\u0027s phone number changed to 92345678. Success message shown in the","lastModifiedDate":"2022-04-08"},{"lineNumber":785,"author":{"gitId":"tsumian"},"content":"       status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":786,"author":{"gitId":"tsumian"},"content":"    3. Test case: `edit 0 n/Woofie`","lastModifiedDate":"2022-04-08"},{"lineNumber":787,"author":{"gitId":"tsumian"},"content":"       Expected: No pet is edited. Error details shown in the status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":788,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":789,"author":{"gitId":"tsumian"},"content":"### Marking attendance of a pet","lastModifiedDate":"2022-04-08"},{"lineNumber":790,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":791,"author":{"gitId":"tsumian"},"content":"1. Marking a pet as present","lastModifiedDate":"2022-04-08"},{"lineNumber":792,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":793,"author":{"gitId":"tsumian"},"content":"    2. Test case: `present 1 date/21-03-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":794,"author":{"gitId":"tsumian"},"content":"       Expected: Pet at index 1 will be marked as present on 21 March 2022 without any pick up or drop off time. Success","lastModifiedDate":"2022-04-08"},{"lineNumber":795,"author":{"gitId":"tsumian"},"content":"       message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":796,"author":{"gitId":"tsumian"},"content":"    3. Test case: `present 1 date/22-03-2022 pu/09:00 do/18:00`","lastModifiedDate":"2022-04-08"},{"lineNumber":797,"author":{"gitId":"tsumian"},"content":"       Expected: Pet at index 1 will be marked as present on 22 March 2022 with pick up time at 9am and drop off time at","lastModifiedDate":"2022-04-08"},{"lineNumber":798,"author":{"gitId":"tsumian"},"content":"       6pm. Success message shown in status message. If date is within past 7 days, attendance tag in GUI will turn green.","lastModifiedDate":"2022-04-08"},{"lineNumber":799,"author":{"gitId":"tsumian"},"content":"    4. Test case: `present 1 date/04-31-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":800,"author":{"gitId":"tsumian"},"content":"       Expected: Attendance of pet at index 1 will not be marked. Error details shown in the status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":801,"author":{"gitId":"tsumian"},"content":"    5. Test case: `present 0 date/22-03-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":802,"author":{"gitId":"tsumian"},"content":"       Expected: No pet will be marked as present. Error message will be shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":803,"author":{"gitId":"tsumian"},"content":"2. Marking a pet as absent","lastModifiedDate":"2022-04-08"},{"lineNumber":804,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":805,"author":{"gitId":"tsumian"},"content":"    2. Test case: `absent 1 date/22-03-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":806,"author":{"gitId":"tsumian"},"content":"       Expected: Pet at index 1 will be marked as absent on 22 March 2022. Success message shown in status message. If","lastModifiedDate":"2022-04-08"},{"lineNumber":807,"author":{"gitId":"tsumian"},"content":"       date is within past 7 days, attendance tag in GUI will turn red.","lastModifiedDate":"2022-04-08"},{"lineNumber":808,"author":{"gitId":"tsumian"},"content":"    3. Test case: `absent 0 date/22-03-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":809,"author":{"gitId":"tsumian"},"content":"       Expected: No pet will be marked as absent. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":810,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":811,"author":{"gitId":"tsumian"},"content":"### Charging a pet","lastModifiedDate":"2022-04-08"},{"lineNumber":812,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":813,"author":{"gitId":"tsumian"},"content":"1. Charging a pet for the month","lastModifiedDate":"2022-04-08"},{"lineNumber":814,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":815,"author":{"gitId":"tsumian"},"content":"    2. Test case: `charge 1 m/03-2022 c/100.00`","lastModifiedDate":"2022-04-08"},{"lineNumber":816,"author":{"gitId":"tsumian"},"content":"       Expected: Total chargeable amount for pet at index 1 for the month of March 2022 will be shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":817,"author":{"gitId":"tsumian"},"content":"    3. Test case: `charge 1 m/2022-03 c/100.00`","lastModifiedDate":"2022-04-08"},{"lineNumber":818,"author":{"gitId":"tsumian"},"content":"       Expected: No chargeable amount will be calculated. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":819,"author":{"gitId":"tsumian"},"content":"    4. Test case: `charge 1 m/03-2022 c/100.0101`","lastModifiedDate":"2022-04-08"},{"lineNumber":820,"author":{"gitId":"tsumian"},"content":"       Expected: No chargeable amount will be calculated. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":821,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":822,"author":{"gitId":"tsumian"},"content":"### Adding a pet\u0027s dietary requirement","lastModifiedDate":"2022-04-08"},{"lineNumber":823,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":824,"author":{"gitId":"tsumian"},"content":"1. Adding a dietary requirement","lastModifiedDate":"2022-04-08"},{"lineNumber":825,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":826,"author":{"gitId":"tsumian"},"content":"    2. Test case: `diet 1 d/Only feed dry kibble`","lastModifiedDate":"2022-04-08"},{"lineNumber":827,"author":{"gitId":"tsumian"},"content":"       Expected: Dietary requirement is added to pet at index 1. Description of dietary requirement shown on pet card","lastModifiedDate":"2022-04-08"},{"lineNumber":828,"author":{"gitId":"tsumian"},"content":"       with a purple label. Success message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":829,"author":{"gitId":"tsumian"},"content":"    3. Test case: `diet 0 d/Only feed dry kibble`","lastModifiedDate":"2022-04-08"},{"lineNumber":830,"author":{"gitId":"tsumian"},"content":"       Expected: No dietary requirement is added. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":831,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":832,"author":{"gitId":"tsumian"},"content":"### Adding an appointment for pet","lastModifiedDate":"2022-04-08"},{"lineNumber":833,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":834,"author":{"gitId":"tsumian"},"content":"1. Adding an appointment","lastModifiedDate":"2022-04-08"},{"lineNumber":835,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":836,"author":{"gitId":"tsumian"},"content":"    2. Test case: `app 1 dt/22-03-2022 09:00 at/NUS Vet`","lastModifiedDate":"2022-04-08"},{"lineNumber":837,"author":{"gitId":"tsumian"},"content":"       Expected: Appointment on 22 March 2022 at NUS Vet added for pet at index 1. Appointment details shown on pet card.","lastModifiedDate":"2022-04-08"},{"lineNumber":838,"author":{"gitId":"tsumian"},"content":"       If appointment date is today, the appointment label will turn green. If the appointment date has passed, the label","lastModifiedDate":"2022-04-08"},{"lineNumber":839,"author":{"gitId":"tsumian"},"content":"       will turn red, and if the appointment is in the future the label will be grey. Success message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":840,"author":{"gitId":"tsumian"},"content":"    3. Test case: `app 1 dt/04-31-2022 09:00 at/NUS Vet`","lastModifiedDate":"2022-04-08"},{"lineNumber":841,"author":{"gitId":"tsumian"},"content":"       Expected: No appointment added. Error message shown in status message","lastModifiedDate":"2022-04-08"},{"lineNumber":842,"author":{"gitId":"tsumian"},"content":"    4. Test case: `app 0 dt/22-03-2022 09:00 at/NUS Vet`","lastModifiedDate":"2022-04-08"},{"lineNumber":843,"author":{"gitId":"tsumian"},"content":"       Expected: No appointment added. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":844,"author":{"gitId":"tsumian"},"content":"2. Clearing an appointment:","lastModifiedDate":"2022-04-08"},{"lineNumber":845,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":846,"author":{"gitId":"tsumian"},"content":"    2. Test case: `app 1 clear`","lastModifiedDate":"2022-04-08"},{"lineNumber":847,"author":{"gitId":"tsumian"},"content":"       Expected: Appointment for pet at index 1 cleared. GUI will not display any appointment details.","lastModifiedDate":"2022-04-08"},{"lineNumber":848,"author":{"gitId":"tsumian"},"content":"    3. Test case: `app 0 clear`","lastModifiedDate":"2022-04-08"},{"lineNumber":849,"author":{"gitId":"tsumian"},"content":"       Expected: No appointment cleared. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":850,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":851,"author":{"gitId":"tsumian"},"content":"### Sorting pet list","lastModifiedDate":"2022-04-08"},{"lineNumber":852,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":853,"author":{"gitId":"tsumian"},"content":"1. Sorting pet list","lastModifiedDate":"2022-04-08"},{"lineNumber":854,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":855,"author":{"gitId":"tsumian"},"content":"    2. Test case: `sort owner`","lastModifiedDate":"2022-04-08"},{"lineNumber":856,"author":{"gitId":"tsumian"},"content":"       Expected: Pet list sorted alphabetically by owners\u0027 name","lastModifiedDate":"2022-04-08"},{"lineNumber":857,"author":{"gitId":"tsumian"},"content":"    3. Test case: `sort somethingElse`","lastModifiedDate":"2022-04-08"},{"lineNumber":858,"author":{"gitId":"tsumian"},"content":"       Expected: Pet list not sorted. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":859,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":860,"author":{"gitId":"tsumian"},"content":"### Filtering pet list","lastModifiedDate":"2022-04-08"},{"lineNumber":861,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":862,"author":{"gitId":"tsumian"},"content":"1. Filtering pet list","lastModifiedDate":"2022-04-08"},{"lineNumber":863,"author":{"gitId":"tsumian"},"content":"    1. Prerequisites: Pet list must have at least 1 pet in it.","lastModifiedDate":"2022-04-08"},{"lineNumber":864,"author":{"gitId":"tsumian"},"content":"    2. Test case: `filter byOwner/Alice`","lastModifiedDate":"2022-04-08"},{"lineNumber":865,"author":{"gitId":"tsumian"},"content":"       Expected: Pet list only shows pets with owner name similar to Alice after filtering.","lastModifiedDate":"2022-04-08"},{"lineNumber":866,"author":{"gitId":"tsumian"},"content":"    3. Test case: `filter byDate/22-03-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":867,"author":{"gitId":"tsumian"},"content":"       Expected: Pet list only shows pets which are present for daycare on 22 March 2022","lastModifiedDate":"2022-04-08"},{"lineNumber":868,"author":{"gitId":"tsumian"},"content":"    4. Test case: `filter byApp/04-31-2022`","lastModifiedDate":"2022-04-08"},{"lineNumber":869,"author":{"gitId":"tsumian"},"content":"       Expected: Pet list not filtered. Error message shown in status message.","lastModifiedDate":"2022-04-08"},{"lineNumber":870,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":871,"author":{"gitId":"tsumian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-08"},{"lineNumber":872,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":873,"author":{"gitId":"tsumian"},"content":"## **Appendix: Effort**","lastModifiedDate":"2022-04-08"},{"lineNumber":874,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":875,"author":{"gitId":"tsumian"},"content":"## Model","lastModifiedDate":"2022-04-08"},{"lineNumber":876,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":877,"author":{"gitId":"tsumian"},"content":"WoofAreYou\u0027s `Model` draws inspiration from original [AB3](https://se-education.org/addressbook-level3/DeveloperGuide.html).","lastModifiedDate":"2022-04-08"},{"lineNumber":878,"author":{"gitId":"tsumian"},"content":"However, WoofAreYou\u0027s model is more complicated because it is specifically adapted to handle pets\u0027 attributes instead of","lastModifiedDate":"2022-04-08"},{"lineNumber":879,"author":{"gitId":"tsumian"},"content":"just Person objects.","lastModifiedDate":"2022-04-08"},{"lineNumber":880,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":881,"author":{"gitId":"tsumian"},"content":"In WoofAreYou, it is crucial to keep track of pets\u0027 attendance. Hence, the `AttendanceEntry` class in WoofAreYou is","lastModifiedDate":"2022-04-08"},{"lineNumber":882,"author":{"gitId":"tsumian"},"content":"essential for many of the functionalities. Not only does `AttendanceEntry` need to modify the database directly to store","lastModifiedDate":"2022-04-08"},{"lineNumber":883,"author":{"gitId":"tsumian"},"content":"potentially large amount of attendance entries for each pet, it has to ensure that these data are easily retrievable.","lastModifiedDate":"2022-04-08"},{"lineNumber":884,"author":{"gitId":"tsumian"},"content":"Similarly, the `Appointment` class has to be flexible to cater to the ever-changing nature of pets\u0027 appointments.","lastModifiedDate":"2022-04-08"},{"lineNumber":885,"author":{"gitId":"tsumian"},"content":"These 2 classes utilised Java\u0027s `LocalDate`, `LocalTime` and `LocalDateTime` libraries to facilitate parsing of arguments","lastModifiedDate":"2022-04-08"},{"lineNumber":886,"author":{"gitId":"tsumian"},"content":"which saved significant amount of time in handling invalid inputs.","lastModifiedDate":"2022-04-08"},{"lineNumber":887,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":888,"author":{"gitId":"tsumian"},"content":"Complex attributes such as `Charge` is also implemented to calculate the specific cost every month for each pet. The","lastModifiedDate":"2022-04-08"},{"lineNumber":889,"author":{"gitId":"tsumian"},"content":"`Model` of WoofAreYou supports higher level features and commands like sorting, filtering and undoing to increase efficiency","lastModifiedDate":"2022-04-08"},{"lineNumber":890,"author":{"gitId":"tsumian"},"content":"that are not present in AB3.","lastModifiedDate":"2022-04-08"},{"lineNumber":891,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":892,"author":{"gitId":"tsumian"},"content":"All the different classes in WoofAreYou `Model` have to interact with one another to ensure cohesiveness and efficient","lastModifiedDate":"2022-04-08"},{"lineNumber":893,"author":{"gitId":"tsumian"},"content":"navigability for the user. For instance, filtering and sort have to access the `AttendaceEntry` or `Appointment` class","lastModifiedDate":"2022-04-08"},{"lineNumber":894,"author":{"gitId":"tsumian"},"content":"to retrieve the relevant dates. There are many ways of implementing these commands and a lot of effort is put into","lastModifiedDate":"2022-04-08"},{"lineNumber":895,"author":{"gitId":"tsumian"},"content":"the design consideration as discussed in the previous sections.","lastModifiedDate":"2022-04-08"},{"lineNumber":896,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":897,"author":{"gitId":"tsumian"},"content":"After many rounds of refinement, the current `Model` of WoofAreYou is one of the more efficient and scalable model","lastModifiedDate":"2022-04-08"},{"lineNumber":898,"author":{"gitId":"tsumian"},"content":"catered for its purpose.","lastModifiedDate":"2022-04-08"},{"lineNumber":899,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":900,"author":{"gitId":"tsumian"},"content":"## Logic","lastModifiedDate":"2022-04-08"},{"lineNumber":901,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":902,"author":{"gitId":"tsumian"},"content":"WoofAreYou\u0027s `Logic` is more advanced than that of AB3. WoofAreYou supports many more commands such as `sort`,","lastModifiedDate":"2022-04-08"},{"lineNumber":903,"author":{"gitId":"tsumian"},"content":"`filter`, `undo`, `diet`, `app`, and the different commands for marking attendance. Existing commands of AB3 like","lastModifiedDate":"2022-04-08"},{"lineNumber":904,"author":{"gitId":"tsumian"},"content":"`edit` and `find` are also enhanced to handle the complex `Model` of WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":905,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":906,"author":{"gitId":"tsumian"},"content":"Significant effort was placed in implementing the `Logic` for WoofAreYou. It encompasses the logic for pets\u0027","lastModifiedDate":"2022-04-08"},{"lineNumber":907,"author":{"gitId":"tsumian"},"content":"`AttendanceEntry`, `Diet`, `Appointment` and `Charge` on top of the logic that AB3 has initially which has been adapted","lastModifiedDate":"2022-04-08"},{"lineNumber":908,"author":{"gitId":"tsumian"},"content":"for WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":909,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":910,"author":{"gitId":"tsumian"},"content":"A huge amount of time was dedicated in validating user input for different commands. This is to ensure that WoofAreYou","lastModifiedDate":"2022-04-08"},{"lineNumber":911,"author":{"gitId":"tsumian"},"content":"is user-friendly enough to support inputs that are both intuitive for users and manageable for developers. Additional","lastModifiedDate":"2022-04-08"},{"lineNumber":912,"author":{"gitId":"tsumian"},"content":"effort was put into crafting error messages to ensure smooth handling of invalid input.","lastModifiedDate":"2022-04-08"},{"lineNumber":913,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":914,"author":{"gitId":"tsumian"},"content":"## Storage","lastModifiedDate":"2022-04-08"},{"lineNumber":915,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":916,"author":{"gitId":"tsumian"},"content":"WoofAreYou\u0027s `Storage` extends that of AB3 to increase functionality and store a variety of attributes that pets may","lastModifiedDate":"2022-04-08"},{"lineNumber":917,"author":{"gitId":"tsumian"},"content":"have. `AttendanceEntry`, `Appointment`, `Diet` and `Tags` are carefully organised and stored as separate entries in a","lastModifiedDate":"2022-04-08"},{"lineNumber":918,"author":{"gitId":"tsumian"},"content":"JSON file. Doing so ensures that these attributes are unique to each pet and can be retrieved easily for other implementations.","lastModifiedDate":"2022-04-08"},{"lineNumber":919,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":920,"author":{"gitId":"tsumian"},"content":"More time and effort were spent in crafting the JSON entries of `AttendanceEntry` as it needs to store dates that","lastModifiedDate":"2022-04-08"},{"lineNumber":921,"author":{"gitId":"tsumian"},"content":"the pet was present or absent, and also their respective pick-up and drop off timings. All these are well","lastModifiedDate":"2022-04-08"},{"lineNumber":922,"author":{"gitId":"tsumian"},"content":"encapsulated in an organised format in the JSON file for easy retrieval.","lastModifiedDate":"2022-04-08"},{"lineNumber":923,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":924,"author":{"gitId":"tsumian"},"content":"## UI","lastModifiedDate":"2022-04-08"},{"lineNumber":925,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":926,"author":{"gitId":"tsumian"},"content":"WoofAreYou\u0027s `UI` is designed to be very dependent on visual cues to enhance user-friendliness. Every command that the","lastModifiedDate":"2022-04-08"},{"lineNumber":927,"author":{"gitId":"tsumian"},"content":"user execute will be accompanied by a status message at the very least. This status message appears at the top of","lastModifiedDate":"2022-04-08"},{"lineNumber":928,"author":{"gitId":"tsumian"},"content":"WoofAreYou to help users understand what is going on after each execution. In the event of any invalid input, error","lastModifiedDate":"2022-04-08"},{"lineNumber":929,"author":{"gitId":"tsumian"},"content":"messages shown are crafted to be intuitive and easily understandable so that users can rectify their mistakes.","lastModifiedDate":"2022-04-08"},{"lineNumber":930,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":931,"author":{"gitId":"tsumian"},"content":"### Attendance Visual Cues","lastModifiedDate":"2022-04-08"},{"lineNumber":932,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":933,"author":{"gitId":"tsumian"},"content":"WoofAreYou has a dedicated column on the right to indicate a pet\u0027s attendance. A significant amount of effort is put into","lastModifiedDate":"2022-04-08"},{"lineNumber":934,"author":{"gitId":"tsumian"},"content":"the design of this feature as attendance is the crux of a daycare\u0027s operation. Different coloring of date labels","lastModifiedDate":"2022-04-08"},{"lineNumber":935,"author":{"gitId":"tsumian"},"content":"serves as visual cues for absent and present attendance entries of each pet. It is designed this way so that daycare","lastModifiedDate":"2022-04-08"},{"lineNumber":936,"author":{"gitId":"tsumian"},"content":"owners rely on WoofAreYou for any form of attendance recollection rather than on their memory.","lastModifiedDate":"2022-04-08"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"tsumian"},"content":"### Appointment Visual Cues","lastModifiedDate":"2022-04-08"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"tsumian"},"content":"WoofAreYou has a dedicated label for appointments that pets may have. Similarly, a lot of thought were put into its design","lastModifiedDate":"2022-04-08"},{"lineNumber":941,"author":{"gitId":"tsumian"},"content":"to allow daycare owners to rely less on memory. A great amount of effort is spent synchronising the dates with the","lastModifiedDate":"2022-04-08"},{"lineNumber":942,"author":{"gitId":"tsumian"},"content":"different color codes of the appointment label. This visual cue informs daycare owners when an appointment has already","lastModifiedDate":"2022-04-08"},{"lineNumber":943,"author":{"gitId":"tsumian"},"content":"passed, is ongoing or yet to happen.","lastModifiedDate":"2022-04-08"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"tsumian"},"content":"### Diet Visual Cues","lastModifiedDate":"2022-04-08"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"tsumian"},"content":"WoofAreYou also has a dedicated label for dietary requirements of pets. It is meant to emphasise any important request","lastModifiedDate":"2022-04-08"},{"lineNumber":948,"author":{"gitId":"tsumian"},"content":"that a pet may have in terms of its diet. Hence, more consideration were put into making this feature more prominent in","lastModifiedDate":"2022-04-08"},{"lineNumber":949,"author":{"gitId":"tsumian"},"content":"the GUI.","lastModifiedDate":"2022-04-08"},{"lineNumber":950,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"tsumian"},"content":"### Challenges","lastModifiedDate":"2022-04-08"},{"lineNumber":952,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"tsumian"},"content":"Since WoofAreYou handles a lot more information and data compared to AB3, the GUI may be more cluttered. In order to","lastModifiedDate":"2022-04-08"},{"lineNumber":954,"author":{"gitId":"tsumian"},"content":"make the GUI neater, more VBox and HBox components are introduced to accommodate more information displayed. This initially led to formatting","lastModifiedDate":"2022-04-08"},{"lineNumber":955,"author":{"gitId":"tsumian"},"content":"issues of certain fields like addresses or tags being truncated and the GUI being less user-friendly. Character limit","lastModifiedDate":"2022-04-08"},{"lineNumber":956,"author":{"gitId":"tsumian"},"content":"was then introduced to ensure that input will not exceed its allocated space but this led to other bugs. Eventually, a hybrid","lastModifiedDate":"2022-04-08"},{"lineNumber":957,"author":{"gitId":"tsumian"},"content":"approach of increased character limit and resizable components is currently adopted to enhance user-friendliness.","lastModifiedDate":"2022-04-08"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"tsumian"},"content":"## Overall","lastModifiedDate":"2022-04-08"},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"tsumian"},"content":"In conclusion, WoofAreYou was a challenging project for the team. The team started off ambitiously, coming up with","lastModifiedDate":"2022-04-08"},{"lineNumber":963,"author":{"gitId":"tsumian"},"content":"features that could make a huge impact on daycare owners\u0027 lives. Unfortunately, given the limited time period, some","lastModifiedDate":"2022-04-08"},{"lineNumber":964,"author":{"gitId":"tsumian"},"content":"features had to be sacrificed for more essential ones.","lastModifiedDate":"2022-04-08"},{"lineNumber":965,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"tsumian"},"content":"The team members all put in equal amount of effort into making WoofAreYou a success. Effort levels since the first","lastModifiedDate":"2022-04-08"},{"lineNumber":967,"author":{"gitId":"tsumian"},"content":"iteration has been consistently increasing. Despite our busy schedules, all members made a conscious effort to meet","lastModifiedDate":"2022-04-08"},{"lineNumber":968,"author":{"gitId":"tsumian"},"content":"weekly and work rigorously on WoofAreYou. Pull requests were generated every other day and reviews followed shortly.","lastModifiedDate":"2022-04-08"},{"lineNumber":969,"author":{"gitId":"tsumian"},"content":"The team showed immense responsiveness when dealing with issues and worked at a very high level.","lastModifiedDate":"2022-04-08"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"tsumian"},"content":"From understanding the original code, implementing new features to conducting rigorous testing, the team ensured that","lastModifiedDate":"2022-04-08"},{"lineNumber":972,"author":{"gitId":"tsumian"},"content":"every piece of work they had to do was of a high standard. With the given time constraints, the team has put in all the","lastModifiedDate":"2022-04-08"},{"lineNumber":973,"author":{"gitId":"tsumian"},"content":"effort they can to make WoofAreYou a viable and concrete product that can already be used in the industry. Although","lastModifiedDate":"2022-04-08"},{"lineNumber":974,"author":{"gitId":"tsumian"},"content":"WoofAreYou may not be perfect, there is always room for improvement and the team is proud of the end product.","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"Dineshraj555":26,"Tiffanylin21":35,"tsumian":513,"-":315,"soloplxya":48,"tobihy":37}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"   1. Run the `woofareyou.Main` and try a few commands.","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"soloplxya":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"   e.g. `woofareyou.commons.StringUtilTest`","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"   e.g. `woofareyou.storage.StorageManagerTest`","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"   e.g. `woofareyou.logic.LogicManagerTest`","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"-":33,"soloplxya":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"## Motivation","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"As a pet daycare owner, it takes a lot of effort to remember pets by their names,","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"as well as remember their owner\u0027s names, phone numbers and addresses. In addition, some pets may have special dietary requirements and","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"vet appointments that you have to take note of. With WoofAreYou, these things can be taken care","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"of easily, so that you may focus on the things that **truly** matter: taking good care of the pets and ensuring their safety.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"# WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"WoofAreYou is a desktop application for pet daycare owners like you to handle the administrative information of your clients.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"WoofAreYou is faster than many traditional platforms, such as Microsoft Excel or Google Sheets, when you want to consolidate","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"all your clients\u0027 information. You can perform a variety of tasks by typing in a single command using CLI (Command Line","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"Interface) syntax. Just tell WoofAreYou what you want to do, and it will get it done quickly and efficiently.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"Even if you are unfamiliar with CLI, fret not, for this user guide is written specifically to guide you through the","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"process of using WoofAreYou step-by-step. By the end of this user guide, it is our hope that you will be able to harness the power of WoofAreYou to bring your pet daycare establishment to greater heights.","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"Let\u0027s get started!","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalSampleSS.png\" alt\u003d\"WoofForYou sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    1. For Mac users, [click here](https://www.oracle.com/java/technologies/downloads/#java11-mac)","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    2. For Windows users, [click here](https://www.oracle.com/java/technologies/downloads/#java11-windows)","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    3. For Linux Users, [click here](https://www.oracle.com/java/technologies/downloads/#java11-linux)","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"2. Download the latest `WoofAreYou.jar` [here](https://github.com/AY2122S2-CS2103T-T13-1/tp/releases/tag/v1.3.trial).","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"3. Copy `WoofAreYou.jar` to the folder you want to use as the _home folder_ for WoofAreYou.","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"4. Double-click the file to start the app. WoofAreYou should appear in a few seconds.","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    * **`add n/Woofie o/Alice Tan p/98765432 a/523 Woodlands ave 5, #01-01 t/Bulldog`** : Adds a pet named `Woofie` to WoofAreYou.","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    * **`delete 3`** : Deletes the 3rd pet shown in the current list of pets.","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    * **`find Woofie`** : Searches WoofAreYou for pets with the keyword `Woofie` in their name and displays their information.","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"This section will elaborate on the features WoofAreYou has and is","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"categorised into **Basic Administration**, **Optional Requirements** and **Efficiency Enhancement**.","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"* Prefixes used in this user guide such as `n/`, `o/`, `byDate/` etc. are **case-sensitive**.\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"  e.g. Entering the command `edit 1 n/Woofie O/Alice Tan` will cause WoofAreYou to tell you that names should only contain","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"  alphanumeric characters and spaces because the prefix `O/` is incorrect (should be `o/` instead).","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Woofie`.","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"  e.g `[n/NAME] [t/BREED]` can be used as `n/Woofie t/German Sheppard` or as `n/Woofie`.","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"* Items with `…`​ after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"  e.g. `NAME_OF_PET…​` can be used as `Woofie`, `Woofie Poofie` etc.","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"* However, for the breed parameter, users will only be able to key in one breed.","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"  e.g. if you specify `t/Golden t/Retriever`, an error message will be shown.","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"## _Basic Administration_","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"This subsection covers the basic processes that you will encounter when adding a pet to the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"### Add a pet: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"When you receive a new pet in the daycare, you may wish to add them to WoofAreYou.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"Format: `add n/NAME_OF_PET o/OWNER_NAME p/PHONE_NUMBER a/ADDRESS [t/BREED]...`","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"* Each particular field is compulsory except for `BREED`.","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"tsumian"},"content":"* `BREED` is an optional field which could be used to indicate the breed of a pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"    * You should only be able to add *one* breed for a pet.","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"    * Entering more than *one* breed will throw an error.","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"* Each particular entered must strictly correspond to its legal prefix. e.g: `p/Address` is considered as invalid.","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"* Phone number **must only contain numbers**.","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"* `NAME_OF_PET` (pet name) and `OWNER_NAME` (owner name) **must only contain alphabets or spaces**.","lastModifiedDate":"2022-04-05"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"* `PHONE_NUMBER` (phone number) should be a valid Singapore phone number. It should start with **6,7,8** and should be","lastModifiedDate":"2022-04-05"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"  **8 digits** long.","lastModifiedDate":"2022-04-05"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    * You can include an optional country code in front of the phone number. `p/+6581234567` There should be no spaces","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"      between `+65` and the corresponding phone number.","lastModifiedDate":"2022-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":120,"author":{"gitId":"tsumian"},"content":"* `add n/Woofie o/Alice Tan p/98765432 a/523 Woodlands ave 5, #01-01 t/Bulldog` will show a screenshot as below.","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalAddCommandSS.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"### Edit a pet : `edit`","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"When certain details of pets require updating, you can edit such details on WoofAreYou.","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"Format: `edit INDEX [n/NAME_OF_PET] [o/OWNER_NAME] [p/PHONE_NUMBER] [a/ADDRESS] [t/BREED]`","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"* Edits the pet at the specified `INDEX`. The index refers to the index number shown in the displayed pet list. The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"tsumian"},"content":"**:information_source: Notes about editing `[t/BREED]`:**\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"* When editing `[t/BREED]`, the existing breed of the pet will be removed.","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"* You can only edit *one* breed.","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"* Following from the previous e.g., if you key in `edit 1 t/German Sheppard`, Woofie\u0027s \"Bulldog\" breed will be replaced","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"tsumian"},"content":"  by \"German Sheppard\" instead.","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"tsumian"},"content":"* You can also remove all the breeds associated to the pet by typing `t/` without specifying any breed after it.","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"* Continuing from the previous example, `edit 1 o/Pauline Tan t/German Sheppard` will change the owner\u0027s name and","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"  the tag of Woofie from \u0027Bulldog\u0027 to \u0027German Sheppard\u0027.","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"### Mark a pet as present: `present`","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"When a pet is arriving for daycare on a certain day, you will need to mark a pet as present on that day.","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"In addition, if your daycare offers transport services to your clients, you may also indicate the pick-up and drop-off times of such arrangements.","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"Format: `present INDEX date/dd-MM-yyyy [pu/HH:mm do/HH:mm]`","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"* Adds a present attendance entry with the attendance date, pick-up and drop-off time to the pet at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"* Date **must follow the specified format**.","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"* Times for pick-up and drop-off are optional but **must also follow the specified format**.","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"* Pick-up and drop-off times are either specified **together** as a pair, or **not at all**.","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"* Pick-up time must be **before** the drop-off time.","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"**:information_source: About `present` command:**\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"This command is designed to enable you to mark the attendance of pets for **any** date. If you have forgotten to mark","lastModifiedDate":"2022-04-04"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"the attendance a few weeks back, you may do so. If you wish to mark the attendance of a pet for future dates because","lastModifiedDate":"2022-04-05"},{"lineNumber":171,"author":{"gitId":"tsumian"},"content":"the pet has a regular schedule, you may do so as well.","lastModifiedDate":"2022-04-05"},{"lineNumber":172,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"tsumian"},"content":"* Following from the previous example, `present 1 date/06-04-2022 pu/08:00 do/19:00` indicates that Woofie is present for daycare on 6th April 2022 and requires to be picked up at 8:00am and dropped off at 7:00pm.","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"* On the other hand, `present 1 date/05-04-2022` indicates that Woofie is present for daycare on 5th April 2022, with no transport arrangements planned.","lastModifiedDate":"2022-04-08"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalAttendanceSS.png\" alt\u003d\"After adding attendance sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"**:information_source: Pro-tip about the command:**\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"tsumian"},"content":"You may have observed that the attendance tag for the specific date has turned \u003cspan style\u003d\"color:lime\"\u003egreen\u003c/span\u003e for","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"Woofie. This happens if the date you keyed in is within the past 7 days (inclusive of today). Similarly, for the next command, you","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"tsumian"},"content":"will observe that the attendance tag has turned \u003cspan style\u003d\"color:red\"\u003ered\u003c/span\u003e to indicate that the pet is absent.","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"This can serve as a visual cue for you if you need to quickly recall, at a glance, which pet attended daycare in the past week.","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"tsumian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"tsumian"},"content":"### Mark a pet as absent: `absent`","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"On days that a pet is not attending daycare, you may want to mark them as absent.","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"tsumian"},"content":"Format: `absent INDEX date/dd-MM-yyyy`","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"tsumian"},"content":"* Adds an absent attendance entry with the attendance date to the pet at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"tsumian"},"content":"* Date **must follow the specified format**.","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"tsumian"},"content":"* `absent 1 date/05-04-2022` indicates that the first pet in the current list is absent for daycare on 5th April 2022.","lastModifiedDate":"2022-04-08"},{"lineNumber":208,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"Tiffanylin21"},"content":"### Compute total chargeable of a pet: `charge`","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"Tiffanylin21"},"content":"When you want to charge owners for their pets\u0027 stay during a specific month, you can compute the total amount chargeable.","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"Tiffanylin21"},"content":"Format: `charge INDEX m/MM-yyyy c/number1[.number2]`","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"Tiffanylin21"},"content":"* Computes the total amount chargeable of the pet at the specified `INDEX`, at the specified month with the specified daily charge of pet stay","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"Tiffanylin21"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"Tiffanylin21"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"Tiffanylin21"},"content":"* Date **must follow the specified format**.","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"Tiffanylin21"},"content":"* Charge amount can be either a positive integer `number1` or a decimal number of up to 2 digits `number1.number2`. It **must follow the specified format**.","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"Tiffanylin21"},"content":"Examples:","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"Tiffanylin21"},"content":"* `charge 1 m/03-2022 c/200.50` computes charge for pet 1 in the month of March on 2022, where each day\u0027s stay costs `200.50`.","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"tsumian"},"content":"### Delete a pet: `delete`","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":226,"author":{"gitId":"tobihy"},"content":"When a pet no longer requires daycare services, you may want to remove them from WoofAreYou.","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"* Deletes the pet at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"* `delete 1` deletes the first pet in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"When you no longer need the information on any of the pets, you can clear all entries from the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"tobihy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"tobihy"},"content":"**:exclamation: WARNING** \u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"tobihy"},"content":"This command is **irreversible** and clears **all the data** that you have in WoofAreYou.","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"tobihy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"When you are done with your daily administrative duties, you can exit the program.","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"## _Optional Requirements_","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"tobihy"},"content":"This subsection covers the features that you may encounter when taking care of a pet that requires more attention.","lastModifiedDate":"2022-03-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"### Add pets\u0027 dietary requirements: `diet` ###","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":262,"author":{"gitId":"tobihy"},"content":"Your clients may provide you with instructions on what their pets can or cannot consume, in the event that their pets suffer","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"tobihy"},"content":"from health issues. You may wish to include a diet remark along with such pets in WoofAreYou to take note.","lastModifiedDate":"2022-03-31"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":265,"author":{"gitId":"tsumian"},"content":"Format: `diet INDEX d/REMARK`","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"* Adds `d/REMARK` as a dietary requirement for pet at `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"* Entering `diet INDEX d/` will remove the dietary requirements of pet at `INDEX`.","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"soloplxya"},"content":"* The description of diet should only contain **alphanumeric characters, spaces and empty strings**.","lastModifiedDate":"2022-04-05"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-11"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"* `diet 1 d/Only feed dry kibble` will store a dietary remark for Woofie indicating to \"Only feed dry kibble\" as shown below.","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalDietSS.png\" alt\u003d\"After adding diet sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":280,"author":{"gitId":"tsumian"},"content":"### Add / Clear pets\u0027 appointment details: `app` ###","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"tobihy"},"content":"In the event that your client tasks you with bringing their pets out for their vet or grooming appointments, you may wish","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"tobihy"},"content":"to note down the relevant details of such appointments, such as the date, time and location.","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"tsumian"},"content":"**:information_source: Notes about this feature:**\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"tobihy"},"content":"* You can only note down one appointment per pet at any point in time.","lastModifiedDate":"2022-03-31"},{"lineNumber":290,"author":{"gitId":"tobihy"},"content":"* Once the appointment is over, you will have to clear it manually if you wish to note down a new appointments.","lastModifiedDate":"2022-03-31"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"tsumian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"Dineshraj555"},"content":"**Add Appointment**","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"Dineshraj555"},"content":"Format: `app INDEX dt/dd-MM-yyyy HH:mm at/location`","lastModifiedDate":"2022-04-04"},{"lineNumber":297,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"tobihy"},"content":"* Adds appointment for pet at `INDEX` on a specific date at a specific location.","lastModifiedDate":"2022-03-31"},{"lineNumber":299,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"tobihy"},"content":"* Date and time of the appointment should be entered after the `dt/` prefix.","lastModifiedDate":"2022-03-31"},{"lineNumber":302,"author":{"gitId":"Dineshraj555"},"content":"* Date and time should strictly follow `dd-MM-yyyy HH:mm` format.","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"tsumian"},"content":"* Date of the appointment **cannot be a past date** else error message will be shown.","lastModifiedDate":"2022-04-08"},{"lineNumber":304,"author":{"gitId":"tobihy"},"content":"* Location of appointment should be entered after the `at/` prefix.","lastModifiedDate":"2022-03-31"},{"lineNumber":305,"author":{"gitId":"Dineshraj555"},"content":"* Whitespaces, special characters and alphanumeric characters are allowed for location.","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"tobihy"},"content":"* Both `dt/` and `at/` are **mandatory** fields.","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"Dineshraj555"},"content":"Examples:","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"tobihy"},"content":"* `app 1 dt/27-03-2022 09:30 at/ NUS Vet Clinic` will note down that Woofie has an appointment on 27 March 2022, 9:30 am at the NUS Vet Clinic.","lastModifiedDate":"2022-03-31"},{"lineNumber":310,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":311,"author":{"gitId":"Dineshraj555"},"content":"**Clear Appointment**","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"Dineshraj555"},"content":"Format: `app INDEX clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"tsumian"},"content":"* Clears appointment for pet at `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":316,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":317,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":318,"author":{"gitId":"Dineshraj555"},"content":"* `clear` is case-sensitive.","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"Dineshraj555"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"tobihy"},"content":"* `app 1 clear` will clear the appointment details for Woofie.","lastModifiedDate":"2022-03-31"},{"lineNumber":322,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":324,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":325,"author":{"gitId":"tsumian"},"content":"**:information_source: Pro-tip about the command:**\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":326,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":327,"author":{"gitId":"tsumian"},"content":"You may have observed that the appointment label for the appointment has turned \u003cspan style\u003d\"color:lime\"\u003egreen\u003c/span\u003e for","lastModifiedDate":"2022-04-08"},{"lineNumber":328,"author":{"gitId":"tsumian"},"content":"Woofie. This happens if the appointment you keyed in is happening **today**. If the appointment has passed, the label will","lastModifiedDate":"2022-04-08"},{"lineNumber":329,"author":{"gitId":"tsumian"},"content":"turn \u003cspan style\u003d\"color:red\"\u003ered\u003c/span\u003e and you may want to clear the appointment. If the appointment has yet to happen,","lastModifiedDate":"2022-04-08"},{"lineNumber":330,"author":{"gitId":"tsumian"},"content":"the label will be \u003cspan style\u003d\"color:grey\"\u003egrey\u003c/span\u003e.","lastModifiedDate":"2022-04-08"},{"lineNumber":331,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":332,"author":{"gitId":"tsumian"},"content":"This can serve as a visual cue for you if you need a reminder for the pet\u0027s appointment.","lastModifiedDate":"2022-04-08"},{"lineNumber":333,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":334,"author":{"gitId":"tsumian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":335,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":336,"author":{"gitId":"tsumian"},"content":"## _Efficiency Enhancement_","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"tobihy"},"content":"You may have noticed that a handful of commands require `INDEX`, and that it is troublesome to scroll through WoofAreYou","lastModifiedDate":"2022-03-31"},{"lineNumber":339,"author":{"gitId":"tobihy"},"content":"to find that one pet\u0027s `INDEX` if you have many clients. Hence, this subsection covers the features that will make your","lastModifiedDate":"2022-03-31"},{"lineNumber":340,"author":{"gitId":"tobihy"},"content":"life easier when using the features previously introduced.","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":342,"author":{"gitId":"tobihy"},"content":"### Find pet details: `find`","lastModifiedDate":"2022-03-31"},{"lineNumber":343,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":344,"author":{"gitId":"soloplxya"},"content":"In the event that you wish to search for particular pets in WoofAreYou to check up on details, and know their names,","lastModifiedDate":"2022-04-07"},{"lineNumber":345,"author":{"gitId":"soloplxya"},"content":"you can use this function to find pets with a particular name.","lastModifiedDate":"2022-04-07"},{"lineNumber":346,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":347,"author":{"gitId":"tobihy"},"content":"If there are multiple pets with the same name, all such pets will be displayed.","lastModifiedDate":"2022-03-31"},{"lineNumber":348,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":349,"author":{"gitId":"tobihy"},"content":"You can also find multiple pets by providing multiple pet names as keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":350,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":351,"author":{"gitId":"tsumian"},"content":"Format: `find NAME_OF_PET [KEYWORDS]...`","lastModifiedDate":"2022-04-08"},{"lineNumber":352,"author":{"gitId":"tsumian"},"content":"* `NAME_OF_PET` is a compulsory field i.e. you have to give at least one name.","lastModifiedDate":"2022-04-08"},{"lineNumber":353,"author":{"gitId":"tsumian"},"content":"  * `[KEYWORDS]...` are optional in case you want to find more pets.","lastModifiedDate":"2022-04-08"},{"lineNumber":354,"author":{"gitId":"tobihy"},"content":"* The name of the pet is case-insensitive e.g: `find woofie` will return Woofie as a match.","lastModifiedDate":"2022-03-31"},{"lineNumber":355,"author":{"gitId":"tobihy"},"content":"* Only the names of pets are searched.","lastModifiedDate":"2022-03-31"},{"lineNumber":356,"author":{"gitId":"tobihy"},"content":"* Search returns partial name matches e.g.: `find woo` will return Woofie as a match.","lastModifiedDate":"2022-03-31"},{"lineNumber":357,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":358,"author":{"gitId":"Tiffanylin21"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":359,"author":{"gitId":"tobihy"},"content":"* `find poofie woofie` will return a list of pets containing all pets named Poofie and Woofie.","lastModifiedDate":"2022-03-31"},{"lineNumber":360,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":361,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalFindSS.png\" alt\u003d\"After finding sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":363,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":364,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":365,"author":{"gitId":"tobihy"},"content":"### Sort pets: `sort`","lastModifiedDate":"2022-03-31"},{"lineNumber":366,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":367,"author":{"gitId":"tobihy"},"content":"You may also find sorting pets in WoofAreYou useful during your daily administration.","lastModifiedDate":"2022-03-31"},{"lineNumber":368,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":369,"author":{"gitId":"tobihy"},"content":"The command returns a sorted list of pets according to the parameter chosen.","lastModifiedDate":"2022-03-31"},{"lineNumber":370,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":371,"author":{"gitId":"tobihy"},"content":"You can choose to either sort pets alphabetically,","lastModifiedDate":"2022-03-31"},{"lineNumber":372,"author":{"gitId":"tobihy"},"content":"* By the pets\u0027 names","lastModifiedDate":"2022-03-31"},{"lineNumber":373,"author":{"gitId":"tobihy"},"content":"* By the owners\u0027 names","lastModifiedDate":"2022-03-31"},{"lineNumber":374,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":375,"author":{"gitId":"tobihy"},"content":"You can also sort pets chronologically,","lastModifiedDate":"2022-03-31"},{"lineNumber":376,"author":{"gitId":"tobihy"},"content":"* By their appointment dates","lastModifiedDate":"2022-03-31"},{"lineNumber":377,"author":{"gitId":"tobihy"},"content":"* By their transport pick-up times","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"tobihy"},"content":"* By their transport drop-off times","lastModifiedDate":"2022-03-31"},{"lineNumber":379,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":380,"author":{"gitId":"tobihy"},"content":"Format: `sort SORT_BY`","lastModifiedDate":"2022-03-31"},{"lineNumber":381,"author":{"gitId":"tobihy"},"content":"* **One and only one** `SORT_BY` parameter is to be used with this command.","lastModifiedDate":"2022-03-31"},{"lineNumber":382,"author":{"gitId":"tobihy"},"content":"* The valid `SORT_BY` parameters are `name` , `owner`, `app`, `pick up` and `drop off`.","lastModifiedDate":"2022-03-31"},{"lineNumber":383,"author":{"gitId":"tobihy"},"content":"* The parameters are case-sensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":384,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":385,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-16"},{"lineNumber":386,"author":{"gitId":"tobihy"},"content":"* `sort name` will sort the pets alphabetically as shown below.","lastModifiedDate":"2022-03-31"},{"lineNumber":387,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":388,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalSortSS.png\" alt\u003d\"After sorting sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":390,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":392,"author":{"gitId":"tobihy"},"content":"* `sort app` will sort the pets by their appointment dates and times, listing the pets starting from the pet with the earliest appointment to the latest appointment.","lastModifiedDate":"2022-03-31"},{"lineNumber":393,"author":{"gitId":"tsumian"},"content":"* `sort pick up` and `sort drop off` will sort the pets by their pick-up and drop-off times for transport arrangements **for today only**, listing the pets starting from the pet with the earliest time to the latest time.\u003cbr\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":394,"author":{"gitId":"tsumian"},"content":"  i.e. if there are no pets to pick up and drop off today, WoofAreYou will not display any change.","lastModifiedDate":"2022-04-05"},{"lineNumber":395,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":396,"author":{"gitId":"tsumian"},"content":"### Filter pet list: `filter`","lastModifiedDate":"2022-03-27"},{"lineNumber":397,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":398,"author":{"gitId":"tobihy"},"content":"If you just want to know common information about some pets, you can filter the pets in WoofAreYou by a specified field.","lastModifiedDate":"2022-03-31"},{"lineNumber":399,"author":{"gitId":"tobihy"},"content":"* You can filter by date, to find out which pets are present on a given date.","lastModifiedDate":"2022-03-31"},{"lineNumber":400,"author":{"gitId":"tobihy"},"content":"* You can filter by appointment, to find out which pets have appointments on a given date.","lastModifiedDate":"2022-03-31"},{"lineNumber":401,"author":{"gitId":"tobihy"},"content":"* You can filter by owner\u0027s name, to find all pets with the same owner.","lastModifiedDate":"2022-03-31"},{"lineNumber":402,"author":{"gitId":"soloplxya"},"content":"* You can also filter by tag, to find all pets of a common breed.","lastModifiedDate":"2022-04-07"},{"lineNumber":403,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":404,"author":{"gitId":"tsumian"},"content":"Format: `filter f/KEYWORD`","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":406,"author":{"gitId":"tobihy"},"content":"* **One and only one** filter parameter is to be used with this command.","lastModifiedDate":"2022-03-31"},{"lineNumber":407,"author":{"gitId":"soloplxya"},"content":"* Specified `f/` only consists of: `byDate/`, `byApp/`, `byTag/` and `byOwner/`.","lastModifiedDate":"2022-04-07"},{"lineNumber":408,"author":{"gitId":"tobihy"},"content":"* If you use `byDate/` or `byApp/`, `KEYWORD` has to be in `dd-MM-yyyy` format, or `today`.","lastModifiedDate":"2022-03-31"},{"lineNumber":409,"author":{"gitId":"tobihy"},"content":"* If you use `byOwner/`, `KEYWORD` can be any length.","lastModifiedDate":"2022-03-31"},{"lineNumber":410,"author":{"gitId":"soloplxya"},"content":"* If you use `byTag/`, `KEYWORD` can be any length.","lastModifiedDate":"2022-04-07"},{"lineNumber":411,"author":{"gitId":"tsumian"},"content":"    * Can filter with a partial match in `Keyword`: `Bord`, `Borde Colli`, will match with pets tagged as `Border Collie`","lastModifiedDate":"2022-03-28"},{"lineNumber":412,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":413,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":414,"author":{"gitId":"tsumian"},"content":"* `filter byOwner/Lily` shows pets owned by all Lily(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":415,"author":{"gitId":"soloplxya"},"content":"* `filter byTag/Retriever` shows pets with `Retriever` in their tag.","lastModifiedDate":"2022-04-07"},{"lineNumber":416,"author":{"gitId":"tsumian"},"content":"* `filter byDate/06-04-2022` show pets present on 6 April 2022 as shown below.","lastModifiedDate":"2022-04-08"},{"lineNumber":417,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/FinalFilterSS.png\" alt\u003d\"After filtering by date sample screenshot\"/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":420,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":421,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":422,"author":{"gitId":"tsumian"},"content":"### List all pets : `list`","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":424,"author":{"gitId":"tobihy"},"content":"This feature lists out all pets, helpful for when you wish to look through all pets in WoofAreYou.","lastModifiedDate":"2022-03-31"},{"lineNumber":425,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"tsumian"},"content":"Format: `list`","lastModifiedDate":"2022-03-28"},{"lineNumber":427,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"tsumian"},"content":"### Undo changes : `undo`","lastModifiedDate":"2022-03-28"},{"lineNumber":429,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":430,"author":{"gitId":"tsumian"},"content":"Mistakes happen when dealing with CLI. Fortunately, you can undo previous commands that you have keyed in.","lastModifiedDate":"2022-03-28"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"tsumian"},"content":"Format: `undo`","lastModifiedDate":"2022-03-28"},{"lineNumber":433,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":434,"author":{"gitId":"tobihy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":435,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":436,"author":{"gitId":"tobihy"},"content":"**:warning: Note about undo**\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":437,"author":{"gitId":"tobihy"},"content":"* You will not be able to undo `clear`, `exit`, `find`, `help` and `list` commands.","lastModifiedDate":"2022-03-31"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"tobihy"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":442,"author":{"gitId":"soloplxya"},"content":"* If the user chooses to delete a pet, `undo` will revert the WoofAreYou to the state where the pet is not deleted.","lastModifiedDate":"2022-04-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"tsumian"},"content":"### View help : `help`","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":446,"author":{"gitId":"tobihy"},"content":"If you need additional help when using WoofAreYou, feel free to use the help command. It shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-31"},{"lineNumber":447,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":448,"author":{"gitId":"Dineshraj555"},"content":"Format: `help`","lastModifiedDate":"2022-03-24"},{"lineNumber":449,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":450,"author":{"gitId":"tsumian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-08"},{"lineNumber":451,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-04-08"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":454,"author":{"gitId":"tsumian"},"content":"PetBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-04-08"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-04-08"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":458,"author":{"gitId":"tsumian"},"content":"PetBook data are saved as a JSON file `[JAR file location]/data/woofareyou.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-04-08"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":460,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-04-08"},{"lineNumber":461,"author":{"gitId":"tsumian"},"content":"If your changes to the data file makes its format invalid, PetBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-04-08"},{"lineNumber":462,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":464,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-08"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":466,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2022-04-08"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":468,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":469,"author":{"gitId":"tsumian"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PetBook home folder.","lastModifiedDate":"2022-04-08"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":471,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-04-08"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":473,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":474,"author":{"gitId":"tsumian"},"content":"## Command Summary","lastModifiedDate":"2022-03-28"},{"lineNumber":475,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":476,"author":{"gitId":"tsumian"},"content":"The table below summarises all the commands and features in the order that we have discussed above. You can refer to this nifty table if you do not","lastModifiedDate":"2022-04-08"},{"lineNumber":477,"author":{"gitId":"tobihy"},"content":"wish to deal with the nitty-gritty details of each feature.","lastModifiedDate":"2022-03-31"},{"lineNumber":478,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":479,"author":{"gitId":"tsumian"},"content":"| Action        | Format                                                                             | Example                                                                                                               | Function                                                                                                              |","lastModifiedDate":"2022-03-28"},{"lineNumber":480,"author":{"gitId":"tsumian"},"content":"|---------------|------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-08"},{"lineNumber":481,"author":{"gitId":"tobihy"},"content":"| **Add**       | `add n/NAME_OF_PET o/OWNER_NAME p/PHONE_NUMBER a/ADDRESS [t/BREED]`                | `add n/Woofie o/Alice Tan p/98765432 a/523 Woodlands ave 5, #01-01 t/Bulldog`                                         | Adds Woofie into pet list along with its information                                                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":482,"author":{"gitId":"tobihy"},"content":"| **Edit**      | `edit INDEX [n/NAME_OF_PET] [o/OWNER_NAME] [p/PHONE_NUMBER] [a/ADDRESS] [t/BREED]` | `edit 1 p/98247076 t/bulldog`                                                                                         | Edits phone number and tag of pet at index 1                                                                          |","lastModifiedDate":"2022-04-09"},{"lineNumber":483,"author":{"gitId":"tsumian"},"content":"| **Present**   | `present INDEX date/dd-MM-yyyy pu/HH:mm do/HH:mm`                                  | `present 1 date/22-03-2022 pu/08:00 do/17:00`                                                                         | Indicates that pet at index 1 will be attending daycare on 22 March 2022, requires pick up at 8am and drop off at 5pm |","lastModifiedDate":"2022-03-28"},{"lineNumber":484,"author":{"gitId":"tsumian"},"content":"| **Absent**    | `absent INDEX date/dd-MM-yyyy`                                                     | `absent 1 date/22-03-2022`                                                                                            | Indicates that pet at index 1 was absent on 22 March 2022                                                             |","lastModifiedDate":"2022-03-28"},{"lineNumber":485,"author":{"gitId":"Tiffanylin21"},"content":"| **Charge**    | `charge INDEX m/MM-yyyy c/number1[.number2]`                                       | `charge 1 m/03-2022 c/200.50`                                                                                         | Computes charge for pet 1 in the month of March on 2022, where each day\u0027s stay costs `200.50`                         |","lastModifiedDate":"2022-03-30"},{"lineNumber":486,"author":{"gitId":"tsumian"},"content":"| **Delete**    | `delete id`                                                                        | `delete 1`                                                                                                            | Deletes pet at index 1 from the pet list                                                                              |","lastModifiedDate":"2022-04-08"},{"lineNumber":487,"author":{"gitId":"tsumian"},"content":"| **Clear**     | `clear`                                                                            | `clear`                                                                                                               | Clears all pets in pet list                                                                                           |","lastModifiedDate":"2022-04-08"},{"lineNumber":488,"author":{"gitId":"tsumian"},"content":"| **Exit**      | `exit`                                                                             | `exit`                                                                                                                | Exits WoofAreYou                                                                                                      |","lastModifiedDate":"2022-04-08"},{"lineNumber":489,"author":{"gitId":"tsumian"},"content":"| **Diet**      | `diet INDEX d/remark`                                                              | `diet 1 d/Only feed dry kibble`                                                                                       | Adds a diet remark \"Only feed dry kibble\" to pet at index 1                                                           |","lastModifiedDate":"2022-04-08"},{"lineNumber":490,"author":{"gitId":"tsumian"},"content":"| **App**       | `app INDEX date/[dd-MM-yyyy HH:mm] at/[location]`                                  | `app 1 date/22-03-2022 09:30 at/ NUS Vet Clinic`                                                                      | Indicates that pet at index 1 has an appointment on 22 March 2022, 9.30am at NUS Vet Clinic                           |","lastModifiedDate":"2022-03-28"},{"lineNumber":491,"author":{"gitId":"tsumian"},"content":"| **App clear** | `app INDEX clear`                                                                  | `app 1 clear`                                                                                                         | Clears the current appointment of pet at index 1                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":492,"author":{"gitId":"tsumian"},"content":"| **Find**      | `find NAME_OF_PET [KEYWORDS]...`                                                   | `find Woofie`                                                                                                         | Finds all pets with similar name as \"Woofie\"                                                                          |","lastModifiedDate":"2022-04-08"},{"lineNumber":493,"author":{"gitId":"tsumian"},"content":"| **Sort**      | `sort SORT_BY`                                                                     | `sort name`\u003cbr\u003e`sort owner`\u003cbr\u003e`sort app`\u003cbr\u003e`sort pick up`\u003cbr\u003e`sort drop off`                                        | Sorts pet list                                                                                                        |","lastModifiedDate":"2022-04-04"},{"lineNumber":494,"author":{"gitId":"tsumian"},"content":"| **Filter**    | `filter f/KEYWORD`                                                                 | `filter byDate/22-03-2022`\u003cbr\u003e`filter byOwner/Alice`\u003cbr\u003e`filter byApp/22-03-2022`\u003cbr\u003e`filter byTag/Golden Retriever`  | Returns information of all pets after filtering by field                                                              |","lastModifiedDate":"2022-04-04"},{"lineNumber":495,"author":{"gitId":"tsumian"},"content":"| **List**      | `list`                                                                             | `list`                                                                                                                | Lists all pets in pet list                                                                                            |","lastModifiedDate":"2022-03-28"},{"lineNumber":496,"author":{"gitId":"tsumian"},"content":"| **Undo**      | `undo`                                                                             | `undo`                                                                                                                | Undoes the previous command made                                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":497,"author":{"gitId":"tsumian"},"content":"| **Help**      | `help`                                                                             | `help`                                                                                                                | Shows a message explaining how to access the help page                                                                |","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":34,"Tiffanylin21":21,"tsumian":199,"-":113,"soloplxya":25,"tobihy":105}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"    content: \"WoofAreYou\";","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"tsumian":1,"-":294}},{"path":"docs/diagrams/AbsentAttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"participant \":AbsentAttendanceCommandParser\" as AbsentAttendanceCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"participant \"a:AbsentAttendanceCommand\" as AbsentAttendanceCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"[-\u003e LogicManager : execute(\"absent 1 date/23-03-2022\")","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"absent 1 date/23-03-2022\")","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"create AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"AddressBookParser -\u003e AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"AddressBookParser -\u003e AbsentAttendanceCommandParser : parse(\"1 date/23-03-2022\")\")","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"create AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser -\u003e AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand --\u003e AbsentAttendanceCommandParser : a","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"destroy AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"LogicManager -\u003e AbsentAttendanceCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand -\u003e Model : setPet()","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"Model -\u003e AddressBook : setPet()","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"activate AddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"Model --\u003e AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand -\u003e Model : updateFilteredPetList()","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"Model --\u003e AbsentAttendanceCommand :","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"CommandResult --\u003e AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tobihy":82}},{"path":"docs/diagrams/AppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":":User executes Appointment command;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"if () then ([argument \u003d\u003d Index dateTime location])","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    : Add and store appointment details in database;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"else ([argument \u003d\u003d index clear])","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    : Clear and delete appointment details in database;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"endif","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Dineshraj555":14}},{"path":"docs/diagrams/AppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"participant \":AppointmentCommandParser\" as AppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"participant \"a:AppointmentCommand\" as AppointmentCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"[-\u003e LogicManager : execute(\"app 1 clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"app 1 clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"create AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"AddressBookParser -\u003e AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"AddressBookParser -\u003e AppointmentCommandParser : parse(\"1 clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"create AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser -\u003e AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand --\u003e AppointmentCommandParser : a","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"destroy AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"LogicManager -\u003e AppointmentCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand -\u003e Model : setPet()","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"Model -\u003e AddressBook : setPet()","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"activate AddressBook","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"Model --\u003e AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand -\u003e Model : updateFilteredPetList()","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"Model --\u003e AppointmentCommand :","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"CommandResult --\u003e AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Dineshraj555":82}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePet(p)","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Tiffanylin21":1,"-":37}},{"path":"docs/diagrams/AttendanceActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":":User executes attendance command;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"if () then ([not marked])","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":":update attendance;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"else ([already marked])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"if () then ([same entry])","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":":show error message;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"else ([different entry])","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":":update attendance;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tobihy":19}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"AddressBook *-right-\u003e \"1\" UniquePetList","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"UniqueTagList -[hidden]down- UniquePetList","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"UniqueTagList -[hidden]down- UniquePetList","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"UniquePetList -right-\u003e Pet","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"Pet -up-\u003e \"*\" Tag","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Name","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e OwnerName","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Phone","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Address","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Diet","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Appointment","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Tag","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e AttendanceHashMap","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"Tiffanylin21":14,"-":12}},{"path":"docs/diagrams/ChargeCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"@startuml","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"!include style.puml","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"participant \":ChargeCommandParser\" as ChargeCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"participant \"c:ChargeCommand\" as ChargeCommand LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"end box","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"[-\u003e LogicManager : execute(\"charge 1 m/04-2022 c/200\")","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"activate LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"charge 1 m/04-2022 c/200\")","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"create ChargeCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"AddressBookParser -\u003e ChargeCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"activate ChargeCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"deactivate ChargeCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"AddressBookParser -\u003e ChargeCommandParser : parse(\"1 m/04-2022 c/200\")","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"activate ChargeCommandParser","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"create ChargeCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommandParser -\u003e ChargeCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"activate ChargeCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommand --\u003e ChargeCommandParser : c","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"deactivate ChargeCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"deactivate ChargeCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"destroy ChargeCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"LogicManager -\u003e ChargeCommand : execute()","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"activate ChargeCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"create CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommand -\u003e CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"activate CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"CommandResult --\u003e ChargeCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"ChargeCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"deactivate ChargeCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"@enduml","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Tiffanylin21":59}},{"path":"docs/diagrams/FilterActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":":User executes filter command;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"switch ()","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"case ( [field \u003d\u003d \"byTags/\"] )","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by tags;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"case ( [field \u003d\u003d \"byDate/\"] )","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by date;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"case ( [keyword \u003d\u003d \"byOwner/\"] )","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by owner name;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"case ( [keyword \u003d\u003d byApp/] )","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by appointment date;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"endswitch","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":":Return filtered list;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tsumian":19}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"participant \"fp:FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"[-\u003e LogicManager : execute(\"filter byTags/beagle\")","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter byTags/beagle\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"AddressBookParser -\u003e FilterCommandParser: parse(\"filter byTags/beagle)","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"activate FilterCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"create FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"activate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"FilterCommand --\u003e FilterCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"FilterCommandParser --\u003e AddressBookParser: f","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"AddressBookParser --\u003e LogicManager: fp","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"LogicManager -\u003e FilterCommand: execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"activate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"FilterCommand -\u003e Model: updateFilteredPetList()","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"FilterCommand -\u003e Model: getFilteredPetList()","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"FilterCommand --\u003e LogicManager: result","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"FilterCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"destroy FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tsumian":61}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"Class UniquePetList","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"Class Pet","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"Class OwnerName","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"Class Diet","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"Class Appointment","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"Class AttendanceHashMap","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"AddressBook *--\u003e \"1\" UniquePetList","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"UniquePetList --\u003e \"~* all\" Pet","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Name","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e OwnerName","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Phone","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Address","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Diet","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e Appointment","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e \"0..1\" Tag","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"Pet *--\u003e AttendanceHashMap","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"Name -[hidden]right-\u003e OwnerName","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"OwnerName -[hidden]right-\u003e Phone","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"Address -[hidden]right-\u003e Diet","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"Diet -[hidden]right-\u003e Appointment","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"Appointment -[hidden]right-\u003e Tag","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"Tag -[hidden]right-\u003e AttendanceHashMap","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"ModelManager --\u003e\"~* filtered\" Pet","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Tiffanylin21":26,"-":36}},{"path":"docs/diagrams/Sort.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"participant \"sp:SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"participant \":UniquePetList\" as UniquePetList MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"[-\u003e LogicManager : execute(\"sort /o\")","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort /o\")","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"AddressBookParser -\u003e SortCommandParser: parse(\"/o\")","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"activate SortCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"create SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"activate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"SortCommand --\u003e SortCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"SortCommandParser --\u003e AddressBookParser: s","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"AddressBookParser --\u003e LogicManager : sp","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"activate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"SortCommand -\u003e Model : sortPetList()","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"Model -\u003e AddressBook : sortPets()","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"activate AddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"AddressBook -\u003e UniquePetList: sortPets()","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"activate UniquePetList","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"UniquePetList -\u003e UniquePetList:  sortPetList()","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"UniquePetList --\u003e AddressBook :","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"deactivate UniquePetList","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"SortCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"destroy SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"soloplxya":83}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"start","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":":User executes sort command;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"if () then ([argument \u003d\u003d \"/o\"])","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    :Sort pet list by owner name;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"else ([argument \u003d\u003d \"/n\"])","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    :Sort pet list by pet name;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"endif","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"stop","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"@enduml","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"soloplxya":15}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"Class JsonAdaptedPet","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"Class JsonAdaptedAttendance","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPet","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"JsonAdaptedPet --\u003e \"0...1\" JsonAdaptedTag","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"JsonAdaptedPet --\u003e \"*\" JsonAdaptedAttendance","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Tiffanylin21":5,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"Class PetListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"Class PetCard","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"MainWindow *-down-\u003e \"1\" PetListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"PetListPanel -down-\u003e \"*\" PetCard","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"PetListPanel --|\u003e UiPart","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"PetCard --|\u003e UiPart","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"PetCard ..\u003e Model","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"PetListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Tiffanylin21":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"ecp -\u003e ec ++: index, editPetDescriptor","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Tiffanylin21":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"title: WoofAreYou","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2022-04-09"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-1/tp/branch/master/graph/badge.svg?token\u003dRKLSU8HQ5A)](https://codecov.io/gh/AY2122S2-CS2103T-T13-1/tp)","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"**WoofAreYou is a desktop application for pet daycare owners to handle the administrative information of their pets.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"* If you are interested in using WoofAreYou, head over to the [_Quick Start_ section of the **User Guide**](https://github.com/AY2122S2-CS2103T-T13-1/tp/blob/12056c1a33e733023afd53078a36a812c0c7edee/docs/UserGuide.md#quick-start).","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"* If you are interested about developing WoofAreYou, the [**Developer Guide**](https://github.com/AY2122S2-CS2103T-T13-1/tp/blob/12056c1a33e733023afd53078a36a812c0c7edee/docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Dineshraj555":1,"Tiffanylin21":5,"-":12,"tobihy":2}},{"path":"docs/team/dineshraj555.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"title: S Dinesh Raj\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps.The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"1. **Appointment Command** [#74](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/74) [#82](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/82)","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"  * What it does:","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    * Allows the user to store appointment information of pets.","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    * Appointment information consists of date of appointment, time of appointment and location of appointment.","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"  * Justification:","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    * This feature enables the user to track the pet appointments and ensure that user do not overlook or forget any appointment of the pets.","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"  * Credits:","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    * This feature was extended and refined from the RemarkCommand tutorial that was done at the start of the tP iteration.","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddineshraj555\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"* **Project management**:","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"1. Participated in weekly project meeting.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"2. Managed project issues and releases on GitHub.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"3. Reviewed other member pull requests.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"1. `Second level Project refactoring` [#62](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/62):","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"  * Worked on second level refactoring to convert project from address book to woofareyou.","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"  * Worked on ensuring pet attributes and model such as `ownerName` were refined correctly.\u003cbr/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"2. `Update SortCommand` [#89](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/89) [#99](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/99):","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"  * Changed the Sort Command format to be more user-friendly.","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"  * Implemented Sort functionality for 3 additional fields: \"app\", \"pickup time\" and \"dropoff time\".","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"  * Implemented necessary comparator class for the additional fields and test cases.\u003cbr/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"3. `Update GUI for Appointment` [#109](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/109):","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"  * Initially appointment title label reflected the color of the appointment status while the appointment information had no color label.","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"  * Updated appointment title label to be one singular color label while appointment info status label had a color coding reflecting the status of the appointment. eg. `red` represent appointment is over, `green` represent appoint is today and `grey` represent appoint is in the future.\u003cbr/\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"4. `Update GUI filtered list display` [#158](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/158):","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"  * Initially GUI display of filtered list formed by `find` and `filter` commands will prematurely refactor to display full unfiltered pet list when any command was executed.","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"  * Refined GUI filtered list behaviour to retain the filtered list display to improve user experience.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"  * User Guide:","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"  1. Added Add Command, Appointment Command, Clear Command, Edit Command, List Command and Help Command.[#55](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/55) [#74](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/74) [#86](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/86).","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"  2. Updated Sort Command. [#89](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/89).","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"  1. Assisted with the offline generation of user stories.","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"  2. Added developer documentation for Appointment feature. [#82](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/82).","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"* **Community**:","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"1. Served as a second pair of eyes to check and review teammate codes. [#75](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/55) [#169](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/169)","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"2. Reported bugs spotted. [#106](https://github.com/AY2122S2-CS2103T-T13-1/tp/issues/106) [#110](https://github.com/AY2122S2-CS2103T-T13-1/tp/issues/110)","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Dineshraj555":57}},{"path":"docs/team/soloplxya.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"title: Shaine\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"WoofAreYou is a desktop administrative manager used by pet daycare owners to aid their day-to-day administrative duties.","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"* **Undo**: Added the ability for users to undo previous commands.","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    * What it does: Allows pet daycare owners to undo accidental commands in the event that they made a typo in one of","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"      the fields and need to revert the application back to the previous state.","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    * Justification: The undo feature is a user-oriented feature that aims to provide pet daycare owners with a seamless","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"      experience when using WoofAreYou. Instead of going through the cumbersome process of deleting and adding","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"      in the event of a typo, pet daycare owners can instead simply undo and revert the petBook to the previous state.","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    * Highlights: The implementation of `undo` is also extendable for other modifications such as the `redo` command.","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    * Credits: This enhancement was inspired from the implementation of the UndoCommand that has been suggested","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"      in the original Developer Guide.","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"* **Sort**: Added the ability for users to sort the pet list.","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"  * What it does: Allows pet daycare owners to sort the pet list by name or owner name.","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"  * Justification: This command makes it easier for pet daycare owners to locate and find pet entries that they may be","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    looking for. Instead of having to scour through the entire pet list to find Woofie, they can simply sort the pet","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    list and look for Woofie at the end of the list. This feature is also very intuitive as it is a feature that is","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    commonly employed in many applications. (For eg. **Spotify**: Listeners can sort music by","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    alphabetical order.)","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"  * Highlights: The implementation is easily extensible as shown by how my teammate Dinesh managed to extend on it","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    to sort other fields such as `pick-up` and `drop-off` time as well.","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"* **Diet**: Added the ability for users to add dietary restrictions to a particular pet.","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    * What it does: Allows pet daycare owners to indicate a pet\u0027s dietary restrictions.","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    * Justification: The diet feature is useful as it helps pet daycare owners to easily identify certain dietary","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"      restrictions that a particular pet has. This will help reduce situations where the pet is fed food that it should","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"      not be eating, creating a healthy and safe environment for the pets!","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    * Credits: This enhancement is extended from the RemarkCommand tutorial that was done at the start of","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"      the tP iteration.","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dsoloplxya\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"* **Project management**: Helped maintain the team repository by **enabling assertions** in the `build.gradle` file.","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"  [View PR](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/90)","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"  * Previously, certain user inputs were not fully reflected on the GUI of the application as the content was too long.","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    In this [PR](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/107), a modificiation that I made was to set a","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"    character limit to the user input so that the details keyed in will be able to fit in the GUI nicely.","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"  * Updated the **Developer Guide** by describing the implementation of the SortCommand.","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    Additionally, I also helped to add sequence diagrams and activity diagrams to visually illustrate the","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    entire implementation of the SortCommand. [View PR](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/79)","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"  * Updated the **User Guide** to include the description of the features that I have implemented.","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"    [View PR](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/87)","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"* **Community**:","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"  * Reviewed teammates pull requests by:","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"    * Suggesting fixes for issues that teammates\u0027 were experiencing:","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"      [PR](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/164)","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"    * Spotting documentation errors in the code that needed to be corrected:","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"      [PR](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/74)","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"soloplxya":58}},{"path":"docs/team/tiffanylin21.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"title: Tiffany\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"* **Contributions to UG**:","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"  1. Updated UG to include `time` and `delete` commands","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"  2. Updated UG for `charge` command","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"* **New Feature**: Charge","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    1. **Charge Command** [#103](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/103) [#112](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/112)","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    * What it does:","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"        * Allows the user to tabulate monthly charge of pet.","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"        * Charge requires user to specify a month and cost per day.","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    * Justification:","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"        * This feature enables the user to calculate cost to charge a pet for a specified month. This cost is calculated based on the pet\u0027s attendance during the specified month.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtiffanylin21\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"* **Project management**:","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    1. Reviewed pull requests by teammates","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    2. Helped in opening and assigning issues","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"  1. Refactored `Person` in AB3 with its attributes to `Pet` with its initial attributes `Name`, `OwnerName`, `Phone`, `Address` and `Tag`","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"  2. Fixed inconsistent error messages given by AB3 when user inputs an invalid index. Error message given when index is out-of-bounds and when index is not a positive non-zero integer are different.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"  3. Fixed duplicate whitespace error in AB3 naming. AB3 treat names containing duplicate whitespaces as unique. Fixed to automatically trim duplicate whitespaces in names.","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"  1. Updated development guide images to conform to team project","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"* **Community**:","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    * PRs reviewed (with non-trivial review comments):[#80](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/80#discussion_r832306218)","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    * Reported bugs and suggestions for peers during PE-Dry Run","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"      * [Duplicate whitespaces allowed in names and considered unique by NUSocials](https://github.com/Tiffanylin21/ped/issues/1)","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"      * [Addresses can\u0027t be seen on GUI when too long](https://github.com/Tiffanylin21/ped/issues/3)","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"Tiffanylin21":38,"soloplxya":1}},{"path":"docs/team/tobihy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"layout: page title: Hao Yu\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps. The user interacts","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"* **New Feature**: Added attendance functionality [#80](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/80)","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    * What it does:","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"        * Allows the user to mark pets as `absent` or `present` on specified dates. Users are able to mark pets\u0027","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"          attendance for dates in the past, as well as dates in the future (in advance).","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"        * Dates within the past seven","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"          days that the pet were marked present or absent are also reflected in the GUI as green-coloured or","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"          red-coloured date tags.","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    * Justification:","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"        * This feature improves the product significantly by tailoring the application to meet the attendance taking","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"          needs of the users, meeting our product\u0027s aim of simplifying pet daycare administration.","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    * Highlights:","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        * The implementation of the feature was non-trivial due to the challenges associated with storing and","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"          manipulating attendance data for each pet in an efficient and effective manner.","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        * Attendance data is stored in the existing `.json` data file of WoofAreYou. This required a good understanding","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"          of JSON serialisation and deserialisation.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        * Being the first major functionality involving non-trivial changes to the front-end and back-end of WoofAreYou,","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"          it provided a back-end for teammates to build upon with related functionalities.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"          (see [#91](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/91), [#103](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/103))","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"* **New Feature**: Include optional transport arrangement timings in dates marked","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"  present [#80](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/80), [#97](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/97)","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    * What it does:","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        * Allows the user to include pick-up and drop-off timings for pets marked as present using the","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"          existing `present` command.","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        * Transport arrangements for today and tomorrow (two days, inclusive) are also reflected in the GUI as","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"          colour-coded tags.","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    * Justification:","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        * This feature builds upon the attendance functionality by providing users with a handy way to keep track of the","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"          transport arrangements of their pets, if such arrangements exist.","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        * This is also in line with our product\u0027s aim of simplifying pet daycare administration.","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    * Highlights:","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        * Designed a performant GUI to show user, at a glance, pet transport arrangements for the next two days.","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        * Provided a back-end for `sort` command (see [#99](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/99))","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"* **Code","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"  contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtobihy\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"* **Project management**:","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    * Managed releases `v1.2` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    * Assisted members of the team in debugging code","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    * Improved `find` command to work with partial word","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"      matches [#65](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/65)","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    * Revamped GUI of WoofAreYou to resemble initial GUI","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"      mockup [#76](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/76)","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"* **Documentation**:","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"    * User Guide:","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        * Added user documentation for attendance","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"          functionality [#80](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/80)","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        * Edited UG to make it more reader-focussed and","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"          reader-friendly [#108](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/108)","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    * Developer Guide:","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        * Added developer documentation for attendance","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"          functionality [80](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/80)","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"* **Community**:","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    * PRs reviewed (with non-trivial review comments): [#74](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/74), [#99](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/99), [#103](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/103), [#158](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/158)","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"    * Reported bugs and suggestions for peers during PE-Dry Run","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        * [Invalid email is accepted into AIA](https://github.com/tobihy/ped/issues/1)","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        * [Contacts with same name are not allowed](https://github.com/tobihy/ped/issues/8)","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        * [Tag text not able to contain whitespaces](https://github.com/tobihy/ped/issues/9)","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"tobihy":69}},{"path":"docs/team/tsumian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"title: Thia Su Mian\u0027ss Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"WoofAreYou is a desktop administrative manager used by pet daycare owners to aid their day-to-day administrative duties.","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"* **Filter**: Added the ability to filter out pets by desired field.","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"  * What it does: Allows pet daycare owners to filter out pets from the pet list. They can choose to filter by a number","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    of different fields such as date, appointment, owner\u0027s name and tags of the pets.","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"  * Justification: This feature improves the efficiency of executing commands in WoofAreYou. If daycare owners have a","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    huge list of pets, this feature helps them narrow down their search a lot so that they can perform other administrative","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    commands efficiently with a smaller pet list.","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"  * Highlights: This enhancement is dependent on both existing commands and commands to be added in the future. It required","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    in depth analysis of the different fields and commands implemented to adapt this feature appropriately to","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    produce the desired result. A lot of thoughts were put into making this feature extendable to accommodate","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    potential features of WoofAreYou as we tweak it to suit the different operations of daycare owners.","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"  * Credits: Inspiration of the implementation was drawn from original `find` command from AB3 and Java\u0027s `LocalDate`","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    library was used to aid in the implementation.","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"* **Labels In GUI for diet and Appointment**: Added visual cues for diet and appointments of pets in GUI.","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"  * What it does: Allows pet daycare owners to identify the special requests of different pets. Appointment labels will","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    change color to provide an indication of their urgency based on their dates. Diet labels will appear if the pet has","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    any dietary requirements.","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"  * Justification: This feature acts as a reminder for daycare owners when taking care of pets with special needs and","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    requests. WoofAreYou contains a lot of information about pets and this feature emphasises on information that may be","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    more important. This information may be urgent and could affect the safety of the pets.","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"  * Highlights: This enhancement affects the existing features of the GUI and is dependent on existing commands. It needed","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    strategic tweaking of the layout of the existing pet card to bring out the desired emphasis. At the same time other","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    exisitng information should not be less visible in any way.","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtsumian\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"* **Project management**:","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"  * Managed releases `v1.3.1` on GitHub","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"  * Wrote additional tests for exisitng features and new features to increase coverage from 67% to 70%(Pull request [#91](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/91))","lastModifiedDate":"2022-04-05"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"  * User Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    * Added documentation for `filter`: [#91](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/91))","lastModifiedDate":"2022-04-05"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    * Did a complete cosmetic tweak to existing documentation for cohesiveness: [#94](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/98/files)","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    * Add documentation for the feature `filter`: [#81](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/81/files)","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    * Added implementation details of the `User Stories`: [#13](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/13/files)","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"* **Contribution to team-based tasks**","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"  * Set up GitHub team organisation/ repository","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"  * Updating user guide to enhance user-friendliness","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"* **Community**:","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"  * PRs reviewed (with non-trivial review comments): [#103](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/103/files/790e59e0ee3ed4c86af623de7412a3141e70625e)","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"    , [#18](https://github.com/AY2122S2-CS2103T-T13-1/tp/pull/80)","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"  * Reported bugs and suggestions for other teams in the class (example: [1](https://github.com/AY2122S2-CS2103-W16-3/tp/issues/144))","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"    , [2](https://github.com/AY2122S2-CS2103-W16-3/tp/issues/153), [3](https://github.com/AY2122S2-CS2103-W16-3/tp/issues/167)","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"* **Tools**:","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"  * Integrated CodeCov to the team repo","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"tsumian":64}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"This command allows users of the AddressBook application to add optional remarks to people in WoofAreYou and edit it if required. The command should have the following format:","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":" * Changes the remark of an existing pet in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"            + \": Edits the remark of the pet identified \"","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"            + \"by the index number used in the last pet listing. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"     * @param index of the pet in the filtered pet list to edit the remark","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"     * @param remark of the pet to be updated to","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"Create a `RemarkCommandParser` class in the `woofareyou.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"Tiffanylin21"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of pet data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the pet’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"soloplxya"},"content":"Create a new `Remark` in `woofareyou.model.pet`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-04-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"Tiffanylin21"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"soloplxya"},"content":"Simply add the following to [`woofareyou.ui.PetCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-04-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"soloplxya"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty WoofAreYou!","lastModifiedDate":"2022-04-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"Tiffanylin21"},"content":"public PersonCard(Person pet, int displayedIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"Tiffanylin21"},"content":"    remark.setText(pet.getRemark().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"Tiffanylin21"},"content":"        Person petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":347,"author":{"gitId":"Tiffanylin21"},"content":"        Person editedPet \u003d new Person(","lastModifiedDate":"2022-03-08"},{"lineNumber":348,"author":{"gitId":"Tiffanylin21"},"content":"                petToEdit.getName(), petToEdit.getPhone(), petToEdit.getEmail(),","lastModifiedDate":"2022-03-08"},{"lineNumber":349,"author":{"gitId":"Tiffanylin21"},"content":"                petToEdit.getAddress(), remark, petToEdit.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"Tiffanylin21"},"content":"        model.setPerson(petToEdit, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(generateSuccessMessage(editedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"Tiffanylin21"},"content":"    private String generateSuccessMessage(Person petToEdit) {","lastModifiedDate":"2022-03-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"Tiffanylin21"},"content":"        return String.format(message, petToEdit);","lastModifiedDate":"2022-03-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Tiffanylin21":17,"-":375,"soloplxya":9}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"The `address` field in `Person` is actually an instance of the `woofareyou.model.pet.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"\u003cLabel fx:id\u003d\"ownerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ownerName\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"  \"pets\": [ {","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"    \"ownerName\": \"hans@example.com\",","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tiffanylin21":3,"-":108,"soloplxya":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `woofareyou.logic.Logic`.","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"A quick look at the `woofareyou.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"soloplxya"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPetDescriptor`. Recall that we can verify the contents of `editPetDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"   ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"soloplxya"},"content":"       Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":193,"author":{"gitId":"soloplxya"},"content":"       Pet editedPet \u003d createEditedPet(petToEdit, editPetDescriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":194,"author":{"gitId":"soloplxya"},"content":"       if (!petToEdit.isSamePet(editedPet) \u0026\u0026 model.hasPet(editedPet)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"soloplxya"},"content":"       model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-04-08"},{"lineNumber":198,"author":{"gitId":"soloplxya"},"content":"       model.updateFilteredPetList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-04-08"},{"lineNumber":199,"author":{"gitId":"Tiffanylin21"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"soloplxya"},"content":"    * it uses the `setPet()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the pet data.","lastModifiedDate":"2022-04-08"},{"lineNumber":205,"author":{"gitId":"soloplxya"},"content":"    * it uses the `updateFilteredPetList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ pets.\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":206,"author":{"gitId":"Tiffanylin21"},"content":"      FYI, The \u0027filtered list\u0027 is the list of pets resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the pets so that the user can see the edited pet along with all other pets. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":207,"author":{"gitId":"Tiffanylin21"},"content":"      To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of pets is being tracked.","lastModifiedDate":"2022-03-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Tiffanylin21"},"content":"        pets.addAll(","lastModifiedDate":"2022-03-08"},{"lineNumber":235,"author":{"gitId":"soloplxya"},"content":"            source.getPetList()","lastModifiedDate":"2022-04-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"soloplxya"},"content":"                  .map(JsonAdaptedPet::new)","lastModifiedDate":"2022-04-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"soloplxya"},"content":"1. It appears that a `JsonAdaptedPet` is created for each `Pet` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-04-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"   **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"soloplxya"},"content":"    5.  Add a new field to `Pet`","lastModifiedDate":"2022-04-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tiffanylin21":4,"-":283,"soloplxya":14}},{"path":"src/main/java/woofareyou/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.FileUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"soloplxya":3,"-":61}},{"path":"src/main/java/woofareyou/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main { //dummy commit","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"soloplxya":1,"-":24}},{"path":"src/main/java/woofareyou/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Config;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Version;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.ConfigUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.StringUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.Logic;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.LogicManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.util.SampleDataUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"import woofareyou.storage.JsonPetBookStorage;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"import woofareyou.storage.PetBookStorage;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.Storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.StorageManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.UserPrefsStorage;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"import woofareyou.ui.Ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"import woofareyou.ui.UiManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing WoofAreYou ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        PetBookStorage petBookStorage \u003d new JsonPetBookStorage(userPrefs.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        storage \u003d new StorageManager(petBookStorage, userPrefsStorage);","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s pet book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"     * The data from the sample pet book will be used instead if {@code storage}\u0027s pet book is not found,","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"     * or an empty pet book will be used instead if errors occur when reading {@code storage}\u0027s pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        Optional\u003cReadOnlyPetBook\u003e petBookOptional;","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        ReadOnlyPetBook initialData;","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"            petBookOptional \u003d storage.readPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"            if (!petBookOptional.isPresent()) {","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PetBook\");","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"            initialData \u003d petBookOptional.orElseGet(SampleDataUtil::getSamplePetBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PetBook\");","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"            initialData \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PetBook\");","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            initialData \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PetBook\");","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"        logger.info(\"Starting WoofAreYou \" + MainApp.VERSION);","lastModifiedDate":"2022-04-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping WoofAreYou ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-04-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":20,"-":139,"tobihy":24}},{"path":"src/main/java/woofareyou/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":62}},{"path":"src/main/java/woofareyou/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    private static final double DEFAULT_HEIGHT \u003d 640;","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    private static final double DEFAULT_WIDTH \u003d 770;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":76,"tobihy":2}},{"path":"src/main/java/woofareyou/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    private static final String LOG_FILE \u003d \"woofareyou.log\";","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":110,"tobihy":1}},{"path":"src/main/java/woofareyou/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_INVALID_PET_DISPLAYED_INDEX \u003d \"The pet index provided is invalid!\";","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_PETS_LISTED_OVERVIEW \u003d \"%1$d pets listed!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_PETS_FOUND \u003d \"Found %1$d pet(s) similar to keyword(s)!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_MISSING_PICKUP_TIME \u003d \"You forgot to include the pick-up time!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_MISSING_DATE \u003d \"You forgot to include the date!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_MISSING_DROPOFF_TIME \u003d \"You forgot to include the drop-off time!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_NO_CHARGE_SET \u003d \"You forgot to include the daily charge!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_NO_CHARGE_MONTH_SET \u003d \"You forgot to include the month to charge the pet by!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public static final String FILTER_COMMAND_MORE_THAN_ONE_FIELD \u003d \"You can only filter by one field!\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    public static final String FILTER_MESSAGE_SUCCESS \u003d \"Found %1$d pet(s) after filtering by %2$s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":4,"tsumian":2,"soloplxya":1,"-":10,"tobihy":4}},{"path":"src/main/java/woofareyou/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":115}},{"path":"src/main/java/woofareyou/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core.index;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"soloplxya":1,"-":53}},{"path":"src/main/java/woofareyou/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.exceptions;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":10}},{"path":"src/main/java/woofareyou/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.exceptions;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":1,"-":20}},{"path":"src/main/java/woofareyou/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.MainApp;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"soloplxya":2,"-":40}},{"path":"src/main/java/woofareyou/commons/util/AttendanceUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.MissingAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.JsonAdaptedAttendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":" * A container for Attendance-related methods and functionality.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"public class AttendanceUtil {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_GUI_FORMAT \u003d \"dd/MM\";","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public static final DateTimeFormatter ATTENDANCE_DATE_GUI_FORMATTER \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter.ofPattern(ATTENDANCE_DATE_GUI_FORMAT);","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    public static final DateTimeFormatter ATTENDANCE_DATE_FORMATTER \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter.ofPattern(ATTENDANCE_DATE_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Checks if a given string is in the valid format to be parsed into a {@code Boolean}.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     * @param isPresent the given isPresent string.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     * @return true if string is valid, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    public static boolean isValidIsPresentString(String isPresent) {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        return isPresent.equals(\"true\") || isPresent.equals(\"false\");","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     * Converts a date string found in {@link JsonAdaptedAttendance} into a","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"     * {@code LocalDate} object.","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"     * @param jsonDate the time string to be converted.","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * @return a LocalDate object.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"     * @throws DateTimeParseException if the time string is invalid.","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public static LocalDate convertToModelDate(String jsonDate) throws DateTimeParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        return LocalDate.parse(jsonDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     * Converts a time string found in {@link JsonAdaptedAttendance} into a","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"     * {@code LocalTime} object.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * @param jsonTime the date string to be converted.","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     * @return a LocalTime object.","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     * @throws DateTimeParseException if the date string is invalid.","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    public static LocalTime convertToModelTime(String jsonTime) throws DateTimeParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        // No time specified.","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        if (jsonTime.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"            return null;","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        return LocalTime.parse(jsonTime);","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * Creates and returns a list of attendance entries for the past week,","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     * starting from six days ago (inclusive) to the current date (inclusive).","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"     * If no attendance has been marked on a particular date, a missing attendance entry is added.","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"     * @param attendanceHashMap the attendance hash map of the pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"     * @return a list of attendance entries for the past week.","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    public static List\u003cAttendanceEntry\u003e getPastWeekAttendance(AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e weeklyAttendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        LocalDate currentDate \u003d LocalDate.now(); // the current date","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        LocalDate startDate \u003d currentDate.minusDays(6); // the date a week before","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"        LocalDate endDate \u003d currentDate.plusDays(1); // the date tomorrow","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d startDate; d.isBefore(endDate); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"            weeklyAttendanceList.add(","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"                attendanceHashMap","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"                    .getAttendance(d)","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"                    .orElse(new MissingAttendanceEntry(d))","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"            );","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        return weeklyAttendanceList;","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"    public static List\u003cAttendanceEntry\u003e getNextTwoDaysTransport(AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceHashMap);","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e nextTwoDaysTransportList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        LocalDate currentDate \u003d LocalDate.now(); // the current date","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        LocalDate endDate \u003d currentDate.plusDays(2);","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d currentDate; d.isBefore(endDate); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"            AttendanceEntry entry \u003d attendanceHashMap.getAttendance(d).orElse(new MissingAttendanceEntry(d));","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"            nextTwoDaysTransportList.add(entry);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        return nextTwoDaysTransportList;","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"soloplxya":5,"tobihy":103}},{"path":"src/main/java/woofareyou/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":1,"-":34}},{"path":"src/main/java/woofareyou/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Config;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"soloplxya":3,"-":20}},{"path":"src/main/java/woofareyou/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if file exists","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if directory exists","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public static boolean isDirectoryExists(Path dir) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        return Files.exists(dir);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":9,"tsumian":1,"soloplxya":1,"-":81,"tobihy":3}},{"path":"src/main/java/woofareyou/commons/util/FilterUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.FilterByContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"public class FilterUtil {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"     * Returns true if the {@code petTags} contains the {@code filterWord}.","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Ignores case, and a partial or full word match is required.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * @param petTags cannot be null","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * @param filterWord cannot be null, cannot be empty","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    public static boolean tagContainFilterWord(Set\u003cTag\u003e petTags, String filterWord) {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"        CollectionUtil.requireAllNonNull(petTags, filterWord);","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        String trimFilterWord \u003d filterWord.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        for (Tag tag : petTags) {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            String tagString \u003d tag.toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            if (StringUtil.tagOrNameContainsWordsIgnoreCase(tagString, trimFilterWord)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"     * Checks if argument provided for filter is valid.","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"     * Parameter must only contain one field to be filtered by.","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"     * @param args Filter parameter","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"     * @return Returns true if argument provided is valid, else false","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    public static boolean isValidFilterArg(String args) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"        String[] separateFilterCommand \u003d args.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        return separateFilterCommand.length \u003c\u003d 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"     * Matches predicate with its type to return a String message.","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"     * @param predicate Predicate that is to be matched.","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     * @return String message to be used in filter success message.","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    public static String successMessageMatch(FilterByContainsFilterWordPredicate predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        if (predicate instanceof DateContainsFilterDatePredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"            return \"date\";","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        } else if (predicate instanceof TagContainsFilterWordPredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"            return \"breed\";","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } else if (predicate instanceof OwnerNameContainsFilterWordPredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            return \"owner\u0027s name\";","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            return \"appointment date\";","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tsumian":54,"soloplxya":8}},{"path":"src/main/java/woofareyou/commons/util/GuiUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":" * A container for GUI specific utility functions","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"public class GuiUtil {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"     * A utility function to check if the card index is even.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"     * @param index the index of the card.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"     * @return true if index is even, false otherwise.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    public static boolean isEvenIndexCard(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"        return index % 2 \u003d\u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"soloplxya":1,"tobihy":15}},{"path":"src/main/java/woofareyou/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":3,"-":140}},{"path":"src/main/java/woofareyou/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"     *   Ignores case, and a partial or full word match is required.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"AbC def\", \"AcB\") \u003d\u003d false //no match","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1,","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"                \"Word parameter should be a single word\");","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        String preppedKeyword \u003d preppedWord.toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        return preppedSentence.contains(preppedKeyword);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     * Returns true if the {@code tagString} contains the {@code word}.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"     *   Ignores case, and a partial or full word match is required.","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"Abc Def\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"ABc de\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"AB de\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"AbC def\", \"AcB\") \u003d\u003d false //no match","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"     * @param tagString cannot be null","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"    public static boolean tagOrNameContainsWordsIgnoreCase(String tagString, String word) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        requireNonNull(tagString);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Filter word parameter cannot be empty\");","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        String preppedSentence \u003d tagString.toLowerCase();","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        String preppedKeyword \u003d preppedWord.toLowerCase();","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        if (!preppedSentence.contains(preppedKeyword)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            String[] separateSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"            String[] separateKeyword \u003d preppedKeyword.split(\"\\\\s+\");","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"            int minLength \u003d Math.min(separateKeyword.length, separateSentence.length);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"            for (int i \u003d 0; i \u003c minLength; i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"                if (!containsWordIgnoreCase(separateSentence[i], separateKeyword[i])) {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"                    return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsumian":40,"soloplxya":2,"-":56,"tobihy":10}},{"path":"src/main/java/woofareyou/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.CommandResult;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * Returns the PetBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @see woofareyou.model.Model#getPetBook()","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    ReadOnlyPetBook getPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    /** Returns an unmodifiable view of the filtered list of pets */","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    ObservableList\u003cPet\u003e getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     * Returns the user prefs\u0027 pet book file path.","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    Path getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Tiffanylin21":2,"soloplxya":7,"-":36,"tobihy":6}},{"path":"src/main/java/woofareyou/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.Command;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.CommandResult;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import woofareyou.logic.parser.PetBookParser;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.Storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    private final PetBookParser petBookParser;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        petBookParser \u003d new PetBookParser();","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        Command command \u003d petBookParser.parseCommand(commandText);","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"            storage.savePetBook(model.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    public ReadOnlyPetBook getPetBook() {","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        return model.getPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        return model.getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"    public Path getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        return model.getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Tiffanylin21":2,"soloplxya":10,"-":59,"tobihy":10}},{"path":"src/main/java/woofareyou/logic/commands/AbsentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AttendanceUtil.ATTENDANCE_DATE_FORMATTER;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":" * Marks the attendance of an existing pet in WoofAreYou as absent on a particular date.","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    public static final String COMMAND_WORD \u003d \"absent\";","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks an attendance of a pet as absent \"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"            + \"by the index number used in the displayed pet list. \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"            + \"Includes the date. \\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DATE + \"DATE_OF_ATTENDANCE in dd-MM-yyyy \"","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DATE + \"15-03-2022 \";","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_ABSENT_ATTENDANCE_SUCCESS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        \"Successfully marked %1$s as absent on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        + \"New entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_ABSENT_ATTENDANCE_FAILURE \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        \"Seems like you have already marked %1$s as absent on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        + \"Existing entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    private final Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    private final AbsentAttendanceDescriptor absentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"     * @param index of the pet in the filtered pets list to mark as absent.","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     * @param absentAttendanceDescriptor details of the absent attendance to be stored.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceCommand(Index index, AbsentAttendanceDescriptor absentAttendanceDescriptor) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(index, absentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        this.absentAttendanceDescriptor \u003d absentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap targetAttendanceHashMap \u003d petToEdit.getAttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate \u003d absentAttendanceDescriptor.getAttendanceDate();","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        String attendanceDateString \u003d attendanceDate.format(ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry absentAttendance \u003d new AbsentAttendanceEntry(attendanceDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        if (targetAttendanceHashMap.containsAttendance(absentAttendance)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(generateFailureMessage(petToEdit, attendanceDateString, absentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        targetAttendanceHashMap.addAttendance(absentAttendance);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), petToEdit.getDiet(),","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAppointment(), targetAttendanceHashMap);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        return new CommandResult(generateSuccessMessage(editedPet, attendanceDateString, absentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"     * Stores the absent attendance details to edit the pet with.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    public static class AbsentAttendanceDescriptor {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        private LocalDate attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        public AbsentAttendanceDescriptor() {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        public void setAttendanceDate(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"        public LocalDate getAttendanceDate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"            return attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"        public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"            String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"            return \"Absent | \" + date;","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"            if (!(other instanceof AbsentAttendanceDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"            AbsentAttendanceDescriptor otherDescriptor \u003d (AbsentAttendanceDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"            return attendanceDate.equals(otherDescriptor.attendanceDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution success message based on the","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"    private String generateSuccessMessage(Pet petToEdit, String attendanceDate, AbsentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"            MESSAGE_ABSENT_ATTENDANCE_SUCCESS, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution failure message based on the","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"    private String generateFailureMessage(Pet petToEdit, String attendanceDate, AbsentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"            MESSAGE_ABSENT_ATTENDANCE_FAILURE, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof AbsentAttendanceCommand)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand e \u003d (AbsentAttendanceCommand) other;","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 absentAttendanceDescriptor.equals(e.absentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Dineshraj555":1,"soloplxya":12,"tobihy":153}},{"path":"src/main/java/woofareyou/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":" * Adds a pet to WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a pet to WoofAreYou database.\"","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_NAME + \"NAME_OF_PET \"","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_OWNER_NAME + \"OWNER_NAME \"","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_PHONE + \"PHONE_NUMBER \"","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"            + \"[\" + PREFIX_TAG + \"BREED] ... \\n\"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"            + PREFIX_NAME + \"Pee Pee \"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_OWNER_NAME + \"John Doe \"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            + PREFIX_TAG + \"Mini Beagle \";","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New pet added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"This pet already exists in WoofAreYou!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    private final Pet toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates an AddCommand to add the specified {@code Pet}","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public AddCommand(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        toAdd \u003d pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        if (model.hasPet(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        model.addPet(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":6,"Tiffanylin21":10,"tsumian":1,"soloplxya":11,"-":37,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/commands/AppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":" * Adds appointment details to a pet identified using it\u0027s displayed index from WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"public class AppointmentCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    public static final String COMMAND_WORD \u003d \"app\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"            + \": Edits the appointment by either adding or clearing the \"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"            + \"appointment details of the pet identified by the index \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"            + \"number used in the last pet listing.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"            + \"To add appointment: \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"            + \"dt/[dd-MM-yyyy HH:mm] at/[location]\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            + \"dt/04-03-2022 09:30 at/ NUS Vet Clinic\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"            + \"To clear appointment: \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            + \"Parameters: INDEX (must be a positive integer) clear\"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 clear\";","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"Added appointment to Pet: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Removed appointment from Pet: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    private final Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * @param index of the pet in the filtered pets list to edit the appointment.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @param appointment of the pet to be updated to.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"    public AppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), petToEdit.getDiet(), appointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAttendanceHashMap());","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"        return new CommandResult(generateSuccessMessage(editedPet));","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"     * the appointment is added to or removed from","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"    private String generateSuccessMessage(Pet petToEdit) {","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"        String message \u003d !appointment.value.isEmpty()","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"                ? MESSAGE_ADD_APPOINTMENT_SUCCESS : MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"        return String.format(message, petToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"        if (!(other instanceof AppointmentCommand)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand e \u003d (AppointmentCommand) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 appointment.equals(e.appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":88,"soloplxya":9,"tobihy":2}},{"path":"src/main/java/woofareyou/logic/commands/ChargeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.text.DateFormatSymbols;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.YearMonth;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.charge.Charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":" * Computes a month\u0027s charge of a pet identified using it\u0027s displayed index from WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"public class ChargeCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String COMMAND_WORD \u003d \"charge\";","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"            + \": Computes a month\u0027s charge of the pet identified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"            + \"by the index number used in the last pet listing.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"            + \"m/[MM-yyyy] c/[COST]\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"            + \"m/03-2022 c/200\";","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Charge date should be formatted as MM-yyyy!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_COMPUTE_CHARGE_SUCCESS \u003d \"%s should be charged $%.2f for %s %d.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_ATTENDANCE \u003d \"\\nHere are the days %s was present: \";","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_NO_ATTENDANCE \u003d \"\\n%s was not present on any day.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    private final YearMonth chargeDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"    private final Charge charge;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * @param index of the pet in the filtered pets list to compute the charges of.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"     * @param chargeDate the month in the specified year to calculate amount chargeable.","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    public ChargeCommand(Index index, YearMonth chargeDate, Charge charge) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        requireAllNonNull(index, chargeDate);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        this.chargeDate \u003d chargeDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        this.charge \u003d charge;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToCharge \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        double amountChargeable \u003d 0.0;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        // check current charge","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        if (this.charge.getCharge() \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_CHARGE_SET, ChargeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"        // calculate charge based on number of days in month","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        AttendanceHashMap map \u003d petToCharge.getAttendanceHashMap();","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        LocalDate day \u003d this.chargeDate.atDay(1);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        LocalDate firstDayNextMonth \u003d this.chargeDate.atEndOfMonth().plusDays(1);","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        while (day.isBefore(firstDayNextMonth)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"            boolean hasAttendance \u003d map.getAttendance(day).isPresent();","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"            if (hasAttendance) {","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"                AttendanceEntry entry \u003d map.getAttendance(day).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"                boolean isPresent \u003d entry.getIsPresent().orElse(false);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"                if (isPresent) {","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"                    amountChargeable +\u003d this.charge.getCharge();","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"            day \u003d day.plusDays(1);","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(generateSuccessMessage(petToCharge.getName(),","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"                amountChargeable, getMonthName(), chargeDate.getYear(), getAttendance(petToCharge)));","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the attendance the charge on the pet is based on","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"     * @return attendance as a String.","lastModifiedDate":"2022-04-06"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"    public String getAttendance(Pet pet) {","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        double amountChargeable \u003d 0.0;","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        String attendance \u003d String.format(MESSAGE_ATTENDANCE, pet.getName().toString());","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        AttendanceHashMap map \u003d pet.getAttendanceHashMap();","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        LocalDate day \u003d this.chargeDate.atDay(1);","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        LocalDate firstDayNextMonth \u003d this.chargeDate.atEndOfMonth().plusDays(1);","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        while (day.isBefore(firstDayNextMonth)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"            boolean hasAttendance \u003d map.getAttendance(day).isPresent();","lastModifiedDate":"2022-04-06"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"            AttendanceEntry entry \u003d map.getAttendance(day).orElse(null);","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"            boolean isPresent \u003d entry \u003d\u003d null ? false : entry.getIsPresent().orElse(false);","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"            if (hasAttendance \u0026\u0026 isPresent) {","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"                amountChargeable +\u003d this.charge.getCharge();","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"                attendance +\u003d \"\\n\" + entry.getAttendanceDate().format(formatter);","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"            day \u003d day.plusDays(1);","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"        if (amountChargeable \u003d\u003d 0) {","lastModifiedDate":"2022-04-06"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"            attendance \u003d String.format(MESSAGE_NO_ATTENDANCE, pet.getName().toString());","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        if (amountChargeable \u003d\u003d this.charge.getCharge()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"            attendance \u003d attendance.replace(\"are the days\", \"is the day\");","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"        return attendance;","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the month to charge the pet on","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"     * @return month as a String.","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"    public String getMonthName() {","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"        DateFormatSymbols symbol \u003d new DateFormatSymbols();","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"        return symbol.getMonths()[this.chargeDate.getMonthValue() - 1];","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"     * Generates a command execution success message","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"    private String generateSuccessMessage(Name petName, double amountChargeable, String month, int year,","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"                                          String attendance) {","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"        return String.format(MESSAGE_COMPUTE_CHARGE_SUCCESS, petName.toString(), amountChargeable, month, year)","lastModifiedDate":"2022-04-06"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"                + attendance;","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"        if (!(other instanceof ChargeCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand e \u003d (ChargeCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 chargeDate.equals(e.chargeDate)","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 charge.equals(e.charge);","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Tiffanylin21":145,"soloplxya":12}},{"path":"src/main/java/woofareyou/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" * Clears WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"WoofAreYou has been cleared!\";","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"        model.setPetBook(new PetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":3,"-":17,"tobihy":3}},{"path":"src/main/java/woofareyou/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":3,"-":17}},{"path":"src/main/java/woofareyou/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":1,"-":70}},{"path":"src/main/java/woofareyou/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":" * Deletes a pet identified using it\u0027s displayed index from WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"            + \": Deletes the pet identified by the index number used in the displayed pet list.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_DELETE_PET_SUCCESS \u003d \"Deleted Pet: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        model.deletePet(petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PET_SUCCESS, petToDelete));","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":7,"-":39}},{"path":"src/main/java/woofareyou/logic/commands/DietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":" * Adds diet details to a pet identified using its displayed index from WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"public class DietCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    public static final String COMMAND_WORD \u003d \"diet\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"            + \": Edits the diet of the pet identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"            + \"by the index number used in the last pet listing. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"            + \"Existing diet will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"            + \"d/ [diet]\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"            + \"d/ No seafood.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_ADD_DIET_SUCCESS \u003d \"Added diet to Pet: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_DELETE_DIET_SUCCESS \u003d \"Removed diet from Pet: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    private final Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * @param index of the pet in the filtered pets list to edit the diet","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     * @param diet of the pet to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    public DietCommand(Index index, Diet diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        requireAllNonNull(index, diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), diet, petToEdit.getAppointment(),","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAttendanceHashMap());","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        return new CommandResult(generateSuccessMessage(editedPet));","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"     * the diet is added to or removed from","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"    private String generateSuccessMessage(Pet petToEdit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        String message \u003d !diet.value.isEmpty() ? MESSAGE_ADD_DIET_SUCCESS : MESSAGE_DELETE_DIET_SUCCESS;","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"        return String.format(message, petToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"        if (!(other instanceof DietCommand)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        DietCommand e \u003d (DietCommand) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"                \u0026\u0026 diet.equals(e.diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Dineshraj555":4,"soloplxya":87,"tobihy":2}},{"path":"src/main/java/woofareyou/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.CollectionUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":" * Edits the details of an existing pet in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the pet identified \"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"            + \"by the index number used in the displayed pet list. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"            + \"[\" + PREFIX_OWNER_NAME + \"OWNERNAME] \"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"            + \"[\" + PREFIX_TAG + \"BREED] ... \\n\"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_OWNER_NAME + \"johndoe\";","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_EDIT_PET_SUCCESS \u003d \"Edited Pet: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"This pet already exists in the WoofAreYou.\";","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"    private final EditPetDescriptor editPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"     * @param index of the pet in the filtered pet list to edit","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"     * @param editPetDescriptor details to edit the pet with","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    public EditCommand(Index index, EditPetDescriptor editPetDescriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        this.editPetDescriptor \u003d new EditPetDescriptor(editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d createEditedPet(petToEdit, editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        if (!petToEdit.isSamePet(editedPet) \u0026\u0026 model.hasPet(editedPet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PET_SUCCESS, editedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates and returns a {@code Pet} with the details of {@code petToEdit}","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"     * edited with {@code editPetDescriptor}.","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"    private static Pet createEditedPet(Pet petToEdit, EditPetDescriptor editPetDescriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        assert petToEdit !\u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        Name updatedName \u003d editPetDescriptor.getName().orElse(petToEdit.getName());","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        OwnerName updatedOwnerName \u003d editPetDescriptor.getOwnerName().orElse(petToEdit.getOwnerName());","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"        Phone updatedPhone \u003d editPetDescriptor.getPhone().orElse(petToEdit.getPhone());","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        Address updatedAddress \u003d editPetDescriptor.getAddress().orElse(petToEdit.getAddress());","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPetDescriptor.getTags().orElse(petToEdit.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"        Diet updatedDiet \u003d editPetDescriptor.getDiet().orElse(petToEdit.getDiet());","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"        Appointment updatedAppointment \u003d editPetDescriptor.getAppointment().orElse(petToEdit.getAppointment());","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap sameAttendanceHashMap \u003d petToEdit.getAttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"        return new Pet(updatedName, updatedOwnerName, updatedPhone, updatedAddress,","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"                updatedTags, updatedDiet, updatedAppointment, sameAttendanceHashMap);","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 editPetDescriptor.equals(e.editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"     * Stores the details to edit the pet with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"     * corresponding field value of the pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"    public static class EditPetDescriptor {","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"        private OwnerName ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"        private Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"Dineshraj555"},"content":"        private Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        public EditPetDescriptor() {}","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"        public EditPetDescriptor(EditPetDescriptor toCopy) {","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"            setOwnerName(toCopy.ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"Dineshraj555"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"            setDiet(toCopy.diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"Dineshraj555"},"content":"            setAppointment(toCopy.appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"Dineshraj555"},"content":"            return CollectionUtil.isAnyNonNull(name, ownerName, phone, address, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"Tiffanylin21"},"content":"        public void setOwnerName(OwnerName ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"            this.ownerName \u003d ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"Tiffanylin21"},"content":"        public Optional\u003cOwnerName\u003e getOwnerName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"Tiffanylin21"},"content":"            return Optional.ofNullable(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"Dineshraj555"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"Dineshraj555"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"Dineshraj555"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"Dineshraj555"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"soloplxya"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"soloplxya"},"content":"         * Sets {@code diet} to this object\u0027s {@code diet}.","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"soloplxya"},"content":"         * A defensive copy of {@code diet} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"soloplxya"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"soloplxya"},"content":"        public void setDiet(Diet diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"soloplxya"},"content":"            this.diet \u003d diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"soloplxya"},"content":"        public Optional\u003cDiet\u003e getDiet() {","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"soloplxya"},"content":"            return Optional.ofNullable(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"Dineshraj555"},"content":"        /**","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"Dineshraj555"},"content":"         * Sets {@code appointment} to this object\u0027s {@code appointment}.","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"Dineshraj555"},"content":"         * A defensive copy of {@code appointment} is used internally.","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"Dineshraj555"},"content":"         */","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"Dineshraj555"},"content":"        public void setAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"Dineshraj555"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"Dineshraj555"},"content":"        public Optional\u003cAppointment\u003e getAppointment() {","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"Dineshraj555"},"content":"            return Optional.ofNullable(appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"Tiffanylin21"},"content":"            if (!(other instanceof EditPetDescriptor)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"Tiffanylin21"},"content":"            EditPetDescriptor e \u003d (EditPetDescriptor) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"Tiffanylin21"},"content":"                    \u0026\u0026 getOwnerName().equals(e.getOwnerName())","lastModifiedDate":"2022-03-08"},{"lineNumber":255,"author":{"gitId":"Dineshraj555"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Dineshraj555":32,"Tiffanylin21":40,"soloplxya":38,"-":148,"tobihy":2}},{"path":"src/main/java/woofareyou/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":" * Terminates WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting WoofAreYou as requested ...\";","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"soloplxya":3,"-":15,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.FilterUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.FilterByContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Filters all pets in WoofAreYou based on the field provided by the pet owner.","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":" * Filter word matching is case-insensitive.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":" * Fields can only be from a defined set.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all pets by \"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            + \"the specified field followed by filter/ search word (case-insensitive)\"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"            + \"PARAMETERS: FIELD [FILTER WORD] \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            + \"FIELD \u003d { \u0027byDate/\u0027, \u0027byOwner/\u0027, \u0027byTag/\u0027, byApp/ } \\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"            + \"Filter word following \u0027byDate/\u0027 or \u0027byApp/\u0027 can be \u0027today\u0027 or \u0027dd-MM-yyyy\u0027.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            + \"Example: \" + COMMAND_WORD + \" tag/\" + \"golden retriever\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            + \"Example: \" + COMMAND_WORD + \" byDate/today\";","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    public static final String INVALID_FILTER_FIELD \u003d \"The field you are trying to filter by is invalid!\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    private final FilterByContainsFilterWordPredicate predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    public FilterCommand(FilterByContainsFilterWordPredicate predicate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        model.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"                String.format(Messages.FILTER_MESSAGE_SUCCESS, model.getFilteredPetList().size(),","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"                        FilterUtil.successMessageMatch(predicate)));","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":46,"soloplxya":6}},{"path":"src/main/java/woofareyou/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" * Finds and lists all pets in WoofAreYou whose name contains any of the argument keywords.","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all pets whose names contain any of \"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            + \"Example: \" + COMMAND_WORD + \" PeePee Bagel Tofu\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"                String.format(Messages.MESSAGE_PETS_FOUND, model.getFilteredPetList().size()));","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Tiffanylin21":1,"tsumian":2,"soloplxya":5,"-":33,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":2,"-":19}},{"path":"src/main/java/woofareyou/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Lists all pets in WoofAreYou to the pet owner.","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all pets!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetListToFullPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":1,"soloplxya":3,"-":18,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/commands/PresentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DROPOFF;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PICKUP;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":" * Marks the attendance of an existing pet in WoofAreYou as present on a particular date.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public static final String COMMAND_WORD \u003d \"present\";","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks an attendance of a pet as present \"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"            + \"by the index number used in the displayed pet list. \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            + \"Includes the date, pick up time and drop off time (if any). \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DATE + \"DATE_OF_ATTENDANCE in dd-MM-yyyy \"","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"            + \"[\" + PREFIX_PICKUP + \"PICK_UP_TIME in HH:mm \"","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DROPOFF + \"DROP_OFF_TIME in HH:mm] \\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DATE + \"15-03-2022 \"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"            + PREFIX_PICKUP + \"09:15 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DROPOFF + \"18:00\";","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_PRESENT_ATTENDANCE_SUCCESS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        \"Successfully marked %1$s as present on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        + \"New entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_PRESENT_ATTENDANCE_FAILURE \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        \"Seems like you have already marked %1$s as present on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        + \"Existing entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    private final Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    private final PresentAttendanceDescriptor presentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * @param index of the pet in the filtered pets list to mark as present.","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     * @param presentAttendanceDescriptor the present attendance of the pet to be stored.","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceCommand(Index index, PresentAttendanceDescriptor presentAttendanceDescriptor) {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(index, presentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        this.presentAttendanceDescriptor \u003d presentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap targetAttendanceHashMap \u003d petToEdit.getAttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate \u003d presentAttendanceDescriptor.getAttendanceDate();","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        LocalTime pickUpTime \u003d presentAttendanceDescriptor.getPickUpTime().orElse(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        LocalTime dropOffTime \u003d presentAttendanceDescriptor.getDropOffTime().orElse(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        String attendanceDateString \u003d attendanceDate.format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry presentAttendance \u003d new PresentAttendanceEntry(attendanceDate,","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"                pickUpTime, dropOffTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        if (targetAttendanceHashMap.containsAttendance(presentAttendance)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(generateFailureMessage(petToEdit, attendanceDateString, presentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"        if (!PresentAttendanceEntry.isValidTimings(pickUpTime, dropOffTime)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(PresentAttendanceEntry.MESSAGE_TIME_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"        targetAttendanceHashMap.addAttendance(presentAttendance);","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), petToEdit.getDiet(),","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAppointment(), targetAttendanceHashMap);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"        return new CommandResult(generateSuccessMessage(editedPet, attendanceDateString, presentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution success message based on the","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    private String generateSuccessMessage(Pet petToEdit, String attendanceDate, PresentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"            MESSAGE_PRESENT_ATTENDANCE_SUCCESS, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution failure message based on the","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"    private String generateFailureMessage(Pet petToEdit, String attendanceDate, PresentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"            MESSAGE_PRESENT_ATTENDANCE_FAILURE, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"     * Stores the present attendance details to edit the pet with.","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"    public static class PresentAttendanceDescriptor {","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"        private static final String PICKUP_STRING \u003d \"Pick-up: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        private static final String DROPOFF_STRING \u003d \"Drop-off: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        private static final String NO_PICKUP_DROPOFF_STRING \u003d \"No pick-up and drop-off times specified.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"        private LocalDate attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        private LocalTime pickUpTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"        private LocalTime dropOffTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"        public PresentAttendanceDescriptor() {","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"        public PresentAttendanceDescriptor(PresentAttendanceDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"            setAttendanceDate(toCopy.attendanceDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"            setPickUpTime(toCopy.pickUpTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"            setDropOffTime(toCopy.dropOffTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"        public void setAttendanceDate(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"            this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        public void setPickUpTime(LocalTime pickUpTime) {","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"            this.pickUpTime \u003d pickUpTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"        public void setDropOffTime(LocalTime dropOffTime) {","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"            this.dropOffTime \u003d dropOffTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"        public LocalDate getAttendanceDate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"            return attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"        public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"            return Optional.ofNullable(pickUpTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"        public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"            return Optional.ofNullable(dropOffTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"        private boolean hasPickUpDropOff() {","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"            return getPickUpTime().isPresent() \u0026\u0026 getDropOffTime().isPresent();","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"        public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"            String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"            if (hasPickUpDropOff()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"                String pickUp \u003d String.format(PICKUP_STRING, pickUpTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"                String dropOff \u003d String.format(DROPOFF_STRING, dropOffTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"                return \"Present | \" + date + \" | \" + pickUp + \" | \" + dropOff;","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"            return \"Present | \" + date + \" | \" + NO_PICKUP_DROPOFF_STRING;","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"            if (!(other instanceof PresentAttendanceDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceDescriptor otherDescriptor \u003d (PresentAttendanceDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"            return attendanceDate.equals(otherDescriptor.attendanceDate)","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 getPickUpTime().equals(otherDescriptor.getPickUpTime())","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 getDropOffTime().equals(otherDescriptor.getDropOffTime());","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"tobihy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof PresentAttendanceCommand)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"tobihy"},"content":"        // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand e \u003d (PresentAttendanceCommand) other;","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"tobihy"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 presentAttendanceDescriptor.equals(e.presentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"Dineshraj555":1,"soloplxya":13,"tobihy":213}},{"path":"src/main/java/woofareyou/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Sorts pets in WoofAreYou based on field indicated by the pet owner.","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all pets by \";","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"            + \": Sorts the pet list by the input field specified.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"            + \"Note the input fields are case sensitive.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"            + \"The following are the 5 valid input fields:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"            + \"1. owner\\n 2. name\\n 3. app\\n 4. pick up\\n 5. drop off\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"            + \"Parameters: FIELD_TO_SORT_BY\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"            + \"Example: \" + COMMAND_WORD + \" owner\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    private final String field;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * @param field first letter of the column to sort the pet list by","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    public SortCommand(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        model.sortPetList(field);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        return new CommandResult(MESSAGE_SUCCESS + field);","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":9,"soloplxya":29}},{"path":"src/main/java/woofareyou/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Undoes pet owner\u0027s previous commands in WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid previous command!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"        + \": Undoes the previous command that the user executed.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_NO_UNDO \u003d \"No commands to undo!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     * Constructor for the UndoCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    public UndoCommand() {","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            ReadOnlyPetBook currentPetBook \u003d new PetBook(model.undo());","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            model.setPetBook(currentPetBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"            throw new CommandException(MESSAGE_NO_UNDO);","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"soloplxya":32,"tobihy":6}},{"path":"src/main/java/woofareyou/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands.exceptions;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.Command;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"soloplxya":2,"-":17}},{"path":"src/main/java/woofareyou/logic/parser/AbsentAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":" * Parses input arguments and creates a new AbsentAttendanceCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommandParser implements Parser\u003cAbsentAttendanceCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Parses the given {@code String} of arguments in the context of the AbsentAttendanceCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * and returns a AbsentAttendanceCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"                AbsentAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceDescriptor absentAttendanceDescriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceDescriptor();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        absentAttendanceDescriptor.setAttendanceDate(","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            ParserUtil.parseAttendanceDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        return new AbsentAttendanceCommand(index, absentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"soloplxya":7,"tobihy":45}},{"path":"src/main/java/woofareyou/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DIET;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_OWNER_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_OWNER_NAME, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE)","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        Diet diet \u003d new Diet(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DIET)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"            diet \u003d ParserUtil.parseDiet(argMultimap.getValue(PREFIX_DIET).get());","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        OwnerName ownerName \u003d ParserUtil.parseOwnerName(argMultimap.getValue(PREFIX_OWNER_NAME).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        Appointment appointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap attendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        Pet pet \u003d new Pet(name, ownerName, phone, address, tagList, diet, appointment, attendanceHashMap);","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        return new AddCommand(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Dineshraj555":4,"Tiffanylin21":2,"soloplxya":27,"-":38,"tobihy":3}},{"path":"src/main/java/woofareyou/logic/parser/AppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_CLEAR;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AppointmentCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":" * Parses input arguments and creates a new AppointmentCommand object.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"public class AppointmentCommandParser implements Parser\u003cAppointmentCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     * Parses the given {@code String} of arguments in the context of the AppointmentCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * and returns an AppointmentCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    public AppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"                PREFIX_APPOINTMENT_DATE_TIME, PREFIX_APPOINTMENT_LOCATION, PREFIX_CLEAR);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        Boolean isClearPresent \u003d argMultimap.getValue(PREFIX_CLEAR).isPresent();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        Boolean areDateTimeAndLocationPresent \u003d arePrefixesPresent(argMultimap,","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"                PREFIX_APPOINTMENT_DATE_TIME, PREFIX_APPOINTMENT_LOCATION);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        if (isClearPresent \u0026\u0026 !areDateTimeAndLocationPresent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"            Appointment clearAppointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"            return new AppointmentCommand(index, clearAppointment);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        } else if (areDateTimeAndLocationPresent \u0026\u0026 !isClearPresent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"            LocalDateTime dateTime \u003d ParserUtil.parseAppointmentDateTime(","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                    argMultimap.getValue(PREFIX_APPOINTMENT_DATE_TIME).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            String location \u003d argMultimap.getValue(PREFIX_APPOINTMENT_LOCATION).get();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"            Appointment appointment \u003d new Appointment(dateTime, location);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"            return new AppointmentCommand(index, appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"                    AppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":52,"Tiffanylin21":2,"soloplxya":9}},{"path":"src/main/java/woofareyou/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"soloplxya":1,"-":59}},{"path":"src/main/java/woofareyou/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"soloplxya":1,"-":147}},{"path":"src/main/java/woofareyou/logic/parser/ChargeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_NO_CHARGE_SET;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_CHARGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_CHARGE_MONTH_YEAR;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.YearMonth;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ChargeCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.charge.Charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"public class ChargeCommandParser implements Parser\u003cChargeCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses the given {@code String} of arguments in the context of the ChargeCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"     * and returns an ChargeCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    public ChargeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CHARGE_MONTH_YEAR, PREFIX_CHARGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        boolean isMonthYearMissing \u003d argMultimap.getValue(PREFIX_CHARGE_MONTH_YEAR).isEmpty();","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        boolean isChargeMissing \u003d argMultimap.getValue(PREFIX_CHARGE).isEmpty();","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        if (isMonthYearMissing \u0026\u0026 isChargeMissing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"                    ChargeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        } else if (isMonthYearMissing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Messages.MESSAGE_NO_CHARGE_MONTH_SET);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        } else if (isChargeMissing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(MESSAGE_NO_CHARGE_SET);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"            chargeDate \u003d ParserUtil.parseChargeDate(argMultimap.getValue(PREFIX_CHARGE_MONTH_YEAR).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"                    ChargeCommand.MESSAGE_INVALID_DATE_FORMAT), e);","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"            charge \u003d ParserUtil.parseCharge(argMultimap.getValue(PREFIX_CHARGE).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"                    Charge.MESSAGE_INVALID_CHARGE_FORMAT), e);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        Index index;","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        return new ChargeCommand(index, chargeDate, charge);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Tiffanylin21":58,"soloplxya":11}},{"path":"src/main/java/woofareyou/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_OWNER_NAME \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    public static final Prefix PREFIX_DIET \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public static final Prefix PREFIX_DROPOFF \u003d new Prefix(\"do/\");","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public static final Prefix PREFIX_PICKUP \u003d new Prefix(\"pu/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_APPOINTMENT_DATE_TIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_APPOINTMENT_LOCATION \u003d new Prefix(\"at/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_CLEAR \u003d new Prefix(\"clear\");","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Prefix PREFIX_CHARGE_MONTH_YEAR \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Prefix PREFIX_CHARGE \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_DATE \u003d new Prefix(\"byDate/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public static final Prefix PREFIX_FILTER_BY_TAG \u003d new Prefix(\"byTag/\");","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_OWNER_NAME \u003d new Prefix(\"byOwner/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_APPOINTMENT \u003d new Prefix(\"byApp/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Dineshraj555":4,"Tiffanylin21":2,"tsumian":3,"soloplxya":3,"-":13,"tobihy":3}},{"path":"src/main/java/woofareyou/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DeleteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"     * Regex to match charge format.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"     * eg: \"80.40\".","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALIDATION_REGEX \u003d \"[-?0-9]+\";","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"        if (!args.trim().matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tiffanylin21":10,"soloplxya":5,"-":20,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/parser/DietCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DIET;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DietCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":" * Parses input arguments and creates a new DietCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"public class DietCommandParser implements Parser\u003cDietCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * Parses the given {@code String} of arguments in the context of the DietCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     * and returns a DietCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    public DietCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"                PREFIX_DIET);","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        boolean isDietMissing \u003d argMultimap.getValue(PREFIX_DIET).isEmpty();","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        if (isDietMissing) {","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DietCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        Diet diet;","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"            diet \u003d ParserUtil.parseDiet(argMultimap.getValue(PREFIX_DIET).orElse(\"\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Diet.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        return new DietCommand(index, diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Tiffanylin21":12,"soloplxya":37,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_OWNER_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        if (args.isEmpty() || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"                    EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor editPetDescriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"            editPetDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        if (argMultimap.getValue(PREFIX_OWNER_NAME).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"            editPetDescriptor.setOwnerName(ParserUtil.parseOwnerName(argMultimap.getValue(PREFIX_OWNER_NAME).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"            editPetDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            editPetDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPetDescriptor::setTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        if (!editPetDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        Index index;","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"        return new EditCommand(index, editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Dineshraj555":3,"Tiffanylin21":17,"soloplxya":13,"-":52,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.FILTER_COMMAND_MORE_THAN_ONE_FIELD;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_FILTER_BY_APPOINTMENT;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_FILTER_BY_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_FILTER_BY_OWNER_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_FILTER_BY_TAG;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.FilterUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FilterCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        if (!FilterUtil.isValidFilterArg(trimmedArgs)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(FILTER_COMMAND_MORE_THAN_ONE_FIELD);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FILTER_BY_DATE, PREFIX_FILTER_BY_TAG,","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"                        PREFIX_FILTER_BY_OWNER_NAME, PREFIX_FILTER_BY_APPOINTMENT);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        String keyword \u003d ParserUtil.parseFilterArgs(trimmedArgs);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        if (argMultimap.getValue(PREFIX_FILTER_BY_DATE).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new DateContainsFilterDatePredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        } else if (argMultimap.getValue(PREFIX_FILTER_BY_TAG).isPresent()) {","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new TagContainsFilterWordPredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        } else if (argMultimap.getValue(PREFIX_FILTER_BY_OWNER_NAME).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new OwnerNameContainsFilterWordPredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } else if (argMultimap.getValue(PREFIX_FILTER_BY_APPOINTMENT).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new AppointmentContainsFilterWordPredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(FilterCommand.INVALID_FILTER_FIELD);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":44,"soloplxya":17}},{"path":"src/main/java/woofareyou/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FindCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"soloplxya":7,"-":25,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.Command;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"soloplxya":3,"-":13}},{"path":"src/main/java/woofareyou/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.YearMonth;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.StringUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ChargeCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.charge.Charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":" * Contains utility methods used for parsing strings in the various Parser classes.","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_INVALID_ATTENDANCE_DATE \u003d","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        \"Attendance date should be valid and in dd-MM-yyyy format!\";","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_INVALID_PICKUP_TIME \u003d","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        \"Pick up time should be valid and in HH:mm format!\";","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_INVALID_DROPOFF_TIME \u003d","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        \"Drop off time should be valid and in HH:mm format!\";","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_INVALID_NUMBER_OF_TAGS \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"            \"User should only be able to key in one tag!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"     * Parses a {@code String ownerName} into an {@code OwnerName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws ParseException if the given {@code ownerName} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"    public static OwnerName parseOwnerName(String ownerName) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"        String trimmedOwnerName \u003d ownerName.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        if (!OwnerName.isValidOwnerName(trimmedOwnerName)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        return new OwnerName(trimmedOwnerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses a {@code String diet} into a {@code Diet}.","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws ParseException if the given {@code diet} is invalid.","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"    public static Diet parseDiet(String diet) throws ParseException {","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(diet);","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"        String trimmedDiet \u003d diet.trim();","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        if (!Diet.isValidDiet(trimmedDiet)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Diet.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"        return new Diet(trimmedDiet);","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"        // Strictly only allow one tag.","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"        if (tags.size() \u003e 1) {","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(MESSAGE_INVALID_NUMBER_OF_TAGS);","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"Dineshraj555"},"content":"     * Parses a {@code String dateTime} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"soloplxya"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"Dineshraj555"},"content":"     * @param dateTime Date and time in String format of dd-MM-yyyy HH:mm.","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"Dineshraj555"},"content":"     * @return Parsed LocalDateTime representation of input.","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"Dineshraj555"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"Dineshraj555"},"content":"    public static LocalDateTime parseAppointmentDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"Dineshraj555"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"Dineshraj555"},"content":"        String[] dateTimeInfo \u003d trimmedDateTime.split(\" \");","lastModifiedDate":"2022-04-06"},{"lineNumber":178,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":179,"author":{"gitId":"Dineshraj555"},"content":"        if (dateTimeInfo.length !\u003d 2) {","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(\"Please ensure both Appointment date and time are entered in \"","lastModifiedDate":"2022-04-06"},{"lineNumber":181,"author":{"gitId":"Dineshraj555"},"content":"                    + \"dd-MM-yyyy HH:mm format.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":182,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":183,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":184,"author":{"gitId":"Dineshraj555"},"content":"        String dateInput \u003d dateTimeInfo[0];","lastModifiedDate":"2022-04-06"},{"lineNumber":185,"author":{"gitId":"Dineshraj555"},"content":"        String timeInput \u003d dateTimeInfo[1];","lastModifiedDate":"2022-04-06"},{"lineNumber":186,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2022-04-06"},{"lineNumber":187,"author":{"gitId":"Dineshraj555"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-06"},{"lineNumber":188,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-04-06"},{"lineNumber":189,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"Dineshraj555"},"content":"        LocalDate date;","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"Dineshraj555"},"content":"        LocalTime time;","lastModifiedDate":"2022-04-06"},{"lineNumber":192,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":193,"author":{"gitId":"Dineshraj555"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"Dineshraj555"},"content":"            date \u003d LocalDate.parse(dateInput, dateFormatter);","lastModifiedDate":"2022-04-06"},{"lineNumber":197,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(\"Appointment date is an invalid entry.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":199,"author":{"gitId":"Dineshraj555"},"content":"                    + \"Please ensure Appointment date is valid and entered in dd-MM-yyyy format.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":200,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":202,"author":{"gitId":"Dineshraj555"},"content":"        if (date.isBefore(today)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":203,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(\"Appointment date is over.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":204,"author":{"gitId":"Dineshraj555"},"content":"                    + \"Please enter a future appointment date is valid and entered in dd-MM-yyyy format.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":205,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":207,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-04-06"},{"lineNumber":208,"author":{"gitId":"Dineshraj555"},"content":"            time \u003d LocalTime.parse(timeInput, timeFormatter);","lastModifiedDate":"2022-04-06"},{"lineNumber":209,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-04-06"},{"lineNumber":210,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(\"Appointment time is an invalid entry.\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"Dineshraj555"},"content":"                    + \"Please ensure Appointment time is valid and entered in HH:mm format.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"Dineshraj555"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String attendanceDate} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local date.","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the given attendance date is invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"    public static LocalDate parseAttendanceDate(String attendanceDate) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"tsumian"},"content":"        requireNonNull(attendanceDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"        String trimmedAttendanceDate \u003d attendanceDate.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2022-04-04"},{"lineNumber":229,"author":{"gitId":"tobihy"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-04"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"            return LocalDate.parse(trimmedAttendanceDate, formatter);","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_INVALID_ATTENDANCE_DATE);","lastModifiedDate":"2022-04-04"},{"lineNumber":234,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"     * Checks if a keyword follows after the filter field. Returns keyword as String.","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"     * @param trimmedArgs Arguments to be parsed.","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"tsumian"},"content":"     * @return keyword as String.","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException Throws exception if keyword is absent.","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"tsumian"},"content":"    public static String parseFilterArgs(String trimmedArgs) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"        String[] argSplitter \u003d trimmedArgs.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":245,"author":{"gitId":"tsumian"},"content":"        if (argSplitter.length !\u003d 2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"You did not provide a keyword!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"        return argSplitter[1];","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":251,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String filterDate} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-25"},{"lineNumber":253,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local date.","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given filter date is invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"tsumian"},"content":"    public static LocalDate parseFilterDate(String filterDate) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"        requireNonNull(filterDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"        String trimmedAttendanceDate \u003d filterDate.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"            return LocalDate.parse(trimmedAttendanceDate, formatter);","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Filter date provided should be in dd-MM-yyyy format!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String date} into an {@code LocalDate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"     * @param date Date in String format of dd-MM-yyyy HH:mm.","lastModifiedDate":"2022-03-26"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"     * @return Parsed LocalDateTime representation of input.","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":277,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"    public static LocalDate parseFilterAppointmentDate(String date) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":280,"author":{"gitId":"tsumian"},"content":"            return parseFilterDate(date);","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"tsumian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Appointment date provided for filter should be entered in dd-MM-yyyy format!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":285,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":286,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String pickUpTime} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":288,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local time.","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given {@code Diet} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"tsumian"},"content":"    public static LocalTime parsePickUpTime(String pickUpTime) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":294,"author":{"gitId":"tsumian"},"content":"        requireNonNull(pickUpTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":295,"author":{"gitId":"tsumian"},"content":"        String trimmedPickUpTime \u003d pickUpTime.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":296,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-16"},{"lineNumber":297,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"tsumian"},"content":"            return LocalTime.parse(trimmedPickUpTime, formatter);","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_INVALID_PICKUP_TIME);","lastModifiedDate":"2022-04-04"},{"lineNumber":301,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String dropOffTime} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":308,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local time.","lastModifiedDate":"2022-03-16"},{"lineNumber":309,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given {@code Diet} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"tsumian"},"content":"    public static LocalTime parseDropOffTime(String dropOffTime) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":312,"author":{"gitId":"tsumian"},"content":"        requireNonNull(dropOffTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":313,"author":{"gitId":"tsumian"},"content":"        String trimmedDropOffTime \u003d dropOffTime.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":314,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-16"},{"lineNumber":315,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":316,"author":{"gitId":"tsumian"},"content":"            return LocalTime.parse(trimmedDropOffTime, formatter);","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_INVALID_DROPOFF_TIME);","lastModifiedDate":"2022-04-04"},{"lineNumber":319,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":321,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses a {@code String chargeDate} into an {@code ChargeDate}.","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"Tiffanylin21"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-29"},{"lineNumber":325,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"Tiffanylin21"},"content":"     * @return Parsed charge date.","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws ParseException if the given charge date is invalid.","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":329,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":330,"author":{"gitId":"Tiffanylin21"},"content":"    public static YearMonth parseChargeDate(String chargeDate) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":331,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(chargeDate);","lastModifiedDate":"2022-03-29"},{"lineNumber":332,"author":{"gitId":"Tiffanylin21"},"content":"        String trimmedChargeDate \u003d chargeDate.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":333,"author":{"gitId":"Tiffanylin21"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-yyyy\");","lastModifiedDate":"2022-03-31"},{"lineNumber":334,"author":{"gitId":"Tiffanylin21"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"Tiffanylin21"},"content":"            return YearMonth.parse(trimmedChargeDate, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":336,"author":{"gitId":"Tiffanylin21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(ChargeCommand.MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2022-03-31"},{"lineNumber":338,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":339,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":340,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":341,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":342,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses a {@code String charge} into a {@code Charge}.","lastModifiedDate":"2022-03-29"},{"lineNumber":343,"author":{"gitId":"Tiffanylin21"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-29"},{"lineNumber":344,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":345,"author":{"gitId":"Tiffanylin21"},"content":"     * @return Parsed charge.","lastModifiedDate":"2022-03-29"},{"lineNumber":346,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws ParseException if the given charge is invalid.","lastModifiedDate":"2022-03-29"},{"lineNumber":347,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":348,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":349,"author":{"gitId":"Tiffanylin21"},"content":"    public static Charge parseCharge(String charge) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(charge);","lastModifiedDate":"2022-03-29"},{"lineNumber":351,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"Tiffanylin21"},"content":"        String trimmedCharge \u003d charge.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":353,"author":{"gitId":"Tiffanylin21"},"content":"        if (!Charge.isValidCharge(trimmedCharge)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":354,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(Charge.MESSAGE_INVALID_CHARGE_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":355,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":356,"author":{"gitId":"Tiffanylin21"},"content":"        return new Charge(trimmedCharge);","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Dineshraj555":48,"Tiffanylin21":59,"tsumian":104,"soloplxya":29,"-":105,"tobihy":13}},{"path":"src/main/java/woofareyou/logic/parser/PetBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AppointmentCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ChargeCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ClearCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.Command;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DeleteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DietCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ExitCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FilterCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FindCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.HelpCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ListCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.SortCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.UndoCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"public class PetBookParser {","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        case DietCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"            return new DietCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"        case AppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"            return new AppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        case PresentAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"            return new PresentAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        case AbsentAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            return new AbsentAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        case ChargeCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"            return new ChargeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":2,"Tiffanylin21":3,"tsumian":4,"soloplxya":33,"-":58,"tobihy":6}},{"path":"src/main/java/woofareyou/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"soloplxya":1,"-":38}},{"path":"src/main/java/woofareyou/logic/parser/PresentAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_MISSING_DROPOFF_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_MISSING_PICKUP_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DROPOFF;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PICKUP;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":" * Parses input arguments and creates a new PresentAttendanceCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommandParser implements Parser\u003cPresentAttendanceCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"     * Parses the given {@code String} of arguments in the context of the PresentAttendanceCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     * and returns a PresentAttendanceCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_PICKUP, PREFIX_DROPOFF);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"                PresentAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        checkIfOnlyOneTimePresent(argMultimap);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceDescriptor presentAttendanceDescriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptor();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        attendanceDate \u003d ParserUtil.parseAttendanceDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        presentAttendanceDescriptor.setAttendanceDate(attendanceDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        if (argMultimap.getValue(PREFIX_PICKUP).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            presentAttendanceDescriptor.setPickUpTime(","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                ParserUtil.parsePickUpTime(argMultimap.getValue(PREFIX_PICKUP).get())","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            );","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        if (argMultimap.getValue(PREFIX_DROPOFF).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            presentAttendanceDescriptor.setDropOffTime(","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                ParserUtil.parseDropOffTime(argMultimap.getValue(PREFIX_DROPOFF).get())","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            );","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        return new PresentAttendanceCommand(index, presentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"     * Checks to see if only pick up or only drop off time for the command is present.","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     * @param argumentMultimap the arguments of the command.","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if one and only one out of the two timings are provided.","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    private void checkIfOnlyOneTimePresent(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        if (argumentMultimap.getValue(PREFIX_PICKUP).isEmpty()","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 argumentMultimap.getValue(PREFIX_DROPOFF).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_MISSING_PICKUP_TIME);","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        } else if (argumentMultimap.getValue(PREFIX_PICKUP).isPresent()","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 argumentMultimap.getValue(PREFIX_DROPOFF).isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_MISSING_DROPOFF_TIME);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"soloplxya":11,"tobihy":77}},{"path":"src/main/java/woofareyou/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.SortCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"        Boolean isValidSortParameter \u003d SortUtil.isValidSortParameter(trimmedArgs);","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"        if (!isValidSortParameter) {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        return new SortCommand(trimmedArgs);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Dineshraj555":2,"soloplxya":23,"tobihy":1}},{"path":"src/main/java/woofareyou/logic/parser/SortUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Utility class for Sort.","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" * Contains fields and methods for SortCommand and SortCommandParser classes.","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"public class SortUtil {","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /** Valid Sort Command Parameters. */","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_NAME \u003d \"name\";","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_OWNER \u003d \"owner\";","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_APPOINTMENT \u003d \"app\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_PICK_UP_TIME \u003d \"pick up\";","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_DROP_OFF_TIME \u003d \"drop off\";","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * Checks if input is a valid sort command parameter.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * Used in SortCommandParser.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * @param args Input argument.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @return True if input is valid sort parameter and false otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static Boolean isValidSortParameter(String args) {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        return args.equals(SORT_BY_APPOINTMENT)","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_OWNER)","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_NAME)","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_DROP_OFF_TIME)","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_PICK_UP_TIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":28,"soloplxya":1}},{"path":"src/main/java/woofareyou/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser.exceptions;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"soloplxya":2,"-":15}},{"path":"src/main/java/woofareyou/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    Predicate\u003cPet\u003e PREDICATE_SHOW_ALL_PETS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     * Returns the user prefs\u0027 pet book file path.","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    Path getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * Sets the user prefs\u0027 pet book file path.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    void setPetBookFilePath(Path petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     * Replaces pet book data with the data in {@code petBook}.","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    void setPetBook(ReadOnlyPetBook petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    /** Returns the PetBook */","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    ReadOnlyPetBook getPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     * Returns true if a pet with the same identity as {@code pet} exists in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    boolean hasPet(Pet pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"     * Deletes the given pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"     * The pet must exist in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    void deletePet(Pet target);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds the given pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * {@code pet} must not already exist in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    void addPet(Pet pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the given pet {@code target} with {@code editedPet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"     * {@code target} must exist in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"    void setPet(Pet target, Pet editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"    /** Returns the last used predicate to filter pet list by the model. */","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"    Predicate\u003cPet\u003e getLastUsedPredicate();","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    /** Returns an unmodifiable view of the filtered pet list */","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"    ObservableList\u003cPet\u003e getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"     * Updates the filter of the filtered pet list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    void updateFilteredPetList(Predicate\u003cPet\u003e predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"     * Updates the filter of the filtered pet list to filter by the last given {@code predicate}.","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"     * If no last used predicate is found, uses Predicate to display full Pet list.","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"    void updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"     * Updates filtered pet list to display the entire pet list.","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"    void updateFilteredPetListToFullPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"     * Sorts the pet list based on the field provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"    void sortPetList(String field);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"     * Restores the previous pet book state from its history.","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    ReadOnlyPetBook undo() throws Exception;","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Dineshraj555":13,"Tiffanylin21":12,"soloplxya":13,"-":59,"tobihy":15}},{"path":"src/main/java/woofareyou/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":" * Represents the in-memory model of the WoofAreYou data.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private final VersionedPetBook versionedPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private final PetBook petBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    private final FilteredList\u003cPet\u003e filteredPets;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    private Predicate\u003cPet\u003e lastUsedPredicate;","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Initializes a ModelManager with the given petBook and userPrefs.","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public ModelManager(ReadOnlyPetBook petBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(petBook, userPrefs);","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        logger.fine(\"Initializing with pet book: \" + petBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        this.petBook \u003d new PetBook(petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        this.versionedPetBook \u003d new VersionedPetBook(this.petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        filteredPets \u003d new FilteredList\u003c\u003e(this.petBook.getPetList());","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        this.lastUsedPredicate \u003d PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * Initializes a ModelManager with the given petBook, userPrefs and predicate.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    public ModelManager(ReadOnlyPetBook petBook, ReadOnlyUserPrefs userPrefs, Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(petBook, userPrefs);","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        logger.fine(\"Initializing with pet book: \" + petBook + \" and user prefs \" + userPrefs","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                + \" and predicate \" + predicate);","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        this.petBook \u003d new PetBook(petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        this.versionedPetBook \u003d new VersionedPetBook(this.petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        filteredPets \u003d new FilteredList\u003c\u003e(this.petBook.getPetList());","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        this.lastUsedPredicate \u003d predicate;","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        updateFilteredPetList(lastUsedPredicate);","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        this(new PetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    public Path getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"        return userPrefs.getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    public void setPetBookFilePath(Path petBookFilePath) {","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        requireNonNull(petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        userPrefs.setPetBookFilePath(petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PetBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    public void setPetBook(ReadOnlyPetBook petBook) {","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        this.petBook.resetData(petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"    public ReadOnlyPetBook getPetBook() {","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        return petBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        return petBook.hasPet(pet);","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"    public void deletePet(Pet target) {","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"        petBook.removePet(target);","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        this.versionedPetBook.commit(this.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"    public void addPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"        petBook.addPet(pet);","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        this.versionedPetBook.commit(this.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        updateFilteredPetList();","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"        requireAllNonNull(target, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"        petBook.setPet(target, editedPet);","lastModifiedDate":"2022-04-08"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        this.versionedPetBook.commit(this.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"    /** Method that sorts the pet list via the sortPets() command in petBook. **/","lastModifiedDate":"2022-04-08"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"    public void sortPetList(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        petBook.sortPets(field);","lastModifiedDate":"2022-04-08"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"        this.versionedPetBook.commit(this.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo Command accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"    public ReadOnlyPetBook undo() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"        return versionedPetBook.undo();","lastModifiedDate":"2022-04-08"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Pet List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":153,"author":{"gitId":"Dineshraj555"},"content":"    public Predicate\u003cPet\u003e getLastUsedPredicate() {","lastModifiedDate":"2022-04-05"},{"lineNumber":154,"author":{"gitId":"Dineshraj555"},"content":"        return lastUsedPredicate;","lastModifiedDate":"2022-04-05"},{"lineNumber":155,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":156,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns an unmodifiable view of the list of {@code Pet} backed by the internal list of","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"     * {@code versionedPetBook}","lastModifiedDate":"2022-04-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"        return filteredPets;","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"    public void updateFilteredPetList(Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"Dineshraj555"},"content":"        this.lastUsedPredicate \u003d predicate;","lastModifiedDate":"2022-04-04"},{"lineNumber":170,"author":{"gitId":"Dineshraj555"},"content":"        filteredPets.setPredicate(lastUsedPredicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":171,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":173,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":174,"author":{"gitId":"Dineshraj555"},"content":"    public void updateFilteredPetList() {","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"Dineshraj555"},"content":"        filteredPets.setPredicate(lastUsedPredicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":179,"author":{"gitId":"Dineshraj555"},"content":"    public void updateFilteredPetListToFullPetList() {","lastModifiedDate":"2022-04-04"},{"lineNumber":180,"author":{"gitId":"Dineshraj555"},"content":"        this.lastUsedPredicate \u003d PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-04-04"},{"lineNumber":181,"author":{"gitId":"Dineshraj555"},"content":"        filteredPets.setPredicate(lastUsedPredicate);","lastModifiedDate":"2022-04-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"        return petBook.equals(other.petBook)","lastModifiedDate":"2022-04-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 filteredPets.equals(other.filteredPets);","lastModifiedDate":"2022-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dineshraj555":27,"Tiffanylin21":13,"soloplxya":16,"-":106,"tobihy":41}},{"path":"src/main/java/woofareyou/model/PetBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.UniquePetList;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" * Wraps all data at the pet-book level","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":" * Duplicates are not allowed (by .isSamePet comparison)","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"public class PetBook implements ReadOnlyPetBook {","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    private final UniquePetList pets;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        pets \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public PetBook() {}","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"     * Creates an PetBook using the Pets in the {@code toBeCopied}","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    public PetBook(ReadOnlyPetBook toBeCopied) {","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the contents of the pet list with {@code pets}.","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code pets} must not contain duplicate pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets(List\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        this.pets.setPets(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     * Resets the existing data of this {@code PetBook} with {@code newData}.","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    public void resetData(ReadOnlyPetBook newData) {","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        setPets(newData.getPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    //// pet-level operations","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"     * Returns true if a pet with the same identity as {@code pet} exists in PetBook.","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.contains(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     * Adds a pet to the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"     * The pet must not already exist in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"    public void addPet(Pet p) {","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        pets.add(p);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"     * Sorts the list of pets in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"     * Currently, it will sort the list of pets according to the field provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"    public void sortPets(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        pets.sortPetList(field);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the given pet {@code target} in the list with {@code editedPet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"     * {@code target} must exist in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        pets.setPet(target, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"     * Removes {@code key} from this {@code PetBook}.","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"     * {@code key} must exist in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"    public void removePet(Pet key) {","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        pets.remove(key);","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.asUnmodifiableObservableList().size() + \" pets\";","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e getPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"                || (other instanceof PetBook // instanceof handles nulls","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 pets.equals(((PetBook) other).pets));","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":24,"soloplxya":12,"-":76,"tobihy":17}},{"path":"src/main/java/woofareyou/model/ReadOnlyPetBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":" * Unmodifiable view of PetBook","lastModifiedDate":"2022-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"public interface ReadOnlyPetBook {","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"     * Returns an unmodifiable view of the pets list.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"     * This list will not contain any duplicate pets.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    ObservableList\u003cPet\u003e getPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":1,"soloplxya":2,"-":10,"tobihy":4}},{"path":"src/main/java/woofareyou/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    Path getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"soloplxya":2,"-":13,"tobihy":1}},{"path":"src/main/java/woofareyou/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private Path petBookFilePath \u003d Paths.get(\"data\" , \"woofareyou.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        setPetBookFilePath(newUserPrefs.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    public Path getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        return petBookFilePath;","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    public void setPetBookFilePath(Path petBookFilePath) {","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        requireNonNull(petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        this.petBookFilePath \u003d petBookFilePath;","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 petBookFilePath.equals(o.petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        return Objects.hash(guiSettings, petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        sb.append(\"\\nLocal data file location : \" + petBookFilePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":2,"-":75,"tobihy":10}},{"path":"src/main/java/woofareyou/model/VersionedPetBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.logging.Level.INFO;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"public class VersionedPetBook extends PetBook {","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"    private static final ArrayList\u003cReadOnlyPetBook\u003e petBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    private Integer currentStatePointer \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    private final Logger logger \u003d Logger.getLogger(VersionedPetBook.class.getName());","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public VersionedPetBook() {}","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     * Creates a VersionedPetBook using the Pets in the {@code toBeCopied}","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    public VersionedPetBook(ReadOnlyPetBook toBeCopied) {","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"        this();","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"        petBookStateList.add(new PetBook(toBeCopied));","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     * Commits a new petBook state to the petBookStateList","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     * @param currentPetBookState current pet book state","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    public void commit(ReadOnlyPetBook currentPetBookState) {","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        petBookStateList.add(new PetBook(currentPetBookState));","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        this.currentStatePointer \u003d petBookStateList.size() - 1;","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"     * Shifts the current state pointer to the left.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"     * @return The previous state of the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    public ReadOnlyPetBook undo() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        if (petBookStateList.size() \u003c\u003d 0) {","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            throw new Exception(\"No commands to undo\");","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        logger.log(INFO, String.valueOf(petBookStateList.size()));","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        this.currentStatePointer -\u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        petBookStateList.remove(this.currentStatePointer + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        return petBookStateList.get(this.currentStatePointer);","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"soloplxya":30,"tobihy":18}},{"path":"src/main/java/woofareyou/model/attendance/AbsentAttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Represents an absent attendance entry of a pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" *  * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceEntry extends AttendanceEntry {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    private final Boolean isPresent;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     * Constructs a {@code AbsentAttendanceEntry}.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     * @param entryDate A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceEntry(LocalDate entryDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"        super(entryDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d false;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cBoolean\u003e getIsPresent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(isPresent);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public boolean hasTransportArrangement() {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof AbsentAttendanceEntry)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry otherAttendanceEntry \u003d (AbsentAttendanceEntry) other;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        return this.getAttendanceDate().equals(otherAttendanceEntry.getAttendanceDate())","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 this.getIsPresent().equals(otherAttendanceEntry.getIsPresent()); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        return \"Absent | \" + date;","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":2,"tobihy":63}},{"path":"src/main/java/woofareyou/model/attendance/AttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Represents an attendance entry of a pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" *  * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public abstract class AttendanceEntry {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_INVALID_ISPRESENT \u003d \"The isPresent field is invalid!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private final LocalDate attendanceDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Constructs an {@code AttendanceEntry}.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public AttendanceEntry(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Retrieves the date of the attendance entry.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @return A {@code LocalDate} object representing the date of the attendance entry.","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public LocalDate getAttendanceDate() {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        return attendanceDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     * Retrieves the attendance status of the pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     * @return An optional containing the attendance status of the pet.","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    public abstract Optional\u003cBoolean\u003e getIsPresent();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * Retrieves the pick-up time of the pet, if any.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"     * @return An {@code Optional\u003cLocalTime\u003e} object that contains the pick-up time.","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public abstract Optional\u003cLocalTime\u003e getPickUpTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"     * Retrieves the drop-off time of the pet, if any.","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"     * @return An {@code Optional\u003cLocalTime\u003e} object that contains the drop-off time.","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    public abstract Optional\u003cLocalTime\u003e getDropOffTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     * Checks if the attendance entry contains a transport arrangement.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     * @return true if the attendance entry contains a transport arrangement with pick-up and","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"     * drop-off times, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public abstract boolean hasTransportArrangement();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        return attendanceDate.hashCode();","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Dineshraj555":5,"soloplxya":1,"tobihy":63}},{"path":"src/main/java/woofareyou/model/attendance/MissingAttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":" * Represents a missing attendance entry of a pet.","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":" * * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"public class MissingAttendanceEntry extends AttendanceEntry {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public MissingAttendanceEntry(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"        super(attendanceDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cBoolean\u003e getIsPresent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public boolean hasTransportArrangement() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof MissingAttendanceEntry)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        MissingAttendanceEntry otherAttendanceEntry \u003d (MissingAttendanceEntry) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        return super.getAttendanceDate().equals(otherAttendanceEntry.getAttendanceDate());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"soloplxya":1,"tobihy":48}},{"path":"src/main/java/woofareyou/model/attendance/PresentAttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Represents a present attendance entry of a pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" * * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceEntry extends AttendanceEntry {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_TIME_CONSTRAINTS \u003d \"The pick-up time should be before the drop-off time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    private static final String PICKUP_STRING \u003d \"Pick-up: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    private static final String DROPOFF_STRING \u003d \"Drop-off: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private static final String NO_PICKUP_DROPOFF_STRING \u003d \"No pick-up and drop-off times specified.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    private final Boolean isPresent;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    private final LocalTime pickUpTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    private final LocalTime dropOffTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     * Constructs a {@code PresentAttendanceEntry}.","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     * @param entryDate   A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     * @param pickUpTime  A valid pick-up time.","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * @param dropOffTime A valid drop-off time.","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceEntry(LocalDate entryDate, LocalTime pickUpTime, LocalTime dropOffTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        super(entryDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        this.pickUpTime \u003d pickUpTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        this.dropOffTime \u003d dropOffTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cBoolean\u003e getIsPresent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(isPresent);","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(pickUpTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(dropOffTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * Checks if both pick-up and drop-off times have been specified.","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     * @return true if both specified, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public boolean hasTransportArrangement() {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        return getPickUpTime().isPresent() \u0026\u0026 getDropOffTime().isPresent();","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"     * Checks to see if the timings in the entry are valid.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"     * A valid timing is when either both timings are null,","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     * or both timings are present, with the pick-up time before the drop-off time.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * @return true if the timings are valid, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    public static boolean isValidTimings(LocalTime pickUpTime, LocalTime dropOffTime) {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalPickUp \u003d Optional.ofNullable(pickUpTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalDropOff \u003d Optional.ofNullable(dropOffTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        if (optionalPickUp.isPresent() ^ optionalDropOff.isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        if (optionalPickUp.isEmpty() \u0026\u0026 optionalDropOff.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        return optionalPickUp.get().isBefore(optionalDropOff.get());","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof PresentAttendanceEntry)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry otherAttendanceEntry \u003d (PresentAttendanceEntry) other;","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        return super.getAttendanceDate().equals(otherAttendanceEntry.getAttendanceDate())","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 isPresent.equals(otherAttendanceEntry.isPresent)","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 getPickUpTime().equals(otherAttendanceEntry.getPickUpTime())","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 getDropOffTime().equals(otherAttendanceEntry.getDropOffTime()); // state checks","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        if (hasTransportArrangement()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"            String pickUp \u003d String.format(PICKUP_STRING, pickUpTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"            String dropOff \u003d String.format(DROPOFF_STRING, dropOffTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"            return \"Present | \" + date + \" | \" + pickUp + \" | \" + dropOff;","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        return \"Present | \" + date + \" | \" + NO_PICKUP_DROPOFF_STRING;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":2,"tobihy":112}},{"path":"src/main/java/woofareyou/model/charge/Charge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":" * Represents the daily amount chargeable of a Pet in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"public class Charge {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_INVALID_CHARGE_FORMAT \u003d \"Charge should be formatted as [number] or \"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"             + \"number1[.number2] where number2 can be up to 2 decimal places! \\ne.g. 200 or 200.55\";","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"     * Regex to match charge format.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"     * eg: \"80.40\".","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"            \"\\\\d+[.]?\\\\d{0,2}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    private final Double perDayCharge;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs an {@code Charge}.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     * @param charge A valid per day charge.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    public Charge(String charge) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(charge);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        this.perDayCharge \u003d Double.parseDouble(charge);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the value of a valid charge per day","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"     * @return perDayValue as Double.","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    public Double getCharge() {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        return this.perDayCharge;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if a given string is a valid charge","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"     * @param charge The input string.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * @return True if input matches VALIDATION_REGEX, False otherwise.","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    public static boolean isValidCharge(String charge) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        return charge.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"    public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        return String.valueOf(perDayCharge);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"                || (other instanceof Charge","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 perDayCharge.equals(((Charge) other).getCharge()));","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        return perDayCharge.hashCode();","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Tiffanylin21":64,"soloplxya":1,"tobihy":1}},{"path":"src/main/java/woofareyou/model/filter/AppointmentContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.ParserUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"public class AppointmentContainsFilterWordPredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    private final LocalDate appointmentDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Constructor class. Checks if filter word is \u0027today\u0027. If so, sets {@code appointmentDate} to a","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * {@code LocalDate} of today\u0027s date. Else, parse filter word to be a {@code LocalDate}.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * @param filterWord String keyword provided after filter field.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException Throws exception if keyword (date) is not in the correct format.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    public AppointmentContainsFilterWordPredicate(String filterWord) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        if (filterWord.equals(\"today\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            this.appointmentDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            this.appointmentDate \u003d ParserUtil.parseFilterAppointmentDate(filterWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        Appointment petAppointment \u003d pet.getAppointment();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        LocalDateTime petAppointmentDateTime \u003d petAppointment.getDateTime();","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        if (petAppointmentDateTime !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            LocalDate petAppointmentDate \u003d petAppointmentDateTime.toLocalDate();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            return petAppointmentDate.equals(this.appointmentDate);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        return (other instanceof AppointmentContainsFilterWordPredicate// instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 appointmentDate.equals(((AppointmentContainsFilterWordPredicate) other)","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                .appointmentDate)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":45,"soloplxya":5}},{"path":"src/main/java/woofareyou/model/filter/DateContainsFilterDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.ParserUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":" * Tests that a {@code Pet}\u0027s {@code AttendanceEntry} matches the filter date given.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"public class DateContainsFilterDatePredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private final LocalDate filterDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     * Constructor for class","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * @param filterWord Date string provided as filter word","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException Throws exception if date provided is not of correct format","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public DateContainsFilterDatePredicate(String filterWord) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        if (filterWord.equals(\"today\")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            this.filterDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            this.filterDate \u003d ParserUtil.parseFilterDate(filterWord);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        AttendanceHashMap petAttendance \u003d pet.getAttendanceHashMap();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        Optional\u003cAttendanceEntry\u003e checkAttendanceEntry \u003d petAttendance.getAttendance(filterDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        boolean petHasEntry \u003d checkAttendanceEntry.isPresent();","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        if (petHasEntry) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            AttendanceEntry attendanceEntry \u003d checkAttendanceEntry.get();","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"            Optional\u003cBoolean\u003e hasMarkedAttendance \u003d attendanceEntry.getIsPresent();","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            if (hasMarkedAttendance.isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"                return hasMarkedAttendance.get();","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        return (other instanceof DateContainsFilterDatePredicate) // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 getFilterWord().equals(((DateContainsFilterDatePredicate) other).getFilterWord()); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tsumian":53,"soloplxya":6}},{"path":"src/main/java/woofareyou/model/filter/FilterByContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"public abstract class FilterByContainsFilterWordPredicate implements Predicate\u003cPet\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    private final String filterWord;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    public FilterByContainsFilterWordPredicate(String filterWord) {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        this.filterWord \u003d filterWord;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Accessor method returns a {@code String} representing the filter word.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * @return Filter word String.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public String getFilterWord() {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        return this.filterWord;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":19,"soloplxya":2}},{"path":"src/main/java/woofareyou/model/filter/OwnerNameContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.StringUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"public class OwnerNameContainsFilterWordPredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    public OwnerNameContainsFilterWordPredicate(String filterWord) {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        return StringUtil.tagOrNameContainsWordsIgnoreCase(pet.getOwnerName().toString(), getFilterWord());","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        return (other instanceof OwnerNameContainsFilterWordPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 getFilterWord().equals(((OwnerNameContainsFilterWordPredicate) other)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"                .getFilterWord())); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":24,"soloplxya":3}},{"path":"src/main/java/woofareyou/model/filter/TagContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.FilterUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"public class TagContainsFilterWordPredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    public TagContainsFilterWordPredicate(String filterWord) {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        return FilterUtil.tagContainFilterWord(pet.getTags(), getFilterWord());","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        return (other instanceof TagContainsFilterWordPredicate// instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 getFilterWord().equals(((TagContainsFilterWordPredicate) other).getFilterWord())); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":22,"soloplxya":3}},{"path":"src/main/java/woofareyou/model/pet/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AppUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s address in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        AppUtil.checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        value \u003d address.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":2,"soloplxya":7,"-":52}},{"path":"src/main/java/woofareyou/model/pet/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" * Represents a Pet\u0027s upcoming appointment in the pet book.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    /** Regex to match value attribute. eg: \"Mar-04-2022 09:30 AM at NUS VET\".*/","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"            \"\\\\w{3}-\\\\d{2}-\\\\d{4} \\\\d{2}:\\\\d{2} \\\\w{2} \\\\w+(\\\\s\\\\w+){1,}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    /** Date and time of appointment in \"dd-MM-yyyy HH:mm\" format.*/","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    /** Location of appointment.*/","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    public final String location;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * Appointment details comprising information from dateTime and location.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * Format of value: dateTime + \" at \" + location. To be reflected in GUI.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    public final String value;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * Constructs an {@code Appointment} from the user input details.","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * @param dateTime in LocalDateTime format.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     * @param location of appointment.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment(LocalDateTime dateTime, String location) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        requireAllNonNull(dateTime, location);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        this.value \u003d formatDateTime(dateTime) + \" at \" + location;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * Constructs an {@code Appointment} from the retrieved stored details.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     * @param value String representation of appointment details retrieved from storage.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment(String value) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        if (value.equals(\"\")) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"            this.location \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"            this.dateTime \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            String[] appointmentDetails \u003d value.split(\" at \");","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            String retrievedDateTime \u003d appointmentDetails[0];","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"            String retrievedLocation \u003d appointmentDetails[1];","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            DateTimeFormatter formatOfRetrievedDateTime \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy h:mm a\")","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                .withLocale(Locale.ENGLISH);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            this.location \u003d retrievedLocation;","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            this.dateTime \u003d LocalDateTime.parse(retrievedDateTime, formatOfRetrievedDateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     * Constructs an {@code Appointment} for empty appointment.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"     * To be used when appointment field is empty or when appointment is cleared.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment() {","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"        this.value \u003d \"\";","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"        this.dateTime \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"        this.location \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"        return this.dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"    public String getLocation() {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"        return this.location;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"     * Formats the LocalDateTime to String representation in format of \"MMM-dd-yyyy h:mm a\"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"     * to be reflected in GUI and for storage.","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"     * @param dateTime in LocalDateTime.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of dateTime in \"MMM-dd-yyyy h:mm a\".","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy h:mm a\")","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            .withLocale(Locale.ENGLISH);","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        String formattedDateTime \u003d dateTime.format(formatter);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        return formattedDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"     * Returns true if a given string is a valid appointment.","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"     * @param test The input string.","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"     * @return True if input matches VALIDATION_REGEX, False otherwise.","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"    public static boolean isValidAppointment(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"     * Compares appointment objects based on their dateTime attribute.","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"     * @param other appointment to be compared with.","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"    public int compareTo(Appointment other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"        if (this.dateTime \u003d\u003d null \u0026\u0026 other.getDateTime() \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"        } else if (this.dateTime !\u003d null \u0026\u0026 other.getDateTime() !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"            return this.dateTime.compareTo(other.getDateTime());","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"        } else if ((this.dateTime \u003d\u003d null \u0026\u0026 other.getDateTime() !\u003d null)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"                || (other instanceof Appointment","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 value.equals(((Appointment) other).value));","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":131,"soloplxya":2,"tobihy":6}},{"path":"src/main/java/woofareyou/model/pet/AttendanceHashMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s attendance history in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":" * Guarantees: is always valid.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"public class AttendanceHashMap {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private final HashMap\u003cLocalDate, AttendanceEntry\u003e attendanceHashMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Constructs an {@code AttendanceHashMap}.","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     * @param attendanceHashMap A valid AttendanceHashMap.","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap(HashMap\u003cLocalDate, AttendanceEntry\u003e attendanceHashMap) {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceHashMap);","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        this.attendanceHashMap \u003d new HashMap\u003c\u003e(attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * Constructs an empty {@code AttendanceHashMap}.","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap() {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        this.attendanceHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     * Checks if there is already an identical attendance entry in the table.","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the incoming attendance entry.","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     * @return true if entry with same attendance already exists, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public boolean containsAttendance(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        LocalDate dateKey \u003d attendanceEntry.getAttendanceDate();","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        if (!(attendanceHashMap.containsKey(dateKey))) {","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        AttendanceEntry existingAttendanceEntry \u003d attendanceHashMap.get(dateKey);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        return existingAttendanceEntry.equals(attendanceEntry);","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * Checks if the attendance hash map is empty.","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     * @return true if attendance hash map is empty, false otherwise.","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.isEmpty();","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"     * Adds an attendance entry into the current attendance hash map.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the attendance to be stored.","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    public void addAttendance(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.put(attendanceEntry.getAttendanceDate(), attendanceEntry);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"     * Retrieves the attendance entry at the specified date.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate the specified date.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"     * @return an {@code Optional} object containing the attendance entry, if any.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cAttendanceEntry\u003e getAttendance(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(attendanceHashMap.get(attendanceDate));","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"     * Returns the attendance hash map in collection form.","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"     * @return a collection containing date-attendance pairs.","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    public Collection\u003cAttendanceEntry\u003e toCollection() {","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.values();","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"     * Returns a copy of the current attendance hash map.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"     * @return a copy of the {@code AttendanceHashMap}.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap getCopy() {","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        return new AttendanceHashMap(","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            new HashMap\u003c\u003e(","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"                this.attendanceHashMap)","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"                || (other instanceof AttendanceHashMap","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 attendanceHashMap.equals(((AttendanceHashMap) other).attendanceHashMap));","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.hashCode();","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"soloplxya":3,"tobihy":110}},{"path":"src/main/java/woofareyou/model/pet/Diet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s diet in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class Diet {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    /*","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"     * Diet should not contain special characters.","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    */","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 ]*$\";","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"            \"Diet description can be empty but should only contain alphanumeric characters or spaces.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public final String value;","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Constructs a {@code Diet}.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     * @param diet A pet\u0027s diet.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public Diet(String diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        checkArgument(isValidDiet(diet), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        value \u003d diet.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     * Returns true if a given string is a valid diet description.","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    public static boolean isValidDiet(String test) {","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        return value;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"                || (other instanceof Diet","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"                \u0026\u0026 value.equals(((Diet) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Tiffanylin21":10,"soloplxya":43}},{"path":"src/main/java/woofareyou/model/pet/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s name in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"            \"Names should only contain alphabets and spaces, and should not be blank\";","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z]+[A-Za-z ]*$\";","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        fullName \u003d name.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName));","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"     * Compare two {@code name} in lexicographical order","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     * @param other {@code name} to be compared with","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"     * @return an Integer","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        return Integer.compare(this.fullName.compareToIgnoreCase(other.fullName), 0);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"Tiffanylin21":2,"soloplxya":16,"-":51}},{"path":"src/main/java/woofareyou/model/pet/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.StringUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":" * Tests that a {@code Pet}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPet\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(pet.getName().fullName, keyword));","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":4,"soloplxya":2,"-":25}},{"path":"src/main/java/woofareyou/model/pet/OwnerName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s owner name in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOwnerName(String)}","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class OwnerName implements Comparable\u003cOwnerName\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"            \"Owner names should only contain alphabets and spaces, and should not be blank\";","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    /*","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z]+[A-Za-z ]*$\";","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    public final String value;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs an {@code OwnerName}.","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * @param ownerName A valid ownerName.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public OwnerName(String ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        checkArgument(isValidOwnerName(ownerName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        value \u003d ownerName.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns if a given string is a valid ownerName.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static boolean isValidOwnerName(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        return value;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"                || (other instanceof OwnerName // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 value.equals(((OwnerName) other).value)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"     * Compare two {@code ownerName} in lexicographical order","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     * @param other {@code ownerName} to be compared with","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"     * @return an Integer","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    public int compareTo(OwnerName other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        return Integer.compare(this.value.compareToIgnoreCase(other.value), 0);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":2,"Tiffanylin21":48,"soloplxya":19}},{"path":"src/main/java/woofareyou/model/pet/Pet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet in WoofAreYou.","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"public class Pet {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    private final OwnerName ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    private final Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    private final Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    private final AttendanceHashMap attendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    public Pet(Name name, OwnerName ownerName, Phone phone, Address address,","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"               Set\u003cTag\u003e tags, Diet diet, Appointment appointment, AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        requireAllNonNull(name, ownerName, phone, address, tags, appointment, attendanceHashMap);","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        this.ownerName \u003d ownerName;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        this.attendanceHashMap \u003d attendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"    public OwnerName getOwnerName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        return ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        return phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"    public Diet getDiet() {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        return diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"        return appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap getAttendanceHashMap() {","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.getCopy();","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"     * Returns true if both pets have the same name, owner\u0027s name, contact number and tags.","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean isSamePet(Pet otherPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        if (otherPet \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        return otherPet !\u003d null","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 otherPet.getName().equals(getName())","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 otherPet.getOwnerName().equals(getOwnerName())","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 otherPet.getPhone().equals(getPhone())","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 otherPet.getAddress().equals(getAddress());","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"     * Returns true if both pets have the same identity and data fields.","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"     * This defines a stronger notion of equality between two pets.","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        if (!(other instanceof Pet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        Pet otherPet \u003d (Pet) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        return otherPet.getName().equals(getName())","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 otherPet.getOwnerName().equals(getOwnerName())","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 otherPet.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 otherPet.getAddress().equals(getAddress());","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"        return Objects.hash(name, ownerName, phone, address, tags, diet, appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"                .append(\"; OwnerName: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"                .append(getOwnerName())","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"                .append(\"; Diet: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"                .append(getDiet())","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"                .append(\"; Appointment: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"                .append(getAppointment());","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"            builder.append(\"; Tag: \");","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":18,"Tiffanylin21":13,"soloplxya":13,"-":78,"tobihy":26}},{"path":"src/main/java/woofareyou/model/pet/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AppUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s phone number in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"            \"Phone number should start with 6,8 or 9. It should be 8 digits long. Country code is optional.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:\\\\+65)?[689][0-9]{7}$\";","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soloplxya":8,"-":48}},{"path":"src/main/java/woofareyou/model/pet/UniquePetList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.SortUtil.SORT_BY_APPOINTMENT;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.SortUtil.SORT_BY_DROP_OFF_TIME;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.SortUtil.SORT_BY_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.SortUtil.SORT_BY_OWNER;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.SortUtil.SORT_BY_PICK_UP_TIME;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.comparator.PetDropOffTimeComparator;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.comparator.PetPickUpTimeComparator;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.exceptions.PetNotFoundException;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":" * A list of pets that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":" * A pet is considered unique by comparing using {@code Pet#isSamePet(Pet)}. As such, adding and updating of","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":" * pets uses Pet#isSamePet(Pet) for equality so as to ensure that the pet being added or updated is","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":" * unique in terms of identity in the UniquePetList. However, the removal of a pet uses Pet#equals(Object) so","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":" * as to ensure that the pet with exactly the same fields will be removed.","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":" *","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":" *","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":" * @see Pet#isSamePet(Pet)","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"public class UniquePetList implements Iterable\u003cPet\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private final ObservableList\u003cPet\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    private final ObservableList\u003cPet\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if the list contains an equivalent pet as the given argument.","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean contains(Pet toCheck) {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"     * Sort list of pets by field using the comparators in the respective fields.","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * As of now, the field can be name, owner and appointment date.","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     * @param field of the pet to be sorted by.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    public void sortPetList(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        switch (field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        case SORT_BY_NAME:","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"            Comparator\u003cPet\u003e petNameComparator \u003d Comparator.comparing(Pet::getName);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"            FXCollections.sort(internalList, petNameComparator);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"        case SORT_BY_OWNER:","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            Comparator\u003cPet\u003e petOwnerNameComparator \u003d Comparator.comparing(Pet::getOwnerName);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, petOwnerNameComparator);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        case SORT_BY_APPOINTMENT:","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"            Comparator\u003cPet\u003e petAppointmentComparator \u003d Comparator.comparing(Pet::getAppointment);","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, petAppointmentComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        case SORT_BY_DROP_OFF_TIME:","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, new PetDropOffTimeComparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        case SORT_BY_PICK_UP_TIME:","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, new PetPickUpTimeComparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        default:","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"            assert false;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a pet to the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet must not already exist in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"    public void add(Pet toAdd) {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the pet {@code target} in the list with {@code editedPet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"        requireAllNonNull(target, editedPet);","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"            throw new PetNotFoundException();","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        if (!target.isSamePet(editedPet) \u0026\u0026 contains(editedPet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.set(index, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"     * Removes the equivalent pet from the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet must exist in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"    public void remove(Pet toRemove) {","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"            throw new PetNotFoundException();","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets(UniquePetList replacement) {","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the contents of this list with {@code pets}.","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code pets} must not contain duplicate pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets(List\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"        requireAllNonNull(pets);","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"        if (!petsAreUnique(pets)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.setAll(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"    public Iterator\u003cPet\u003e iterator() {","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"                || (other instanceof UniquePetList // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 internalList.equals(((UniquePetList) other).internalList));","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if {@code pets} contains only unique pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"    private boolean petsAreUnique(List\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"        for (int i \u003d 0; i \u003c pets.size() - 1; i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"            for (int j \u003d i + 1; j \u003c pets.size(); j++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"                if (pets.get(i).isSamePet(pets.get(j))) {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"                    return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"Tiffanylin21"},"content":"        return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":13,"Tiffanylin21":126,"soloplxya":32,"tobihy":4}},{"path":"src/main/java/woofareyou/model/pet/comparator/PetDropOffTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet.comparator;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":" * Comparator class to compare pets based on pet\u0027s Drop Off Time.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"public class PetDropOffTimeComparator implements Comparator\u003cPet\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Compares pet objects based on their drop off time attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param first Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * @param second Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    public int compare(Pet first, Pet second) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e firstAttendanceEntry \u003d first.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e secondAttendanceEntry \u003d second.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        if (firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            return compareAttendanceEntries(firstAttendanceEntry.get(), secondAttendanceEntry.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        } else if (firstAttendanceEntry.isPresent() \u0026\u0026 !secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * Compares AttendanceEntries of pets based on their drop off time. Used in compare method.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @param firstPetAttendanceEntry AttendanceEntry of first pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @param secondPetAttendanceEntry AttendanceEntry of second pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    private int compareAttendanceEntries(AttendanceEntry firstPetAttendanceEntry,","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"                                         AttendanceEntry secondPetAttendanceEntry) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        boolean isFirstPetDropOffTimePresent \u003d firstPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        boolean isSecondPetDropOffTimePresent \u003d secondPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        if (isFirstPetDropOffTimePresent \u0026\u0026 isSecondPetDropOffTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime firstDropOffTime \u003d firstPetAttendanceEntry.getDropOffTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime secondDropOffTime \u003d secondPetAttendanceEntry.getDropOffTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            return firstDropOffTime.compareTo(secondDropOffTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        } else if (isFirstPetDropOffTimePresent \u0026\u0026 !isSecondPetDropOffTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!isFirstPetDropOffTimePresent \u0026\u0026 isSecondPetDropOffTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":61,"soloplxya":3}},{"path":"src/main/java/woofareyou/model/pet/comparator/PetPickUpTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet.comparator;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":" * Comparator class to compare pets based on pet\u0027s Pick Up Time.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"public class PetPickUpTimeComparator implements Comparator\u003cPet\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Compares pet objects based on their pick up time attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param first Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * @param second Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    public int compare(Pet first, Pet second) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e firstAttendanceEntry \u003d first.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e secondAttendanceEntry \u003d second.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        if (firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            return compareAttendanceEntries(firstAttendanceEntry.get(), secondAttendanceEntry.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        } else if (firstAttendanceEntry.isPresent() \u0026\u0026 !secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * Compares AttendanceEntries of pets based on their pick up time. Used in compare method.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @param firstPetAttendanceEntry AttendanceEntry of first pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @param secondPetAttendanceEntry AttendanceEntry of second pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    private int compareAttendanceEntries(AttendanceEntry firstPetAttendanceEntry,","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"                                         AttendanceEntry secondPetAttendanceEntry) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        boolean isFirstPetPickUpPresent \u003d firstPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        boolean isSecondPetPickUpTimePresent \u003d secondPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        if (isFirstPetPickUpPresent \u0026\u0026 isSecondPetPickUpTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime firstDropOffTime \u003d firstPetAttendanceEntry.getPickUpTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime secondDropOffTime \u003d secondPetAttendanceEntry.getPickUpTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            return firstDropOffTime.compareTo(secondDropOffTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        } else if (isFirstPetPickUpPresent \u0026\u0026 !isSecondPetPickUpTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!isFirstPetPickUpPresent \u0026\u0026 isSecondPetPickUpTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":61,"soloplxya":3}},{"path":"src/main/java/woofareyou/model/pet/exceptions/DuplicatePetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet.exceptions;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":" * Signals that the operation will result in duplicate Pets (Pets are considered duplicates if they have the same","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"public class DuplicatePetException extends RuntimeException {","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"    public DuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"        super(\"Operation would result in duplicate pets\");","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tiffanylin21":2,"soloplxya":1,"-":6,"tobihy":2}},{"path":"src/main/java/woofareyou/model/pet/exceptions/PetNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet.exceptions;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":" * Signals that the operation is unable to find the specified pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"public class PetNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Tiffanylin21":5,"soloplxya":1}},{"path":"src/main/java/woofareyou/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" * Represents a Tag in WoofAreYou.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_SIZE_CONSTRAINTS \u003d \"User should only be able to key in one tag!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\s*\\\\p{Alnum}[\\\\p{Alnum}\\\\s]*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"        this.tagName \u003d tagName.replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":1,"tsumian":1,"soloplxya":4,"-":49}},{"path":"src/main/java/woofareyou/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":" * Contains utility methods for populating {@code PetBook} with sample data.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public static final Diet EMPTY_DIET \u003d new Diet(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    public static final Appointment EMPTY_APPOINTMENT \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public static Pet[] getSamplePets() {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        return new Pet[] {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Bagel\"), new OwnerName(\"Alex Yeo\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Japanese Spitz\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Tofu\"), new OwnerName(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Golden Retriever\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"PeePee\"), new OwnerName(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Bulldog\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Waffle\"), new OwnerName(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"British Shorthair\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Sesame\"), new OwnerName(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Poodle\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Avocado\"), new OwnerName(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Dachshund\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap())","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    public static ReadOnlyPetBook getSamplePetBook() {","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        PetBook sampleAb \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        for (Pet samplePet : getSamplePets()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            sampleAb.addPet(samplePet);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Dineshraj555":7,"Tiffanylin21":4,"soloplxya":13,"-":32,"tobihy":11}},{"path":"src/main/java/woofareyou/storage/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":" * Jackson-friendly version of {@link AttendanceEntry}.","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"public class JsonAdaptedAttendance {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public final String attendanceDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    public final String isPresent;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    public final String pickUpTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    public final String dropOffTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"     * Constructs a {@code JsonAdaptedAttendance} with the given pet attendance details.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    public JsonAdaptedAttendance(@JsonProperty(\"attendance date\") String attendanceDate,","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"                                 @JsonProperty(\"isPresent\") String isPresent,","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"                                 @JsonProperty(\"Pick up time\") String pickUpTime,","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"                                 @JsonProperty(\"Drop off time\") String dropOffTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        this.pickUpTime \u003d pickUpTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        this.dropOffTime \u003d dropOffTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * Constructs a given {@code Attendance} into this class for Jackson use.","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the attendance of the pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"    public JsonAdaptedAttendance(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        this.attendanceDate \u003d attendanceEntry.getAttendanceDate().format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d attendanceEntry.getIsPresent().get().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalPickUpTime \u003d attendanceEntry.getPickUpTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalDropOffTime \u003d attendanceEntry.getDropOffTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        this.pickUpTime \u003d optionalPickUpTime.isEmpty()","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"                ? \"\"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                : optionalPickUpTime.map(t -\u003e t.format(DateTimeFormatter.ISO_LOCAL_TIME)).get();","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        this.dropOffTime \u003d optionalDropOffTime.isEmpty()","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"                ? \"\"","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"                : optionalDropOffTime.map(t -\u003e t.format(DateTimeFormatter.ISO_LOCAL_TIME)).get();","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"     * Converts this Jackson-friendly adapted attendance object into the model\u0027s {@code Attendance} object.","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendance object.","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"    public AttendanceEntry toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        if (!AttendanceUtil.isValidIsPresentString(isPresent)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(AttendanceEntry.MESSAGE_INVALID_ISPRESENT);","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        boolean modelIsPresent \u003d Boolean.parseBoolean(isPresent);","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        if (!modelIsPresent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"            return convertToAbsentEntry(attendanceDate); // absent attendance entry","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        return convertToPresentEntry(attendanceDate, pickUpTime, dropOffTime); // present attendance entry","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"     * Creates an {@code AbsentAttendanceEntry} object for model use.","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate the attendance date in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"     * @return an {@code AbsentAttendanceEntry} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"     * @throws IllegalValueException if the given attendance date string is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"    private AbsentAttendanceEntry convertToAbsentEntry(String attendanceDate) throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        LocalDate modelAttendanceDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            modelAttendanceDate \u003d AttendanceUtil.convertToModelDate(attendanceDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        } catch (DateTimeParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(pe.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"        return new AbsentAttendanceEntry(modelAttendanceDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"     * Creates a {@code PresentAttendanceEntry} object for model use.","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate the attendance date in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"     * @param pickUpTime the pick-up time in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"     * @param dropOffTime the drop-off time in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"     * @return a {@code PresentAttendanceEntry} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"     * @throws IllegalValueException if the given attendance date, pick-up time or drop-off time string is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"    private PresentAttendanceEntry convertToPresentEntry(String attendanceDate, String pickUpTime, String dropOffTime)","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"        throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        LocalDate modelAttendanceDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"        LocalTime modelPickUpTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        LocalTime modelDropOffTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"            modelAttendanceDate \u003d AttendanceUtil.convertToModelDate(attendanceDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"            modelPickUpTime \u003d AttendanceUtil.convertToModelTime(pickUpTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"            modelDropOffTime \u003d AttendanceUtil.convertToModelTime(dropOffTime);","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        } catch (DateTimeParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(pe.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"        if (!PresentAttendanceEntry.isValidTimings(modelPickUpTime, modelDropOffTime)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(PresentAttendanceEntry.MESSAGE_TIME_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        return new PresentAttendanceEntry(modelAttendanceDate, modelPickUpTime, modelDropOffTime);","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tsumian":21,"soloplxya":7,"tobihy":100}},{"path":"src/main/java/woofareyou/storage/JsonAdaptedPet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":" * Jackson-friendly version of {@link Pet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"class JsonAdaptedPet {","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Pet\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private final String ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    private final String phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    private final String diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    private final String appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    private final List\u003cJsonAdaptedAttendance\u003e attendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a {@code JsonAdaptedPet} with the given pet details.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    public JsonAdaptedPet(@JsonProperty(\"name\") String name, @JsonProperty(\"ownerName\") String ownerName,","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                          @JsonProperty(\"phone\") String phone, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"                          @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"diet\") String diet,","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"                          @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                          @JsonProperty(\"attendance\") List\u003cJsonAdaptedAttendance\u003e attendance) {","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        this.ownerName \u003d ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        if (attendance !\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            this.attendance.addAll(attendance);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     * Converts a given {@code Pet} into this class for Jackson use.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    public JsonAdaptedPet(Pet source) {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        ownerName \u003d source.getOwnerName().value;","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        diet \u003d source.getDiet().value;","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"        appointment \u003d source.getAppointment().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        attendance.addAll(source.getAttendanceHashMap()","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"                .toCollection()","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"                .stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"                .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     * Converts this Jackson-friendly adapted pet object into the model\u0027s {@code Pet} object.","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"    public Pet toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        final List\u003cTag\u003e petTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"            petTags.add(tag.toModelType());","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"        final HashMap\u003cLocalDate, AttendanceEntry\u003e attendanceList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        for (JsonAdaptedAttendance attendance : attendance) {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            LocalDate attendanceDateKey \u003d AttendanceUtil.convertToModelDate(attendance.attendanceDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"            attendanceList.put(attendanceDateKey, attendance.toModelType());","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"        if (ownerName \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"                    OwnerName.class.getSimpleName()));","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        if (!OwnerName.isValidOwnerName(ownerName)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"            throw new IllegalValueException(OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"        final OwnerName modelOwnerName \u003d new OwnerName(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"        if (diet \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Diet.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"        if (!Diet.isValidDiet(diet)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"            throw new IllegalValueException(Diet.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-05"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"        final Diet modelDiet \u003d new Diet(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"Dineshraj555"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"Dineshraj555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"Dineshraj555"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"Dineshraj555"},"content":"        final Appointment modelAppointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(petTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        final AttendanceHashMap modelAttendanceHashMap \u003d new AttendanceHashMap(attendanceList);","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"        return new Pet(modelName, modelOwnerName, modelPhone, modelAddress, modelTags, modelDiet, modelAppointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"                modelAttendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dineshraj555":23,"Tiffanylin21":21,"soloplxya":26,"-":66,"tobihy":24}},{"path":"src/main/java/woofareyou/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"soloplxya":3,"-":45}},{"path":"src/main/java/woofareyou/storage/JsonPetBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.FileUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.JsonUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":" * A class to access WoofAreYou data stored as a json file on the hard disk.","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"public class JsonPetBookStorage implements PetBookStorage {","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPetBookStorage.class);","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public JsonPetBookStorage(Path filePath) {","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public Path getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cReadOnlyPetBook\u003e readPetBook() throws DataConversionException {","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        return readPetBook(filePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"     * Similar to {@link #readPetBook()}.","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cReadOnlyPetBook\u003e readPetBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        Optional\u003cJsonSerializablePetBook\u003e jsonPetBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"            filePath, JsonSerializablePetBook.class);","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        if (!jsonPetBook.isPresent()) {","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"            return Optional.of(jsonPetBook.get().toModelType());","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    public void savePetBook(ReadOnlyPetBook petBook) throws IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        savePetBook(petBook, filePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * Similar to {@link #savePetBook(ReadOnlyPetBook)}. Also creates an attendance file for each pet.","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    public void savePetBook(ReadOnlyPetBook petBook, Path filePath) throws IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        requireNonNull(petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePetBook(petBook), filePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"soloplxya":6,"-":54,"tobihy":20}},{"path":"src/main/java/woofareyou/storage/JsonSerializablePetBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":" * An Immutable PetBook that is serializable to JSON format.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"@JsonRootName(value \u003d \"petbook\")","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"class JsonSerializablePetBook {","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"Pets list contains duplicate pet(s).\";","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    private final List\u003cJsonAdaptedPet\u003e pets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     * Constructs a {@code JsonSerializablePetBook} with the given pets.","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public JsonSerializablePetBook(@JsonProperty(\"pets\") List\u003cJsonAdaptedPet\u003e pets) {","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        this.pets.addAll(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"     * Converts a given {@code ReadOnlyPetBook} into this class for Jackson use.","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePetBook}.","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public JsonSerializablePetBook(ReadOnlyPetBook source) {","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        pets.addAll(source.getPetList().stream().map(JsonAdaptedPet::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"     * Converts this pet book into the model\u0027s {@code PetBook} object.","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    public PetBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        PetBook petBook \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        for (JsonAdaptedPet jsonAdaptedPet : pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"            Pet pet \u003d jsonAdaptedPet.toModelType();","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            if (petBook.hasPet(pet)) {","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"            petBook.addPet(pet);","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        return petBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":3,"-":34,"tobihy":16}},{"path":"src/main/java/woofareyou/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.JsonUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"soloplxya":5,"-":42}},{"path":"src/main/java/woofareyou/storage/PetBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" * Represents a storage for {@link PetBook}.","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"public interface PetBookStorage {","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    Path getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     * Returns PetBook data as a {@link ReadOnlyPetBook}.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    Optional\u003cReadOnlyPetBook\u003e readPetBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @see #getPetBookFilePath()","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    Optional\u003cReadOnlyPetBook\u003e readPetBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"     * Saves the given {@link ReadOnlyPetBook} to the storage.","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"     * @param petBook cannot be null.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    void savePetBook(ReadOnlyPetBook petBook) throws IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"     * @see #savePetBook(ReadOnlyPetBook)","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    void savePetBook(ReadOnlyPetBook petBook, Path filePath) throws IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"tobihy":46}},{"path":"src/main/java/woofareyou/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"public interface Storage extends PetBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    Path getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    Optional\u003cReadOnlyPetBook\u003e readPetBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    void savePetBook(ReadOnlyPetBook petBook) throws IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"soloplxya":4,"-":23,"tobihy":5}},{"path":"src/main/java/woofareyou/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":" * Manages storage of PetBook data in local storage.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    private PetBookStorage petBookStorage;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     * Creates a {@code StorageManager} with the given {@code PetBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public StorageManager(PetBookStorage petBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        this.petBookStorage \u003d petBookStorage;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PetBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    public Path getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        return petBookStorage.getPetBookFilePath();","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cReadOnlyPetBook\u003e readPetBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        return readPetBook(petBookStorage.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cReadOnlyPetBook\u003e readPetBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        return petBookStorage.readPetBook(filePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"    public void savePetBook(ReadOnlyPetBook petBook) throws IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        savePetBook(petBook, petBookStorage.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"    public void savePetBook(ReadOnlyPetBook petBook, Path filePath) throws IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        petBookStorage.savePetBook(petBook, filePath);","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":5,"-":56,"tobihy":17}},{"path":"src/main/java/woofareyou/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":" * Represents a storage for {@link woofareyou.model.UserPrefs}.","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * Saves the given {@link woofareyou.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"soloplxya":6,"-":30}},{"path":"src/main/java/woofareyou/ui/AppointmentLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"public class AppointmentLabel extends Label {","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"    private static final String LABEL \u003d \"Appointment:\";","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"    private static final String LABEL_COLOR \u003d \"-fx-background-color: #f9c74f\";","lastModifiedDate":"2022-04-04"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    private AppointmentLabel() {","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * Create an appointment label for GUI if there is any.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * @param appointment of Pet","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @return Appointment Label","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    public static AppointmentLabel createAppointmentLabel(Appointment appointment) {","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        AppointmentLabel appLabel \u003d new AppointmentLabel();","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        if (appointment.getDateTime() \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            return appLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        appLabel.setText(LABEL);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"        appLabel.setStyle(LABEL_COLOR);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        return appLabel;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Dineshraj555":5,"tsumian":18,"soloplxya":2,"tobihy":8}},{"path":"src/main/java/woofareyou/ui/AppointmentTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"public class AppointmentTag extends Label {","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    private static final String APPOINTMENT_TAG_PREFIX \u003d \"Appointment: \";","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_AFTER_TODAY_STYLE \u003d \"-fx-background-color: #c4c4c4\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_BEFORE_TODAY_STYLE \u003d \"-fx-background-color: #ff595e\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_TODAY_STYLE \u003d \"-fx-background-color: #90be6d\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    private static final LocalDate NOW \u003d LocalDate.now();","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     * Creates a new pet appointment tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    public AppointmentTag(Appointment appointment) {","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"        super(getTagDetails(appointment));","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        super.setStyle(getTagStyle(appointment));","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     * Retrieves the details of the pet\u0027s appointment to be displayed in the tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * @param appointment the pet\u0027s appointment.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @return the details of the pet\u0027s appointment.","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public static String getTagDetails(Appointment appointment) {","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        return APPOINTMENT_TAG_PREFIX + appointment;","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     * Retrieves the style to be applied to the appointment tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"     * @param appointment the pet\u0027s appointment.","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"     * @return the style of the appointment tag to be applied.","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    private static String getTagStyle(Appointment appointment) {","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        LocalDateTime appDateTime \u003d appointment.getDateTime();","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        LocalDate appDate \u003d appDateTime.toLocalDate();","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        if (appDate.equals(NOW)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            return APPOINTMENT_TODAY_STYLE; // appointment is today, green tag","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        } else if (appDate.isBefore(NOW)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            return APPOINTMENT_BEFORE_TODAY_STYLE; // appointment has already past, red tag","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"            return APPOINTMENT_AFTER_TODAY_STYLE; // appointment is upcoming, grey tag","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"Dineshraj555":27,"soloplxya":2,"tobihy":28}},{"path":"src/main/java/woofareyou/ui/AttendanceTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AttendanceUtil.ATTENDANCE_DATE_GUI_FORMATTER;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" * A class that processes and produces attendance tags for the GUI.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"public class AttendanceTag extends Label {","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    private static final String MISSING_ATTENDANCE_TAG_STYLE \u003d \"-fx-background-color: #c4c4c4\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    private static final String PRESENT_ATTENDANCE_TAG_STYLE \u003d \"-fx-background-color: #90be6d\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private static final String ABSENT_ATTENDANCE_TAG_STYLE \u003d \"-fx-background-color: #ff595e\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Creates a new pet attendance tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public AttendanceTag(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        super(getAttendanceTagDetails(attendanceEntry));","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        super.setStyle(getTagStyle(attendanceEntry));","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * Retrieves the style to be applied to the attendance tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the incoming attendance entry.","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     * @return the style of the attendance tag to be applied.","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private static String getTagStyle(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceEntry);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        Optional\u003cBoolean\u003e isPresent \u003d attendanceEntry.getIsPresent();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        if (isPresent.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"            return MISSING_ATTENDANCE_TAG_STYLE; // missing attendance entry, grey tag","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        return isPresent.get()","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"            ? PRESENT_ATTENDANCE_TAG_STYLE // pet is present, green tag","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            : ABSENT_ATTENDANCE_TAG_STYLE; // pet is absent, red tag","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"     * Retrieves the attendance date to be displayed in the tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the incoming attendance entry.","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"     * @return the attendance date, formatted into a string in GUI format.","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    private static String getAttendanceTagDetails(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceEntry);","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        return attendanceEntry","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"            .getAttendanceDate()","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            .format(ATTENDANCE_DATE_GUI_FORMATTER);","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"soloplxya":3,"tobihy":55}},{"path":"src/main/java/woofareyou/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.CommandResult;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"         * @see woofareyou.logic.Logic#execute(String)","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"soloplxya":6,"-":80}},{"path":"src/main/java/woofareyou/ui/DietTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":" * A tag for the diet of the pet, if any.","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"public class DietTag extends Label {","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"    private static final String LABEL \u003d \"Diet: \";","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"     * Creates a new pet diet tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"     * @param dietInfo the diet of the pet to be displayed.","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public DietTag(String dietInfo) {","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"        super(LABEL + dietInfo);","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"soloplxya":1,"tobihy":18}},{"path":"src/main/java/woofareyou/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2122s2-cs2103t-t13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dineshraj555":3,"soloplxya":2,"-":97}},{"path":"src/main/java/woofareyou/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.Logic;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.CommandResult;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    private PetListPanel petListPanel;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    private StackPane petListPanelPlaceholder;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        petListPanel \u003d new PetListPanel(logic.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        petListPanelPlaceholder.getChildren().add(petListPanel.getRoot());","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"    public PetListPanel getPetListPanel() {","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"        return petListPanel;","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"     * @see woofareyou.logic.Logic#execute(String)","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tiffanylin21":6,"soloplxya":8,"-":181,"tobihy":1}},{"path":"src/main/java/woofareyou/ui/PetCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.AttendanceUtil.getPastWeekAttendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":" * A UI component that displays information of a {@code Pet}.","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"public class PetCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String FXML \u003d \"PetListCard.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    public final Pet pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    private Label id;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"    private Label ownerName;","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    private HBox dietTag;","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    @FXML","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    private HBox appointmentTag;","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"    private FlowPane attendanceTags;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    private FlowPane transportTags;","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a {@code PetCode} with the given {@code Pet} and index to display.","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public PetCard(Pet pet, int displayedIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        this.pet \u003d pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        name.setText(pet.getName().fullName);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"        ownerName.setText(pet.getOwnerName().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"        phone.setText(pet.getPhone().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        address.setText(pet.getAddress().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        setDietTag(pet.getDiet());","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        setAppointmentTag(pet.getAppointment());","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        setBreedTag(pet.getTags());","lastModifiedDate":"2022-04-05"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        setAttendanceTags(pet.getAttendanceHashMap());","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        setTransportTags(pet.getAttendanceHashMap());","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"     * Sets the breed tag in the pet card.","lastModifiedDate":"2022-04-05"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"     * @param breedTag the breed of the pet.","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"    private void setBreedTag(Set\u003cTag\u003e breedTag) {","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        breedTag.stream()","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"     * Sets the diet tag in the pet card.","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"     * @param diet the diet of the pet, if any.","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"    private void setDietTag(Diet diet) {","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        if (!pet.getDiet().value.isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"            dietTag.getChildren().add(new DietTag(pet.getDiet().value));","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"     * Sets the appointment tag in the pet card.","lastModifiedDate":"2022-04-05"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"     * @param appointment the appointment of the pet, if any.","lastModifiedDate":"2022-04-05"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"    private void setAppointmentTag(Appointment appointment) {","lastModifiedDate":"2022-04-05"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        if (!pet.getAppointment().value.isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"            appointmentTag.getChildren()","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"                .add(new AppointmentTag(pet.getAppointment()));","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"     * Sets the attendance tags in the pet card.","lastModifiedDate":"2022-04-05"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"     * @param attendanceHashMap the attendance hashmap of the pet.","lastModifiedDate":"2022-04-05"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"    private void setAttendanceTags(AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-04-05"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        getPastWeekAttendance(attendanceHashMap)","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"            .forEach(attendance -\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"                attendanceTags","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"                    .getChildren()","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"                    .add(new AttendanceTag(attendance));","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"            });","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"     * Sets the transport tags in the pet card.","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"     * @param attendanceHashMap the attendance hashmap of the pet.","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"    private void setTransportTags(AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-04-05"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        AttendanceUtil.getNextTwoDaysTransport(attendanceHashMap)","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"            .forEach(attendance -\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"                transportTags","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"                    .getChildren()","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"                    .add(new TransportTag(attendance));","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"            });","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-05"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"     * Sets the colour of the pet list cell in WoofAreYou.","lastModifiedDate":"2022-04-05"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-05"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"     * @param colour the colour of the pet list cell to be set.","lastModifiedDate":"2022-04-05"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-05"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"    public void setColour(String colour) {","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"        cardPane.setStyle(\"-fx-background-color: \" + colour);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"        if (!(other instanceof PetCard)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"        PetCard card \u003d (PetCard) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"            \u0026\u0026 pet.equals(card.pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Dineshraj555":4,"Tiffanylin21":12,"soloplxya":10,"-":56,"tobihy":84}},{"path":"src/main/java/woofareyou/ui/PetListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.GuiUtil.isEvenIndexCard;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":" * Panel containing the list of pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"public class PetListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String FXML \u003d \"PetListPanel.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PetListPanel.class);","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"    private ListView\u003cPet\u003e petListView;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a {@code PetListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public PetListPanel(ObservableList\u003cPet\u003e petList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        super(FXML);","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        petListView.setItems(petList);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        petListView.setCellFactory(listView -\u003e new PetListViewCell());","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Pet} using a {@code PetCard}.","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    class PetListViewCell extends ListCell\u003cPet\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        protected void updateItem(Pet pet, boolean empty) {","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"            super.updateItem(pet, empty);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"            if (empty || pet \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"                setText(null);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                setGraphic(createPetCard(pet).getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        private PetCard createPetCard(Pet pet) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"            int currentCellIndex \u003d getIndex();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            PetCard petCard \u003d new PetCard(pet, currentCellIndex + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"            if (isEvenIndexCard(currentCellIndex)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                petCard.setColour(\"#744D26\");","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                petCard.setColour(\"#C4A484\");","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"            return petCard;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Tiffanylin21":45,"soloplxya":4,"tobihy":15}},{"path":"src/main/java/woofareyou/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"soloplxya":1,"-":27}},{"path":"src/main/java/woofareyou/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":27}},{"path":"src/main/java/woofareyou/ui/TransportTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" * A class that processes and produces transport arrangement tags for the GUI.","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class TransportTag extends Label {","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    private static final String TODAY_TRANSPORT_ARRANGEMENT_TAG_STYLE \u003d \"-fx-background-color: #f9c74f\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    private static final String TOMORROW_TRANSPORT_ARRANGEMENT_TAG_STYLE \u003d \"-fx-background-color: #f9844a\";","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    private static final String NO_TRANSPORT_ARRANGEMENT_TAG_STYLE \u003d \"-fx-background-color: #c4c4c4\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private static final String TRANSPORT_TAG_ARRANGEMENT \u003d \"%1$s | Pick-up: %2$s, Drop-off: %3$s\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    private static final String TRANSPORT_TAG_NO_ARRANGEMENT \u003d \"%1$s | No Arrangement\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * Creates a new pet transport tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public TransportTag(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        super(getTagDetails(attendanceEntry));","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        super.setStyle(getTagStyle(attendanceEntry));","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Retrieves the details of the transport arrangements, if any, to be displayed in the tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the pet\u0027s attendance entry.","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     * @return pick-up and drop-off times of the transport arrangements if available, \"No Arrangement\" otherwise.","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private static String getTagDetails(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceEntry);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate \u003d attendanceEntry.getAttendanceDate();","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        if (!attendanceEntry.hasTransportArrangement()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            return String.format(TRANSPORT_TAG_NO_ARRANGEMENT, dateToDay(attendanceDate));","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        // has transport arrangements","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        return String.format(TRANSPORT_TAG_ARRANGEMENT, dateToDay(attendanceDate),","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"                attendanceEntry.getPickUpTime().get(),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"                attendanceEntry.getDropOffTime().get());","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"     * Retrieves the style to be applied to the transport tag.","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the pet\u0027s attendance entry","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"     * @return the style of the transport tag to be applied.","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    private static String getTagStyle(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceEntry);","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        if (!attendanceEntry.hasTransportArrangement()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"            return NO_TRANSPORT_ARRANGEMENT_TAG_STYLE;","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        // has transport arrangements","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate \u003d attendanceEntry.getAttendanceDate();","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        if (attendanceDate.isEqual(LocalDate.now())) {","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"            return (TODAY_TRANSPORT_ARRANGEMENT_TAG_STYLE);","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        } else if (attendanceDate.isEqual(LocalDate.now().plusDays(1))) {","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"            return (TOMORROW_TRANSPORT_ARRANGEMENT_TAG_STYLE);","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        assert false; // should not reach this point","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        return \"\"; // should not reach this point","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"     * Converts a given date into a string relative to today.","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"     * @param date the given date.","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"     * @return a {@code String} representing the date, relative to today.","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    private static String dateToDay(LocalDate date) {","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        if (date.isEqual(LocalDate.now())) {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"            return \"Today\";","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        } else if (date.isEqual(LocalDate.now().plusDays(1))) {","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"            return \"Tomorrow\";","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        assert false; // should not reach this point","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"        return \"\"; // should not reach this point","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":1,"soloplxya":2,"tobihy":86}},{"path":"src/main/java/woofareyou/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"soloplxya":1,"-":12}},{"path":"src/main/java/woofareyou/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.MainApp;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.LogsCenter;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.StringUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.Logic;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/app_icon.png\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"soloplxya":5,"-":82,"tobihy":1}},{"path":"src/main/java/woofareyou/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.MainApp;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"soloplxya":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter your command here...\" /\u003e","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":7,"tobihy":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"@font-face {","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"src: url(\u0027../fonts/Montserrat-Regular.ttf\u0027);","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"@font-face {","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"src: url(\u0027../fonts/Montserrat-SemiBold.ttf\u0027);","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    -fx-prompt-text-fill: #383838;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":".split-pane:vertical .split-pane-divider {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: derive(#1d1d1d, 35%);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"    -fx-padding: 5 0 5 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \u0027Montserrat SemiBold\u0027;","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \u0027Montserrat\u0027;","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"tsumian"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"tsumian"},"content":".cell_small_label_right {","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \u0027Montserrat\u0027;","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"tsumian"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Montserrat\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"tobihy"},"content":".scroll-bar .thumb:hover {","lastModifiedDate":"2022-03-16"},{"lineNumber":290,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: derive(#1d1d1d, 70%);","lastModifiedDate":"2022-03-16"},{"lineNumber":291,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":292,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"tobihy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"tobihy"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2022-03-16"},{"lineNumber":319,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":320,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":321,"author":{"gitId":"tobihy"},"content":"#cardPane:hover {","lastModifiedDate":"2022-03-16"},{"lineNumber":322,"author":{"gitId":"tobihy"},"content":"    -fx-border-color: #ffffff;","lastModifiedDate":"2022-03-16"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #c4c4c4;","lastModifiedDate":"2022-03-16"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"tobihy"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":334,"author":{"gitId":"tobihy"},"content":"    -fx-border-insets: 5;","lastModifiedDate":"2022-03-16"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":339,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 40px;","lastModifiedDate":"2022-03-16"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":342,"author":{"gitId":"tsumian"},"content":"#dietLabel .label {","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":344,"author":{"gitId":"tsumian"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"tsumian"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-30"},{"lineNumber":346,"author":{"gitId":"tsumian"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"tsumian"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-30"},{"lineNumber":348,"author":{"gitId":"tsumian"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"tsumian"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"tobihy"},"content":"#promptText {","lastModifiedDate":"2022-03-16"},{"lineNumber":353,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"Tiffanylin21"},"content":"#filterField, #petListPanel, #petWebpage {","lastModifiedDate":"2022-03-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":373,"author":{"gitId":"tsumian"},"content":"    -fx-background-color: #E2DEA9;","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"tobihy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":375,"author":{"gitId":"tobihy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":376,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":377,"author":{"gitId":"tobihy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-16"},{"lineNumber":378,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":379,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":380,"author":{"gitId":"tobihy"},"content":"#attendanceTags {","lastModifiedDate":"2022-03-16"},{"lineNumber":381,"author":{"gitId":"tobihy"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-16"},{"lineNumber":382,"author":{"gitId":"tobihy"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":383,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":384,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":385,"author":{"gitId":"tobihy"},"content":"#attendanceTags .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":386,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":388,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #bffcc6;","lastModifiedDate":"2022-03-16"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":395,"author":{"gitId":"tobihy"},"content":"#attendancePane {","lastModifiedDate":"2022-03-16"},{"lineNumber":396,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2022-03-16"},{"lineNumber":397,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":398,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":399,"author":{"gitId":"tobihy"},"content":"#transportTags {","lastModifiedDate":"2022-03-26"},{"lineNumber":400,"author":{"gitId":"tobihy"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-26"},{"lineNumber":401,"author":{"gitId":"tobihy"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-26"},{"lineNumber":402,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":403,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":404,"author":{"gitId":"tobihy"},"content":"#transportTags .label {","lastModifiedDate":"2022-03-26"},{"lineNumber":405,"author":{"gitId":"tsumian"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-03-30"},{"lineNumber":406,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-26"},{"lineNumber":407,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #bffcc6;","lastModifiedDate":"2022-03-26"},{"lineNumber":408,"author":{"gitId":"tobihy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-26"},{"lineNumber":409,"author":{"gitId":"tobihy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":410,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":411,"author":{"gitId":"tobihy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-26"},{"lineNumber":412,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":413,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":414,"author":{"gitId":"tobihy"},"content":"#dietTag .label {","lastModifiedDate":"2022-04-05"},{"lineNumber":415,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-05"},{"lineNumber":416,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #8479E1;","lastModifiedDate":"2022-04-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-04-05"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-04-05"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-05"},{"lineNumber":422,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":423,"author":{"gitId":"tobihy"},"content":"#appointmentTag .label {","lastModifiedDate":"2022-04-05"},{"lineNumber":424,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-05"},{"lineNumber":425,"author":{"gitId":"tobihy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-04-05"},{"lineNumber":426,"author":{"gitId":"tobihy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-04-05"},{"lineNumber":427,"author":{"gitId":"tobihy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":428,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-04-05"},{"lineNumber":429,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"Tiffanylin21":1,"tsumian":27,"-":316,"tobihy":85}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"         title\u003d\"WoofAreYou\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"        \u003cImage url\u003d\"@/images/app_icon.png\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"                \u003cSplitPane orientation\u003d\"VERTICAL\" VBox.vgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"                               minHeight\u003d\"100\" prefHeight\u003d\"150\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"                    \u003cVBox fx:id\u003d\"petList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"                          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"                        \u003cStackPane fx:id\u003d\"petListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Tiffanylin21":1,"-":46,"tobihy":15}},{"path":"src/main/resources/view/PetListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" prefWidth\u003d\"350\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"            \u003cColumnConstraints maxWidth\u003d\"474.0\" minWidth\u003d\"331.0\" prefWidth\u003d\"371.0\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"        \u003cVBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"                \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"                    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"                            \u003cFont name\u003d\"Montserrat Bold\" size\u003d\"13.0\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"                \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets bottom\u003d\"1\" top\u003d\"2\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"                \u003c/FlowPane\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"                \u003cLabel fx:id\u003d\"ownerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ownerName\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets bottom\u003d\"1\" top\u003d\"1\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets bottom\u003d\"1\" top\u003d\"1\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets bottom\u003d\"1\" top\u003d\"1\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"                \u003cHBox fx:id\u003d\"dietTag\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets bottom\u003d\"2\" top\u003d\"2\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"                \u003cHBox fx:id\u003d\"appointmentTag\"\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets bottom\u003d\"4\" top\u003d\"2\"/\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                \u003cInsets right\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        \u003cVBox id\u003d\"attendancePane\" alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"                    \u003cInsets bottom\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label_right\" text\u003d\"Attendance\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"                        \u003cInsets bottom\u003d\"3.0\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"                \u003cFlowPane fx:id\u003d\"attendanceTags\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"                        \u003cInsets bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"                \u003c/FlowPane\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"                    \u003cInsets bottom\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label_right\" text\u003d\"Transport\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"                        \u003cInsets bottom\u003d\"3.0\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"                \u003cFlowPane fx:id\u003d\"transportTags\" alignment\u003d\"CENTER_LEFT\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsumian":33,"-":25,"tobihy":45}},{"path":"src/main/resources/view/PetListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"  \u003cListView fx:id\u003d\"petListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":1,"-":6,"tobihy":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"tobihy":2}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":11,"tobihy":1}},{"path":"src/test/java/woofareyou/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"soloplxya":1,"-":57}},{"path":"src/test/java/woofareyou/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"soloplxya":1,"-":26}},{"path":"src/test/java/woofareyou/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":2,"-":133}},{"path":"src/test/java/woofareyou/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.core.index;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        final Index fifthPetIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(fifthPetIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(fifthPetIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(fifthPetIndex.equals(fifthPetIndex));","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(fifthPetIndex.equals(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(fifthPetIndex.equals(5.0f));","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(fifthPetIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":2,"-":51}},{"path":"src/test/java/woofareyou/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"        assertNotNull(AppUtil.getImage(\"/images/app_icon.png\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"soloplxya":2,"-":33,"tobihy":1}},{"path":"src/test/java/woofareyou/commons/util/AttendanceUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import java.util.Random;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.MissingAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"public class AttendanceUtilTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap allPresentAttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap allAbsentAttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap mixedAttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private static final AttendanceHashMap missingAttendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e allPresentAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e allAbsentAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e mixedAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e missingAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    public static void createAllPresentAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e fullPresentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e fullPresentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        // creates an attendance hashmap with present entries","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        // from 30 days ago till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceEntry currentEntry \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                    new PresentAttendanceEntry(d, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"            fullPresentHashMap.put(d, currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"            // creates an attendance list with entries from a week before till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                fullPresentArrayList.add(currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        allPresentAttendanceHashMap \u003d new AttendanceHashMap(fullPresentHashMap);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        allPresentAttendanceList \u003d fullPresentArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"    public static void createAllAbsentAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e fullAbsentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e fullAbsentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        // creates an attendance hashmap with absent entries","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        // from 30 days ago till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"            AbsentAttendanceEntry currentEntry \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"                    new AbsentAttendanceEntry(d);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"            fullAbsentHashMap.put(d, currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"            // creates an attendance list with entries from a week before till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"                fullAbsentArrayList.add(currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        allAbsentAttendanceHashMap \u003d new AttendanceHashMap(fullAbsentHashMap);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        allAbsentAttendanceList \u003d fullAbsentArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    public static void createMixedAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        // randomizer to create a mixed attendance hash map.","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"        Random rng \u003d new Random();","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e mixedHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e mixedArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        // creates an attendance hashmap with either absent or present entries","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        // from 30 days ago till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"            boolean isPresent \u003d rng.nextBoolean();","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"            AttendanceEntry currentEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"            if (isPresent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"                currentEntry \u003d new PresentAttendanceEntry(d, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"                currentEntry \u003d new AbsentAttendanceEntry(d);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"            mixedHashMap.put(d, currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"            // creates an attendance list with entries from a week before till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"                mixedArrayList.add(currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        mixedAttendanceHashMap \u003d new AttendanceHashMap(mixedHashMap);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"        mixedAttendanceList \u003d mixedArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"    public static void createMissingAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e missingArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        // creates an attendance list with missing entries for the week.","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"                missingArrayList.add(new MissingAttendanceEntry(d));","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"        missingAttendanceList \u003d missingArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"    public void isValidIsPresentString_validInputs_correctResult() {","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"        assertTrue(AttendanceUtil.isValidIsPresentString(\"true\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        assertTrue(AttendanceUtil.isValidIsPresentString(\"false\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"tue\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"True\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"False\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"    public void convertToModelDate_invalidInputs_throwsDateTimeParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        final String[] invalidDateStringArray \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"            {\"18-03-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"                \"18/03/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"                \"03-18-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"                \"03/18/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"                \"\",","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"                \"ABC\",","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"                \"09:00:00\",","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"                \"0900\",","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"                \"09:00\",","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"                \"9\",","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"                \"9.30 pm\"};","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidDateStringArray) {","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e AttendanceUtil.convertToModelDate(s));","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"    public void convertToModelTime_invalidInputs_throwsDateTimeParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"        final String[] invalidTimeStringArray \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"            {\"0900\",","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"                \"9\",","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"                \"9.30 pm\",","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"                \"18-03-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"                \"18/03/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"                \"03-18-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"                \"03/18/2022\"};","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidTimeStringArray) {","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e AttendanceUtil.convertToModelTime(s));","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e AttendanceUtil.getPastWeekAttendance(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_missingAttendance_returnsMissingEntriesWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"        assertEquals(missingAttendanceList, AttendanceUtil.getPastWeekAttendance(missingAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_allPresentAttendance_returnsCorrectWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"        assertEquals(allPresentAttendanceList, AttendanceUtil.getPastWeekAttendance(allPresentAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_allAbsentAttendance_returnsCorrectWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"        assertEquals(allAbsentAttendanceList, AttendanceUtil.getPastWeekAttendance(allAbsentAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_mixedAttendance_returnsCorrectWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"        assertEquals(mixedAttendanceList, AttendanceUtil.getPastWeekAttendance(mixedAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"     * Checks that a given date is within the past week,","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"     * i.e. within the range of [n - 6, n] dates, where n is the date today.","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"     * @param date the date to be checked","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"     * @return true if the given date is within the past week, false otherwise.","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"tobihy"},"content":"    public static boolean isWithinWeek(LocalDate date) {","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"tobihy"},"content":"        LocalDate dateRangeStart \u003d DATE_TODAY.minusDays(7);","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"tobihy"},"content":"        LocalDate dateRangeEnd \u003d DATE_TODAY.plusDays(1);","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"tobihy"},"content":"        return date.isAfter(dateRangeStart) \u0026\u0026 date.isBefore(dateRangeEnd);","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":6,"tobihy":215}},{"path":"src/test/java/woofareyou/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"soloplxya":3,"-":105}},{"path":"src/test/java/woofareyou/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Config;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"soloplxya":4,"-":112}},{"path":"src/test/java/woofareyou/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":2,"-":21}},{"path":"src/test/java/woofareyou/commons/util/FilterUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"public class FilterUtilTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    private static final String ownerName \u003d \"ABC\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    private static final String dateWord \u003d \"today\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    private static final String tagWord \u003d \"def\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    private static final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    private static OwnerNameContainsFilterWordPredicate ownerPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    private static DateContainsFilterDatePredicate datePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    private static AppointmentContainsFilterWordPredicate appPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    private static TagContainsFilterWordPredicate tagPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for isValidFilterArg --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    public void isValidFilterArg_valid_input() {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byDate/18-09-2022\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byApp/today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byOwner/abcd\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byTags/abc\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"    public void isValidFilterArg_invalid_input() {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        assertFalse(FilterUtil.isValidFilterArg(\"byDate/09-03-2022 byOwner/abcd\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        assertFalse(FilterUtil.isValidFilterArg(\"byTags/abc byApp/today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for successMessageMatch --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public static void createPredicates() {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            datePredicate \u003d new DateContainsFilterDatePredicate(dateWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            appPredicate \u003d new AppointmentContainsFilterWordPredicate(dateWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            fail(\"Should not have thrown parse exception.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        ownerPredicate \u003d new OwnerNameContainsFilterWordPredicate(ownerName);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        tagPredicate \u003d new TagContainsFilterWordPredicate(tagWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    public void successMessageMatch_test() {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"date\", FilterUtil.successMessageMatch(datePredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"appointment date\", FilterUtil.successMessageMatch(appPredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"owner\u0027s name\", FilterUtil.successMessageMatch(ownerPredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        assertEquals(\"breed\", FilterUtil.successMessageMatch(tagPredicate));","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for tagContainsFilterWord --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    public static void createTags() {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        Tag tagOne \u003d new Tag(\"ABC\");","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"        Tag tagTwo \u003d new Tag(\"DEF\");","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"        Tag tagThree \u003d new Tag(\"GHI JKL\");","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        tags.add(tagOne);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        tags.add(tagTwo);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        tags.add(tagThree);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"    public void tagContainsFilterWord_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"        //Lower case match \"ABC\"","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.tagContainFilterWord(tags, \"abc\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        //Upper case match \"DEF\"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.tagContainFilterWord(tags, \"DEF\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"        //Lower case partial match \"GHI JKL\"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.tagContainFilterWord(tags, \"gh jk\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"    public void tagContainsFilterWord_failure() {","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"        assertFalse(FilterUtil.tagContainFilterWord(tags, \"MNO\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":88,"soloplxya":8}},{"path":"src/test/java/woofareyou/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.SerializableTestClass;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.TestUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":3,"-":42}},{"path":"src/test/java/woofareyou/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.commons.util;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for tagContainsWordsIgnoreCase --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"    public void tagOrNameContainsWordsIgnoreCase_correct_result() {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"        //Actual match","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"ABC\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"        //Lower case actual match","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"abc\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"        //Partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"AB\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"        //Lower case partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"ab\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"        //Two words Partial Match","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF\", \"DE\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"        //Two words one full match, one partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF\", \"abc de\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"        //Three words, all partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF GHI\", \"ab de hi\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"        //Three words, two words partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF GHI\", \"ab de\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsumian":28,"soloplxya":2,"-":140,"tobihy":1}},{"path":"src/test/java/woofareyou/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.CommandResult;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ListCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"import woofareyou.storage.JsonPetBookStorage;","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"import woofareyou.storage.StorageManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        JsonPetBookStorage petBookStorage \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"                new JsonPetBookStorage(temporaryFolder.resolve(\"petBook.json\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        StorageManager storage \u003d new StorageManager(petBookStorage, userPrefsStorage);","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        // Setup LogicManager with JsonPetBookIoExceptionThrowingStub","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        JsonPetBookStorage petBookStorage \u003d","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"                new JsonPetBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionPetBook.json\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        StorageManager storage \u003d new StorageManager(petBookStorage, userPrefsStorage);","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + OWNER_NAME_DESC_AMY","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"        Pet expectedPet \u003d new PetBuilder(AMY).withTags().build();","lastModifiedDate":"2022-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.addPet(expectedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public void getFilteredPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPetList().remove(0));","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-04-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"    private static class JsonPetBookIoExceptionThrowingStub extends JsonPetBookStorage {","lastModifiedDate":"2022-04-08"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"        private JsonPetBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-04-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"        public void savePetBook(ReadOnlyPetBook petBook, Path filePath) throws IOException {","lastModifiedDate":"2022-04-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Tiffanylin21":2,"soloplxya":25,"-":122,"tobihy":13}},{"path":"src/test/java/woofareyou/logic/commands/AbsentAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FOURTH_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.AbsentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    private static final String MESSAGE_DATE_STUB \u003d LocalDate.now().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private static AbsentAttendanceDescriptor descriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    static void setupDescriptors() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        descriptor \u003d new AbsentAttendanceDescriptorBuilder().withDate(DATE_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    // Pet does not have any attendance entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsAbsentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"                INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsAbsentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        execute_markPetAsAbsentUnfilteredList_success();","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    // Pet has an absent attendance entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    public void execute_markAbsentPetAbsentAgainUnfilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        Pet thirdPet \u003d model.getFilteredPetList().get(INDEX_THIRD_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(thirdPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"                INDEX_THIRD_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedFailureMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(thirdPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(absentAttendanceCommand, model, expectedMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    public void execute_markAbsentPetAbsentAgainFilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_THIRD_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        Pet thirdPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(thirdPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"                INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedFailureMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(thirdPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(absentAttendanceCommand, model, expectedMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry with a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportAbsentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"                INDEX_SECOND_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportAbsentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_SECOND_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"                INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":152,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry without a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAbsentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FOURTH_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"                INDEX_FOURTH_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAbsentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FOURTH_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"                .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"                INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"                descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":197,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"    private static String generateExpectedSuccessMessage(Pet pet, String messageDate,","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"soloplxya"},"content":"                                                         AbsentAttendanceDescriptor descriptor) {","lastModifiedDate":"2022-04-08"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"        return String.format(AbsentAttendanceCommand.MESSAGE_ABSENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"                pet.getName(), messageDate, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"    private static String generateExpectedFailureMessage(Pet pet, String messageDate,","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"soloplxya"},"content":"                                                         AbsentAttendanceDescriptor descriptor) {","lastModifiedDate":"2022-04-08"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"        return String.format(AbsentAttendanceCommand.MESSAGE_ABSENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"                pet.getName(), messageDate, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Dineshraj555":3,"soloplxya":19,"tobihy":192}},{"path":"src/test/java/woofareyou/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_newPet_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.addPet(validPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(new AddCommand(validPet), model,","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPet), expectedModel);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_duplicatePet_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        Pet petInList \u003d model.getPetBook().getPetList().get(0);","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(new AddCommand(petInList), model, AddCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":8,"-":26,"tobihy":4}},{"path":"src/test/java/woofareyou/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public void constructor_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_petAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        ModelStubAcceptingPetAdded modelStub \u003d new ModelStubAcceptingPetAdded();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult commandResult \u003d new AddCommand(validPet).execute(modelStub);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPet), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(Arrays.asList(validPet), modelStub.petsAdded);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_duplicatePet_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        AddCommand addCommand \u003d new AddCommand(validPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        ModelStub modelStub \u003d new ModelStubWithPet(validPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PET, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    public void execute_duplicatePetDifferentTag_throwsCommandException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        Pet validPet \u003d new PetBuilder().withTags(\"Poodle\").build();","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        AddCommand addCommand \u003d new AddCommand(new PetBuilder().build());","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        ModelStub modelStub \u003d new ModelStubWithPet(validPet);","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PET, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    public void execute_duplicatePetDifferentDiet_throwsCommandException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        Pet validPet \u003d new PetBuilder().withDiet(\"Vegetarian\").build();","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        AddCommand addCommand \u003d new AddCommand(new PetBuilder().build());","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        ModelStub modelStub \u003d new ModelStubWithPet(validPet);","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PET, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    public void execute_duplicatePetDifferentAppointment_throwsCommandException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        Pet validPet \u003d new PetBuilder().withAppointment(\"05-05-2022 09:00\", \"NUS Vet Clinic\").build();","lastModifiedDate":"2022-04-05"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        AddCommand addCommand \u003d new AddCommand(new PetBuilder().build());","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        ModelStub modelStub \u003d new ModelStubWithPet(validPet);","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PET, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        Pet alice \u003d new PetBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        Pet bob \u003d new PetBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        public Path getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"        public void setPetBookFilePath(Path petBookFilePath) {","lastModifiedDate":"2022-04-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"        public void addPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"        public void sortPetList(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        public void setPetBook(ReadOnlyPetBook newData) {","lastModifiedDate":"2022-04-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        public ReadOnlyPetBook getPetBook() {","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"        public void deletePet(Pet target) {","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"        public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"Dineshraj555"},"content":"        @Override","lastModifiedDate":"2022-04-05"},{"lineNumber":174,"author":{"gitId":"Dineshraj555"},"content":"        public Predicate\u003cPet\u003e getLastUsedPredicate() {","lastModifiedDate":"2022-04-05"},{"lineNumber":175,"author":{"gitId":"Dineshraj555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-05"},{"lineNumber":176,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":177,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"Tiffanylin21"},"content":"        public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"        public void updateFilteredPetList(Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"Dineshraj555"},"content":"        @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":189,"author":{"gitId":"Dineshraj555"},"content":"        public void updateFilteredPetList() {","lastModifiedDate":"2022-04-04"},{"lineNumber":190,"author":{"gitId":"Dineshraj555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-04"},{"lineNumber":191,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":192,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":193,"author":{"gitId":"Dineshraj555"},"content":"        @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":194,"author":{"gitId":"Dineshraj555"},"content":"        public void updateFilteredPetListToFullPetList() {","lastModifiedDate":"2022-04-04"},{"lineNumber":195,"author":{"gitId":"Dineshraj555"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-04-04"},{"lineNumber":196,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":197,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":198,"author":{"gitId":"soloplxya"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"        public ReadOnlyPetBook undo() {","lastModifiedDate":"2022-04-08"},{"lineNumber":200,"author":{"gitId":"soloplxya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"Tiffanylin21"},"content":"     * A Model stub that contains a single pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"Tiffanylin21"},"content":"    private class ModelStubWithPet extends ModelStub {","lastModifiedDate":"2022-03-08"},{"lineNumber":208,"author":{"gitId":"Tiffanylin21"},"content":"        private final Pet pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"Tiffanylin21"},"content":"        ModelStubWithPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":211,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":212,"author":{"gitId":"Tiffanylin21"},"content":"            this.pet \u003d pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"Tiffanylin21"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":218,"author":{"gitId":"Tiffanylin21"},"content":"            return this.pet.isSamePet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"Tiffanylin21"},"content":"     * A Model stub that always accept the pet being added.","lastModifiedDate":"2022-03-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"Tiffanylin21"},"content":"    private class ModelStubAcceptingPetAdded extends ModelStub {","lastModifiedDate":"2022-03-08"},{"lineNumber":226,"author":{"gitId":"Tiffanylin21"},"content":"        final ArrayList\u003cPet\u003e petsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"Tiffanylin21"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":230,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":231,"author":{"gitId":"Tiffanylin21"},"content":"            return petsAdded.stream().anyMatch(pet::isSamePet);","lastModifiedDate":"2022-03-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"Tiffanylin21"},"content":"        public void addPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":236,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":237,"author":{"gitId":"Tiffanylin21"},"content":"            petsAdded.add(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"tobihy"},"content":"        public ReadOnlyPetBook getPetBook() {","lastModifiedDate":"2022-04-08"},{"lineNumber":242,"author":{"gitId":"tobihy"},"content":"            return new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Dineshraj555":15,"Tiffanylin21":39,"soloplxya":17,"-":139,"tobihy":36}},{"path":"src/test/java/woofareyou/logic/commands/AppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"class AppointmentCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_DATE_TIME_STUB \u003d \"02-04-2022 09:30\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_LOCATION_STUB \u003d \"NUS Vet Clinic\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_addAppointmentUnfilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB,","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"                        APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"                new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"                        new Appointment(editedPet.getAppointment().getDateTime(),","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"                                editedPet.getAppointment().getLocation()));","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(AppointmentCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(appointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_clearAppointmentUnfilteredList_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet).withAppointment().build();","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"                editedPet.getAppointment());","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(AppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(appointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased()))","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB, APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"                new Appointment(editedPet.getAppointment().getDateTime(),","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"                        editedPet.getAppointment().getLocation()));","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(AppointmentCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(appointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_invalidPetIndexUnfilteredList_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandFailure(appointmentCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"    /**s","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"     * but smaller than size of pet book","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_invalidPetIndexFilteredList_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"        // ensures that outOfBoundIndex is still in bounds of pet book list","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetBook().getPetList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandFailure(appointmentCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"        final AppointmentCommand standardCommand \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand commandWithSameValues \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(standardCommand.equals(new AppointmentCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment())));","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":92,"Tiffanylin21":19,"soloplxya":15,"tobihy":9}},{"path":"src/test/java/woofareyou/logic/commands/ChargeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.YearMonth;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.charge.Charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"class ChargeCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String CHARGE_AMOUNT_STUB \u003d \"200.50\";","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String CHARGE_AMOUNT_STUB_ZERO \u003d \"0\";","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String CHARGE_DATE_STUB \u003d \"03-2022\";","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String CHARGE_DATE_STUB_TWO \u003d \"04-2022\";","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String DATE_STUB \u003d \"2022-03-22\";","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String DATE_STUB_TWO \u003d \"2022-03-26\";","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String DATE_STUB_DIFF_MONTH \u003d \"2022-02-26\";","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String DATE_STUB_DIFF_YEAR \u003d \"2021-03-26\";","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-yyyy\");","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_computeChargeNoChargeUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge \u003d new Charge(CHARGE_AMOUNT_STUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        String petName \u003d firstPet.getName().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand chargeCommand \u003d new ChargeCommand(INDEX_FIRST_PET, chargeDate, charge);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        String attendance \u003d chargeCommand.getAttendance(firstPet);","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        String month \u003d chargeCommand.getMonthName();","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        int year \u003d chargeDate.getYear();","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(ChargeCommand.MESSAGE_COMPUTE_CHARGE_SUCCESS, petName, 0.0, month, year)","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"                        + attendance);","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(chargeCommand, model, expectedCommandResult, model);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_computeChargeWithChargeUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge \u003d new Charge(CHARGE_AMOUNT_STUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"                .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        String petName \u003d petToMarkPresent.getName().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand chargeCommand \u003d new ChargeCommand(INDEX_FIRST_PET, chargeDate, charge);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        String attendance \u003d chargeCommand.getAttendance(petToMarkPresent);","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        String month \u003d chargeCommand.getMonthName();","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        int year \u003d chargeDate.getYear();","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(ChargeCommand.MESSAGE_COMPUTE_CHARGE_SUCCESS, petName, 200.50, month, year)","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"                        + attendance);","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(chargeCommand, expectedModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_computeChargeWithMoreChargeUnfilteredList_success() {","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge \u003d new Charge(CHARGE_AMOUNT_STUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB_TWO)","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB_DIFF_MONTH)","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB_DIFF_YEAR)","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"                .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        String petName \u003d petToMarkPresent.getName().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand chargeCommand \u003d new ChargeCommand(INDEX_FIRST_PET, chargeDate, charge);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        String attendance \u003d chargeCommand.getAttendance(petToMarkPresent);","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"        String month \u003d chargeCommand.getMonthName();","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        int year \u003d chargeDate.getYear();","lastModifiedDate":"2022-04-06"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(ChargeCommand.MESSAGE_COMPUTE_CHARGE_SUCCESS, petName, 401.00, month, year)","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"                        + attendance);","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(chargeCommand, expectedModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_computeChargeWithInvalidIndex_failure() {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge \u003d new Charge(CHARGE_AMOUNT_STUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand chargeCommand \u003d new ChargeCommand(outOfBoundIndex, chargeDate, charge);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(chargeCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_computeChargeNoChargefilteredList_success() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_THIRD_PET);","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"        String petName \u003d firstPet.getName().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge \u003d new Charge(CHARGE_AMOUNT_STUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand chargeCommand \u003d new ChargeCommand(INDEX_FIRST_PET, chargeDate, charge);","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"        String attendance \u003d chargeCommand.getAttendance(firstPet);","lastModifiedDate":"2022-04-06"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"        String month \u003d chargeCommand.getMonthName();","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"        int year \u003d chargeDate.getYear();","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(ChargeCommand.MESSAGE_COMPUTE_CHARGE_SUCCESS, petName, 0.0, month, year)","lastModifiedDate":"2022-04-06"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"                        + attendance);","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(chargeCommand, model, expectedCommandResult, model);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_computeChargeWithChargefilteredList_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_THIRD_PET);","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"        Charge charge \u003d new Charge(CHARGE_AMOUNT_STUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB_TWO)","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB_DIFF_MONTH)","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"                .withPresentAttendanceEntry(DATE_STUB_DIFF_YEAR)","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"                .build();","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"Tiffanylin21"},"content":"        model.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"Tiffanylin21"},"content":"        String petName \u003d petToMarkPresent.getName().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand chargeCommand \u003d new ChargeCommand(INDEX_FIRST_PET, chargeDate, charge);","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"        String attendance \u003d chargeCommand.getAttendance(petToMarkPresent);","lastModifiedDate":"2022-04-06"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"        String month \u003d chargeCommand.getMonthName();","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"        int year \u003d chargeDate.getYear();","lastModifiedDate":"2022-04-06"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(ChargeCommand.MESSAGE_COMPUTE_CHARGE_SUCCESS, petName, 401.00, month, year)","lastModifiedDate":"2022-04-06"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"                        + attendance);","lastModifiedDate":"2022-04-06"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(chargeCommand, model, expectedCommandResult, model);","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"Tiffanylin21"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(CHARGE_DATE_STUB, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"Tiffanylin21"},"content":"        YearMonth chargeDateTwo \u003d YearMonth.parse(CHARGE_DATE_STUB_TWO, formatter);","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"Tiffanylin21"},"content":"        final ChargeCommand standardCommand \u003d new ChargeCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"Tiffanylin21"},"content":"                chargeDate, new Charge(CHARGE_AMOUNT_STUB));","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"Tiffanylin21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"Tiffanylin21"},"content":"        ChargeCommand commandWithSameValues \u003d new ChargeCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"                chargeDate, new Charge(CHARGE_AMOUNT_STUB));","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"Tiffanylin21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"Tiffanylin21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"Tiffanylin21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"Tiffanylin21"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new ChargeCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"Tiffanylin21"},"content":"                chargeDate, new Charge(CHARGE_AMOUNT_STUB))));","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"Tiffanylin21"},"content":"        // different charge date, same charge amount and total chargeable -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new ChargeCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"Tiffanylin21"},"content":"                chargeDateTwo, new Charge(CHARGE_AMOUNT_STUB_ZERO))));","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"Tiffanylin21"},"content":"        // different charge amount, same charge amount and total chargeable -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new ChargeCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"Tiffanylin21"},"content":"                chargeDateTwo, new Charge(CHARGE_AMOUNT_STUB_ZERO))));","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Tiffanylin21":182,"soloplxya":16,"tobihy":5}},{"path":"src/test/java/woofareyou/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public void execute_emptyPetBook_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    public void execute_nonEmptyPetBook_success() {","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPetBook(new PetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"soloplxya":5,"-":20,"tobihy":7}},{"path":"src/test/java/woofareyou/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"soloplxya":1,"-":53}},{"path":"src/test/java/woofareyou/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE_TIME;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_CHARGE;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_CHARGE_MONTH_YEAR;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DIET;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DROPOFF;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PICKUP;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.AbsentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PresentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_NAME_BOB_WITH_SPACES \u003d \"Bob    Choo\";","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_PHONE_AMY \u003d \"81234567\";","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_PHONE_BOB \u003d \"61234567\";","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    public static final String VALID_OWNER_NAME_AMY \u003d \"Sarah Lee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    public static final String VALID_OWNER_NAME_BOB \u003d \"Bob Lee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"123 Bobby Street\";","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ADDRESS_BOBA \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friends\";","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_DIET_AMY \u003d \"No meat for Amy for one month\";","lastModifiedDate":"2022-04-05"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_DIET_BOB \u003d \"No dietary restrictions\";","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_CHARGEAMT_AMY \u003d \"200.50\";","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_CHARGEAMT_BOB \u003d \"400.50\";","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_CHARGEDATE_AMY \u003d \"03-2022\";","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_CHARGEDATE_BOB \u003d \"03-2021\";","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGEDATE_AMY \u003d \"22-22\";","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGEAMT_AMY \u003d \"200.509\";","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"    public static final String INVALID_DIET_AMY \u003d \"\u0026\u0026\u0026\u0026\";","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_CHARGE_AMY \u003d \" \" + PREFIX_CHARGE_MONTH_YEAR + VALID_CHARGEDATE_AMY","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"            + \" \" + PREFIX_CHARGE + VALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGE_AMY_NO_CHARGE_DATE \u003d \" \" + PREFIX_CHARGE_MONTH_YEAR","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"            + \" \" + PREFIX_CHARGE + VALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGE_AMY_NO_CHARGE_AMOUNT \u003d \" \" + PREFIX_CHARGE_MONTH_YEAR","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"            + VALID_CHARGEDATE_AMY + \" \" + PREFIX_CHARGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGE_AMY_INVALID_CHARGE_DATE \u003d \" \" + PREFIX_CHARGE_MONTH_YEAR","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"            + INVALID_CHARGEDATE_AMY + \" \" + PREFIX_CHARGE + VALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGE_AMY_INVALID_CHARGE_AMOUNT \u003d \" \" + PREFIX_CHARGE_MONTH_YEAR","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"            + VALID_CHARGEDATE_AMY + \" \" + PREFIX_CHARGE + INVALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String INVALID_CHARGE_AMY_INVALID_ARGS \u003d \" \" + PREFIX_CHARGE_MONTH_YEAR","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"            + INVALID_CHARGEDATE_AMY + \" \" + PREFIX_CHARGE + INVALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"    public static final String INVALID_APPT_DATE_AMY \u003d \"27-03-2022\";","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ATTENDANCE_DATE_AMY \u003d \"27-03-2022\";","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ATTENDANCE_DATE_BOB \u003d \"28-03-2022\";","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ATTENDANCE_DATE_CHARLIE \u003d \"27-03-2022\";","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_APPT_DATE_AMY \u003d \"27-03-2024\";","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_APPT_TIME_AMY \u003d \"12:00\";","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_PICKUP_TIME_AMY \u003d \"09:00\";","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_PICKUP_TIME_BOB \u003d \"10:00\";","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_DROPOFF_TIME_AMY \u003d \"17:30\";","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_DROPOFF_TIME_BOB \u003d \"18:30\";","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"    public static final String APPT_DESC_AMY \u003d \" \" + PREFIX_APPOINTMENT_DATE_TIME","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"            + VALID_APPT_DATE_AMY + \" \" + VALID_APPT_TIME_AMY","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"            + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"    public static final String DIET_DESC_AMY \u003d \" \" + PREFIX_DIET + VALID_DIET_AMY;","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_DESC_AMY \u003d \" \" + PREFIX_OWNER_NAME + VALID_OWNER_NAME_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_DESC_BOB \u003d \" \" + PREFIX_OWNER_NAME + VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_ATTENDANCE_DATE_AMY;","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_ATTENDANCE_DATE_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_DESC_CHARLIE \u003d \" \" + PREFIX_DATE + VALID_ATTENDANCE_DATE_CHARLIE;","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"    public static final String PICKUP_TIME_DESC_AMY \u003d \" \" + PREFIX_PICKUP + VALID_PICKUP_TIME_AMY;","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"    public static final String PICKUP_TIME_DESC_BOB \u003d \" \" + PREFIX_PICKUP + VALID_PICKUP_TIME_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"    public static final String DROPOFF_TIME_DESC_AMY \u003d \" \" + PREFIX_DROPOFF + VALID_DROPOFF_TIME_AMY;","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    public static final String DROPOFF_TIME_DESC_BOB \u003d \" \" + PREFIX_DROPOFF + VALID_DROPOFF_TIME_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"    public static final String INVALID_DIET_DESC \u003d \" \" + PREFIX_DIET + INVALID_DIET_AMY; // special characters","lastModifiedDate":"2022-04-05"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"    public static final String INVALID_APPT_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE_TIME // past date","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"            + INVALID_APPT_DATE_AMY + \" \" + VALID_PICKUP_TIME_AMY","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"            + \" \" + PREFIX_APPOINTMENT_LOCATION + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"    // not allowed","lastModifiedDate":"2022-04-05"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"    // \u0027!\u0027 not allowed in ownerNames","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"    public static final String INVALID_OWNER_NAME_DESC \u003d \" \" + PREFIX_OWNER_NAME + \"bob!yahoo\";","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"    public static final EditCommand.EditPetDescriptor DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"    public static final EditCommand.EditPetDescriptor DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceDescriptor PRESENT_DESC_WITH_TRANSPORT_AMY;","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceDescriptor PRESENT_DESC_WITH_TRANSPORT_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceDescriptor PRESENT_DESC_WITHOUT_TRANSPORT_CHARLIE;","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceDescriptor ABSENT_DESC_AMY;","lastModifiedDate":"2022-04-04"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceDescriptor ABSENT_DESC_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceDescriptor ABSENT_DESC_CHARLIE;","lastModifiedDate":"2022-04-04"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        DESC_AMY \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"            .withPhone(VALID_PHONE_AMY).withOwnerName(VALID_OWNER_NAME_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"            .withTag(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"        DESC_BOB \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"Dineshraj555"},"content":"            .withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"            .withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"        PRESENT_DESC_WITH_TRANSPORT_AMY \u003d new PresentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-04-04"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-27\").withPickUpTime(\"09:00\").withDropOffTime(\"17:30\")","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        PRESENT_DESC_WITH_TRANSPORT_BOB \u003d new PresentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-04-04"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-28\").withPickUpTime(\"10:00\").withDropOffTime(\"18:30\")","lastModifiedDate":"2022-04-04"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-04-04"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        PRESENT_DESC_WITHOUT_TRANSPORT_CHARLIE \u003d new PresentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-04-04"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-27\")","lastModifiedDate":"2022-04-04"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-04-04"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"        ABSENT_DESC_AMY \u003d new AbsentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-04-04"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-27\")","lastModifiedDate":"2022-04-04"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-04-04"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"        ABSENT_DESC_BOB \u003d new AbsentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-04-04"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-28\")","lastModifiedDate":"2022-04-04"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-04-04"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        ABSENT_DESC_CHARLIE \u003d new AbsentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-04-04"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-27\")","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"     * - the pet book, filtered pet list and selected pet in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"        PetBook expectedPetBook \u003d new PetBook(actualModel.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":202,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"        assertEquals(expectedPetBook, actualModel.getPetBook());","lastModifiedDate":"2022-04-08"},{"lineNumber":206,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":210,"author":{"gitId":"Tiffanylin21"},"content":"     * Updates {@code model}\u0027s filtered list to show only the pet at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-08"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"     * {@code model}\u0027s pet book.","lastModifiedDate":"2022-04-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":213,"author":{"gitId":"Tiffanylin21"},"content":"    public static void showPetAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":214,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":216,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d model.getFilteredPetList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"Tiffanylin21"},"content":"        final String[] splitName \u003d pet.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-08"},{"lineNumber":218,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":220,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(1, model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Dineshraj555":7,"Tiffanylin21":36,"soloplxya":46,"-":83,"tobihy":51}},{"path":"src/test/java/woofareyou/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PET_SUCCESS, petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.deletePet(petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PET_SUCCESS, petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.deletePet(petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        showNoPet(expectedModel);","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        // ensures that outOfBoundIndex is still in bounds of pet book list","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetBook().getPetList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"    private void showNoPet(Model model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(p -\u003e false);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(model.getFilteredPetList().isEmpty());","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Tiffanylin21":12,"soloplxya":22,"-":69,"tobihy":6}},{"path":"src/test/java/woofareyou/logic/commands/DietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_DIET_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_DIET_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"class DietCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    private static final String DIET_STUB \u003d \"Some diet\";","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    public void execute_addDietUnfilteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet).withDiet(DIET_STUB).build();","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        DietCommand dietCommand \u003d new DietCommand(INDEX_FIRST_PET, new Diet(editedPet.getDiet().value));","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DietCommand.MESSAGE_ADD_DIET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(dietCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    public void execute_deleteDietUnfilteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet).withDiet(\"\").build();","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        DietCommand dietCommand \u003d new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"                new Diet(editedPet.getDiet().toString()));","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DietCommand.MESSAGE_DELETE_DIET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(dietCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-09"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased()))","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"                .withDiet(DIET_STUB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        DietCommand dietCommand \u003d new DietCommand(INDEX_FIRST_PET, new Diet(editedPet.getDiet().value));","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DietCommand.MESSAGE_ADD_DIET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(firstPet, editedPet);","lastModifiedDate":"2022-04-09"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(dietCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_invalidPetIndexUnfilteredList_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"        DietCommand dietCommand \u003d new DietCommand(outOfBoundIndex, new Diet(VALID_DIET_BOB));","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        assertCommandFailure(dietCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"    /**s","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"     * but smaller than size of pet book","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_invalidPetIndexFilteredList_failure() {","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        // ensures that outOfBoundIndex is still in bounds of pet book list","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetBook().getPetList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"        DietCommand remarkCommand \u003d new DietCommand(outOfBoundIndex, new Diet(VALID_DIET_BOB));","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"    public void equals() {","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"        final DietCommand standardCommand \u003d new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-04-08"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_AMY));","lastModifiedDate":"2022-04-08"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"        DietCommand commandWithSameValues \u003d new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_AMY));","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new DietCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_AMY))));","lastModifiedDate":"2022-04-08"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-04-08"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_BOB))));","lastModifiedDate":"2022-04-08"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Dineshraj555":1,"Tiffanylin21":17,"soloplxya":102,"tobihy":9}},{"path":"src/test/java/woofareyou/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(editedPet).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, descriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        Index indexLastPet \u003d Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        Pet lastPet \u003d model.getFilteredPetList().get(indexLastPet.getZeroBased());","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"        PetBuilder petInList \u003d new PetBuilder(lastPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d petInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"                .withPhone(VALID_PHONE_BOB).withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPet, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        expectedModel.setPet(lastPet, editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, new EditPetDescriptor());","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petInFilteredList \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(petInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"                new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), editedPet);","lastModifiedDate":"2022-04-01"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"    public void execute_duplicatePetUnfilteredList_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(firstPet).build();","lastModifiedDate":"2022-04-01"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PET, descriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"    public void execute_duplicatePetFilteredList_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"        // edit pet in filtered list into a duplicate in pet book","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        Pet petInList \u003d model.getPetBook().getPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"                new EditPetDescriptorBuilder(petInList).build());","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"    public void execute_duplicatePetDifferentTagUnfilteredList_failure() {","lastModifiedDate":"2022-04-05"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-04-05"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(firstPet).withTag(\"poodle\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PET, descriptor);","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"    public void execute_duplicatePetDifferentTagFilteredList_failure() {","lastModifiedDate":"2022-04-05"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-04-05"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        Pet petInList \u003d model.getPetBook().getPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(petInList).withTag(\"poodle\").build();","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, descriptor);","lastModifiedDate":"2022-04-05"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-04-05"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"    public void execute_invalidPetIndexUnfilteredList_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-04-01"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-04-01"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"     * but smaller than size of pet book","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"    public void execute_invalidPetIndexFilteredList_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"        // ensures that outOfBoundIndex is still in bounds of pet book list","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetBook().getPetList().size());","lastModifiedDate":"2022-04-08"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-04-01"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"                new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"soloplxya"},"content":"    public void equals() {","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PET, DESC_AMY);","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor copyDescriptor \u003d new EditPetDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PET, copyDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"soloplxya"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-04-01"},{"lineNumber":177,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":178,"author":{"gitId":"soloplxya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":179,"author":{"gitId":"soloplxya"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-04-01"},{"lineNumber":180,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":181,"author":{"gitId":"soloplxya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":182,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-04-01"},{"lineNumber":183,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":184,"author":{"gitId":"soloplxya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":185,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-04-01"},{"lineNumber":186,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":187,"author":{"gitId":"soloplxya"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":188,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PET, DESC_AMY)));","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":190,"author":{"gitId":"soloplxya"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":191,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PET, DESC_BOB)));","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":193,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":194,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"Dineshraj555":1,"Tiffanylin21":28,"soloplxya":130,"-":7,"tobihy":28}},{"path":"src/test/java/woofareyou/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":17}},{"path":"src/test/java/woofareyou/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.FILTER_MESSAGE_SUCCESS;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.FilterUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    private static final String DROPOFF_TIME_STUB \u003d \"17:30\";","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    private static final String APPOINTMENT_DATE_TIME_STUB \u003d \"02-04-2022 09:30\";","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    private static final String APPOINTMENT_LOCATION_STUB \u003d \"NUS Vet Clinic\";","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    private static final Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    private static final Model expectedModel \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    public void equals_date_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate firstDatePredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate secondDatePredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"22-03-2022\");","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterFirstCommand \u003d new FilterCommand(firstDatePredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterSecondCommand \u003d new FilterCommand(secondDatePredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"            FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstDatePredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"    public void equals_app_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate firstAppPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate secondAppPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(\"22-03-2022\");","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterFirstCommand \u003d new FilterCommand(firstAppPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterSecondCommand \u003d new FilterCommand(secondAppPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"            FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstAppPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"tsumian"},"content":"    public void equals_owner_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate firstOwnerPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(\"first\");","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondOwnerPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(\"Second\");","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstOwnerPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondOwnerPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"        FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstOwnerPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"tsumian"},"content":"    public void equals_tags_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstTagPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"first\");","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondTagPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"second\");","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstTagPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondTagPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"        FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstTagPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"    public static void setAttendance() {","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"        Pet firstPetToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"                .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"        Pet secondPetToMarkPresent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"                .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(firstPet, firstPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(secondPet, secondPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"    public void execute_noFilteredDateMatch_noPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"22-03-2021\");","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"soloplxya"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":184,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"tsumian"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"tsumian"},"content":"    public void execute_attendanceDateMatch_multiplePetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"        Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"soloplxya"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 2, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":203,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"tsumian"},"content":"    public void execute_ownerNameMatch_noPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d new OwnerNameContainsFilterWordPredicate(\"Poopoo\");","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"soloplxya"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":216,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"    public void execute_ownerNameMatch_onePetFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":224,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d new OwnerNameContainsFilterWordPredicate(\"Alice Paul\");","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"soloplxya"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 1, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"tsumian"},"content":"    public static void setTags() {","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"tsumian"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"        Pet firstPetSetTag \u003d new PetBuilder(firstPet).withTags(\"Golden Retriever\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_THIRD_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"        Pet secondPetSetTag \u003d new PetBuilder(secondPet).withTags(\"Golden Retriever\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"tsumian"},"content":"        model.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":245,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"    public void execute_tagMatch_zeroPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate predicate \u003d new TagContainsFilterWordPredicate(\"Nothing\");","lastModifiedDate":"2022-03-26"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":251,"author":{"gitId":"soloplxya"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":253,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":254,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":255,"author":{"gitId":"tsumian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":259,"author":{"gitId":"tsumian"},"content":"    public void execute_tagMatch_multiplePetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate predicate \u003d new TagContainsFilterWordPredicate(\"Golden Retriever\");","lastModifiedDate":"2022-03-26"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"soloplxya"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 2, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":263,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":269,"author":{"gitId":"tsumian"},"content":"    public static void setApp() {","lastModifiedDate":"2022-03-26"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"tsumian"},"content":"        Pet firstPetSetTag \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB, APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_THIRD_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"        Pet secondPetSetTag \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB, APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":277,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"tsumian"},"content":"        model.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":280,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":281,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":285,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":286,"author":{"gitId":"tsumian"},"content":"    public void execute_appMatch_zeroPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":287,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":288,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d new AppointmentContainsFilterWordPredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":289,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":290,"author":{"gitId":"soloplxya"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":293,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":294,"author":{"gitId":"tsumian"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":295,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":296,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":297,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":298,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":299,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":300,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":301,"author":{"gitId":"tsumian"},"content":"    public void execute_appMatch_multiplePetsFound () {","lastModifiedDate":"2022-03-26"},{"lineNumber":302,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":303,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d new AppointmentContainsFilterWordPredicate(\"02-04-2022\");","lastModifiedDate":"2022-03-26"},{"lineNumber":304,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":305,"author":{"gitId":"soloplxya"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 2, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-04-08"},{"lineNumber":306,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":307,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":308,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":309,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":310,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":311,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":312,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":313,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":282,"soloplxya":25,"tobihy":6}},{"path":"src/test/java/woofareyou/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_PETS_FOUND;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.BAGEL;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.PANCAKE;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.WAFFLE;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_zeroKeywords_noPetFound() {","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PETS_FOUND, 0);","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_multipleKeywords_multiplePetsFound() {","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PETS_FOUND, 3);","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Bagel Pancake Waffle\");","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        assertEquals(Arrays.asList(BAGEL, PANCAKE, WAFFLE), model.getFilteredPetList());","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":13,"-":60,"tobihy":3}},{"path":"src/test/java/woofareyou/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":17}},{"path":"src/test/java/woofareyou/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        expectedModel \u003d new ModelManager(model.getPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"soloplxya":8,"-":28,"tobihy":3}},{"path":"src/test/java/woofareyou/logic/commands/PresentAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PRESENT_DESC_WITHOUT_TRANSPORT_CHARLIE;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PRESENT_DESC_WITH_TRANSPORT_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FOURTH_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.util.AttendanceUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PresentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private static final String MESSAGE_DATE_STUB \u003d LocalDate.now().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static final String ALTERNATE_PICKUP_TIME_STUB \u003d \"09:30\";","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static final String DROPOFF_TIME_STUB \u003d \"17:30\";","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    private static final String ALTERNATE_DROPOFF_TIME_STUB \u003d \"18:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    private static PresentAttendanceDescriptor descriptorWithTransportArrangement;","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    private static PresentAttendanceDescriptor descriptorWithoutTransportArrangement;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    private static PresentAttendanceDescriptor alternateDescriptorWithTransportArrangement;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    static void setupDescriptors() {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        descriptorWithTransportArrangement \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptorBuilder().withDate(DATE_STUB).withPickUpTime(PICKUP_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"                .withDropOffTime(DROPOFF_TIME_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        descriptorWithoutTransportArrangement \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptorBuilder().withDate(DATE_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        alternateDescriptorWithTransportArrangement \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptorBuilder().withDate(DATE_STUB).withPickUpTime(ALTERNATE_PICKUP_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                .withDropOffTime(ALTERNATE_DROPOFF_TIME_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    // Pet does not have any attendance entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithTransportUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithTransportFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithoutTransportUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithoutTransportFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry with a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithAlternateTransportUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, ALTERNATE_PICKUP_TIME_STUB, ALTERNATE_DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"            alternateDescriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, alternateDescriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithAlternateTransportFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_SECOND_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, ALTERNATE_PICKUP_TIME_STUB, ALTERNATE_DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"            alternateDescriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, alternateDescriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":201,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithDuplicateDetailsUnfilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"tobihy"},"content":"            secondPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithDuplicateDetailsFilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"tobihy"},"content":"            secondPet.getName(),","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry without a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FOURTH_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"tobihy"},"content":"            INDEX_FOURTH_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":263,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FOURTH_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":289,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":290,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentUnfilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":297,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FOURTH_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":298,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":299,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":300,"author":{"gitId":"tobihy"},"content":"            INDEX_FOURTH_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":301,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":302,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":303,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":304,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":305,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":306,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":307,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":308,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":310,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":311,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":312,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":313,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":314,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentFilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FOURTH_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":317,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":318,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":319,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":320,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":321,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":322,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":323,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":324,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":325,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":326,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":327,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":328,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":329,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":330,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":331,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":332,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":334,"author":{"gitId":"tobihy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":335,"author":{"gitId":"tobihy"},"content":"        final PresentAttendanceCommand standardCommand \u003d new PresentAttendanceCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"tobihy"},"content":"            PRESENT_DESC_WITH_TRANSPORT_AMY);","lastModifiedDate":"2022-04-04"},{"lineNumber":337,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":338,"author":{"gitId":"tobihy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceDescriptor copyDescriptor \u003d new PresentAttendanceDescriptor(PRESENT_DESC_WITH_TRANSPORT_AMY);","lastModifiedDate":"2022-04-04"},{"lineNumber":340,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand commandWithSameValues \u003d new PresentAttendanceCommand(INDEX_FIRST_PET, copyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"tobihy"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"tobihy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"tobihy"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"tobihy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"tobihy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"tobihy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(INDEX_SECOND_PET, PRESENT_DESC_WITH_TRANSPORT_AMY)));","lastModifiedDate":"2022-04-04"},{"lineNumber":355,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"tobihy"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":357,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(INDEX_FIRST_PET, PRESENT_DESC_WITHOUT_TRANSPORT_CHARLIE)));","lastModifiedDate":"2022-04-04"},{"lineNumber":359,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":360,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Dineshraj555":4,"soloplxya":17,"tobihy":339}},{"path":"src/test/java/woofareyou/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    private Model model;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Initializes the model and expectedModel before running each test.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        expectedModel \u003d new ModelManager(new PetBook(model.getPetBook()), new UserPrefs(),","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"                model.getLastUsedPredicate());","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks if the pet list gets sorted by owner name after calling the sort command.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsNotFiltered_showsSortedListByOwnerName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        String field \u003d \"owner\";","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(field), model, SortCommand.MESSAGE_SUCCESS + field, expectedModel);","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks if the pet list gets sorted by pet name after calling the sort command.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        String field \u003d \"name\";","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(field), model, SortCommand.MESSAGE_SUCCESS + field, expectedModel);","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     * Test method that checks if the pet list gets sorted by pet appointment after calling the sort command.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetAppointment() {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        String field \u003d \"app\";","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(field), model, SortCommand.MESSAGE_SUCCESS + field, expectedModel);","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"     * Test method that checks if the pet list gets sorted by pet name after calling the sort command.","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetDropOffTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"        String field \u003d \"drop off\";","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(field), model, SortCommand.MESSAGE_SUCCESS + field, expectedModel);","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"     * Test method that checks if the pet list gets sorted by pet appointment after calling the sort command.","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetPickUpTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"        String field \u003d \"pick up\";","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(field), model, SortCommand.MESSAGE_SUCCESS + field, expectedModel);","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Dineshraj555":38,"soloplxya":37,"tobihy":4}},{"path":"src/test/java/woofareyou/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.commands;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.ModelManager;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    private static final String APPOINTMENT_DATE_TIME_STUB \u003d \"02-04-2022 09:30\";","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    private static final String APPOINTMENT_LOCATION_STUB \u003d \"NUS Vet Clinic\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    private static final String DIET_STUB \u003d \"Some diet\";","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    private static final String DROPOFF_TIME_STUB \u003d \"17:30\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    private Model model;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * Initializes the model and expectedModel before running each test.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        model \u003d new ModelManager(getTypicalPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        expectedModel \u003d new ModelManager(model.getPetBook(), new UserPrefs());","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of a delete command","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoDeleteCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        // Model result","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        model.deletePet(petToDelete);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of an add command","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoAddCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        Pet alice \u003d new PetBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        model.addPet(alice);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of an appointment command","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoAppointmentCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB,","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"                        APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, editedPet);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of a diet command","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoDietCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"                .withDiet(DIET_STUB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, editedPet);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of a sort command","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoSortCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"        model.sortPetList(\"owner\");","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of an edit command.","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoEditCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        Index indexLastPet \u003d Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"        Pet lastPet \u003d model.getFilteredPetList().get(indexLastPet.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        PetBuilder petInList \u003d new PetBuilder(lastPet);","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d petInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"        model.setPet(lastPet, editedPet);","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of the present attendance command.","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoAddAttendanceCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"                .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of the absent attendance command.","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoRemoveAttendanceCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, petToMarkAbsent);","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Dineshraj555":1,"soloplxya":160,"tobihy":3}},{"path":"src/test/java/woofareyou/logic/parser/AbsentAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ABSENT_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ATTENDANCE_DATE_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ATTENDANCE_DATE_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ATTENDANCE_DATE_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommandParserTest {","lastModifiedDate":"2022-04-04"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    private static final Index TARGET_PET_INDEX \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-04-04"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private static final String NEGATIVE_INDEX_STUB \u003d \"-1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private static final String ZERO_INDEX_STUB \u003d \"0\";","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    private static final String ALPHABET_INDEX_STUB \u003d \"two\";","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    private static final String SYMBOL_INDEX_STUB \u003d \"%^\u0026\";","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    private final AbsentAttendanceCommandParser parser \u003d new AbsentAttendanceCommandParser();","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceDescriptor expectedDescriptor \u003d ABSENT_DESC_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        // no multiple fields","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_BOB,","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            + ATTENDANCE_DATE_DESC_BOB, new AbsentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        String wrongCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"            AbsentAttendanceCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        // missing pet index","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, ATTENDANCE_DATE_DESC_AMY, wrongCommandFormatMessage);","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        // missing attendance date","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, Integer.toString(TARGET_PET_INDEX.getOneBased()), wrongCommandFormatMessage);","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        // all prefixes missing","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + VALID_ATTENDANCE_DATE_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"            wrongCommandFormatMessage);","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        // negative index","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, NEGATIVE_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        // zero index","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, ZERO_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        // alphabetical index","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, ALPHABET_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        // symbol index","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, SYMBOL_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    public void parse_invalidAttendanceDate_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        String[] wrongFormatUserInput \u003d {\"02-25-2022\", \"2-25-2022\", \"2-1-2022\", \"25/02/2022\"};","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        String[] invalidDatesUserInput \u003d {\"99-12-2022\", \"-1-12-2022\", \"31-02-2022\"}; // leap year","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        // wrong format","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        for (String s : wrongFormatUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + \" \" + createAttendanceDateDesc(s),","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_ATTENDANCE_DATE);","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"        // invalid dates","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidDatesUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + \" \" + createAttendanceDateDesc(s),","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_ATTENDANCE_DATE);","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"    private static String createAttendanceDateDesc(String date) {","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        return \" \" + PREFIX_DATE + date;","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"Tiffanylin21":4,"soloplxya":14,"tobihy":80}},{"path":"src/test/java/woofareyou/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_OWNER_NAME_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.OWNER_NAME_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        Pet expectedPet \u003d new PetBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        // multiple ownerNames - last ownerName accepted","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_AMY + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        // zero tags","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        Pet expectedPet \u003d new PetBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + OWNER_NAME_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        // missing name prefix","lastModifiedDate":"2022-04-01"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"                expectedMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"        // missing phone prefix","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"                expectedMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        // missing ownerName prefix","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_OWNER_NAME_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"                expectedMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"        // missing address prefix","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"                expectedMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"        // all prefixes missing","lastModifiedDate":"2022-04-01"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_OWNER_NAME_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"                expectedMessage);","lastModifiedDate":"2022-04-01"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"        // invalid name","lastModifiedDate":"2022-04-01"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"                + TAG_DESC_HUSBAND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"        // invalid phone","lastModifiedDate":"2022-04-01"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"                + TAG_DESC_HUSBAND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        // invalid ownerName","lastModifiedDate":"2022-04-09"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_OWNER_NAME_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"                + TAG_DESC_HUSBAND, OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        // invalid address","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"                + TAG_DESC_HUSBAND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"        // invalid tag","lastModifiedDate":"2022-04-01"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"                + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        // invalid number of tags","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Tag.MESSAGE_SIZE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-04-01"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"        // non-empty preamble","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"Dineshraj555":18,"Tiffanylin21":10,"soloplxya":108,"-":2}},{"path":"src/test/java/woofareyou/logic/parser/AppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.APPT_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_APPT_DATE_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_APPT_TIME_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AppointmentCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"public class AppointmentCommandParserTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    private static final String NEG_INTEGER_MAX \u003d String.valueOf(-(Integer.MAX_VALUE + 1));","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    private static final String POS_INTEGER_MAX \u003d String.valueOf(Integer.MAX_VALUE + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\")","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    private AppointmentCommandParser parser \u003d new AppointmentCommandParser();","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    public void parse_indexOutOfBoundsIntegerOverflow_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        // large positive number","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, POS_INTEGER_MAX + APPT_DESC_AMY, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        // large negative number","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, NEG_INTEGER_MAX + APPT_DESC_AMY, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    public void parse_validArgs_returnsApptCommand() {","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        String userInput \u003d INDEX_FIRST_PET.getOneBased() + APPT_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(VALID_APPT_DATE_AMY + \" \" + VALID_APPT_TIME_AMY,","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"                dateFormatter);","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        Appointment newApp \u003d new Appointment(dateTime, VALID_ADDRESS_AMY);","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        assertParseSuccess(parser, userInput, new AppointmentCommand(INDEX_FIRST_PET, newApp));","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"soloplxya":48}},{"path":"src/test/java/woofareyou/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"soloplxya":1,"-":149}},{"path":"src/test/java/woofareyou/logic/parser/ChargeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_CHARGE_AMY_INVALID_ARGS;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_CHARGE_AMY_INVALID_CHARGE_AMOUNT;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_CHARGE_AMY_INVALID_CHARGE_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_CHARGE_AMY_NO_CHARGE_AMOUNT;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_CHARGE_AMY_NO_CHARGE_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_CHARGEDATE_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_CHARGE_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import java.time.YearMonth;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ChargeCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.charge.Charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"public class ChargeCommandParserTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    private ChargeCommandParser parser \u003d new ChargeCommandParser();","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-yyyy\");","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_CHARGE_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        YearMonth chargeDate \u003d YearMonth.parse(VALID_CHARGEDATE_AMY, formatter);","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        Charge charge \u003d new Charge(VALID_CHARGEAMT_AMY);","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        ChargeCommand expectedCommand \u003d new ChargeCommand(targetIndex, chargeDate, charge);","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        // no index specified","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, VALID_CHARGE_AMY, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        // no charge date and amount specified","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"                ChargeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        // no charge date only","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_CHARGE_AMY_NO_CHARGE_DATE,","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChargeCommand.MESSAGE_INVALID_DATE_FORMAT));","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"        // no charge amount only","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_CHARGE_AMY_NO_CHARGE_AMOUNT,","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Charge.MESSAGE_INVALID_CHARGE_FORMAT));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        // invalid charge date","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_CHARGE_AMY_INVALID_CHARGE_DATE,","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChargeCommand.MESSAGE_INVALID_DATE_FORMAT));","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        // invalid charge","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_CHARGE_AMY_INVALID_CHARGE_AMOUNT,","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Charge.MESSAGE_INVALID_CHARGE_FORMAT));","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_CHARGE_AMY_INVALID_ARGS,","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChargeCommand.MESSAGE_INVALID_DATE_FORMAT));","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":69}},{"path":"src/test/java/woofareyou/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.Command;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"soloplxya":3,"-":35}},{"path":"src/test/java/woofareyou/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DeleteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    private static final String NEG_INTEGER_MAX \u003d String.valueOf(-(Integer.MAX_VALUE + 1));","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    private static final String POS_INTEGER_MAX \u003d String.valueOf(Integer.MAX_VALUE + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PET));","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    public void parse_indexOutOfBoundsIntegerOverflow_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        // large positive number","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, POS_INTEGER_MAX, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        // large negative number","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, NEG_INTEGER_MAX, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tiffanylin21":1,"soloplxya":19,"-":24}},{"path":"src/test/java/woofareyou/logic/parser/DietCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.DIET_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_DIET_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_DIET_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DietCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"public class DietCommandParserTest {","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    private static final String NEG_INTEGER_MAX \u003d String.valueOf(-(Integer.MAX_VALUE + 1));","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    private static final String POS_INTEGER_MAX \u003d String.valueOf(Integer.MAX_VALUE + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    private DietCommandParser parser \u003d new DietCommandParser();","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        // diet with special characters","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, INVALID_DIET_DESC, Diet.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    public void parse_validValue_success() {","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        String userInput \u003d INDEX_FIRST_PET.getOneBased() + DIET_DESC_AMY;","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        // valid diet - only contains alphanumeric characters and spaces","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        assertParseSuccess(parser, userInput, new DietCommand(INDEX_FIRST_PET, new Diet(VALID_DIET_AMY)));","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    public void parse_indexOutOfBoundsIntegerOverflow_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        // large positive number","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, POS_INTEGER_MAX + DIET_DESC_AMY, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        // large negative number","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, NEG_INTEGER_MAX + DIET_DESC_AMY, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"Tiffanylin21":1,"soloplxya":41}},{"path":"src/test/java/woofareyou/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_OWNER_NAME_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.OWNER_NAME_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_OWNER_NAME_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"    private static final String NEG_INTEGER_MAX \u003d String.valueOf(-(Integer.MAX_VALUE + 1));","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"    private static final String POS_INTEGER_MAX \u003d String.valueOf(Integer.MAX_VALUE + 1);","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"        // no index specified","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        // no field specified","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        // no index and no field specified","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"        // negative index","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        // zero index","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"1 some random string\" + NAME_DESC_AMY,","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"                Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-04-01"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"1 i/ string\" + NAME_DESC_AMY, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        // invalid ownerName","lastModifiedDate":"2022-04-01"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, \"1\" + INVALID_OWNER_NAME_DESC, OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"        // invalid number of tags","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_SIZE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"        // invalid tag","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"        // invalid phone followed by valid ownerName","lastModifiedDate":"2022-04-01"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + OWNER_NAME_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_OWNER_NAME_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"                + OWNER_NAME_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"                .withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"                .withTag(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"                .withOwnerName(VALID_OWNER_NAME_AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"        // name","lastModifiedDate":"2022-04-01"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_THIRD_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"        // phone","lastModifiedDate":"2022-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"        // ownerName","lastModifiedDate":"2022-04-01"},{"lineNumber":160,"author":{"gitId":"Dineshraj555"},"content":"        userInput \u003d targetIndex.getOneBased() + OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"Dineshraj555"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withOwnerName(VALID_OWNER_NAME_AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"        // address","lastModifiedDate":"2022-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"soloplxya"},"content":"        // tags","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withTag(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"soloplxya"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":177,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":178,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":179,"author":{"gitId":"soloplxya"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-04-01"},{"lineNumber":180,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"Dineshraj555"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + OWNER_NAME_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"soloplxya"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + OWNER_NAME_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-04-07"},{"lineNumber":183,"author":{"gitId":"soloplxya"},"content":"                + ADDRESS_DESC_BOB + OWNER_NAME_DESC_BOB;","lastModifiedDate":"2022-04-07"},{"lineNumber":184,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":185,"author":{"gitId":"soloplxya"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder()","lastModifiedDate":"2022-04-01"},{"lineNumber":186,"author":{"gitId":"Tiffanylin21"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"Dineshraj555"},"content":"                .withOwnerName(VALID_OWNER_NAME_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"Tiffanylin21"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"soloplxya"},"content":"                .withTag(VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-07"},{"lineNumber":190,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-04-01"},{"lineNumber":191,"author":{"gitId":"soloplxya"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":192,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":195,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":196,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":197,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":198,"author":{"gitId":"soloplxya"},"content":"        // no other valid values specified","lastModifiedDate":"2022-04-01"},{"lineNumber":199,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":202,"author":{"gitId":"soloplxya"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":205,"author":{"gitId":"soloplxya"},"content":"        // other valid values specified","lastModifiedDate":"2022-04-01"},{"lineNumber":206,"author":{"gitId":"Dineshraj555"},"content":"        userInput \u003d targetIndex.getOneBased() + OWNER_NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"Dineshraj555"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"soloplxya"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":213,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":214,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":215,"author":{"gitId":"soloplxya"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":216,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_THIRD_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"soloplxya"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-04-01"},{"lineNumber":218,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":219,"author":{"gitId":"soloplxya"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withTag().build();","lastModifiedDate":"2022-04-07"},{"lineNumber":220,"author":{"gitId":"soloplxya"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-01"},{"lineNumber":221,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":223,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":224,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":225,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":226,"author":{"gitId":"soloplxya"},"content":"    public void parse_indexOutOfBoundsIntegerOverflow_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":227,"author":{"gitId":"soloplxya"},"content":"        // large positive number","lastModifiedDate":"2022-04-08"},{"lineNumber":228,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, POS_INTEGER_MAX + TAG_DESC_HUSBAND, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":229,"author":{"gitId":"soloplxya"},"content":"        // large negative number","lastModifiedDate":"2022-04-08"},{"lineNumber":230,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, NEG_INTEGER_MAX + TAG_DESC_HUSBAND, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-08"},{"lineNumber":231,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":232,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":233,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"Dineshraj555":12,"Tiffanylin21":21,"soloplxya":169,"-":31}},{"path":"src/test/java/woofareyou/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FilterCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    public void parse_moreThanOneField_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"byDate/today byOwner/Alice\",","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"                Messages.FILTER_COMMAND_MORE_THAN_ONE_FIELD);","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    public void parse_invalidField_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"byOtherStuff/abc\",","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"                FilterCommand.INVALID_FILTER_FIELD);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    public void parse_emptyKeyword_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"byDate/\",","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"                \"You did not provide a keyword!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    public void parse_validOwnerArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"                new FilterCommand(new OwnerNameContainsFilterWordPredicate(\"Alice\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        assertParseSuccess(parser, \" byOwner/Alice\", expectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"    public void parse_validTagArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"                new FilterCommand(new TagContainsFilterWordPredicate(\"ABC\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"        assertParseSuccess(parser, \" byTag/ABC\", expectedFilterCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"    public void parse_validTagArgs_returnsFilterCommand() {","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"                new FilterCommand(new TagContainsFilterWordPredicate(\"ABC EFG\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        assertParseSuccess(parser, \" byTag/ABC EFG\", expectedFilterCommand);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"    public void parse_validDateArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"            FilterCommand firstExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new DateContainsFilterDatePredicate(\"today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"            FilterCommand secondExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new DateContainsFilterDatePredicate(\"23-03-2022\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byDate/today\", firstExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byDate/23-03-2022\", secondExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"    public void parse_validAppArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"            FilterCommand firstExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new AppointmentContainsFilterWordPredicate(\"today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"            FilterCommand secondExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new AppointmentContainsFilterWordPredicate(\"23-03-2022\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byApp/today\", firstExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byApp/23-03-2022\", secondExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":75,"soloplxya":20}},{"path":"src/test/java/woofareyou/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FindCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":32}},{"path":"src/test/java/woofareyou/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    private static final String INVALID_DIET \u003d \"%%%%%\";","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String INVALID_OWNERNAME \u003d \"S@rah\";","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_DIET \u003d \"Test abc\";","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_PHONE \u003d \"82345678\";","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String VALID_OWNERNAME \u003d \"Sarah\";","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX, ()","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"            -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX, ()","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        assertEquals(INDEX_FIRST_PET, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        assertEquals(INDEX_FIRST_PET, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"    public void parseDiet_invalidValue_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDiet(INVALID_DIET));","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"    public void parseDiet_validValueWithoutWhitespace_returnsDiet() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"        Diet expectedDiet \u003d new Diet(VALID_DIET);","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedDiet, ParserUtil.parseDiet(VALID_DIET));","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"    public void parseDiet_validValueWithWhitespace_returnsTrimmedDiet() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"        String dietWithWhitespace \u003d WHITESPACE + VALID_DIET + WHITESPACE;","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"        Diet expectedDiet \u003d new Diet(VALID_DIET);","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedDiet, ParserUtil.parseDiet(dietWithWhitespace));","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-04-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-04-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-04-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-04-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOwnerName((String) null));","lastModifiedDate":"2022-04-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOwnerName(INVALID_OWNERNAME));","lastModifiedDate":"2022-04-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_validValueWithoutWhitespace_returnsOwnerName() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"        OwnerName expectedOwnerName \u003d new OwnerName(VALID_OWNERNAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedOwnerName, ParserUtil.parseOwnerName(VALID_OWNERNAME));","lastModifiedDate":"2022-04-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_validValueWithWhitespace_returnsTrimmedOwnerName() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"        String ownerNameWithWhitespace \u003d WHITESPACE + VALID_OWNERNAME + WHITESPACE;","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"Tiffanylin21"},"content":"        OwnerName expectedOwnerName \u003d new OwnerName(VALID_OWNERNAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedOwnerName, ParserUtil.parseOwnerName(ownerNameWithWhitespace));","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-04-08"},{"lineNumber":184,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":185,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":186,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":187,"author":{"gitId":"soloplxya"},"content":"    public void parseTag_multipleTags_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":188,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(TAG_DESC_FRIEND + TAG_DESC_HUSBAND));","lastModifiedDate":"2022-04-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-04-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-04-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":206,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"soloplxya"},"content":"    public void parseTags_collectionWithInvalidTag_throwsParseException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":211,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Collections.singletonList(INVALID_TAG)));","lastModifiedDate":"2022-04-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"    public void parseAttendanceDate_returnsLocalDate() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"tsumian"},"content":"        LocalDate expectedLocalDate \u003d LocalDate.parse(\"22-03-2022\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseAttendanceDate(\"22-03-2022\"), expectedLocalDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendanceDate(\"2022-03-22\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"tsumian"},"content":"    public void parseAppointmentDateTime_returnsLocalDateTime() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"soloplxya"},"content":"        LocalDateTime expectedLocalDateTime \u003d LocalDateTime.parse(\"22-08-2024 09:00\", formatter);","lastModifiedDate":"2022-04-08"},{"lineNumber":231,"author":{"gitId":"soloplxya"},"content":"        assertEquals(ParserUtil.parseAppointmentDateTime(\"22-08-2024 09:00\"), expectedLocalDateTime);","lastModifiedDate":"2022-04-08"},{"lineNumber":232,"author":{"gitId":"soloplxya"},"content":"        // invalid date","lastModifiedDate":"2022-04-08"},{"lineNumber":233,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"2022-03-22 08:30\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":234,"author":{"gitId":"soloplxya"},"content":"        // invalid time","lastModifiedDate":"2022-04-08"},{"lineNumber":235,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"22-03-2023 0830\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":236,"author":{"gitId":"soloplxya"},"content":"        // missing date or time","lastModifiedDate":"2022-04-08"},{"lineNumber":237,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"22-08-2024\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":238,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"09:00\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":239,"author":{"gitId":"soloplxya"},"content":"        // missing date and time","lastModifiedDate":"2022-04-08"},{"lineNumber":240,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\" \"));","lastModifiedDate":"2022-04-08"},{"lineNumber":241,"author":{"gitId":"soloplxya"},"content":"        // leap year","lastModifiedDate":"2022-04-08"},{"lineNumber":242,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"30-02-2024 09:00\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":243,"author":{"gitId":"soloplxya"},"content":"        // previous dates","lastModifiedDate":"2022-04-08"},{"lineNumber":244,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"04-04-2022 09:00\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":245,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"    public void parseFilterDate_returnsLocalDate() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"tsumian"},"content":"        LocalDate expectedLocalDate \u003d LocalDate.parse(\"22-03-2022\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseFilterDate(\"22-03-2022\"), expectedLocalDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFilterDate(\"2022-03-22\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":254,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"    public void parseFilterAppDate_returnsLocalDate() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"tsumian"},"content":"        LocalDate expectedLocalDate \u003d LocalDate.parse(\"22-03-2022\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseFilterAppointmentDate(\"22-03-2022\"), expectedLocalDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFilterAppointmentDate(\"2022-03-22\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":262,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":263,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"tsumian"},"content":"    public void parsePickUpTime_returnsLocalTime() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"        LocalTime expectedLocalTime \u003d LocalTime.parse(\"09:00\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parsePickUpTime(\"09:00\"), expectedLocalTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePickUpTime(\"0800\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"    public void parseDropOffTime_returnsLocalTime() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"        LocalTime expectedLocalTime \u003d LocalTime.parse(\"18:00\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseDropOffTime(\"18:00\"), expectedLocalTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"soloplxya"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDropOffTime(\"0800\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Tiffanylin21":9,"tsumian":43,"soloplxya":89,"-":138}},{"path":"src/test/java/woofareyou/logic/parser/PetBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ClearCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.DeleteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ExitCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.FindCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.HelpCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.ListCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"public class PetBookParserTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private final PetBookParser parser \u003d new PetBookParser();","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PetUtil.getAddCommand(pet));","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(new AddCommand(pet), command);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PET.getOneBased());","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PET), command);","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(pet).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"                + INDEX_FIRST_PET.getOneBased() + \" \" + PetUtil.getEditPetDescriptorDetails(descriptor));","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PET, descriptor), command);","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tiffanylin21":4,"soloplxya":25,"-":70,"tobihy":2}},{"path":"src/test/java/woofareyou/logic/parser/PresentAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ATTENDANCE_DATE_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ATTENDANCE_DATE_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.ATTENDANCE_DATE_DESC_CHARLIE;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.DROPOFF_TIME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.DROPOFF_TIME_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PICKUP_TIME_DESC_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PICKUP_TIME_DESC_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PRESENT_DESC_WITHOUT_TRANSPORT_CHARLIE;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.PRESENT_DESC_WITH_TRANSPORT_BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ATTENDANCE_DATE_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_DROPOFF_TIME_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PICKUP_TIME_AMY;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_DROPOFF;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CliSyntax.PREFIX_PICKUP;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand;","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommandParserTest {","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    private static final Index TARGET_PET_INDEX \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private static final String NEGATIVE_INDEX_STUB \u003d \"-1\";","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private static final String ZERO_INDEX_STUB \u003d \"0\";","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private static final String ALPHABET_INDEX_STUB \u003d \"two\";","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static final String SYMBOL_INDEX_STUB \u003d \"%^\u0026\";","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    private final PresentAttendanceCommandParser parser \u003d new PresentAttendanceCommandParser();","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceDescriptor expectedDescriptor \u003d PRESENT_DESC_WITH_TRANSPORT_BOB;","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        // no multiple fields","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_BOB","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"                + PICKUP_TIME_DESC_BOB + DROPOFF_TIME_DESC_BOB,","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"                + ATTENDANCE_DATE_DESC_BOB + PICKUP_TIME_DESC_BOB + DROPOFF_TIME_DESC_BOB,","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        // multiple pick-up times - last pick-up time accepted","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_BOB","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                + PICKUP_TIME_DESC_AMY + PICKUP_TIME_DESC_BOB + DROPOFF_TIME_DESC_BOB,","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        // multiple drop-off times - last drop-off time accepted","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_BOB","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"                + PICKUP_TIME_DESC_BOB + DROPOFF_TIME_DESC_AMY + DROPOFF_TIME_DESC_BOB,","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceDescriptor expectedDescriptor \u003d PRESENT_DESC_WITHOUT_TRANSPORT_CHARLIE;","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        // no pick-up AND drop-off times","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        assertParseSuccess(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_CHARLIE,","lastModifiedDate":"2022-04-04"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(TARGET_PET_INDEX, expectedDescriptor));","lastModifiedDate":"2022-04-04"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        String wrongCommandFormatMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-04"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-04"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        // missing pet index","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, ATTENDANCE_DATE_DESC_AMY + PICKUP_TIME_DESC_AMY + DROPOFF_TIME_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"            wrongCommandFormatMessage);","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        // missing attendance date","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + PICKUP_TIME_DESC_AMY + DROPOFF_TIME_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"            wrongCommandFormatMessage);","lastModifiedDate":"2022-04-04"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"        // all prefixes missing","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + VALID_ATTENDANCE_DATE_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"            + VALID_PICKUP_TIME_AMY + VALID_DROPOFF_TIME_AMY, wrongCommandFormatMessage);","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        // negative index","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, NEGATIVE_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        // zero index","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, ZERO_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"        // alphabetical index","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, ALPHABET_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        // symbol index","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"        assertParseFailure(parser, SYMBOL_INDEX_STUB + ATTENDANCE_DATE_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"            Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"    public void parse_invalidAttendanceDate_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"        String[] wrongFormatUserInput \u003d {\"02-25-2022\", \"2-25-2022\", \"2-1-2022\", \"25/02/2022\"};","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"        String[] invalidDatesUserInput \u003d {\"99-12-2022\", \"-1-12-2022\", \"31-02-2022\"}; // leap year","lastModifiedDate":"2022-04-04"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        // wrong format","lastModifiedDate":"2022-04-04"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"        for (String s : wrongFormatUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + \" \" + createAttendanceDateDesc(s),","lastModifiedDate":"2022-04-04"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_ATTENDANCE_DATE);","lastModifiedDate":"2022-04-04"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"        // invalid dates","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidDatesUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + \" \" + createAttendanceDateDesc(s),","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_ATTENDANCE_DATE);","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"    public void parse_invalidPickUpTime_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"        String[] wrongFormatUserInput \u003d {\"9am, 09.00, 9:00, 9, 08:00:17\"};","lastModifiedDate":"2022-04-04"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        String[] invalidTimesUserInput \u003d {\"-1:00, 26:00\"};","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"        // wrong format","lastModifiedDate":"2022-04-04"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"        for (String s : wrongFormatUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"                    + createPickUpTimeDesc(s) + DROPOFF_TIME_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_PICKUP_TIME);","lastModifiedDate":"2022-04-04"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"        // invalid times","lastModifiedDate":"2022-04-04"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidTimesUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"                    + createPickUpTimeDesc(s) + DROPOFF_TIME_DESC_AMY,","lastModifiedDate":"2022-04-04"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_PICKUP_TIME);","lastModifiedDate":"2022-04-04"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"    public void parse_invalidDropOffTime_failure() {","lastModifiedDate":"2022-04-04"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        String[] wrongFormatUserInput \u003d {\"9pm, 09.00, 9, 21:00:17\"};","lastModifiedDate":"2022-04-04"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        String[] invalidTimesUserInput \u003d {\"-1:00, 26:00\"};","lastModifiedDate":"2022-04-04"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        // wrong format","lastModifiedDate":"2022-04-04"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"        for (String s : wrongFormatUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"                    + PICKUP_TIME_DESC_AMY + createDropOffTimeDesc(s),","lastModifiedDate":"2022-04-04"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_DROPOFF_TIME);","lastModifiedDate":"2022-04-04"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        // invalid times","lastModifiedDate":"2022-04-04"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidTimesUserInput) {","lastModifiedDate":"2022-04-04"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"            assertParseFailure(parser, TARGET_PET_INDEX.getOneBased() + ATTENDANCE_DATE_DESC_AMY","lastModifiedDate":"2022-04-04"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"                    + PICKUP_TIME_DESC_AMY + createDropOffTimeDesc(s),","lastModifiedDate":"2022-04-04"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"                ParserUtil.MESSAGE_INVALID_DROPOFF_TIME);","lastModifiedDate":"2022-04-04"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"    private static String createAttendanceDateDesc(String date) {","lastModifiedDate":"2022-04-04"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"        return \" \" + PREFIX_DATE + date;","lastModifiedDate":"2022-04-04"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"    private static String createPickUpTimeDesc(String pickUpTime) {","lastModifiedDate":"2022-04-04"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"        return \" \" + PREFIX_PICKUP + pickUpTime;","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"    private static String createDropOffTimeDesc(String dropOffTime) {","lastModifiedDate":"2022-04-04"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"        return \" \" + PREFIX_DROPOFF + dropOffTime;","lastModifiedDate":"2022-04-04"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-04"}],"authorContributionMap":{"Tiffanylin21":4,"soloplxya":24,"tobihy":152}},{"path":"src/test/java/woofareyou/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.logic.parser;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.SortCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * Checks that the parser throws an error when no arguments are provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     * Checks that the parser throws an error when an invalid argument is provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"soloplxya":31}},{"path":"src/test/java/woofareyou/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.PIZZA;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import woofareyou.testutil.PetBookBuilder;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"        assertEquals(new PetBook(), new PetBook(modelManager.getPetBook()));","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        userPrefs.setPetBookFilePath(Paths.get(\"pet/book/file/path\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        userPrefs.setPetBookFilePath(Paths.get(\"new/pet/book/file/path\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    public void setPetBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPetBookFilePath(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    public void setPetBookFilePath_validPath_setsPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        Path path \u003d Paths.get(\"pet/book/file/path\");","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        modelManager.setPetBookFilePath(path);","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        assertEquals(path, modelManager.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPet(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petNotInWoofAreYou_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        assertFalse(modelManager.hasPet(BOBA));","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petInWoofAreYou_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"        modelManager.addPet(BOBA);","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        assertTrue(modelManager.hasPet(BOBA));","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public void getFilteredPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPetList().remove(0));","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        PetBook petBook \u003d new PetBookBuilder().withPet(BOBA).withPet(PIZZA).build();","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        PetBook differentPetBook \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"        modelManager \u003d new ModelManager(petBook, userPrefs);","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(petBook, userPrefs);","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        // different petBook -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPetBook, userPrefs)));","lastModifiedDate":"2022-04-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        String[] keywords \u003d BOBA.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-04-08"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"        modelManager.updateFilteredPetList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"        assertFalse(modelManager.equals(new ModelManager(petBook, userPrefs)));","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        modelManager.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        differentUserPrefs.setPetBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"        assertFalse(modelManager.equals(new ModelManager(petBook, differentUserPrefs)));","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Tiffanylin21":5,"soloplxya":14,"-":94,"tobihy":19}},{"path":"src/test/java/woofareyou/model/PetBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOBA;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"public class PetBookTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    private final PetBook petBook \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        assertEquals(Collections.emptyList(), petBook.getPetList());","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e petBook.resetData(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    public void resetData_withValidReadOnlyWoofAreYou_replacesData() {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        PetBook newData \u003d getTypicalPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        petBook.resetData(newData);","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        assertEquals(newData, petBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    public void resetData_withDuplicatePets_throwsDuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        // Two pets with the same identity fields","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOBA).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e newPets \u003d Arrays.asList(BOBA, editedAlice);","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        PetBookStub newData \u003d new PetBookStub(newPets);","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e petBook.resetData(newData));","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e petBook.hasPet(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petNotInWoofAreYou_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        assertFalse(petBook.hasPet(BOBA));","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petInWoofAreYou_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        petBook.addPet(BOBA);","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        assertTrue(petBook.hasPet(BOBA));","lastModifiedDate":"2022-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"    public void hasPet_petWithSameIdentityFieldsInWoofAreYou_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        petBook.addPet(BOBA);","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOBA).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        assertTrue(petBook.hasPet(editedAlice));","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    public void getPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e petBook.getPetList().remove(0));","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"     * A stub ReadOnlyPetBook whose pets list can violate interface constraints.","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    private static class PetBookStub implements ReadOnlyPetBook {","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        private final ObservableList\u003cPet\u003e pets \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"        PetBookStub(Collection\u003cPet\u003e pets) {","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"            this.pets.setAll(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        public ObservableList\u003cPet\u003e getPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"            return pets;","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Tiffanylin21":12,"soloplxya":8,"-":59,"tobihy":23}},{"path":"src/test/java/woofareyou/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public void setPetBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPetBookFilePath(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"soloplxya":2,"-":17,"tobihy":2}},{"path":"src/test/java/woofareyou/model/attendance/AbsentAttendanceEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceEntryTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceEntry ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceEntry PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public void getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        assertEquals(ABSENT_ATTENDANCE_ENTRY.getPickUpTime(), Optional.empty());","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    public void getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"        assertEquals(ABSENT_ATTENDANCE_ENTRY.getDropOffTime(), Optional.empty());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry similarAbsentAttendanceEntry \u003d new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry differentAbsentAttendanceEntry \u003d new AbsentAttendanceEntry(DATE_TODAY.plusDays(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        assertTrue(ABSENT_ATTENDANCE_ENTRY.equals(ABSENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        assertTrue(ABSENT_ATTENDANCE_ENTRY.equals(similarAbsentAttendanceEntry));","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        assertFalse(ABSENT_ATTENDANCE_ENTRY.equals(differentAbsentAttendanceEntry));","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        assertFalse(ABSENT_ATTENDANCE_ENTRY.equals(PRESENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        assertFalse(ABSENT_ATTENDANCE_ENTRY.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":1,"tobihy":43}},{"path":"src/test/java/woofareyou/model/attendance/AttendanceEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"public class AttendanceEntryTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final AttendanceEntry PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public static final AttendanceEntry ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    public void getAttendanceDate_presentAttendanceEntry_returnsCorrectDate() {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"        assertEquals(PRESENT_ATTENDANCE_ENTRY.getAttendanceDate(), DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public void getAttendanceDate_absentAttendanceEntry_returnsCorrectDate() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        assertEquals(ABSENT_ATTENDANCE_ENTRY.getAttendanceDate(), DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":1,"tobihy":28}},{"path":"src/test/java/woofareyou/model/attendance/PresentAttendanceEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.attendance;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceEntryTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceEntry ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"        new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    // Valid attendance entries","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceEntry VALID_PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public void getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        assertEquals(VALID_PRESENT_ATTENDANCE_ENTRY.getPickUpTime(), Optional.of(PICKUP_TIME));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public void getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        assertEquals(VALID_PRESENT_ATTENDANCE_ENTRY.getDropOffTime(), Optional.of(DROPOFF_TIME));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    public void isValidTimings_validTimings_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        assertTrue(PresentAttendanceEntry.isValidTimings(PICKUP_TIME, DROPOFF_TIME));","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        assertTrue(PresentAttendanceEntry.isValidTimings(","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            LocalTime.of(0, 0), LocalTime.of(23, 59)));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        assertTrue(PresentAttendanceEntry.isValidTimings(null, null));","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    public void isValidTimings_invalidTimings_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        assertFalse(PresentAttendanceEntry.isValidTimings(DROPOFF_TIME, PICKUP_TIME));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        assertFalse(PresentAttendanceEntry.isValidTimings(","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"            LocalTime.of(9, 0), LocalTime.of(9, 0)));","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        assertFalse(PresentAttendanceEntry.isValidTimings(","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"            LocalTime.of(23, 59), LocalTime.of(9, 0)","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        ));","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry similarEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry differentDateEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY.plusDays(4), PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry differentPickUpTimeEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME.plusHours(1), DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry differentDropOffTimeEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME.plusHours(2));","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        assertTrue(VALID_PRESENT_ATTENDANCE_ENTRY.equals(VALID_PRESENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertTrue(VALID_PRESENT_ATTENDANCE_ENTRY.equals(similarEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(ABSENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(differentDateEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(differentPickUpTimeEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(differentDropOffTimeEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":1,"tobihy":72}},{"path":"src/test/java/woofareyou/model/charge/ChargeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.charge;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_CHARGEAMT_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_CHARGEAMT_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"public class ChargeTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"    private Charge chargeAmy \u003d new Charge(VALID_CHARGEAMT_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(chargeAmy.equals(chargeAmy));","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(chargeAmy.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"        // same charge amt -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"        Charge amyCopy \u003d new Charge(VALID_CHARGEAMT_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(chargeAmy.equals(amyCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        // different charge amt -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        Charge bobCopy \u003d new Charge(VALID_CHARGEAMT_BOB);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(chargeAmy.equals(bobCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        // charge amt has trailing spaces -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        String chargeWithTrailingSpaces \u003d VALID_CHARGEAMT_AMY + \" \";","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        Charge amyTrailing \u003d new Charge(chargeWithTrailingSpaces);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(chargeAmy.equals(amyTrailing));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Tiffanylin21":35,"soloplxya":3}},{"path":"src/test/java/woofareyou/model/filter/AppointmentContainsFilterWordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"public class AppointmentContainsFilterWordPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    private static final String DATETIME_STUB \u003d \"22-03-2022 09:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private static final String DATE_STUB \u003d \"22-03-2022\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    private static final String TODAY_LOCAL_DATE_STUB \u003d \"today\";","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    private static final String LOCATION_STUB \u003d \"NUS VET\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    public void test_appContainsDate_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            assertTrue(predicate.test(new PetBuilder().withAppointment(DATETIME_STUB, LOCATION_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"    public void test_appDoesNotContainsDate_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"            // With appointment","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"            assertFalse(predicate.test(new PetBuilder().withAppointment(DATETIME_STUB, LOCATION_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"            // Empty appointment","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            assertFalse((predicate.test(new PetBuilder().build())));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":71,"soloplxya":3}},{"path":"src/test/java/woofareyou/model/filter/DateContainsFilterDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"public class DateContainsFilterDatePredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    private static final String DATE_STUB \u003d \"22-03-2022\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private static final String LOCAL_DATE_STUB \u003d \"2022-03-22\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    private static final String TODAY_LOCAL_DATE_STUB \u003d \"today\";","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    private static final String DROP_OFF_TIME_STUB \u003d \"16:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public void test_dateContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"            assertTrue(predicate.test(new PetBuilder()","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"                    .withPresentAttendanceEntry(LOCAL_DATE_STUB, PICKUP_TIME_STUB, DROP_OFF_TIME_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"    public void test_dateDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            assertFalse(predicate.test(new PetBuilder()","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                    .withPresentAttendanceEntry(LOCAL_DATE_STUB, PICKUP_TIME_STUB, DROP_OFF_TIME_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":70,"soloplxya":3}},{"path":"src/test/java/woofareyou/model/filter/OwnerNameContainsFilterWordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"public class OwnerNameContainsFilterWordPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    private static final String firstNameKeyword \u003d \"Alice\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    private static final String secondNameKeyword \u003d \"Pe Ter\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(secondNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    public void test_ownerNameContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        // Partial match: Alice Tan \u003d\u003d Alice -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        assertTrue(predicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"        // Multiple words full match per word i.e. Pe Ter Tan \u003d\u003d Pe Ter -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(secondNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        assertTrue(secondPredicate.test(new PetBuilder().withOwnerName(\"Pe Ter Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        // Multiple words partial match per word: Peter Tera Tan \u003d\u003d Pe Ter -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(secondNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        assertTrue(thirdPredicate.test(new PetBuilder().withOwnerName(\"Peter Tera Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        // Full match with excess filter word: Alice Tan \u003d\u003d Alice Tan Bee Bee -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword + \" Tan Bee Bee\");","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        assertTrue(fourthPredicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        // Mixed case: Alice Tan \u003d\u003d ALiCe -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate fifthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(\"ALiCe\");","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        assertTrue(fifthPredicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"    public void test_ownerNameDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        // No match: Peter Tan \u003d\u003d Alice -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"        assertFalse(predicate.test(new PetBuilder().withOwnerName(\"Peter Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        // Multiple words no match: Peter Tan \u003d\u003d Alice Ong -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword + \"Ong\");","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"        assertFalse(secondPredicate.test(new PetBuilder().withOwnerName(\"Peter Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"        // Multiple words partial match: Alice Tan \u003d\u003d Alice Ong -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword + \"Ong\");","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"        assertFalse(thirdPredicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":84,"soloplxya":2}},{"path":"src/test/java/woofareyou/model/filter/TagContainsFilterWordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.filter;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"public class TagContainsFilterWordPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    private static final String firstTagKeyword \u003d \"Golden Retriever\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    private static final String secondTagKeyword \u003d \"Beagle\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(firstTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(secondTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(firstTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    public void test_tagContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        // Full match: Golden Retriever \u003d\u003d Golden Retriever -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(firstTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Golden -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Golden\");","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        assertTrue(secondPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Retriever -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Retriever\");","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        assertTrue(thirdPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Gold Retri -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Gold Retri\");","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        assertTrue(fourthPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Gold -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate fifthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Gold\");","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        assertTrue(fifthPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        // Mixed case: Golden Retriever \u003d\u003d goLdEn ReTrieVer -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate sixthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"goLdEn ReTrieVer\");","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"        assertTrue(sixthPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"    public void test_tagDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        // No match: Golden Retriever \u003d\u003d Beagle -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(secondTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Gold Dachshund -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Gold Dachshund\");","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"        assertFalse(secondPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        // No match: Golden Retriever \u003d\u003d Border Collie -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Border Collie\");","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"        assertFalse(thirdPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":88,"soloplxya":2}},{"path":"src/test/java/woofareyou/model/pet/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"soloplxya":2,"-":34}},{"path":"src/test/java/woofareyou/model/pet/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.Assert;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"public class AppointmentTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String RETRIEVED_APPOINTMENT_VALUE \u003d \"Mar-04-2022 09:30 AM at NUS VET\";","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final Appointment EMPTY_APPOINTMENT \u003d new Appointment();","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final Appointment RETRIEVED_APPOINTMENT \u003d new Appointment(RETRIEVED_APPOINTMENT_VALUE);","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Appointment(null, null));","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    public void isValidAppointment() {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        // null appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Appointment.isValidAppointment(null));","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        // invalid appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"\")); // empty appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"Mar-04-2022 09:30 AM @ NUS VET\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"2022-Mar-04 09:30 AM at NUS VET\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"04-03-2022 09:30 AM at NUS VET\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"Mar-04-2022 09:30 AM at\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        // valid appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(Appointment.isValidAppointment(RETRIEVED_APPOINTMENT_VALUE));","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(EMPTY_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(RETRIEVED_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(EMPTY_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(RETRIEVED_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(RETRIEVED_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(EMPTY_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(RETRIEVED_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(EMPTY_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":46,"soloplxya":6}},{"path":"src/test/java/woofareyou/model/pet/AttendanceHashMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"public class AttendanceHashMapTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private static final LocalDate DATE_TOMORROW \u003d DATE_TODAY.plusDays(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    private static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    private static final LocalTime DROPOFF_TIME \u003d LocalTime.of(17, 30);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    private static final PresentAttendanceEntry presentAttendanceEntryWithTransport \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    private static final AbsentAttendanceEntry absentAttendanceEntry \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    private static final PresentAttendanceEntry presentAttendanceEntryWithoutTransport \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, null, null);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap emptyAttendanceHashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap presentEntryAttendanceHashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap absentEntryAttendanceHashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    static void setupAttendanceHashMaps() {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        emptyAttendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e tempPresentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        tempPresentHashMap.put(DATE_TODAY, presentAttendanceEntryWithTransport);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        presentEntryAttendanceHashMap \u003d new AttendanceHashMap(tempPresentHashMap);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e tempAbsentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        tempAbsentHashMap.put(DATE_TODAY, absentAttendanceEntry);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        absentEntryAttendanceHashMap \u003d new AttendanceHashMap(tempAbsentHashMap);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AttendanceHashMap(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    public void containsAttendance() {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        // Attendance hash map with present entry that has transport arrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        assertTrue(presentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        assertFalse(presentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithoutTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        assertFalse(presentEntryAttendanceHashMap.containsAttendance(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        // Empty attendance hash map","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        assertFalse(emptyAttendanceHashMap.containsAttendance(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertFalse(emptyAttendanceHashMap.containsAttendance(presentAttendanceEntryWithoutTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        assertFalse(emptyAttendanceHashMap.containsAttendance(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        // Attendance hash map with absent entry","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        assertTrue(absentEntryAttendanceHashMap.containsAttendance(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        assertFalse(absentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        assertFalse(absentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithoutTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    public void getAttendance() {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        // Successful retrieval of attendance entry","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        assertEquals(presentEntryAttendanceHashMap.getAttendance(DATE_TODAY),","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"                Optional.of(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        assertEquals(absentEntryAttendanceHashMap.getAttendance(DATE_TODAY),","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"                Optional.of(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        // No entry retrieved.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        assertEquals(emptyAttendanceHashMap.getAttendance(DATE_TODAY), Optional.empty());","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        assertEquals(presentEntryAttendanceHashMap.getAttendance(DATE_TOMORROW), Optional.empty());","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        assertEquals(absentEntryAttendanceHashMap.getAttendance(DATE_TOMORROW), Optional.empty());","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"soloplxya":6,"tobihy":81}},{"path":"src/test/java/woofareyou/model/pet/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        // Keywords match phone, ownerName and address, but does not match name","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Alice\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alix Yeo\").withPhone(\"81234567\")","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"                .withOwnerName(\"Alice Yeo\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":10,"soloplxya":3,"-":62}},{"path":"src/test/java/woofareyou/model/pet/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_1 \u003d \"MOJO\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_2 \u003d \"PIKA\";","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_3 \u003d \"APPLE\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_4 \u003d \"APPO\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        assertFalse(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        assertFalse(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertTrue(Name.isValidName(\"p\")); // single character","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr\")); // long names","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_1.compareTo(PET_NAME_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_2.compareTo(PET_NAME_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_3.compareTo(PET_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_1.compareTo(PET_NAME_2) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_2.compareTo(PET_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_3.compareTo(PET_NAME_1) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_1.compareTo(PET_NAME_2) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_2.compareTo(PET_NAME_3) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_3.compareTo(PET_NAME_1) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_4.compareTo(PET_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_4.compareTo(PET_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_3.compareTo(PET_NAME_4) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Dineshraj555":24,"soloplxya":10,"-":31}},{"path":"src/test/java/woofareyou/model/pet/OwnerNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"public class OwnerNameTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_1 \u003d \"Lau Low\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_2 \u003d \"Zack\";","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_3 \u003d \"Adam\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_4 \u003d \"Ah Tan\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OwnerName(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    public void constructor_invalidOwnerName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"        String invalidOwnerName \u003d \"\";","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OwnerName(invalidOwnerName));","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public void isValidOwnerName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        // null ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        assertThrows(NullPointerException.class, () -\u003e OwnerName.isValidOwnerName(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        // invalid ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"\")); // empty string","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\" \")); // spaces only","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"12345\")); // numbers only","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        // valid ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"p\")); // single character","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"David Roger Jackson Ray Jr\")); // long names","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_1.compareTo(OWNER_NAME_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_2.compareTo(OWNER_NAME_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_3.compareTo(OWNER_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_1.compareTo(OWNER_NAME_2) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_2.compareTo(OWNER_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_3.compareTo(OWNER_NAME_1) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_1.compareTo(OWNER_NAME_2) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_2.compareTo(OWNER_NAME_3) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_3.compareTo(OWNER_NAME_1) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_4.compareTo(OWNER_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_4.compareTo(OWNER_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_3.compareTo(OWNER_NAME_4) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":24,"Tiffanylin21":31,"soloplxya":11}},{"path":"src/test/java/woofareyou/model/pet/PetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_BOB_WITH_SPACES;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.BOB;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"public class PetTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e pet.getTags().remove(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    public void isSamePet() {","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.isSamePet(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.isSamePet(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        assertFalse(BOBA.isSamePet(editedAlice));","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.isSamePet(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedBob \u003d new PetBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        assertTrue(BOB.isSamePet(editedBob));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        editedBob \u003d new PetBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOB.isSamePet(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        // name has duplicate spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        String nameWithDuplicateSpaces \u003d VALID_NAME_BOB_WITH_SPACES;","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        editedBob \u003d new PetBuilder(BOB).withName(nameWithDuplicateSpaces).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOB.isSamePet(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    public void equals() {","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        Pet aliceCopy \u003d new PetBuilder(BOBA).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.equals(aliceCopy));","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.equals(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(5));","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(BOB));","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        // different ownerName -\u003e returns false","lastModifiedDate":"2022-04-09"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withOwnerName(VALID_OWNER_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        assertTrue(BOBA.equals(editedAlice));","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"Dineshraj555":2,"Tiffanylin21":25,"soloplxya":63,"-":2,"tobihy":5}},{"path":"src/test/java/woofareyou/model/pet/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        assertFalse(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        assertTrue(Phone.isValidPhone(\"+6585123456\")); // starts with country code (+65)","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // starts with 9","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        assertTrue(Phone.isValidPhone(\"81234567\")); // starts with 8","lastModifiedDate":"2022-04-05"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertTrue(Phone.isValidPhone(\"61234567\")); // starts with 6","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"soloplxya":8,"-":35}},{"path":"src/test/java/woofareyou/model/pet/UniquePetListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOBA;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import java.util.List;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.exceptions.PetNotFoundException;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.Assert;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.PetBuilder;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.TypicalPets;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"public class UniquePetListTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    private final UniquePetList uniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    public void contains_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.contains(null));","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    public void contains_petNotInList_returnsFalse() {","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        assertFalse(uniquePetList.contains(TypicalPets.BOBA));","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    public void contains_petInList_returnsTrue() {","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertTrue(uniquePetList.contains(TypicalPets.BOBA));","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    public void contains_petWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        Pet editedAlice \u003d new PetBuilder(TypicalPets.BOBA).withAddress(VALID_ADDRESS_BOBA).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        assertTrue(uniquePetList.contains(editedAlice));","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    public void add_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.add(null));","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    public void add_duplicatePet_throwsDuplicatePetException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.add(TypicalPets.BOBA));","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"    public void setPet_nullTargetPet_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPet(null, TypicalPets.BOBA));","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"    public void setPet_nullEditedPet_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPet(TypicalPets.BOBA, null));","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    public void setPet_targetPetNotInList_throwsPetNotFoundException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(PetNotFoundException.class, () -\u003e uniquePetList.setPet(TypicalPets.BOBA, TypicalPets.BOBA));","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"    public void setPet_editedPetIsSamePet_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.setPet(TypicalPets.BOBA, TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        expectedUniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"    public void setPet_editedPetHasSameIdentity_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        Pet editedAlice \u003d new PetBuilder(TypicalPets.BOBA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-04-01"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.setPet(TypicalPets.BOBA, editedAlice);","lastModifiedDate":"2022-04-01"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        expectedUniquePetList.add(editedAlice);","lastModifiedDate":"2022-04-01"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"    public void setPet_editedPetHasDifferentIdentity_success() {","lastModifiedDate":"2022-04-01"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.setPet(TypicalPets.BOBA, TypicalPets.BOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"        expectedUniquePetList.add(TypicalPets.BOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"    public void setPet_editedPetHasNonUniqueIdentity_throwsDuplicatePetException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.setPet(TypicalPets.BOBA, TypicalPets.BOB));","lastModifiedDate":"2022-04-01"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"    public void remove_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.remove(null));","lastModifiedDate":"2022-04-01"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"    public void remove_petDoesNotExist_throwsPetNotFoundException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(PetNotFoundException.class, () -\u003e uniquePetList.remove(TypicalPets.BOBA));","lastModifiedDate":"2022-04-01"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"    public void remove_existingPet_removesPet() {","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.remove(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"    public void setPet_nullUniquePetList_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPets((UniquePetList) null));","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"    public void setPets_uniquePetList_replacesOwnListWithProvidedUniquePetList() {","lastModifiedDate":"2022-04-01"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"        expectedUniquePetList.add(TypicalPets.BOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.setPets(expectedUniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"    public void setPets_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPets((List\u003cPet\u003e) null));","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"soloplxya"},"content":"    public void setPets_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-04-01"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.add(TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"        List\u003cPet\u003e petList \u003d Collections.singletonList(TypicalPets.BOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"        uniquePetList.setPets(petList);","lastModifiedDate":"2022-04-01"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-04-01"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"        expectedUniquePetList.add(TypicalPets.BOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":161,"author":{"gitId":"soloplxya"},"content":"    public void setPets_listWithDuplicatePets_throwsDuplicatePetException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"        List\u003cPet\u003e listWithDuplicatePets \u003d Arrays.asList(TypicalPets.BOBA, TypicalPets.BOBA);","lastModifiedDate":"2022-04-01"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.setPets(listWithDuplicatePets));","lastModifiedDate":"2022-04-01"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":166,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":167,"author":{"gitId":"soloplxya"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"soloplxya"},"content":"            -\u003e uniquePetList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":171}},{"path":"src/test/java/woofareyou/model/pet/comparator/PetDropOffTimeComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet.comparator;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.ComparatorUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"public class PetDropOffTimeComparatorTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    private PetDropOffTimeComparator comparator \u003d new PetDropOffTimeComparator();","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    public void compare() {","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"        // compare pet with itself","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003d\u003d 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003d\u003d 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        // compare pets without transport timing against themselves","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        // compare pets with transport timing against pets without transport timing","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        // compare pets with different transport timing against themselves","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003e 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        assertTrue(comparator.compare(ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"                ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003c 0);","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":49}},{"path":"src/test/java/woofareyou/model/pet/comparator/PetPickUpTimeComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.pet.comparator;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"public class PetPickUpTimeComparatorTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private PetPickUpTimeComparator comparator \u003d new PetPickUpTimeComparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    public void compare() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"        // compare pet with itself","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets without transport timing against themselves","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets with transport timing against pets without transport timi","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets with different transport timing against themselves","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":47,"soloplxya":6}},{"path":"src/test/java/woofareyou/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.model.tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":2,"-":24}},{"path":"src/test/java/woofareyou/storage/JsonAdaptedPetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.storage.JsonAdaptedPet.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.TypicalPets.PIZZA;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"public class JsonAdaptedPetTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    private static final String INVALID_OWNER_NAME \u003d \"S@arah\";","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_NAME \u003d PIZZA.getName().toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_PHONE \u003d PIZZA.getPhone().toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_OWNER_NAME \u003d PIZZA.getOwnerName().toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_ADDRESS \u003d PIZZA.getAddress().toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_DIET \u003d PIZZA.getDiet().toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_APPOINTMENT \u003d PIZZA.getAppointment().toString();","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d PIZZA.getTags().stream()","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    private static final List\u003cJsonAdaptedAttendance\u003e VALID_ATTENDANCE_MAP \u003d PIZZA.getAttendanceHashMap()","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            .toCollection()","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"            .stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_validPetDetails_returnsPet() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(PIZZA);","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        assertEquals(PIZZA, pet.toModelType());","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(INVALID_NAME, VALID_PHONE, VALID_OWNER_NAME, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(null, VALID_PHONE, VALID_OWNER_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, INVALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, null,","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-04-08"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_invalidOwnerName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, INVALID_OWNER_NAME, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d OwnerName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_nullOwnerName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_NAME, null, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"                VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OwnerName.class.getSimpleName());","lastModifiedDate":"2022-04-08"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, VALID_PHONE, INVALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"                VALID_PHONE, null, VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"                        invalidTags, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"        assertThrows(IllegalValueException.class, pet::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dineshraj555":7,"Tiffanylin21":10,"soloplxya":38,"-":59,"tobihy":13}},{"path":"src/test/java/woofareyou/storage/JsonPetBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.HOON;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.IDA;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"public class JsonPetBookStorageTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPetBookStorageTest\");","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @TempDir","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public Path testFolder;","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    public void readPetBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPetBook(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private java.util.Optional\u003cReadOnlyPetBook\u003e readPetBook(String filePath) throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        return new JsonPetBookStorage(Paths.get(filePath)).readPetBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"                : null;","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        assertFalse(readPetBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-04-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPetBook(\"notJsonFormatPetBook.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    public void readPetBook_invalidPetBook_throwDataConversionException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPetBook(\"invalidPetsPetBook.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public void readPetBook_invalidAndValidPetBook_throwDataConversionException() {","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPetBook(\"invalidAndValidPetBook.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    public void readAndSavePetBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPetBook.json\");","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        PetBook original \u003d getTypicalPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        JsonPetBookStorage jsonPetBookStorage \u003d new JsonPetBookStorage(filePath);","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-04-08"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        jsonPetBookStorage.savePetBook(original, filePath);","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        ReadOnlyPetBook readBack \u003d jsonPetBookStorage.readPetBook(filePath).get();","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        assertEquals(original, new PetBook(readBack));","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        original.addPet(HOON);","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        original.removePet(BOBA);","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        jsonPetBookStorage.savePetBook(original, filePath);","lastModifiedDate":"2022-04-09"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        readBack \u003d jsonPetBookStorage.readPetBook(filePath).get();","lastModifiedDate":"2022-04-09"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        assertEquals(original, new PetBook(readBack));","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-04-08"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        original.addPet(IDA);","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        jsonPetBookStorage.savePetBook(original); // file path not specified","lastModifiedDate":"2022-04-09"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        readBack \u003d jsonPetBookStorage.readPetBook().get(); // file path not specified","lastModifiedDate":"2022-04-09"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        assertEquals(original, new PetBook(readBack));","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    public void savePetBook_nullPetBook_throwsNullPointerException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePetBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"     * Saves {@code petBook} at the specified {@code filePath}.","lastModifiedDate":"2022-04-09"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"    private void savePetBook(ReadOnlyPetBook petBook, String filePath) {","lastModifiedDate":"2022-04-09"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            new JsonPetBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-04-08"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"                    .savePetBook(petBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-04-09"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-04-08"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"    public void savePetBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-04-09"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePetBook(new PetBook(), null));","lastModifiedDate":"2022-04-09"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"tobihy":110}},{"path":"src/test/java/woofareyou/storage/JsonSerializablePetBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import woofareyou.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import woofareyou.commons.util.JsonUtil;","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import woofareyou.testutil.SimilarPets;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import woofareyou.testutil.TypicalPets;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"public class JsonSerializablePetBookTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePetBookTest\");","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    private static final Path TYPICAL_PETS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPetsPetBook.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    private static final Path INVALID_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPetsPetBook.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private static final Path SIMILAR_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"similarPetsPetBook.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    public void toModelType_typicalPetsFile_success() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        JsonSerializablePetBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PETS_FILE,","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"                JsonSerializablePetBook.class).get();","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        PetBook petBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"        PetBook typicalPetsPetBook \u003d TypicalPets.getTypicalPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        assertEquals(petBookFromFile, typicalPetsPetBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    public void toModelType_invalidPetFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        JsonSerializablePetBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PET_FILE,","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"                JsonSerializablePetBook.class).get();","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public void toModelType_sameNamePetsDifferentOwner_success() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        JsonSerializablePetBook dataFromFile \u003d JsonUtil.readJsonFile(SIMILAR_PET_FILE,","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"                JsonSerializablePetBook.class).get();","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        PetBook petBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        PetBook similarPetsPetBook \u003d SimilarPets.getSimilarPetBook();","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        assertEquals(petBookFromFile, similarPetsPetBook);","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"tobihy":49}},{"path":"src/test/java/woofareyou/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        userPrefs.setPetBookFilePath(Paths.get(\"woofareyou.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"soloplxya":5,"-":117,"tobihy":1}},{"path":"src/test/java/woofareyou/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.storage;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static woofareyou.testutil.TypicalPets.getTypicalPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.GuiSettings;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.ReadOnlyPetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.UserPrefs;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        JsonPetBookStorage petBookStorage \u003d new JsonPetBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"        storageManager \u003d new StorageManager(petBookStorage, userPrefsStorage);","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    public void petBookReadSave() throws Exception {","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"         * {@link JsonPetBookStorage} class.","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPetBookStorageTest} class.","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        PetBook original \u003d getTypicalPetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        storageManager.savePetBook(original);","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        ReadOnlyPetBook retrieved \u003d storageManager.readPetBook().get();","lastModifiedDate":"2022-04-08"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        assertEquals(original, new PetBook(retrieved));","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    public void getPetBookFilePath() {","lastModifiedDate":"2022-04-08"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertNotNull(storageManager.getPetBookFilePath());","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":3,"-":51,"tobihy":14}},{"path":"src/test/java/woofareyou/testutil/AbsentAttendanceDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceDescriptorBuilder {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    private AbsentAttendanceDescriptor descriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceDescriptorBuilder() {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"        descriptor \u003d new AbsentAttendanceDescriptor();","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"     * Sets the attendance date of the {@code AbsentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"        descriptor.setAttendanceDate(LocalDate.parse(date));","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public AbsentAttendanceDescriptor build() {","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        return descriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"soloplxya":5,"tobihy":21}},{"path":"src/test/java/woofareyou/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"soloplxya":1,"-":33}},{"path":"src/test/java/woofareyou/testutil/ComparatorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":" * A utility class to assist with the testing of PetDropOffTimeComparator and PetPickUpTimeComparator.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"public class ComparatorUtil {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_MISSING_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_DATE \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_PICK_UP_1 \u003d \"08:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_DROP_OFF_1 \u003d \"21:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_PICK_UP_2 \u003d \"10:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_DROP_OFF_2 \u003d \"20:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withAbsentAttendanceEntry(TEST_DATE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withPresentAttendanceEntry(TEST_DATE).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1 \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withPresentAttendanceEntry(TEST_DATE, TEST_PICK_UP_1, TEST_DROP_OFF_1).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2 \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withPresentAttendanceEntry(TEST_DATE, TEST_PICK_UP_2, TEST_DROP_OFF_2).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":27,"soloplxya":2}},{"path":"src/test/java/woofareyou/testutil/EditPetDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class to help with building EditPetDescriptor objects.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"public class EditPetDescriptorBuilder {","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    private EditPetDescriptor descriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder() {","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditCommand.EditPetDescriptor();","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder(EditCommand.EditPetDescriptor descriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        this.descriptor \u003d new EditPetDescriptor(descriptor);","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns an {@code EditPetDescriptor} with fields containing {@code pet}\u0027s details","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        descriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setName(pet.getName());","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setPhone(pet.getPhone());","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setOwnerName(pet.getOwnerName());","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setAddress(pet.getAddress());","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setTags(pet.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        descriptor.setDiet(pet.getDiet());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        descriptor.setAppointment(pet.getAppointment());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Name} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Phone} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code OwnerName} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withOwnerName(String ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setOwnerName(new OwnerName(ownerName));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Address} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPetDescriptor}","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"     * that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    public EditPetDescriptorBuilder withTag(String... tags) {","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"    public EditCommand.EditPetDescriptor build() {","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"        return descriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":1,"Tiffanylin21":75,"soloplxya":15}},{"path":"src/test/java/woofareyou/testutil/PetBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":" * A utility class to help with building PetBook objects.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":" *     {@code PetBook ab \u003d new PetBookBuilder().withPet(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"public class PetBookBuilder {","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    private PetBook petBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public PetBookBuilder() {","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"        petBook \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    public PetBookBuilder(PetBook petBook) {","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"        this.petBook \u003d petBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     * Adds a new {@code Pet} to the {@code PetBook} that we are building.","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public PetBookBuilder withPet(Pet pet) {","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        petBook.addPet(pet);","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public PetBook build() {","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        return petBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"tobihy":34}},{"path":"src/test/java/woofareyou/testutil/PetBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Address;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Appointment;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Diet;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Name;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.OwnerName;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Phone;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.util.SampleDataUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class to help with building Pet objects.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"public class PetBuilder {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    public static final String DEFAULT_OWNER_NAME \u003d \"Emma Lee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    public static final String DEFAULT_DIET \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    private Name name;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private OwnerName ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    private Address address;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    private Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    private Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    private final AttendanceHashMap attendanceHashMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a {@code PetBuilder} with the default details.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder() {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        ownerName \u003d new OwnerName(DEFAULT_OWNER_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        diet \u003d new Diet(DEFAULT_DIET);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        appointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"     * Initializes the PetBuilder with the data of {@code petToCopy}.","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder(Pet petToCopy) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        name \u003d petToCopy.getName();","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        ownerName \u003d petToCopy.getOwnerName();","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        phone \u003d petToCopy.getPhone();","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        address \u003d petToCopy.getAddress();","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        diet \u003d petToCopy.getDiet();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        appointment \u003d petToCopy.getAppointment();","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        tags \u003d new HashSet\u003c\u003e(petToCopy.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap \u003d petToCopy.getAttendanceHashMap();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Name} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withName(String name) {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Address} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withAddress(String address) {","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Phone} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code OwnerName} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withOwnerName(String ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        this.ownerName \u003d new OwnerName(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"     * Sets the {@code Diet} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"    public PetBuilder withDiet(String diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        this.diet \u003d new Diet(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"     * Sets the {@code Appointment} of the {@code Pet} that we are building to be empty.","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"    public PetBuilder withAppointment() {","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"     * Sets the {@code Appointment} of the {@code Pet} that we are building with the input.","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"    public PetBuilder withAppointment(String dateTime, String location) {","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"        LocalDateTime formattedDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d new Appointment(formattedDateTime, location);","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"     * Sets the {@code PresentAttendanceEntry} of the {@code Pet} that we are building,","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"     * including transport arrangements.","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"    public PetBuilder withPresentAttendanceEntry(String attendanceDate, String pickUpTime, String dropOffTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.addAttendance(","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"                LocalDate.parse(attendanceDate),","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"                LocalTime.parse(pickUpTime),","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"                LocalTime.parse(dropOffTime)));","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"     * Sets the {@code PresentAttendanceEntry} of the {@code Pet} that we are building,","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"     * excluding transport arrangements.","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"    public PetBuilder withPresentAttendanceEntry(String attendanceDate) {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.addAttendance(","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"                LocalDate.parse(attendanceDate),","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"                null,","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"                null","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"            )","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"     * Sets the {@code AbsentAttendanceEntry} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"    public PetBuilder withAbsentAttendanceEntry(String attendanceDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.addAttendance(","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"                LocalDate.parse(attendanceDate)","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"            )","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"     * Builds the {@code Pet} object with the data in the builder.","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"     * @return a Pet object.","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"Tiffanylin21"},"content":"    public Pet build() {","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"        return new Pet(name, ownerName, phone, address, tags, diet, appointment, attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":25,"Tiffanylin21":83,"soloplxya":25,"tobihy":53}},{"path":"src/test/java/woofareyou/testutil/PetUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.parser.CliSyntax;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.tag.Tag;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":" * A utility class for Pet.","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"public class PetUtil {","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     * Returns an add command string for adding the {@code pet}.","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    public static String getAddCommand(Pet pet) {","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPetDetails(pet);","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"     * Returns the part of command string for the given {@code pet}\u0027s details.","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    public static String getPetDetails(Pet pet) {","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        sb.append(CliSyntax.PREFIX_NAME + pet.getName().fullName + \" \");","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + pet.getPhone().value + \" \");","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        sb.append(CliSyntax.PREFIX_OWNER_NAME + pet.getOwnerName().value + \" \");","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"        sb.append(CliSyntax.PREFIX_ADDRESS + pet.getAddress().value + \" \");","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        pet.getTags().stream().forEach(","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"        );","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"     * Returns the part of command string for the given {@code EditPetDescriptor}\u0027s details.","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    public static String getEditPetDescriptorDetails(EditCommand.EditPetDescriptor descriptor) {","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(CliSyntax.PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        descriptor.getOwnerName().ifPresent(ownerName -\u003e sb.append(CliSyntax.PREFIX_OWNER_NAME).append(ownerName.value)","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"                .append(\" \"));","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(CliSyntax.PREFIX_ADDRESS)","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"                .append(address.value).append(\" \"));","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"                sb.append(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"            } else {","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"        return sb.toString();","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"soloplxya":60}},{"path":"src/test/java/woofareyou/testutil/PresentAttendanceDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import woofareyou.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":" * A utility class to help with building PresentAttendanceDescriptor objects.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceDescriptorBuilder {","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    private PresentAttendanceDescriptor descriptor;","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder() {","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"        descriptor \u003d new PresentAttendanceDescriptor();","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Sets the attendance date of the {@code PresentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        descriptor.setAttendanceDate(LocalDate.parse(date));","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * Sets the pick-up time of the {@code PresentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder withPickUpTime(String pickUpTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        descriptor.setPickUpTime(LocalTime.parse(pickUpTime));","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"     * Sets the drop-off time of the {@code PresentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder withDropOffTime(String dropOffTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        descriptor.setDropOffTime(LocalTime.parse(dropOffTime));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    public PresentAttendanceDescriptor build() {","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        return descriptor;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"soloplxya":5,"tobihy":41}},{"path":"src/test/java/woofareyou/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"soloplxya":1,"-":71}},{"path":"src/test/java/woofareyou/testutil/SimilarPets.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"public class SimilarPets {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final Pet WAFFLE \u003d new PetBuilder().withName(\"Waffle\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"            .withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"            .withDiet(\"cute oranges\")","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"            .withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    public static final Pet ANOTHER_WAFFLE \u003d new PetBuilder().withName(\"Waffle\").withAddress(\"4th street\")","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"            .withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"            .withPhone(\"88887778\")","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"            .withDiet(\"cute apples\")","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"            .withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    private SimilarPets() {} // prevents instantiation","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Returns a {@code PetBook} with all the similar pets.","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public static PetBook getSimilarPetBook() {","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        PetBook ab \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        for (Pet pet : getSimilarPets()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"            ab.addPet(pet);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        return ab;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public static List\u003cPet\u003e getSimilarPets() {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WAFFLE, ANOTHER_WAFFLE));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":2,"soloplxya":2,"tobihy":38}},{"path":"src/test/java/woofareyou/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the middle index of the pet in the {@code model}\u0027s pet list.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        return Index.fromOneBased(model.getFilteredPetList().size() / 2);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the last index of the pet in the {@code model}\u0027s pet list.","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        return Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the pet in the {@code model}\u0027s pet list at {@code index}.","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    public static Pet getPet(Model model, Index index) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        return model.getFilteredPetList().get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":7,"soloplxya":4,"-":44}},{"path":"src/test/java/woofareyou/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import woofareyou.commons.core.index.Index;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Index INDEX_FIRST_PET \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Index INDEX_SECOND_PET \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Index INDEX_THIRD_PET \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final Index INDEX_FOURTH_PET \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Tiffanylin21":3,"soloplxya":2,"-":7,"tobihy":1}},{"path":"src/test/java/woofareyou/testutil/TypicalPets.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.testutil;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_OWNER_NAME_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static woofareyou.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import woofareyou.model.PetBook;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import woofareyou.model.pet.Pet;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class containing a list of {@code Pet} objects to be used in tests.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"public class TypicalPets {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public static final String DATE_TODAY \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet BOBA \u003d new PetBuilder().withName(\"Boba\")","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            .withTags(\"friends\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet PIZZA \u003d new PetBuilder().withName(\"Pizza\")","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"            .withOwnerName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"            .withTags(\"owesMoney\", \"friends\").withDiet(\"\").withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_TODAY, \"09:00\", \"17:30\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet BAGEL \u003d new PetBuilder().withName(\"Bagel\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            .withOwnerName(\"Heinz Ketchup\").withAddress(\"wall street\").withDiet(\"\").withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_TODAY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet DANIEL \u003d new PetBuilder().withName(\"Peepee\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"Daniel Meier\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            .withDiet(\"\").withAppointment().withPresentAttendanceEntry(DATE_TODAY).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    public static final Pet PANCAKE \u003d new PetBuilder().withName(\"Pancake\").withPhone(\"94822242\")","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"Elle Meyer\").withAddress(\"michegan ave\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    public static final Pet WAFFLE \u003d new PetBuilder().withName(\"Waffle\").withPhone(\"94824272\")","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"Fiona Kunz\").withAddress(\"little tokyo\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    public static final Pet TOFU \u003d new PetBuilder().withName(\"Tofu\").withPhone(\"94824422\")","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"George Best\").withAddress(\"4th street\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"    // Manually added","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    public static final Pet HOON \u003d new PetBuilder().withName(\"Hoon Meier\").withPhone(\"84824242\")","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            .withOwnerName(\"Stefan Sim\").withAddress(\"little india\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"    public static final Pet IDA \u003d new PetBuilder().withName(\"Ida Mueller\").withPhone(\"84821312\")","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"            .withOwnerName(\"Han Solo\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    // Manually added - Pet\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet AMY \u003d new PetBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(VALID_OWNER_NAME_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet BOB \u003d new PetBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(VALID_OWNER_NAME_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"    private TypicalPets() {} // prevents instantiation","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"     * Returns a {@code PetBook} with all the typical pets.","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    public static PetBook getTypicalPetBook() {","lastModifiedDate":"2022-04-08"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        PetBook ab \u003d new PetBook();","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        for (Pet pet : getTypicalPets()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"            ab.addPet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        return ab;","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"    public static List\u003cPet\u003e getTypicalPets() {","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BOBA, PIZZA, BAGEL, DANIEL, PANCAKE, WAFFLE, TOFU));","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":7,"Tiffanylin21":47,"soloplxya":17,"tobihy":12}},{"path":"src/test/java/woofareyou/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"soloplxya":1,"-":34}},{"path":"src/test/java/woofareyou/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package woofareyou.ui;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import woofareyou.MainApp;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import woofareyou.testutil.Assert;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"soloplxya":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"\u003c?import woofareyou.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"soloplxya":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"\u003c?import woofareyou.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"soloplxya":2}}]
