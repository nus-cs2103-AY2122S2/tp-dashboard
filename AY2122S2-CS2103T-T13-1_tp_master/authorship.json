[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-1/tp/branch/master/graph/badge.svg?token\u003dRKLSU8HQ5A)](https://codecov.io/gh/AY2122S2-CS2103T-T13-1/tp)","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"* **WoofAreYou**  is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"  * keep track of pet administrative details","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"  * keep track of pet dietary requirements","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"  * keep track of pet attendanceEntry","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"* The project simulates an ongoing software project for a desktop application (called _WoofAreYou_) used for managing pet administrative details.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"* For the detailed documentation of this project, see the **[WoofAreYou Product Website](https://ay2122s2-cs2103t-t13-1.github.io/tp/)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Dineshraj555":8,"-":6,"tobihy":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    archiveName \u003d \u0027WoofAreYou.jar\u0027","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"run {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":73,"soloplxya":2,"tobihy":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"You can reach us at the ownerName `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"### Thia Su Mian","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"\u003cimg src\u003d\"images/tsumian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"[[github](https://github.com/tsumian)]","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"[[portfolio](team/tsumian.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"### S Dinesh Raj","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"\u003cimg src\u003d\"images/dineshraj555.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"[[github](http://github.com/dineshraj555)]","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"[[portfolio](team/dineshraj555.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"### Teo Hao Yu","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"\u003cimg src\u003d\"images/tobihy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"[[github](http://github.com/tobihy)]","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"[[portfolio](team/tobihy.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"### Shaine Goh Si Hui","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"\u003cimg src\u003d\"images/soloplxya.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"[[github](http://github.com/soloplxya)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"[[portfolio](team/soloplxya.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"* Responsibilities: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"### Lin Hui Xin Tiffany","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"\u003cimg src\u003d\"images/tiffanylin21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"[[github](http://github.com/Tiffanylin21)]","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"[[portfolio](team/tiffanylin21.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"* Responsibilities: Developer","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Dineshraj555":9,"Tiffanylin21":5,"tsumian":5,"-":35,"soloplxya":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PetListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"* depends on some classes in the `Model` component, as it displays `Pet` object residing in the `Model`.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a pet).","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"* stores the address book data i.e., all `Pet` objects (which are contained in a `UniquePetList` object).","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"* stores the currently \u0027selected\u0027 `Pet` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPet\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Pet` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Pet` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"### \\[Proposed\\] Sorting feature","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"soloplxya"},"content":"The proposed sorting mechanism is facilitated by `SortCommand` class. It extends `Command`","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"and takes in a field that the user wishes to sort the Address Book by. The field is parsed by","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"`SortCommandParser`.","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"soloplxya"},"content":"The primary sorting operation that takes place in the SortCommand class is sortPetList. This operation is exposed","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"soloplxya"},"content":"in the `Model` interface as Model#sortPetList().","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"soloplxya"},"content":"Currently, pet list can only be sorted by pet name or owner name. Each class implements the `Comparable` interface so that","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"soloplxya"},"content":"they can be compared and sorted alphabetically.","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"soloplxya"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"soloplxya"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"soloplxya"},"content":"The following activity diagram summarizes what happens when a user executes a new sort command:","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"soloplxya"},"content":"![SortActivityDiagram](images/SortActivityDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"soloplxya"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"soloplxya"},"content":"* **Alternative 1 (current choice):** Currently the comparator classes for both owner name and pet name are generated","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"soloplxya"},"content":"  within the `sortPetList` method in `UniquePetList`.","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"soloplxya"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"soloplxya"},"content":"    * Cons: May be confusing to edit if there are more comparator classes in the future.","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"soloplxya"},"content":"* **Alternative 2:** Generate a new package containing the various comparator classes.","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"soloplxya"},"content":"    * Pros: Cleaner code. Better for future scalability.","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"soloplxya"},"content":"    * Cons: Contributes to more lines of code. Harder to set up initially.","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"Dineshraj555"},"content":"### \\[Proposed\\] Appointment feature","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"Dineshraj555"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"Dineshraj555"},"content":"The proposed appointment feature is facilitated by the `AppointmentCommand` class which extends `Command` class. The","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"Dineshraj555"},"content":"`AppointmentCommand` takes in a valid mandatory index which specifics the pet that the command is to be used on,","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"Dineshraj555"},"content":"followed by either **one** prefix (*clear*) or **two** prefixes (*dateTime* and *location*) based on the objective the","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"Dineshraj555"},"content":"user is trying to accomplish. The fields are parsed by `AppointmentCommandParser` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"Dineshraj555"},"content":"Appointment feature can be used to accomplish the following 2 tasks:","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"Dineshraj555"},"content":"1. Add and store pet\u0027s appointment details. (*dateTime and Location prefixes*)","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"Dineshraj555"},"content":"2. Clear and delete pet\u0027s appointment details. (*clear prefix*)","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"Dineshraj555"},"content":"The operation of updating the pet\u0027s appointment details and updating the pet filter list are done by methods in the","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"Dineshraj555"},"content":"Model interface as Model#setPet() and Model#updateFilterPetList() respectively.","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"Dineshraj555"},"content":"The following sequence diagram below illustrates the interactions between the `Logic` component and `Model` component","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"Dineshraj555"},"content":"for the `execute(\"app 1 clear\")` API call:","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"Dineshraj555"},"content":"![AppointmentSequenceDiagram](images/AppointmentSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"Dineshraj555"},"content":"The following activity diagram summarizes what happens when a user executes a new Appointmentcommand:","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"Dineshraj555"},"content":"![AppointmentActivityDiagram](images/AppointmentActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"Dineshraj555"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"Dineshraj555"},"content":"* **Alternative 1 (current choice):** Currently the appointment command is responsible for both the adding and clearing","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"Dineshraj555"},"content":"of appointment details to / from a pet. These 2 tasks follow a similar command format and are differentiated only","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"Dineshraj555"},"content":"by the prefixes / augments.","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"Dineshraj555"},"content":"    * Pros: Easy and simple to implement.","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"Dineshraj555"},"content":"    * Cons: User may struggle to get familiar with the command.","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"Dineshraj555"},"content":"* **Alternative 2:** Add a new `clear` command to clear and delete contents of variables based on input field.","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"Dineshraj555"},"content":"    * Pros: Better for future scalability.","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"Dineshraj555"},"content":"    * Cons: Complex implementation. More lines of code. Harder to set up initially.","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"### \\[Proposed\\] Filter feature","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"tsumian"},"content":"The proposed filter mechanism is facilitated by `FilterCommand` class.","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"It extends `Command` and takes in a field that the user wishes to filter the Address Book by followed by","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"tsumian"},"content":"a given filter word. The field is parsed by `FilterCommandParser`. A filter word will follow after the keyword to","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"indicate what the user wants to filter out specifically.","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"Currently, pet list can be filtered by date, owner name and tag. Users can only filter the address book by one field at","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"tsumian"},"content":"a time only. `FilterCommandParser` ensure this by throwing a `ParseException` when more than one filter field is","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"tsumian"},"content":"entered.","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"`FilterCommandParser` parses the arguments and classifies the fields into the three different classes as represented by","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"`DateContainsFilterDatePredicate`, `OwnerNameContainsFilterWordPredicate` and `TagContainsFilterWordPredicate` classes.","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"Each class extends the `FilterByContainsFilterWordPredicate` class, which implements the `Predicate\u003cPet\u003e` interface,","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"in order for `FindCommand` to handle different fields appropriately and consequently test each pet differently for a","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"match in the specified field.","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"tsumian"},"content":"`FindCommand` then updates the address book using one of the three classes (`Predicates`). Each class has a different","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"tsumian"},"content":"way of testing `Pet`. If user filters by date, test will go through attendance of pet and determines if pet is present","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"tsumian"},"content":"on the specified date (entered as `filterWord` by user). If user filters by owner name, test will go through owner name","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"of pet and finds a partial/ full match with `filterWord` provided. Similarly, if user filters by tags, test will go","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"tsumian"},"content":"through tags of pet and find match with `filterWord` provided.","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"The following sequence diagram shows how the filter operation works when `filter byTags/ beagle` is called:","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"![FilterSequenceDiagram](images/FilterSequenceDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"tsumian"},"content":"The following activity diagram summarizes what happens when a user executes a new `filter` command:","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"tsumian"},"content":"![FilterActivityDiagram](images/FilterActivityDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"tsumian"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"* **Alternative 1 (current choice):** Currently each filter field extends its own `FilterByContainsFilterWordPredicate` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"  * Pros: Easy to implement and increases flexibility when testing using a `Predicate`.","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"tsumian"},"content":"  * Cons: May generate a lot more classes if filter fields were to expand in the future.","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"* **Alternative 2:** Generate a new package containing the various predicate and methods to identify different fields.","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"tsumian"},"content":"  * Pros: Cleaner code. Better for future scalability.","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"tsumian"},"content":"  * Cons: Requires more lines of code. Harder to set up initially. Risk being messy if not careful.","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"Tiffanylin21"},"content":"Step 2. The user executes `delete 5` command to delete the 5th pet in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-03-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Tiffanylin21"},"content":"Step 3. The user executes `add n/David …​` to add a new pet. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"Tiffanylin21"},"content":"Step 4. The user now decides that adding the pet was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"Tiffanylin21"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the pet being deleted).","lastModifiedDate":"2022-03-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"tobihy"},"content":"### \\[Proposed\\] Attendance feature","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"tobihy"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"tobihy"},"content":"The proposed attendance feature is facilitated by `AttendanceCommand`. `AttendanceCommand` consists of two subclasses,","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"tobihy"},"content":"`PresentAttendanceCommand` and `AbsentAttendanceCommand`, which allows users to either mark a pet as present or absent","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"tobihy"},"content":"on a particular day. Initially, user input, which includes the index of the pet, date, as well as pick-up and drop-off","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"tobihy"},"content":"time (if applicable), is parsed by the `PresentAttendanceCommandParser` or `AbsentAttendanceCommandParser` classes into","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"tobihy"},"content":"the command classes above. The command classes are then passed on to the Model component for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":351,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"tobihy"},"content":"The data from the input is stored into the `AttendanceHashMap` class in pets, which consists of mappings of dates to","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"tobihy"},"content":"`Attendance` objects. The class hence acts as an \"attendance sheet\", and is the main repository of data within the","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"tobihy"},"content":"Model component that facilitates `Attendance` functionalities.","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"tobihy"},"content":"The operation of updating the pet\u0027s attendance details and updating the GUI to reflect such changes are done by methods","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"tobihy"},"content":"in the Model interface as `Model#setPet()` and `Model#updateFilterPetList()` respectively. `Attendance` GUI is also","lastModifiedDate":"2022-03-24"},{"lineNumber":358,"author":{"gitId":"tobihy"},"content":"supported by the methods in `AttendanceTag`, `TransportTag` and `AttendanceUtil` classes.","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"tobihy"},"content":"The following sequence diagram below models the interactions between the Logic as well as the Model components to","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"tobihy"},"content":"update the backend and frontend of the application.","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"tobihy"},"content":"![AbsentAttendanceSequenceDiagram](images/AbsentAttendanceSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"tobihy"},"content":"The activity diagram below illustrates the workflow of attendance commands.","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"tobihy"},"content":"![AttendanceActivityDiagram](images/AttendanceActivityDiagram.png)","lastModifiedDate":"2022-03-27"},{"lineNumber":368,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"tobihy"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"tobihy"},"content":"**Aspect: Attendance data within `Model` component**","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"tobihy"},"content":"* **Alternative 1 (current choice):** Attendance entries in every pets\u0027 HashMaps.","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"tobihy"},"content":"  * Pros: Better OOP and performance.","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"tobihy"},"content":"  * Cons: Higher memory usage.","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"tobihy"},"content":"* **Alternative 2:** All attendance entries in a single HashMap.","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"tobihy"},"content":"  * Pros: Lesser memory usage, easier to implement.","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"tobihy"},"content":"  * Cons: May have performance issues due to nested data structure.","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"tsumian"},"content":"* Pet daycare centre owners and employees","lastModifiedDate":"2022-02-26"},{"lineNumber":405,"author":{"gitId":"tsumian"},"content":"* has a need to manage administrative details of pets on a daily basis","lastModifiedDate":"2022-02-26"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"tsumian"},"content":"**Value proposition**: manage administrative details of pets faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-02-26"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                                        | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"tsumian"},"content":"|----------|-------------------|---------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-25"},{"lineNumber":420,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | retrieve pet owner\u0027s contact                                        | contact pet owners                                                     |","lastModifiedDate":"2022-02-27"},{"lineNumber":421,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | tag different types of pets                                         | easily differentiate between the types of pets                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":422,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | track when pets require pickup or drop-off                          | schedule the school bus for each day                                   |","lastModifiedDate":"2022-02-27"},{"lineNumber":423,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | track the different food preferences required by different pets     | make sure the pets are served the right foods                          |","lastModifiedDate":"2022-02-27"},{"lineNumber":424,"author":{"gitId":"tobihy"},"content":"| `* * *`  | pet daycare owner | track the attendanceEntry of pets                                   | charge pet owners the correct amount depending on pets attendanceEntry |","lastModifiedDate":"2022-03-20"},{"lineNumber":425,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | add pets in the daycare to system                                   | I have a consolidated information sheet                                |","lastModifiedDate":"2022-02-27"},{"lineNumber":426,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | retrieve the pets addresses                                         | inform the school bus driver correctly                                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":427,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | find pets bu their ID                                               | retrieve the pet information accordingly                               |","lastModifiedDate":"2022-02-27"},{"lineNumber":428,"author":{"gitId":"tsumian"},"content":"| `* * *`  | pet daycare owner | delete pet\u0027s information from the system                            | information of pets that are in the system will be up to date          |","lastModifiedDate":"2022-02-27"},{"lineNumber":429,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | tabulate the monthly charge of each pets                            | bill owners accordingly                                                |","lastModifiedDate":"2022-02-27"},{"lineNumber":430,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | track the times that the pets will arrive                           | plan out my manpower allocation for the day                            |","lastModifiedDate":"2022-02-27"},{"lineNumber":431,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | track the weight of pets                                            | inform the owner of any changes in weight                              |","lastModifiedDate":"2022-02-27"},{"lineNumber":432,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | track pets\u0027 grooming appointments                                   | remember to bring them for grooming                                    |","lastModifiedDate":"2022-02-27"},{"lineNumber":433,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | track the allergies that each pet has                               | avoid giving them food they may be allergic to                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":434,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | order pets chronologically by there name                            | easily search for their name in the system                             |","lastModifiedDate":"2022-02-27"},{"lineNumber":435,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | order pets\u0027 appointments chronologically                            | know what is the next appointment I should take note of                |","lastModifiedDate":"2022-02-27"},{"lineNumber":436,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | keep track of pets\u0027 birthdays                                       | throw a celebration with their friends                                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":437,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | alert when it is time to feed the pets                              | ensure pets are well-fed and healthy                                   |","lastModifiedDate":"2022-02-27"},{"lineNumber":438,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | keep track of basic logistics like leash and waste bags             | replace when they are running low                                      |","lastModifiedDate":"2022-02-27"},{"lineNumber":439,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | alert one day before appointment                                    | remember a particular pet\u0027s appointment schedule                       |","lastModifiedDate":"2022-02-27"},{"lineNumber":440,"author":{"gitId":"tsumian"},"content":"| `* *`    | pet daycare owner | alert when pets arrive                                              | prepare relevant logistics needed to take care of the pet              |","lastModifiedDate":"2022-02-27"},{"lineNumber":441,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | track the vet appointments of pets                                  | make sure pets do not miss their medical appointments                  |","lastModifiedDate":"2022-02-27"},{"lineNumber":442,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | sort the pets by their type                                         | order their necessary supplies accordingly                             |","lastModifiedDate":"2022-02-27"},{"lineNumber":443,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | track the medicine that pets need to take                           | i can feed them medicine appropriately                                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":444,"author":{"gitId":"tobihy"},"content":"| `*`      | pet daycare owner | change the attendanceEntry of pets anytime I want                   | I can allow for last minute scheduling                                 |","lastModifiedDate":"2022-03-20"},{"lineNumber":445,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | update pet\u0027s information                                            |                                                                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":446,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | update pet owner\u0027s information                                      |                                                                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":447,"author":{"gitId":"tobihy"},"content":"| `*`      | pet daycare owner | access the previous attendanceEntry of pets                         | update owners if they were to enquire                                  |","lastModifiedDate":"2022-03-20"},{"lineNumber":448,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | find the number of pets present in the daycare fo each day          | arrange the necessary manpower                                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":449,"author":{"gitId":"tsumian"},"content":"| `*`      | pet daycare owner | get a list of pets which will be staying overnight in the daycare   | arrange the necessary manpower                                         |","lastModifiedDate":"2022-02-27"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"tsumian"},"content":"(For all use cases below, the **System** is the `WoofAreYou` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-26"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"tsumian"},"content":"**Use case: Add a pet**","lastModifiedDate":"2022-02-26"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"tsumian"},"content":"1.  User adds a pet with pet details","lastModifiedDate":"2022-02-26"},{"lineNumber":460,"author":{"gitId":"tsumian"},"content":"2.  System shows confirmation message that pet details are added","lastModifiedDate":"2022-02-26"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":465,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in wrong command format.","lastModifiedDate":"2022-02-26"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":469,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":471,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":473,"author":{"gitId":"tsumian"},"content":"**Use case: Delete a pet**","lastModifiedDate":"2022-02-26"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":475,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":476,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":477,"author":{"gitId":"tsumian"},"content":"1.  User deletes a pet with pet ID","lastModifiedDate":"2022-02-26"},{"lineNumber":478,"author":{"gitId":"tsumian"},"content":"2.  System shows confirmation message that pet details are deleted","lastModifiedDate":"2022-02-26"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in missing/ invalid pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":486,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":487,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":488,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":489,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":490,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":491,"author":{"gitId":"tsumian"},"content":"**Use case: Get pet ID**","lastModifiedDate":"2022-02-26"},{"lineNumber":492,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":493,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":494,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":495,"author":{"gitId":"tsumian"},"content":"1.  User get pet ID with name of pet.","lastModifiedDate":"2022-02-26"},{"lineNumber":496,"author":{"gitId":"tsumian"},"content":"2.  System shows a list of pet IDs with the specified name.","lastModifiedDate":"2022-02-26"},{"lineNumber":497,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":498,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":499,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":500,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":501,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":502,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":503,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid pet name.","lastModifiedDate":"2022-02-26"},{"lineNumber":504,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":505,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows empty list.","lastModifiedDate":"2022-02-26"},{"lineNumber":506,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":507,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":508,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":509,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":510,"author":{"gitId":"tsumian"},"content":"**Use case: Get pet dietary requirements**","lastModifiedDate":"2022-02-26"},{"lineNumber":511,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":512,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":513,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":514,"author":{"gitId":"tsumian"},"content":"1.  User keys in pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":515,"author":{"gitId":"tsumian"},"content":"2.  System shows the dietary requirement of the pet with specified ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":516,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":517,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":518,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":519,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":520,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":521,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":522,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":523,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":524,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":525,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":526,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":527,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":528,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":529,"author":{"gitId":"tsumian"},"content":"**Use case: Get pet owner details**","lastModifiedDate":"2022-02-26"},{"lineNumber":530,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":531,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":532,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":533,"author":{"gitId":"tsumian"},"content":"1.  User keys in pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":534,"author":{"gitId":"tsumian"},"content":"2.  System shows the pet owner\u0027s details of the pet with specified ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":535,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":536,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":537,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":538,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":539,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":540,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":541,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":542,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":543,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":544,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":545,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":546,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":547,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":548,"author":{"gitId":"tsumian"},"content":"**Use case: Get pet pickup and drop-off time**","lastModifiedDate":"2022-02-26"},{"lineNumber":549,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":550,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":551,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":552,"author":{"gitId":"tsumian"},"content":"1.  User keys in pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":553,"author":{"gitId":"tsumian"},"content":"2.  System shows the pickup and drop-off time of the pet with specified ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":554,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":555,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":556,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":557,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":558,"author":{"gitId":"tsumian"},"content":"**Extensions**","lastModifiedDate":"2022-02-26"},{"lineNumber":559,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":560,"author":{"gitId":"tsumian"},"content":"* 1a. User keyed in invalid pet ID.","lastModifiedDate":"2022-02-26"},{"lineNumber":561,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":562,"author":{"gitId":"tsumian"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-02-26"},{"lineNumber":563,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":564,"author":{"gitId":"tsumian"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-26"},{"lineNumber":565,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":566,"author":{"gitId":"tsumian"},"content":"**Use case: Exit**","lastModifiedDate":"2022-02-26"},{"lineNumber":567,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":568,"author":{"gitId":"tsumian"},"content":"**MSS**","lastModifiedDate":"2022-02-26"},{"lineNumber":569,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":570,"author":{"gitId":"tsumian"},"content":"1.  User keys exit.","lastModifiedDate":"2022-02-26"},{"lineNumber":571,"author":{"gitId":"tsumian"},"content":"2.  System terminates the program.","lastModifiedDate":"2022-02-26"},{"lineNumber":572,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":573,"author":{"gitId":"tsumian"},"content":"Use case ends.","lastModifiedDate":"2022-02-26"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"tsumian"},"content":"2.  Should be able to hold up to 1000 pets without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-26"},{"lineNumber":580,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"Tiffanylin21"},"content":"### Deleting a pet","lastModifiedDate":"2022-03-08"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"Tiffanylin21"},"content":"1. Deleting a pet while all pets are being shown","lastModifiedDate":"2022-03-08"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"Tiffanylin21"},"content":"   1. Prerequisites: List all pets using the `list` command. Multiple pets in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"Tiffanylin21"},"content":"      Expected: No pet is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-08"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Dineshraj555":33,"Tiffanylin21":9,"tsumian":178,"-":343,"soloplxya":36,"tobihy":40}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"* Table of Contents","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"{:toc}","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"# WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"WoofAreYou is a desktop application for pet daycare owners to handle the administrative information of their pets. If you can","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"type fast and understand the basics of CLI (Command Line Interface), WoofAreYou can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/addCommand.png\" alt\u003d\"WoofForYou sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"  {:toc}","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"1. Download the latest `WoofAreYou.jar` from [here](https://github.com/AY2122S2-CS2103T-T13-1/tp/releases/tag/v1.3.trial).","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"1. Double-click the file to start the app.","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"   * **`add n/Woofie o/Alice Tan p/98765432 a/523 Woodlands ave 5, #01-01 t/Bulldog`** : Adds a pet named `Peepee` to the tracker.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"   * **`delete 3`** : Deletes the 3rd pet shown in list.","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"   * **`find Woofie`** : Returns a list of pets with similar name as keywords and their corresponding information.","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"1. Refer to the [Features](#Features) below for details of each command.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"As a pet daycare owner, it takes a lot of effort to match pets to their names,","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"remember their owner\u0027s names, phone numbers and addresses. Not to mention, some pets have special dietary requirements and","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"vet appointments that you have to take note off. With WoofAreYou, these things can be taken care","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"of easily, and you can do exactly what you are good at: taking good care of them and ensuring their safety.","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"This section will elaborate on the features WoofAreYou has and is","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"categorised into **Basic Administration**, **Optional Requirements** and **Efficiency Enhancement**.","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Woofie`.","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/Woofie t/German Sheppard` or as `n/Woofie`.","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/German Sheppard`, `t/Golden Retriever t/Dachshund` etc.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"## _Basic Administration_","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"This subsection covers the basic processes that you will encounter when adding a pet to the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"### Add a pet: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"When you have a new pet in the daycare, you will need to add a pet to the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"Format: `add n/NAME_OF_PET o/OWNER_NAME p/PHONE_NUMBER a/ADDRESS [t/TAG]...`","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"* Each particular field is compulsory except for `TAG`.","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"* `TAG` is an optional field which could be used to indicate the breed of a pet.","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"  * If a pet is a Golden Dachshund, you can use `t/Golden Retriever t/Dachshund` or just `t/Golden Dachshund`.","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"* Each particular entered must strictly correspond to its legal prefix.`e.g: p/Address is considered illegal`.","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"* Phone number **must only contain numbers**.","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"* `add n/Woofie o/Alice Tan p/98765432 a/523 Woodlands ave 5, #01-01 t/Bulldog` will show a screenshot as below.","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/addWoofieSample.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"### Edit a pet : `edit`","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"tsumian"},"content":"When you key in some particular(s) wrongly, you can edit an existing pet in the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"tsumian"},"content":"Format: `edit INDEX [n/NAME_OF_PET] [o/OWNER_NAME] [p/PHONE_NUMBER] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"* Edits the pet at the specified `INDEX`. The index refers to the index number shown in the displayed pet list. The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"* All the fields are optional but at least one of the fields must be provided.","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"* When editing tags, the existing tags of the pet will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"* You can remove all the pet\u0027s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"tsumian"},"content":"* Continuing from the previous example, `edit 1 t/German Sheppard` will change the tag of Woofie from \u0027Bulldog\u0027 to \u0027German Sheppard\u0027.","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"tsumian"},"content":"### Mark a pet as present: `present`","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"When a pet is arriving for daycare on a certain day, you will need to mark a pet as present on that day. Sometimes the","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"tsumian"},"content":"pet will require school bus pick-up and drop-off, if you provide those services.","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"tsumian"},"content":"Format: `present INDEX date/dd-MM-yyyy [pu/HH:mm do/HH:mm]`","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"* Adds a present attendance entry with the attendance date, pick-up and drop-off time to the pet at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"tsumian"},"content":"* Date **must follow the specified format**.","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"tsumian"},"content":"* Time for pick-up and drop-off are optional but **must also follow the specified format**.","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"* As per previous example `present 1 date/23-03-2022 pu/08:00 do/19:00` indicates that Woofie is present for daycare on `23-03-2022`, requires to be picked up at `08:00` and dropped off at `19:00`","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"* If dd-MM-yyyy happens to be within 7 days from now, you will see the attendance tag turn green as shown below.","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/attendanceSample.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"tsumian"},"content":"### Mark a pet as absent: `absent`","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"tsumian"},"content":"On other days, the pet will not come to the daycare, and you want to mark a pet as absent on that day.","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"tsumian"},"content":"Format: `absent INDEX date/dd-MM-yyyy`","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"* Adds an absent attendance entry with the attendance date to the pet at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"* Date **must follow the specified format**.","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"* `absent 1 date/22-03-2022` indicates that pet 1 is absent for daycare on `22-03-2022`.","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"* If dd-MM-yyyy happens to be within 7 days from now, you will see the attendance tag turn red.","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"### Delete a pet: `delete`","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"When the pet no longer needs your servies, you want to delete the specified pet from the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"* Deletes the pet at the specified `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"* `delete 1` deletes the first pet in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"When you no longer need the information on any of the pets, you can clear all entries from the pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"When you are done with your daily administrative duties, you can exit the program.","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"## _Optional Requirements_","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"This subsection covers the features that you may encounter when having a pet that requires more attention.","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"tsumian"},"content":"### Add pets\u0027 dietary requirements: `diet` ###","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"tsumian"},"content":"When some pets have health issues, owners will give instructions on what their pet can or cannot eat. You will want to","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"tsumian"},"content":"put a diet remark on the pet to take note.","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"tsumian"},"content":"Format: `diet INDEX d/REMARK`","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"tsumian"},"content":"* Adds `d/REMARK` as a dietary requirement for pet at `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"tsumian"},"content":"* Entering `diet INDEX d/` will remove the dietary requirements of pet at `INDEX`.","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"tsumian"},"content":"* `diet 1 d/Only feed dry kibble` will store a dietary remark for Woofie indicating to \"Only feed dry kibble\" as shown below.","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/dietSample.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"tsumian"},"content":"### Add / Clear pets\u0027 appointment details: `app` ###","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"tsumian"},"content":"Sometimes, you will need to bring the pet out for its vet or grooming appointments. You will want to put a reminder on","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"tsumian"},"content":"the pet to take note as well. With this feature you can **_Add Appointment_** and **_Clear Appointment_** when appropriate.","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"tsumian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"tsumian"},"content":"**:information_source: Notes about this feature:**\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"tsumian"},"content":"* You can only store one appointment to a pet at any point of time.","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"tsumian"},"content":"  * This is because pets often have varying appointment dates and it is unlikely to know when the next appointment will be.","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"tsumian"},"content":"* Once the appointment is over, you have to clear it if you want to put new appointments in the future.","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"Dineshraj555"},"content":"**Add Appointment**","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"Dineshraj555"},"content":"Format: `app INDEX dt/[dd-MM-yyyy HH:mm] at/[location]`","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"* Adds appointment for pet at `INDEX` on `dt/[dd-MM-yyyy HH:mm]` `at/[location]` .","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"Dineshraj555"},"content":"* Date and time of appointment should be entered together with `dt/` prefix.","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"Dineshraj555"},"content":"* Date and time should strictly follow `dd-MM-yyyy HH:mm` format.","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"Dineshraj555"},"content":"* Location of appointment should be entered with `at/` prefix.","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"Dineshraj555"},"content":"* Whitespaces, special characters and alphanumeric characters are allowed for location.","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"Dineshraj555"},"content":"* If both `date/` and `at/` are not present, `app` will be deemed invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"Dineshraj555"},"content":"Examples:","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"* `app 1 dt/23-03-2022 09:30 at/ NUS Vet Clinic` will store the appointment details for Woofie as","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"`Mar-23-2022 9:30 AM at NUS Vet Clinic`.","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"Dineshraj555"},"content":"**Clear Appointment**","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"Dineshraj555"},"content":"Format: `app INDEX clear`","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"* Clears appointment for pet at `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"* The index refers to the index number shown in the current list of pets.","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"Dineshraj555"},"content":"* `clear` is case-sensitive.","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"Dineshraj555"},"content":"* Whitespaces, special characters and alphanumeric characters are allowed for location.","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"Dineshraj555"},"content":"* If `clear` is not present, `app` will be deemed invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"Dineshraj555"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"`app 1 clear` will clear the appointment details for Woofie and set it to be an empty field.","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"## _Efficiency Enhancement_","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"You may have noticed that a handful of commands require `INDEX` and it may be very troublesome to scroll through the","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"whole pet list to find that one `INDEX` if your pet list is huge. Hence, this subsection covers the features that","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"will make life easier when trying to implement the features above.","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"### Sort pets: `sort`","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":254,"author":{"gitId":"tsumian"},"content":"Firstly, you can sort the pet list by a few parameters. This command returns a sorted list of pets according to the","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"tsumian"},"content":"parameter chosen. You can choose to either sort alphabetically by owner name or pet name. You can also sort chronologically","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"by appointment date.","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"Format: `sort SORT_BY`","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"tsumian"},"content":"* The valid `SORT_BY` parameters are `name` , `owner` and `app`.","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"* The parameters are case-sensitive.","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"* Only one `SORT_BY` parameter is to be used when the command. If none or more than one parameter is used, command will throw an error.","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":263,"author":{"gitId":"Tiffanylin21"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"* `sort name` will sort the pets alphabetically as shown below.","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":266,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/sortCommandSample.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"### Find pet details: `find`","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"If sorting alone is not enough, and you know exactly which pet you are looking for then you can use this command to find","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"pets with that name. If there are multiple pets with the same name, a pet list of all such pets","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"will be displayed. You can also find using multiple pet names.","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"Format: `find NAME_OF_PET [KEYWORDS]...`","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"tsumian"},"content":"* The name of pet is case-insensitive e.g: `find Mojo` will match `find mojo`.","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"* Only the name is searched.","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"tsumian"},"content":"* Search returns partial name matches e.g.: `find mo` will return Mojo as a result.","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-16"},{"lineNumber":282,"author":{"gitId":"tsumian"},"content":"* `find poofie woofie` will return a pet list with these two pets in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/findSample.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":288,"author":{"gitId":"tsumian"},"content":"### Filter pet list: `filter`","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"tsumian"},"content":"If you just want to know  common information about some pets, you can filter the pet list by a specified field.","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"You can filter by date, to find out which pets are present on a given date. You can filter by appointment to check which","lastModifiedDate":"2022-03-28"},{"lineNumber":292,"author":{"gitId":"tsumian"},"content":"pets have appointment on a given date. You can filter by owner\u0027s name to find all pets with the same owner. You can also","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"tsumian"},"content":"filter by tags to find all pets of with a common tag.","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"tsumian"},"content":"Format: `filter f/KEYWORD`","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"tsumian"},"content":"* Can only filter by date specified, owner\u0027s name and tags of pets (choose one out of three, else error will be shown)","lastModifiedDate":"2022-03-26"},{"lineNumber":298,"author":{"gitId":"tsumian"},"content":"* Specified `f/` only consists of: `byDate/`, `byApp/`, `byTags/` and `byOwner/`.","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"tsumian"},"content":"* `KEYWORD` if user uses `byDate/` or `byApp/` has to be in `dd-MM-yyyy` format, or `today`.","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"tsumian"},"content":"* `KEYWORD` if user uses `byOwner/` can be any length.","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"tsumian"},"content":"* `KEYWORD` if user uses `byTags/` can be any length.","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"tsumian"},"content":"    * Can filter with a partial match in `Keyword`: `Bord`, `Borde Colli`, will match with pets tagged as `Border Collie`","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"tsumian"},"content":"* `filter byOwner/Lily` shows pets owned by all Lily(s).","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"tsumian"},"content":"* `filter byTags/Retriever` shows pets with `Retriever` in their tags.","lastModifiedDate":"2022-03-27"},{"lineNumber":307,"author":{"gitId":"tsumian"},"content":"* `filter byDate/22-03-2022` show pets present on 22 March 2022 as shown below.","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"tsumian"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"tsumian"},"content":"  \u003cimg src\u003d\"images/forUserGuide/filterByDateSample.png\" alt\u003d\"After adding Woofie sample screenshot\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"tsumian"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":313,"author":{"gitId":"tsumian"},"content":"### List all pets : `list`","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":315,"author":{"gitId":"tsumian"},"content":"After using all of those commands, you may want to retrieve the initial pet list with all the pets. This feature just","lastModifiedDate":"2022-03-28"},{"lineNumber":316,"author":{"gitId":"tsumian"},"content":"shows a list of all pets in pet list.","lastModifiedDate":"2022-03-28"},{"lineNumber":317,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"tsumian"},"content":"Format:`list`","lastModifiedDate":"2022-03-28"},{"lineNumber":319,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"tsumian"},"content":"### Undo changes : `undo`","lastModifiedDate":"2022-03-28"},{"lineNumber":321,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"tsumian"},"content":"Mistakes happen when dealing with CLI. Fortunately, you can undo previous commands that you have keyed in.","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"tsumian"},"content":"Format: `undo`","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"tsumian"},"content":"* You will not be able to undo `clear`, `exit`, `find`, `help` and `list` Commands.","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"tsumian"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"tsumian"},"content":"* If the user chooses to delete a pet, `undo` will revert the address book to the state where the pet is not deleted.","lastModifiedDate":"2022-03-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"tsumian"},"content":"### View help : `help`","lastModifiedDate":"2022-03-28"},{"lineNumber":331,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"tsumian"},"content":"If you need additional help when using WoofAreYou, you can use the help command. It shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"Dineshraj555"},"content":"Format: `help`","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"tsumian"},"content":"## Command Summary","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":338,"author":{"gitId":"tsumian"},"content":"The table below summarises all the commands and features discussed above. You can refer to this if you do not want to","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"tsumian"},"content":"deal with the nitty-gritty details of each feature.","lastModifiedDate":"2022-03-28"},{"lineNumber":340,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"tsumian"},"content":"| Action        | Format                                                                              | Example                                                                       | Function                                                                                                              |","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"tsumian"},"content":"|---------------|-------------------------------------------------------------------------------------|-------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"tsumian"},"content":"| **Add**       | `add n/NAME_OF_PET o/OWNER_NAME p/PHONE_NUMBER a/ADDRESS [t/TAG]...`                | `add n/Woofie o/Alice Tan p/98765432 a/523 Woodlands ave 5, #01-01 t/Bulldog` | Adds Woofie into pet list along with its information                                                                  |","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"tsumian"},"content":"| **Edit**      | `edit INDEX [n/NAME_OF_PET] [o/OWNER_NAME] [p/PHONE_NUMBER] [a/ADDRESS] [t/TAG]...` | `edit 1 p/98247076 t/bulldog`                                                 | Edits phone number and tag of pet at index 1                                                                          |","lastModifiedDate":"2022-03-28"},{"lineNumber":345,"author":{"gitId":"tsumian"},"content":"| **Delete**    | `delete id`                                                                         | `delete 1`                                                                    | Deletes pet at index 1 from the pet list                                                                              |","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"tsumian"},"content":"| **Find**      | `find n/NAME_OF_PET [KEYWORDS]...`                                                  | `find Woofie`                                                                 | Finds all pets with similar name as \"Woofie\"                                                                          |","lastModifiedDate":"2022-03-28"},{"lineNumber":347,"author":{"gitId":"tsumian"},"content":"| **Diet**      | `diet INDEX d/remark`                                                               | `diet 1 d/Only feed dry kibble`                                               | Adds a diet remark \"Only feed dry kibble\" to pet at index 1                                                           |","lastModifiedDate":"2022-03-28"},{"lineNumber":348,"author":{"gitId":"tsumian"},"content":"| **Present**   | `present INDEX date/dd-MM-yyyy pu/HH:mm do/HH:mm`                                   | `present 1 date/22-03-2022 pu/08:00 do/17:00`                                 | Indicates that pet at index 1 will be attending daycare on 22 March 2022, requires pick up at 8am and drop off at 5pm |","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"tsumian"},"content":"| **Absent**    | `absent INDEX date/dd-MM-yyyy`                                                      | `absent 1 date/22-03-2022`                                                    | Indicates that pet at index 1 was absent on 22 March 2022                                                             |","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"tsumian"},"content":"| **App**       | `app INDEX date/[dd-MM-yyyy HH:mm] at/[location]`                                   | `app 1 date/22-03-2022 09:30 at/ NUS Vet Clinic`                              | Indicates that pet at index 1 has an appointment on 22 March 2022, 9.30am at NUS Vet Clinic                           |","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"tsumian"},"content":"| **App clear** | `app INDEX clear`                                                                   | `app 1 clear`                                                                 | Clears the current appointment of pet at index 1                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"tsumian"},"content":"| **Sort**      | `sort SORT_BY`                                                                      | `sort name`                                                                   | Sorts pet list alphabetically by name of pets                                                                         |","lastModifiedDate":"2022-03-28"},{"lineNumber":353,"author":{"gitId":"tsumian"},"content":"| **Filter**    | `filter f/KEYWORD`                                                                  | `filter byDate/22-03-2022`                                                    | Returns information of all pets present on 22 March 2022                                                              |","lastModifiedDate":"2022-03-28"},{"lineNumber":354,"author":{"gitId":"tsumian"},"content":"| **List**      | `list`                                                                              | `list`                                                                        | Lists all pets in pet list                                                                                            |","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"tsumian"},"content":"| **Clear**     | `clear`                                                                             | `clear`                                                                       | Clears all pets in pet list                                                                                           |","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"tsumian"},"content":"| **Undo**      | `undo`                                                                              | `undo`                                                                        | Undoes the previous command made                                                                                      |","lastModifiedDate":"2022-03-28"},{"lineNumber":357,"author":{"gitId":"tsumian"},"content":"| **Help**      | `help`                                                                              | `help`                                                                        | Shows a message explaining how to access the help page                                                                |","lastModifiedDate":"2022-03-28"},{"lineNumber":358,"author":{"gitId":"tsumian"},"content":"| **Exit**      | `exit`                                                                              | `exit`                                                                        | Exits WoofAreYou                                                                                                      |","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":32,"Tiffanylin21":7,"tsumian":204,"-":110,"soloplxya":4,"tobihy":1}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"    content: \"WoofAreYou\";","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"tsumian":1,"-":294}},{"path":"docs/diagrams/AbsentAttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"participant \":AbsentAttendanceCommandParser\" as AbsentAttendanceCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"participant \"a:AbsentAttendanceCommand\" as AbsentAttendanceCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"[-\u003e LogicManager : execute(\"absent 1 date/23-03-2022\")","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"absent 1 date/23-03-2022\")","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"create AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"AddressBookParser -\u003e AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"AddressBookParser -\u003e AbsentAttendanceCommandParser : parse(\"1 date/23-03-2022\")\")","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"create AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser -\u003e AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand --\u003e AbsentAttendanceCommandParser : a","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"destroy AbsentAttendanceCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"LogicManager -\u003e AbsentAttendanceCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"activate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand -\u003e Model : setPet()","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"Model -\u003e AddressBook : setPet()","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"activate AddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"Model --\u003e AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand -\u003e Model : updateFilteredPetList()","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"Model --\u003e AbsentAttendanceCommand :","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"CommandResult --\u003e AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"AbsentAttendanceCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"deactivate AbsentAttendanceCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tobihy":82}},{"path":"docs/diagrams/AppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":":User executes Appointment command;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"if () then ([argument \u003d\u003d Index dateTime location])","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    : Add and store appointment details in database;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"else ([argument \u003d\u003d index clear])","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    : Clear and delete appointment details in database;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"endif","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Dineshraj555":14}},{"path":"docs/diagrams/AppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"participant \":AppointmentCommandParser\" as AppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"participant \"a:AppointmentCommand\" as AppointmentCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"[-\u003e LogicManager : execute(\"app 1 clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"app 1 clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"create AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"AddressBookParser -\u003e AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"AddressBookParser -\u003e AppointmentCommandParser : parse(\"1 clear\")","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"create AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser -\u003e AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand --\u003e AppointmentCommandParser : a","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"destroy AppointmentCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"LogicManager -\u003e AppointmentCommand : execute()","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"activate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand -\u003e Model : setPet()","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"Model -\u003e AddressBook : setPet()","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"activate AddressBook","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"Model --\u003e AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand -\u003e Model : updateFilteredPetList()","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"Model --\u003e AppointmentCommand :","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"CommandResult --\u003e AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"AppointmentCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"deactivate AppointmentCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Dineshraj555":82}},{"path":"docs/diagrams/AttendanceActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":":User executes attendance command;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"if () then ([not marked])","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":":update attendance;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"else ([already marked])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"if () then ([same entry])","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":":show error message;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"else ([different entry])","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":":update attendance;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tobihy":19}},{"path":"docs/diagrams/FilterActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":":User executes filter command;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"switch ()","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"case ( [field \u003d\u003d \"byTags/\"] )","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by tags;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"case ( [field \u003d\u003d \"byDate/\"] )","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by date;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"case ( [keyword \u003d\u003d \"byOwner/\"] )","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by owner name;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"case ( [keyword \u003d\u003d byApp/] )","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    :Filter pet list by appointment date;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"endswitch","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":":Return filtered list;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tsumian":19}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"participant \"fp:FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"[-\u003e LogicManager : execute(\"filter byTags/beagle\")","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter byTags/beagle\")","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"AddressBookParser -\u003e FilterCommandParser: parse(\"filter byTags/beagle)","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"activate FilterCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"create FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"activate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"FilterCommand --\u003e FilterCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"FilterCommandParser --\u003e AddressBookParser: f","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"AddressBookParser --\u003e LogicManager: fp","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"LogicManager -\u003e FilterCommand: execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"activate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"FilterCommand -\u003e Model: updateFilteredPetList()","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"FilterCommand -\u003e Model: getFilteredPetList()","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"FilterCommand --\u003e LogicManager: result","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"deactivate FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"FilterCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"destroy FilterCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tsumian":61}},{"path":"docs/diagrams/Sort.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"participant \"sp:SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"participant \":UniquePetList\" as UniquePetList MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"[-\u003e LogicManager : execute(\"sort /o\")","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort /o\")","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"AddressBookParser -\u003e SortCommandParser: parse(\"/o\")","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"activate SortCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"create SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"activate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"SortCommand --\u003e SortCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"SortCommandParser --\u003e AddressBookParser: s","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"deactivate SortCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"AddressBookParser --\u003e LogicManager : sp","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"activate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"SortCommand -\u003e Model : sortPetList()","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"Model -\u003e AddressBook : sortPets()","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"activate AddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"AddressBook -\u003e UniquePetList: sortPets()","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"activate UniquePetList","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"UniquePetList -\u003e UniquePetList:  sortPetList()","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"UniquePetList --\u003e AddressBook :","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"deactivate UniquePetList","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"deactivate AddressBook","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"deactivate SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"SortCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"destroy SortCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"soloplxya":83}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"start","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":":User executes sort command;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"if () then ([argument \u003d\u003d \"/o\"])","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    :Sort pet list by owner name;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"else ([argument \u003d\u003d \"/n\"])","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    :Sort pet list by pet name;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"endif","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"stop","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"@enduml","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"soloplxya":15}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"ecp -\u003e ec ++: index, editPetDescriptor","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Tiffanylin21":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"title: WoofAreYou","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"**WoofAreYou is a desktop application for pet daycare owners to handle the administrative information of their pets.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"* If you are interested in using WoofAreYou, head over to the [_Quick Start_ section of the **User Guide**](https://github.com/AY2122S2-CS2103T-T13-1/tp/blob/12056c1a33e733023afd53078a36a812c0c7edee/docs/UserGuide.md#quick-start).","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"* If you are interested about developing WoofAreYou, the [**Developer Guide**](https://github.com/AY2122S2-CS2103T-T13-1/tp/blob/12056c1a33e733023afd53078a36a812c0c7edee/docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Tiffanylin21":5,"-":15}},{"path":"docs/team/dineshraj555.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"title: S Dinesh Raj\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps.The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"* **New Feature**: ","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"1. AppointmentCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ddineshraj555\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"* **Project management**: *to be added soon*","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"1. Update AddCommand -\u003e Worked on second level refactoring to convert project from address book to pet book.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"2. Update SortCommand -\u003e Implemented additional 3 sort fields : appointment, pickup time and drop off time.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"  * User Guide: ","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"  1. Added Appointment Command, Add Command, Clear Command, Edit Command.","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"  2. Updated SortCommand ","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"  * Developer Guide: ","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"  1. Appointment Command feature design implementation.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"* **Community**: *to be added soon*","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"* **Tools**: *to be added soon*","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Dineshraj555":33}},{"path":"docs/team/soloplxya.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"title: Shaine\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps.The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC!","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"* **Contributions to UG**: Added introduction and screenshot of Application","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dsoloplxya\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"soloplxya":19}},{"path":"docs/team/tiffanylin21.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"title: Tiffany\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"* **Contributions to UG**: Updated UG to include `time` and `delete` commands","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtiffanylin21\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Tiffanylin21":19,"soloplxya":1}},{"path":"docs/team/tobihy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"title: Hao Yu\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"WoofAreYou is a desktop app for pet daycare owners to handle the administrative information of their pets. If you can type fast, WoofAreYou can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtobihy\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"tobihy":22}},{"path":"docs/team/tsumian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"title: Thia Su Mian\u0027ss Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"### Project: WoofAreYou","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"WoofAreYou is a desktop administrative manager used by pet daycare owners and employees to aid their day-to-day duties. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtsumian\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"* **Project management**:","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"  * User Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    * Added implementation details of the `User Stories`.","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"* **Community**:","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"  * to be added","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"* **Tools**:","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"  * Integrated CodeCov to the team repo","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"tsumian":40}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":" * Changes the remark of an existing pet in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"            + \": Edits the remark of the pet identified \"","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"            + \"by the index number used in the last pet listing. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"     * @param index of the pet in the filtered pet list to edit the remark","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"     * @param remark of the pet to be updated to","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"Tiffanylin21"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of pet data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the pet’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Tiffanylin21"},"content":"Create a new `Remark` in `seedu.address.model.pet`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"Tiffanylin21"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Tiffanylin21"},"content":"Simply add the following to [`seedu.address.ui.PetCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"Tiffanylin21"},"content":"public PersonCard(Person pet, int displayedIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"Tiffanylin21"},"content":"    remark.setText(pet.getRemark().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"Tiffanylin21"},"content":"        Person petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":347,"author":{"gitId":"Tiffanylin21"},"content":"        Person editedPet \u003d new Person(","lastModifiedDate":"2022-03-08"},{"lineNumber":348,"author":{"gitId":"Tiffanylin21"},"content":"                petToEdit.getName(), petToEdit.getPhone(), petToEdit.getEmail(),","lastModifiedDate":"2022-03-08"},{"lineNumber":349,"author":{"gitId":"Tiffanylin21"},"content":"                petToEdit.getAddress(), remark, petToEdit.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"Tiffanylin21"},"content":"        model.setPerson(petToEdit, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(generateSuccessMessage(editedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"Tiffanylin21"},"content":"    private String generateSuccessMessage(Person petToEdit) {","lastModifiedDate":"2022-03-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"Tiffanylin21"},"content":"        return String.format(message, petToEdit);","lastModifiedDate":"2022-03-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Tiffanylin21":20,"-":381}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.pet.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"\u003cLabel fx:id\u003d\"ownerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ownerName\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"  \"pets\": [ {","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"    \"ownerName\": \"hans@example.com\",","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tiffanylin21":4,"-":108}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Tiffanylin21"},"content":"       Person petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":193,"author":{"gitId":"Tiffanylin21"},"content":"       Person editedPet \u003d createEditedPerson(petToEdit, editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"Tiffanylin21"},"content":"       if (!petToEdit.isSamePerson(editedPet) \u0026\u0026 model.hasPerson(editedPet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Tiffanylin21"},"content":"       model.setPerson(petToEdit, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Tiffanylin21"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"Tiffanylin21"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the pet data.","lastModifiedDate":"2022-03-08"},{"lineNumber":205,"author":{"gitId":"Tiffanylin21"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ pets.\u003cbr\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":206,"author":{"gitId":"Tiffanylin21"},"content":"     FYI, The \u0027filtered list\u0027 is the list of pets resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the pets so that the user can see the edited pet along with all other pets. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":207,"author":{"gitId":"Tiffanylin21"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of pets is being tracked.","lastModifiedDate":"2022-03-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Tiffanylin21"},"content":"        pets.addAll(","lastModifiedDate":"2022-03-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tiffanylin21":10,"-":291}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":182,"tobihy":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_INVALID_PET_DISPLAYED_INDEX \u003d \"The pet index provided is invalid\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_PETS_LISTED_OVERVIEW \u003d \"%1$d pets listed!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_PETS_FOUND \u003d \"Found %1$d pet(s) similar to keyword(s)!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_MISSING_PICKUP_TIME \u003d \"You forgot to include the pick-up time!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_MISSING_DROPOFF_TIME \u003d \"You forgot to include the drop-off time!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    public static final String FILTER_COMMAND_MORE_THAN_ONE_FIELD \u003d \"You can only filter by one field!\";","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    public static final String FILTER_MESSAGE_SUCCESS \u003d \"Found %1$d pet(s) after filtering by %2$s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":2,"tsumian":2,"-":11,"tobihy":3}},{"path":"src/main/java/seedu/address/commons/util/AttendanceUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.MissingAttendanceEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import seedu.address.storage.JsonAdaptedAttendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":" * A container for Attendance-related methods and functionality.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"public class AttendanceUtil {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_GUI_FORMAT \u003d \"dd/MM\";","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public static final String ATTENDANCE_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public static final DateTimeFormatter ATTENDANCE_DATE_GUI_FORMATTER \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter.ofPattern(ATTENDANCE_DATE_GUI_FORMAT);","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    public static final DateTimeFormatter ATTENDANCE_DATE_FORMATTER \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter.ofPattern(ATTENDANCE_DATE_FORMAT);","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Checks if a given string is in the valid format to be parsed into a {@code Boolean}.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     * @param isPresent the given isPresent string.","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     * @return true if string is valid, false otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    public static boolean isValidIsPresentString(String isPresent) {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        return isPresent.equals(\"true\") || isPresent.equals(\"false\");","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     * Converts a date string found in {@link JsonAdaptedAttendance} into a","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"     * {@code LocalDate} object.","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"     * @param jsonDate the time string to be converted.","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * @return a LocalDate object.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"     * @throws DateTimeParseException if the time string is invalid.","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public static LocalDate convertToModelDate(String jsonDate) throws DateTimeParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        return LocalDate.parse(jsonDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     * Converts a time string found in {@link JsonAdaptedAttendance} into a","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"     * {@code LocalTime} object.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * @param jsonTime the date string to be converted.","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     * @return a LocalTime object.","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     * @throws DateTimeParseException if the date string is invalid.","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    public static LocalTime convertToModelTime(String jsonTime) throws DateTimeParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        // No time specified.","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        if (jsonTime.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"            return null;","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        return LocalTime.parse(jsonTime);","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * Creates and returns a list of attendance entries for the past week,","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     * starting from six days ago (inclusive) to the current date (inclusive).","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"     * If no attendance has been marked on a particular date, a missing attendance entry is added.","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"     * @param attendanceHashMap the attendance hash map of the pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"     * @return a list of attendance entries for the past week.","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    public static List\u003cAttendanceEntry\u003e getPastWeekAttendance(AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e weeklyAttendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        LocalDate currentDate \u003d LocalDate.now(); // the current date","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        LocalDate startDate \u003d currentDate.minusDays(6); // the date a week before","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"        LocalDate endDate \u003d currentDate.plusDays(1); // the date tomorrow","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d startDate; d.isBefore(endDate); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"            weeklyAttendanceList.add(","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"                attendanceHashMap","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"                    .getAttendance(d)","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"                    .orElse(new MissingAttendanceEntry(d))","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"            );","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        return weeklyAttendanceList;","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"    public static List\u003cAttendanceEntry\u003e getNextTwoDaysTransport(AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceHashMap);","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e nextTwoDaysTransportList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        LocalDate currentDate \u003d LocalDate.now(); // the current date","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        LocalDate endDate \u003d currentDate.plusDays(2);","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d currentDate; d.isBefore(endDate); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"            AttendanceEntry entry \u003d attendanceHashMap.getAttendance(d).orElse(new MissingAttendanceEntry(d));","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"            nextTwoDaysTransportList.add(entry);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        return nextTwoDaysTransportList;","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tobihy":108}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if file exists","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     * Checks if directory exists","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public static boolean isDirectoryExists(Path dir) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        return Files.exists(dir);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":9,"tsumian":1,"-":82,"tobihy":3}},{"path":"src/main/java/seedu/address/commons/util/FilterUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.FilterByContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"public class FilterUtil {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * Returns true if the {@code petTags} contains the {@code filterWord}.","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * Ignores case, and a partial or full word match is required.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * @param petTags cannot be null","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     * @param filterWord cannot be null, cannot be empty","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    public static boolean tagContainFilterWord(Set\u003cTag\u003e petTags, String filterWord) {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        requireAllNonNull(petTags, filterWord);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        String trimFilterWord \u003d filterWord.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        for (Tag tag : petTags) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"            String tagString \u003d tag.toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            if (StringUtil.tagOrNameContainsWordsIgnoreCase(tagString, trimFilterWord)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"     * Checks if argument provided for filter is valid.","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"     * Parameter must only contain one field to be filtered by.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"     * @param args Filter parameter","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"     * @return Returns true if argument provided is valid, else false","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    public static boolean isValidFilterArg(String args) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        String[] separateFilterCommand \u003d args.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        return separateFilterCommand.length \u003c\u003d 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     * Matches predicate with its type to return a String message.","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     * @param predicate Predicate that is to be matched.","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     * @return String message to be used in filter success message.","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"    public static String successMessageMatch(FilterByContainsFilterWordPredicate predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        if (predicate instanceof DateContainsFilterDatePredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            return \"date\";","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } else if (predicate instanceof TagContainsFilterWordPredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            return \"tags\";","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        } else if (predicate instanceof OwnerNameContainsFilterWordPredicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            return \"owner\u0027s name\";","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"            return \"appointment date\";","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tsumian":64}},{"path":"src/main/java/seedu/address/commons/util/GuiUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":" * A container for GUI specific utility functions","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"public class GuiUtil {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"     * A utility function to check if the card index is even.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"     * @param index the index of the card.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"     * @return true if index is even, false otherwise.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    public static boolean isEvenIndexCard(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"        return index % 2 \u003d\u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tobihy":16}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"     *   Ignores case, and a partial or full word match is required.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     *       containsWordIgnoreCase(\"AbC def\", \"AcB\") \u003d\u003d false //no match","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1,","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"                \"Word parameter should be a single word\");","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        String preppedKeyword \u003d preppedWord.toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        return preppedSentence.contains(preppedKeyword);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"     * Returns true if the {@code tagString} contains the {@code word}.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"     *   Ignores case, and a partial or full word match is required.","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"Abc Def\") \u003d\u003d true //a full word match","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"ABc de\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"ABc def\", \"AB de\") \u003d\u003d true //a partial word match","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"     *       tagOrNameContainsWordIgnoreCase(\"AbC def\", \"AcB\") \u003d\u003d false //no match","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"     * @param tagString cannot be null","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"    public static boolean tagOrNameContainsWordsIgnoreCase(String tagString, String word) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        requireNonNull(tagString);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Filter word parameter cannot be empty\");","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        String preppedSentence \u003d tagString.toLowerCase();","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        String preppedKeyword \u003d preppedWord.toLowerCase();","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        if (!preppedSentence.contains(preppedKeyword)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            String[] separateSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"            String[] separateKeyword \u003d preppedKeyword.split(\"\\\\s+\");","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"            int minLength \u003d Math.min(separateKeyword.length, separateSentence.length);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"            for (int i \u003d 0; i \u003c minLength; i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"                if (!containsWordIgnoreCase(separateSentence[i], separateKeyword[i])) {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"                    return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsumian":38,"-":60,"tobihy":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    /** Returns an unmodifiable view of the filtered list of pets */","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    ObservableList\u003cPet\u003e getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Tiffanylin21":3,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        return model.getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Tiffanylin21":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AbsentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.AttendanceUtil.ATTENDANCE_DATE_FORMATTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":" * Marks the attendance of an existing pet in WoofAreYou as absent on a particular date.","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    public static final String COMMAND_WORD \u003d \"absent\";","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks an attendance of a pet as absent \"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"            + \"by the index number used in the displayed pet list. \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"            + \"Includes the date, pick up time and drop off time (if any). \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DATE + \"15-03-2022 \";","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_ABSENT_ATTENDANCE_SUCCESS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        \"Successfully marked %1$s as absent on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        + \"New entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_ABSENT_ATTENDANCE_FAILURE \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        \"Seems like you have already marked %1$s as absent on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        + \"Existing entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    private final Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    private final AbsentAttendanceDescriptor absentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"     * @param index of the pet in the filtered pets list to mark as absent.","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     * @param absentAttendanceDescriptor details of the absent attendance to be stored.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceCommand(Index index, AbsentAttendanceDescriptor absentAttendanceDescriptor) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(index, absentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        this.absentAttendanceDescriptor \u003d absentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap targetAttendanceHashMap \u003d petToEdit.getAttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate \u003d absentAttendanceDescriptor.getAttendanceDate();","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        String attendanceDateString \u003d attendanceDate.format(ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry absentAttendance \u003d new AbsentAttendanceEntry(attendanceDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        if (targetAttendanceHashMap.containsAttendance(absentAttendance)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(generateFailureMessage(petToEdit, attendanceDateString, absentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        targetAttendanceHashMap.addAttendance(absentAttendance);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), petToEdit.getDiet(),","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAppointment(), targetAttendanceHashMap);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        return new CommandResult(generateSuccessMessage(editedPet, attendanceDateString, absentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"     * Stores the absent attendance details to edit the pet with.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"    public static class AbsentAttendanceDescriptor {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        private LocalDate attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        public AbsentAttendanceDescriptor() {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        public void setAttendanceDate(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"        public LocalDate getAttendanceDate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"            return attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"        public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"            String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"            return \"Absent | \" + date;","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"            if (!(other instanceof AbsentAttendanceDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"            AbsentAttendanceDescriptor otherDescriptor \u003d (AbsentAttendanceDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"            return attendanceDate.equals(otherDescriptor.attendanceDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution success message based on the","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"    private String generateSuccessMessage(Pet petToEdit, String attendanceDate, AbsentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"            MESSAGE_ABSENT_ATTENDANCE_SUCCESS, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution failure message based on the","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"    private String generateFailureMessage(Pet petToEdit, String attendanceDate, AbsentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"            MESSAGE_ABSENT_ATTENDANCE_FAILURE, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof AbsentAttendanceCommand)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand e \u003d (AbsentAttendanceCommand) other;","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 absentAttendanceDescriptor.equals(e.absentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"tobihy":166}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":" * Adds a pet to the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a pet to the address book. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_OWNER_NAME + \"OWNERNAME \"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"            + PREFIX_NAME + \"Pee Pee \"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_OWNER_NAME + \"John Doe  \"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            + PREFIX_TAG + \"Mini Beagle \";","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New pet added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"This pet already exists in the address book\";","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    private final Pet toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates an AddCommand to add the specified {@code Pet}","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public AddCommand(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        toAdd \u003d pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        if (model.hasPet(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        model.addPet(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":3,"Tiffanylin21":14,"tsumian":1,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/AppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":" * Adds appointment details to a pet identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"public class AppointmentCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static final String COMMAND_WORD \u003d \"app\";","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"            + \": Edits the appointment by either adding or clearing the \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"            + \"appointment details of the pet identified by the index \"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"            + \"number used in the last pet listing.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"            + \"To add appointment: \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"            + \"dt/[dd-MM-yyyy HH:mm] at/[location]\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"            + \"date/04-03-2022 09:30 at/ NUS Vet Clinic\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            + \"To clear appointment: \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            + \"Parameters: INDEX (must be a positive integer) clear\"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 clear\";","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"Added appointment to Pet: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Removed appointment from Pet: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    private final Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @param index of the pet in the filtered pets list to edit the appointment.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @param appointment of the pet to be updated to.","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"    public AppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), petToEdit.getDiet(), appointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAttendanceHashMap());","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"        return new CommandResult(generateSuccessMessage(editedPet));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"     * the appointment is added to or removed from","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    private String generateSuccessMessage(Pet petToEdit) {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"        String message \u003d !appointment.value.isEmpty()","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"                ? MESSAGE_ADD_APPOINTMENT_SUCCESS : MESSAGE_DELETE_APPOINTMENT_SUCCESS;","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"        return String.format(message, petToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"        if (!(other instanceof AppointmentCommand)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand e \u003d (AppointmentCommand) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 appointment.equals(e.appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":98,"tobihy":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":" * Deletes a pet identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"            + \": Deletes the pet identified by the index number used in the displayed pet list.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_DELETE_PET_SUCCESS \u003d \"Deleted Pet: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        model.deletePet(petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PET_SUCCESS, petToDelete));","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/DietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":" * Adds diet details to a pet identified using its displayed index from the address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"public class DietCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    public static final String COMMAND_WORD \u003d \"diet\";","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"            + \": Edits the diet of the pet identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"            + \"by the index number used in the last pet listing. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"            + \"Existing diet will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"            + \"d/ [diet]\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"            + \"d/ No seafood.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_ADD_DIET_SUCCESS \u003d \"Added diet to Pet: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_DELETE_DIET_SUCCESS \u003d \"Removed diet from Pet: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    private final Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     * @param index of the pet in the filtered pets list to edit the diet","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"     * @param diet of the pet to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    public DietCommand(Index index, Diet diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        requireAllNonNull(index, diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), diet, petToEdit.getAppointment(),","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAttendanceHashMap());","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        return new CommandResult(generateSuccessMessage(editedPet));","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"     * the diet is added to or removed from","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    private String generateSuccessMessage(Pet petToEdit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"        String message \u003d !diet.value.isEmpty() ? MESSAGE_ADD_DIET_SUCCESS : MESSAGE_DELETE_DIET_SUCCESS;","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        return String.format(message, petToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"        if (!(other instanceof DietCommand)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        DietCommand e \u003d (DietCommand) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"                \u0026\u0026 diet.equals(e.diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Dineshraj555":3,"soloplxya":88,"tobihy":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":" * Edits the details of an existing pet in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the pet identified \"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"            + \"by the index number used in the displayed pet list. \"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            + \"[\" + PREFIX_OWNER_NAME + \"OWNERNAME] \"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"            + PREFIX_OWNER_NAME + \"johndoe\";","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_EDIT_PET_SUCCESS \u003d \"Edited Pet: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"This pet already exists in the address book.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    private final EditPetDescriptor editPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"     * @param index of the pet in the filtered pet list to edit","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"     * @param editPetDescriptor details to edit the pet with","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public EditCommand(Index index, EditPetDescriptor editPetDescriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"        this.editPetDescriptor \u003d new EditPetDescriptor(editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d createEditedPet(petToEdit, editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        if (!petToEdit.isSamePet(editedPet) \u0026\u0026 model.hasPet(editedPet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PET_SUCCESS, editedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates and returns a {@code Pet} with the details of {@code petToEdit}","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"     * edited with {@code editPetDescriptor}.","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"    private static Pet createEditedPet(Pet petToEdit, EditPetDescriptor editPetDescriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        assert petToEdit !\u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        Name updatedName \u003d editPetDescriptor.getName().orElse(petToEdit.getName());","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        OwnerName updatedOwnerName \u003d editPetDescriptor.getOwnerName().orElse(petToEdit.getOwnerName());","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"        Phone updatedPhone \u003d editPetDescriptor.getPhone().orElse(petToEdit.getPhone());","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        Address updatedAddress \u003d editPetDescriptor.getAddress().orElse(petToEdit.getAddress());","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPetDescriptor.getTags().orElse(petToEdit.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"        Diet updatedDiet \u003d editPetDescriptor.getDiet().orElse(petToEdit.getDiet());","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"        Appointment updatedAppointment \u003d editPetDescriptor.getAppointment().orElse(petToEdit.getAppointment());","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap sameAttendanceHashMap \u003d petToEdit.getAttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"        return new Pet(updatedName, updatedOwnerName, updatedPhone, updatedAddress,","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"                updatedTags, updatedDiet, updatedAppointment, sameAttendanceHashMap);","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 editPetDescriptor.equals(e.editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"     * Stores the details to edit the pet with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"     * corresponding field value of the pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"    public static class EditPetDescriptor {","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"        private OwnerName ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"        private Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"        private Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"        public EditPetDescriptor() {}","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"        public EditPetDescriptor(EditPetDescriptor toCopy) {","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"            setOwnerName(toCopy.ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"            setDiet(toCopy.diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"Dineshraj555"},"content":"            setAppointment(toCopy.appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"Dineshraj555"},"content":"            return CollectionUtil.isAnyNonNull(name, ownerName, phone, address, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"        public void setOwnerName(OwnerName ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"            this.ownerName \u003d ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"Tiffanylin21"},"content":"        public Optional\u003cOwnerName\u003e getOwnerName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"Tiffanylin21"},"content":"            return Optional.ofNullable(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"Dineshraj555"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"Dineshraj555"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"Dineshraj555"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"Dineshraj555"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"soloplxya"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"soloplxya"},"content":"         * Sets {@code diet} to this object\u0027s {@code diet}.","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"soloplxya"},"content":"         * A defensive copy of {@code diet} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"soloplxya"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"soloplxya"},"content":"        public void setDiet(Diet diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"soloplxya"},"content":"            this.diet \u003d diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"soloplxya"},"content":"        public Optional\u003cDiet\u003e getDiet() {","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"soloplxya"},"content":"            return Optional.ofNullable(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"Dineshraj555"},"content":"        /**","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"Dineshraj555"},"content":"         * Sets {@code appointment} to this object\u0027s {@code appointment}.","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"Dineshraj555"},"content":"         * A defensive copy of {@code appointment} is used internally.","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"Dineshraj555"},"content":"         */","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"Dineshraj555"},"content":"        public void setAppointment(Appointment appointment) {","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"Dineshraj555"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"Dineshraj555"},"content":"        public Optional\u003cAppointment\u003e getAppointment() {","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"Dineshraj555"},"content":"            return Optional.ofNullable(appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"Tiffanylin21"},"content":"            if (!(other instanceof EditPetDescriptor)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"Tiffanylin21"},"content":"            EditPetDescriptor e \u003d (EditPetDescriptor) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"Tiffanylin21"},"content":"                    \u0026\u0026 getOwnerName().equals(e.getOwnerName())","lastModifiedDate":"2022-03-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Dineshraj555":26,"Tiffanylin21":49,"-":167,"soloplxya":16,"tobihy":3}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.util.FilterUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.FilterByContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":" * Filters all pets in address book by field provided.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":" * Filter word matching is case-insensitive.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":" * Fields can only be from a defined set.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all pets by \"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            + \"the specified field followed by filter/ search word (case-insensitive)\"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"            + \"PARAMETERS: FIELD [FILTER WORD] \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            + \"FIELD \u003d { \u0027byDate/\u0027, \u0027byOwner/\u0027, \u0027byTag/\u0027, byApp/ } \\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"            + \"Filter word following \u0027byDate/\u0027 or \u0027byApp/\u0027 can be \u0027today\u0027 or \u0027dd-MM-yyyy\u0027.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            + \"Example: \" + COMMAND_WORD + \" tag/\" + \"golden retriever\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            + \"Example: \" + COMMAND_WORD + \" byDate/today\";","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    public static final String INVALID_FILTER_FIELD \u003d \"The field you are trying to filter by is invalid!\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    private final FilterByContainsFilterWordPredicate predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    public FilterCommand(FilterByContainsFilterWordPredicate predicate) {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        model.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"                String.format(Messages.FILTER_MESSAGE_SUCCESS, model.getFilteredPetList().size(),","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"                        FilterUtil.successMessageMatch(predicate)));","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":52}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Finds and lists all pets in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all pets whose names contain any of \"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            + \"Example: \" + COMMAND_WORD + \" PeePee Bagel Tofu\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"                String.format(Messages.MESSAGE_PETS_FOUND, model.getFilteredPetList().size()));","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Tiffanylin21":2,"tsumian":2,"-":36,"tobihy":2}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":" * Lists all pets in the address book to the user.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all pets!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":1,"Tiffanylin21":2,"-":20,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/commands/PresentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DROPOFF;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PICKUP;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":" * Marks the attendance of an existing pet in WoofAreYou as present on a particular date.","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    public static final String COMMAND_WORD \u003d \"present\";","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks an attendance of a pet as present \"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            + \"by the index number used in the displayed pet list. \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            + \"Includes the date, pick up time and drop off time (if any). \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            + \"[\" + PREFIX_DATE + \"DATE OF ATTENDANCE IN dd-MM-yyyy] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            + \"[\" + PREFIX_PICKUP + \"PICK UP TIME IN HH:mm] \"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"            + \"[\" + PREFIX_DROPOFF + \"DROP OFF TIME IN HH:mm] \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DATE + \"15-03-2022 \"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            + PREFIX_PICKUP + \"09:15 \"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            + PREFIX_DROPOFF + \"18:00\";","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_PRESENT_ATTENDANCE_SUCCESS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        \"Successfully marked %1$s as present on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        + \"New entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_PRESENT_ATTENDANCE_FAILURE \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        \"Seems like you have already marked %1$s as present on %2$s!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        + \"Existing entry:\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    private final Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    private final PresentAttendanceDescriptor presentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     * @param index of the pet in the filtered pets list to mark as present.","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     * @param presentAttendanceDescriptor the present attendance of the pet to be stored.","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceCommand(Index index, PresentAttendanceDescriptor presentAttendanceDescriptor) {","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(index, presentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        this.presentAttendanceDescriptor \u003d presentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap targetAttendanceHashMap \u003d petToEdit.getAttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate \u003d presentAttendanceDescriptor.getAttendanceDate();","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        LocalTime pickUpTime \u003d presentAttendanceDescriptor.getPickUpTime().orElse(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        LocalTime dropOffTime \u003d presentAttendanceDescriptor.getDropOffTime().orElse(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        String attendanceDateString \u003d attendanceDate.format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry presentAttendance \u003d new PresentAttendanceEntry(attendanceDate,","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"                pickUpTime, dropOffTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        if (targetAttendanceHashMap.containsAttendance(presentAttendance)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(generateFailureMessage(petToEdit, attendanceDateString, presentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        if (!PresentAttendanceEntry.isValidTimings(pickUpTime, dropOffTime)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            throw new CommandException(PresentAttendanceEntry.MESSAGE_TIME_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        targetAttendanceHashMap.addAttendance(presentAttendance);","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        Pet editedPet \u003d new Pet(","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"                petToEdit.getName(), petToEdit.getOwnerName(), petToEdit.getPhone(),","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAddress(), petToEdit.getTags(), petToEdit.getDiet(),","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"                petToEdit.getAppointment(), targetAttendanceHashMap);","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"        return new CommandResult(generateSuccessMessage(editedPet, attendanceDateString, presentAttendance));","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution success message based on the","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    private String generateSuccessMessage(Pet petToEdit, String attendanceDate, PresentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"            MESSAGE_PRESENT_ATTENDANCE_SUCCESS, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"     * Generates a command execution failure message based on the","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"     * {@code petToEdit}.","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"    private String generateFailureMessage(Pet petToEdit, String attendanceDate, PresentAttendanceEntry entry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"        return String.format(","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"            MESSAGE_PRESENT_ATTENDANCE_FAILURE, petToEdit.getName(), attendanceDate, entry.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"     * Stores the present attendance details to edit the pet with.","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"    public static class PresentAttendanceDescriptor {","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        private static final String PICKUP_STRING \u003d \"Pick-up: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        private static final String DROPOFF_STRING \u003d \"Drop-off: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"        private static final String NO_PICKUP_DROPOFF_STRING \u003d \"No pick-up and drop-off times specified.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        private LocalDate attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"        private LocalTime pickUpTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"        private LocalTime dropOffTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        public PresentAttendanceDescriptor() {","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        public PresentAttendanceDescriptor(PresentAttendanceDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"            setAttendanceDate(toCopy.attendanceDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"            setPickUpTime(toCopy.pickUpTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"            setDropOffTime(toCopy.dropOffTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"        public void setAttendanceDate(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"            this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        public void setPickUpTime(LocalTime pickUpTime) {","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"            this.pickUpTime \u003d pickUpTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"        public void setDropOffTime(LocalTime dropOffTime) {","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"            this.dropOffTime \u003d dropOffTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"        public LocalDate getAttendanceDate() {","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"            return attendanceDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"        public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"            return Optional.ofNullable(pickUpTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"        public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"            return Optional.ofNullable(dropOffTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"        private boolean hasPickUpDropOff() {","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"            return getPickUpTime().isPresent() \u0026\u0026 getDropOffTime().isPresent();","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"        public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"            String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"            if (hasPickUpDropOff()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"                String pickUp \u003d String.format(PICKUP_STRING, pickUpTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"                String dropOff \u003d String.format(DROPOFF_STRING, dropOffTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"                return \"Present | \" + date + \" | \" + pickUp + \" | \" + dropOff;","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"            return \"Present | \" + date + \" | \" + NO_PICKUP_DROPOFF_STRING;","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"            if (!(other instanceof PresentAttendanceDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceDescriptor otherDescriptor \u003d (PresentAttendanceDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"            return attendanceDate.equals(otherDescriptor.attendanceDate)","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 getPickUpTime().equals(otherDescriptor.getPickUpTime())","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 getDropOffTime().equals(otherDescriptor.getDropOffTime());","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"tobihy"},"content":"            return true;","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"tobihy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof PresentAttendanceCommand)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"tobihy"},"content":"        // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand e \u003d (PresentAttendanceCommand) other;","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"tobihy"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 presentAttendanceDescriptor.equals(e.presentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"tsumian":3,"tobihy":225}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all pets!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"            + \": Sorts the pet list by the input field specified.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"            + \"Note the input fields are case sensitive.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"            + \"The following are the 5 valid input fields:\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"            + \"1. owner\\n 2. name\\n 3. app\\n 4. pick up\\n 5. drop off\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"            + \"Parameters: FIELD_TO_SORT_BY\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"            + \"Example: \" + COMMAND_WORD + \"owner\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    private final String field;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     * @param field first letter of the column to sort the pet list by","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public SortCommand(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        model.sortPetList(field);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":6,"soloplxya":28}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid previous command!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"            + \": Undoes the previous command that the user executed.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    public static final String MESSAGE_NO_UNDO \u003d \"No commands to undo!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * Constructor for the UndoCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public UndoCommand() {}","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"            ReadOnlyAddressBook currentAddressBook \u003d new AddressBook(model.undo());","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"            model.setAddressBook(currentAddressBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            throw new CommandException(MESSAGE_NO_UNDO);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"soloplxya":35}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":17,"tobihy":2}},{"path":"src/main/java/seedu/address/logic/parser/AbsentAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.AbsentAttendanceCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":" * Parses input arguments and creates a new AbsentAttendanceCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommandParser implements Parser\u003cAbsentAttendanceCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     * Parses the given {@code String} of arguments in the context of the AbsentAttendanceCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     * and returns a AbsentAttendanceCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        Index index;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"                    AbsentAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceDescriptor absentAttendanceDescriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"                new AbsentAttendanceDescriptor();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"                    AbsentAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        absentAttendanceDescriptor.setAttendanceDate(","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                ParserUtil.parseAttendanceDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        return new AbsentAttendanceCommand(index, absentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"tobihy":50}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_OWNER_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_OWNER_NAME, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE)","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        OwnerName ownerName \u003d ParserUtil.parseOwnerName(argMultimap.getValue(PREFIX_OWNER_NAME).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        Diet diet \u003d new Diet(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        Appointment appointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap attendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        Pet pet \u003d new Pet(name, ownerName, phone, address, tagList, diet, appointment, attendanceHashMap);","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        return new AddCommand(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Dineshraj555":6,"Tiffanylin21":7,"-":48,"soloplxya":4,"tobihy":4}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.AbsentAttendanceCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.logic.commands.AppointmentCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.DietCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.PresentAttendanceCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        case DietCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"            return new DietCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"        case AppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"            return new AppointmentCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        case PresentAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"            return new PresentAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        case AbsentAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            return new AbsentAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":3,"tsumian":5,"-":75,"soloplxya":13,"tobihy":7}},{"path":"src/main/java/seedu/address/logic/parser/AppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE_TIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_LOCATION;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.logic.commands.AppointmentCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":" * Parses input arguments and creates a new AppointmentCommand object.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"public class AppointmentCommandParser implements Parser\u003cAppointmentCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"     * Parses the given {@code String} of arguments in the context of the AppointmentCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * and returns an AppointmentCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    public AppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"                PREFIX_APPOINTMENT_DATE_TIME, PREFIX_APPOINTMENT_LOCATION, PREFIX_CLEAR);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"                    AppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        Boolean isClearPresent \u003d argMultimap.getValue(PREFIX_CLEAR).isPresent();","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        Boolean areDateTimeAndLocationPresent \u003d arePrefixesPresent(argMultimap,","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"                PREFIX_APPOINTMENT_DATE_TIME, PREFIX_APPOINTMENT_LOCATION);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"        if (isClearPresent \u0026\u0026 !areDateTimeAndLocationPresent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            Appointment clearAppointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"            return new AppointmentCommand(index, clearAppointment);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        } else if (areDateTimeAndLocationPresent \u0026\u0026 !isClearPresent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"            LocalDateTime dateTime \u003d ParserUtil.parseAppointmentDateTime(","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"                    argMultimap.getValue(PREFIX_APPOINTMENT_DATE_TIME).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"            String location \u003d argMultimap.getValue(PREFIX_APPOINTMENT_LOCATION).get();","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"            Appointment appointment \u003d new Appointment(dateTime, location);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"            return new AppointmentCommand(index, appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"                    AppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":67}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_OWNER_NAME \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    public static final Prefix PREFIX_DIET \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public static final Prefix PREFIX_DROPOFF \u003d new Prefix(\"do/\");","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public static final Prefix PREFIX_PICKUP \u003d new Prefix(\"pu/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_APPOINTMENT_DATE_TIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_APPOINTMENT_LOCATION \u003d new Prefix(\"at/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    public static final Prefix PREFIX_CLEAR \u003d new Prefix(\"clear\");","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_DATE \u003d new Prefix(\"byDate/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_TAGS \u003d new Prefix(\"byTags/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_OWNER_NAME \u003d new Prefix(\"byOwner/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    public static final Prefix PREFIX_FILTER_BY_APPOINTMENT \u003d new Prefix(\"byApp/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Dineshraj555":4,"tsumian":4,"-":14,"soloplxya":1,"tobihy":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":28,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/parser/DietCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIET;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.DietCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":" * Parses input arguments and creates a new DietCommand object","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"public class DietCommandParser implements Parser\u003cDietCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * Parses the given {@code String} of arguments in the context of the DietCommand","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     * and returns a DietCommand object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public DietCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"                PREFIX_DIET);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"        Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"                    DietCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        Diet diet \u003d new Diet(argMultimap.getValue(PREFIX_DIET).orElse(\"\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"        return new DietCommand(index, diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"soloplxya":39,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_OWNER_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor editPetDescriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"            editPetDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        if (argMultimap.getValue(PREFIX_OWNER_NAME).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"            editPetDescriptor.setOwnerName(ParserUtil.parseOwnerName(argMultimap.getValue(PREFIX_OWNER_NAME).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"            editPetDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"            editPetDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPetDescriptor::setTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        if (!editPetDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        return new EditCommand(index, editPetDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Dineshraj555":4,"Tiffanylin21":9,"-":69,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static seedu.address.commons.core.Messages.FILTER_COMMAND_MORE_THAN_ONE_FIELD;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_BY_APPOINTMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_BY_DATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_BY_OWNER_NAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_BY_TAGS;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.util.FilterUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        if (!FilterUtil.isValidFilterArg(trimmedArgs)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(FILTER_COMMAND_MORE_THAN_ONE_FIELD);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FILTER_BY_DATE, PREFIX_FILTER_BY_TAGS,","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"                        PREFIX_FILTER_BY_OWNER_NAME, PREFIX_FILTER_BY_APPOINTMENT);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        String keyword \u003d ParserUtil.parseFilterArgs(trimmedArgs);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        if (argMultimap.getValue(PREFIX_FILTER_BY_DATE).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new DateContainsFilterDatePredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        } else if (argMultimap.getValue(PREFIX_FILTER_BY_TAGS).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new TagContainsFilterWordPredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        } else if (argMultimap.getValue(PREFIX_FILTER_BY_OWNER_NAME).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new OwnerNameContainsFilterWordPredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } else if (argMultimap.getValue(PREFIX_FILTER_BY_APPOINTMENT).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            return new FilterCommand(new AppointmentContainsFilterWordPredicate(keyword));","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(FilterCommand.INVALID_FILTER_FIELD);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":61}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tiffanylin21":1,"-":31,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"     * Parses a {@code String ownerName} into an {@code OwnerName}.","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws ParseException if the given {@code ownerName} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"    public static OwnerName parseOwnerName(String ownerName) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        String trimmedOwnerName \u003d ownerName.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        if (!OwnerName.isValidOwnerName(trimmedOwnerName)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"            throw new ParseException(OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        return new OwnerName(trimmedOwnerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"     * Parses a {@code String dateTime} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"     * @param dateTime Date and time in String format of dd-MM-yyyy HH:mm.","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"     * @return Parsed LocalDateTime representation of input.","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"Dineshraj555"},"content":"    public static LocalDateTime parseAppointmentDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"Dineshraj555"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"Dineshraj555"},"content":"            return LocalDateTime.parse(trimmedDateTime, formatter);","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"Dineshraj555"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"Dineshraj555"},"content":"            throw new ParseException(\"Appointment date and time should be entered in dd-MM-yyyy HH:mm format!\");","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String attendanceDate} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local date.","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the given attendance date is invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"    public static LocalDate parseAttendanceDate(String attendanceDate) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"        requireNonNull(attendanceDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"        String trimmedAttendanceDate \u003d attendanceDate.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"            return LocalDate.parse(trimmedAttendanceDate, formatter);","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Attendance date should be in dd-MM-yyyy format!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"     * Checks if a keyword follows after the filter field. Returns keyword as String.","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"tsumian"},"content":"     * @param trimmedArgs Arguments to be parsed.","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"tsumian"},"content":"     * @return keyword as String.","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException Throws exception if keyword is absent.","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"tsumian"},"content":"    public static String parseFilterArgs(String trimmedArgs) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"tsumian"},"content":"        String[] argSplitter \u003d trimmedArgs.split(\"/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"        if (argSplitter.length !\u003d 2) {","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"You did not provide a keyword!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"tsumian"},"content":"        return argSplitter[1];","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String filterDate} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local date.","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given filter date is invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"tsumian"},"content":"    public static LocalDate parseFilterDate(String filterDate) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"tsumian"},"content":"        requireNonNull(filterDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"tsumian"},"content":"        String trimmedAttendanceDate \u003d filterDate.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"tsumian"},"content":"            return LocalDate.parse(trimmedAttendanceDate, formatter);","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Filter date provided should be in dd-MM-yyyy format!\");","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String date} into an {@code LocalDate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"tsumian"},"content":"     * @param date Date in String format of dd-MM-yyyy HH:mm.","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"tsumian"},"content":"     * @return Parsed LocalDateTime representation of input.","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"tsumian"},"content":"    public static LocalDate parseFilterAppointmentDate(String date) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"tsumian"},"content":"            return parseFilterDate(date);","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"tsumian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Appointment date provided for filter should be entered in dd-MM-yyyy format!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String pickUpTime} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local time.","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given {@code Diet} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"    public static LocalTime parsePickUpTime(String pickUpTime) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"tsumian"},"content":"        requireNonNull(pickUpTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"        String trimmedPickUpTime \u003d pickUpTime.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"            return LocalTime.parse(trimmedPickUpTime, formatter);","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Pick up time should be in HH:mm format!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":233,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"     * Parses a {@code String dropOffTime} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"tsumian"},"content":"     * @return Parsed local time.","lastModifiedDate":"2022-03-16"},{"lineNumber":241,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException if the given {@code Diet} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":242,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":243,"author":{"gitId":"tsumian"},"content":"    public static LocalTime parseDropOffTime(String dropOffTime) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"        requireNonNull(dropOffTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"tsumian"},"content":"        String trimmedDropOffTime \u003d dropOffTime.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"            return LocalTime.parse(trimmedDropOffTime, formatter);","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"            throw new ParseException(\"Drop off time should be in HH:mm format!\");","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Dineshraj555":16,"Tiffanylin21":11,"tsumian":108,"-":112,"soloplxya":6,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/parser/PresentAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_DROPOFF_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_PICKUP_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DROPOFF;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PICKUP;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.PresentAttendanceCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":" * Parses input arguments and creates a new PresentAttendanceCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommandParser implements Parser\u003cPresentAttendanceCommand\u003e {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     * Parses the given {@code String} of arguments in the context of the PresentAttendanceCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"     * and returns a PresentAttendanceCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_PICKUP, PREFIX_DROPOFF);","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        checkIfOnlyOneTimePresent(argMultimap);","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        LocalDate attendanceDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceDescriptor presentAttendanceDescriptor \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptor();","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            attendanceDate \u003d ParserUtil.parseAttendanceDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"            presentAttendanceDescriptor.setAttendanceDate(attendanceDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"            if (argMultimap.getValue(PREFIX_PICKUP).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"                presentAttendanceDescriptor.setPickUpTime(","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"                    ParserUtil.parsePickUpTime(argMultimap.getValue(PREFIX_PICKUP).get())","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"                );","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            if (argMultimap.getValue(PREFIX_DROPOFF).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"                presentAttendanceDescriptor.setDropOffTime(","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                    ParserUtil.parseDropOffTime(argMultimap.getValue(PREFIX_DROPOFF).get())","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                );","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"                PresentAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        return new PresentAttendanceCommand(index, presentAttendanceDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     * Checks to see if only pick up or only drop off time for the command is present.","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     * @param argumentMultimap the arguments of the command.","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if one and only one out of the two timings are provided.","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    private void checkIfOnlyOneTimePresent(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        if (argumentMultimap.getValue(PREFIX_PICKUP).isEmpty()","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 argumentMultimap.getValue(PREFIX_DROPOFF).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_MISSING_PICKUP_TIME);","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        } else if (argumentMultimap.getValue(PREFIX_PICKUP).isPresent()","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 argumentMultimap.getValue(PREFIX_DROPOFF).isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"            throw new ParseException(MESSAGE_MISSING_DROPOFF_TIME);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"tobihy":80}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"        Boolean isValidSortParameter \u003d SortUtil.isValidSortParameter(trimmedArgs);","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"        if (!isValidSortParameter) {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"        return new SortCommand(trimmedArgs);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Dineshraj555":2,"soloplxya":24,"tobihy":1}},{"path":"src/main/java/seedu/address/logic/parser/SortUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":" * Utility class for Sort.","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":" * Contains fields and methods for SortCommand and SortCommandParser classes.","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"public class SortUtil {","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"    /** Valid Sort Command Parameters. */","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_NAME \u003d \"name\";","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_OWNER \u003d \"owner\";","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_APPOINTMENT \u003d \"app\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_PICK_UP_TIME \u003d \"pick up\";","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final String SORT_BY_DROP_OFF_TIME \u003d \"drop off\";","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"     * Checks if input is a valid sort command parameter.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"     * Used in SortCommandParser.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * @param args Input argument.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @return True if input is valid sort parameter and false otherwise.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static Boolean isValidSortParameter(String args) {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        return args.equals(SORT_BY_APPOINTMENT)","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_OWNER)","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_NAME)","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_DROP_OFF_TIME)","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"                || args.equals(SORT_BY_PICK_UP_TIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.UniquePetList;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":" * Duplicates are not allowed (by .isSamePet comparison)","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"    private final UniquePetList pets;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        pets \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates an AddressBook using the Pets in the {@code toBeCopied}","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the contents of the pet list with {@code pets}.","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code pets} must not contain duplicate pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets(List\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        this.pets.setPets(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        setPets(newData.getPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    //// pet-level operations","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if a pet with the same identity as {@code pet} exists in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.contains(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a pet to the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet must not already exist in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"    public void addPet(Pet p) {","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        pets.add(p);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"     * Sorts the list of pets in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"     * Currently, it will sort the list of pets according to the field provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"    public void sortPets(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        pets.sortPetList(field);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the given pet {@code target} in the list with {@code editedPet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        pets.setPet(target, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"    public void removePet(Pet key) {","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        pets.remove(key);","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.asUnmodifiableObservableList().size() + \" pets\";","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e getPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 pets.equals(((AddressBook) other).pets));","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"        return pets.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":32,"-":88,"soloplxya":9}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    Predicate\u003cPet\u003e PREDICATE_SHOW_ALL_PETS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if a pet with the same identity as {@code pet} exists in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    boolean hasPet(Pet pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"     * Deletes the given pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet must exist in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    void deletePet(Pet target);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds the given pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code pet} must not already exist in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    void addPet(Pet pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the given pet {@code target} with {@code editedPet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"    void setPet(Pet target, Pet editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"    /** Returns an unmodifiable view of the filtered pet list */","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"    ObservableList\u003cPet\u003e getFilteredPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"     * Updates the filter of the filtered pet list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    void updateFilteredPetList(Predicate\u003cPet\u003e predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"     * Sorts the pet list based on the field provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"    void sortPetList(String field);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"     * Restores the previous address book state from its history.","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    ReadOnlyAddressBook undo() throws Exception;","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Tiffanylin21":17,"-":70,"soloplxya":12}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    private final FilteredList\u003cPet\u003e filteredPets;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        this.versionedAddressBook \u003d new VersionedAddressBook(this.addressBook);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        filteredPets \u003d new FilteredList\u003c\u003e(this.addressBook.getPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        return addressBook.hasPet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"    public void deletePet(Pet target) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        addressBook.removePet(target);","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"        this.versionedAddressBook.commit(this.getAddressBook());","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"    public void addPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        addressBook.addPet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"        this.versionedAddressBook.commit(this.getAddressBook());","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        requireAllNonNull(target, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        addressBook.setPet(target, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"        this.versionedAddressBook.commit(this.getAddressBook());","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"    /** Method that sorts the pet list via the sortPets() command in addressBook. **/","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"    public void sortPetList(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        addressBook.sortPets(field);","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"        this.versionedAddressBook.commit(this.getAddressBook());","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"        updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo Command accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d//","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"    public ReadOnlyAddressBook undo() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"        return versionedAddressBook.undo();","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Pet List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns an unmodifiable view of the list of {@code Pet} backed by the internal list of","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        return filteredPets;","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"    public void updateFilteredPetList(Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"        filteredPets.setPredicate(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 filteredPets.equals(other.filteredPets);","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":21,"-":129,"soloplxya":18}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"     * Returns an unmodifiable view of the pets list.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"     * This list will not contain any duplicate pets.","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    ObservableList\u003cPet\u003e getPetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":2,"-":13,"tobihy":2}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.logging.Level.INFO;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    private static final ArrayList\u003cReadOnlyAddressBook\u003e addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"    private Integer currentStatePointer \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final Logger logger \u003d Logger.getLogger(VersionedAddressBook.class.getName());","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    public VersionedAddressBook() {}","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"     * Creates a VersionedAddressBook using the Pets in the {@code toBeCopied}","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"        this();","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"        addressBookStateList.add(new AddressBook(toBeCopied));","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"     * Commits a new addressBook state to the addressBookStateList","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"     * @param currentAddressBookState current address book state","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    public void commit(ReadOnlyAddressBook currentAddressBookState) {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"        addressBookStateList.add(new AddressBook(currentAddressBookState));","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"        this.currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"     * Shifts the current state pointer to the left.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * @return The previous state of the address book.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    public ReadOnlyAddressBook undo() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        if (addressBookStateList.size() \u003c\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"            throw new Exception(\"No commands to undo\");","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        logger.log(INFO, String.valueOf(addressBookStateList.size()));","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        this.currentStatePointer -\u003d 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"        addressBookStateList.remove(this.currentStatePointer + 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        return addressBookStateList.get(this.currentStatePointer);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"soloplxya":48}},{"path":"src/main/java/seedu/address/model/attendance/AbsentAttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Represents an absent attendance entry of a pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" *  * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceEntry extends AttendanceEntry {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    private final Boolean isPresent;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     * Constructs a {@code AbsentAttendanceEntry}.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"     * @param entryDate A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceEntry(LocalDate entryDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"        super(entryDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d false;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cBoolean\u003e getIsPresent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(isPresent);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public boolean hasTransportArrangement() {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof AbsentAttendanceEntry)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry otherAttendanceEntry \u003d (AbsentAttendanceEntry) other;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        return this.getAttendanceDate().equals(otherAttendanceEntry.getAttendanceDate())","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 this.getIsPresent().equals(otherAttendanceEntry.getIsPresent()); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        return \"Absent | \" + date;","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":65}},{"path":"src/main/java/seedu/address/model/attendance/AttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Represents an attendance entry of a pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" *  * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public abstract class AttendanceEntry {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_INVALID_ISPRESENT \u003d \"The isPresent field is invalid!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private final LocalDate attendanceDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Constructs an {@code AttendanceEntry}.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public AttendanceEntry(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Retrieves the date of the attendance entry.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * @return A {@code LocalDate} object representing the date of the attendance entry.","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public LocalDate getAttendanceDate() {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        return attendanceDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     * Retrieves the attendance status of the pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     * @return An optional containing the attendance status of the pet.","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    public abstract Optional\u003cBoolean\u003e getIsPresent();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"     * Retrieves the pick-up time of the pet, if any.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"     * @return An {@code Optional\u003cLocalTime\u003e} object that contains the pick-up time.","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    public abstract Optional\u003cLocalTime\u003e getPickUpTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"     * Retrieves the drop-off time of the pet, if any.","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"     * @return An {@code Optional\u003cLocalTime\u003e} object that contains the drop-off time.","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    public abstract Optional\u003cLocalTime\u003e getDropOffTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     * Checks if the attendance entry contains a transport arrangement.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     * @return true if the attendance entry contains a transport arrangement with pick-up and","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"     * drop-off times, false otherwise.","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public abstract boolean hasTransportArrangement();","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        return attendanceDate.hashCode();","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Dineshraj555":5,"tobihy":64}},{"path":"src/main/java/seedu/address/model/attendance/MissingAttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":" * Represents a missing attendance entry of a pet.","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":" * * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"public class MissingAttendanceEntry extends AttendanceEntry {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public MissingAttendanceEntry(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"        super(attendanceDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cBoolean\u003e getIsPresent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        return Optional.empty();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public boolean hasTransportArrangement() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof MissingAttendanceEntry)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        MissingAttendanceEntry otherAttendanceEntry \u003d (MissingAttendanceEntry) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        return super.getAttendanceDate().equals(otherAttendanceEntry.getAttendanceDate());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tobihy":49}},{"path":"src/main/java/seedu/address/model/attendance/PresentAttendanceEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" * Represents a present attendance entry of a pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":" * * Guarantees: immutable; entry is valid.","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceEntry extends AttendanceEntry {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final String MESSAGE_TIME_CONSTRAINTS \u003d \"The pick-up time should be before the drop-off time!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    private static final String PICKUP_STRING \u003d \"Pick-up: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    private static final String DROPOFF_STRING \u003d \"Drop-off: %1$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private static final String NO_PICKUP_DROPOFF_STRING \u003d \"No pick-up and drop-off times specified.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    private final Boolean isPresent;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    private final LocalTime pickUpTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    private final LocalTime dropOffTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     * Constructs a {@code PresentAttendanceEntry}.","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     * @param entryDate   A valid date.","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     * @param pickUpTime  A valid pick-up time.","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * @param dropOffTime A valid drop-off time.","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceEntry(LocalDate entryDate, LocalTime pickUpTime, LocalTime dropOffTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        super(entryDate);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d true;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        this.pickUpTime \u003d pickUpTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        this.dropOffTime \u003d dropOffTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cBoolean\u003e getIsPresent() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(isPresent);","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(pickUpTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cLocalTime\u003e getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(dropOffTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * Checks if both pick-up and drop-off times have been specified.","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     * @return true if both specified, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public boolean hasTransportArrangement() {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        return getPickUpTime().isPresent() \u0026\u0026 getDropOffTime().isPresent();","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"     * Checks to see if the timings in the entry are valid.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"     * A valid timing is when either both timings are null,","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     * or both timings are present, with the pick-up time before the drop-off time.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * @return true if the timings are valid, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    public static boolean isValidTimings(LocalTime pickUpTime, LocalTime dropOffTime) {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalPickUp \u003d Optional.ofNullable(pickUpTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalDropOff \u003d Optional.ofNullable(dropOffTime);","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        if (optionalPickUp.isPresent() ^ optionalDropOff.isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        if (optionalPickUp.isEmpty() \u0026\u0026 optionalDropOff.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        return optionalPickUp.get().isBefore(optionalDropOff.get());","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        if (!(other instanceof PresentAttendanceEntry)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry otherAttendanceEntry \u003d (PresentAttendanceEntry) other;","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        return super.getAttendanceDate().equals(otherAttendanceEntry.getAttendanceDate())","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 isPresent.equals(otherAttendanceEntry.isPresent)","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 getPickUpTime().equals(otherAttendanceEntry.getPickUpTime())","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            \u0026\u0026 getDropOffTime().equals(otherAttendanceEntry.getDropOffTime()); // state checks","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        String date \u003d getAttendanceDate().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        if (hasTransportArrangement()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"            String pickUp \u003d String.format(PICKUP_STRING, pickUpTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"            String dropOff \u003d String.format(DROPOFF_STRING, dropOffTime.toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"            return \"Present | \" + date + \" | \" + pickUp + \" | \" + dropOff;","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        return \"Present | \" + date + \" | \" + NO_PICKUP_DROPOFF_STRING;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":114}},{"path":"src/main/java/seedu/address/model/filter/AppointmentContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"public class AppointmentContainsFilterWordPredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    private final LocalDate appointmentDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Constructor class. Checks if filter word is \u0027today\u0027. If so, sets {@code appointmentDate} to a","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * {@code LocalDate} of today\u0027s date. Else, parse filter word to be a {@code LocalDate}.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     * @param filterWord String keyword provided after filter field.","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException Throws exception if keyword (date) is not in the correct format.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    public AppointmentContainsFilterWordPredicate(String filterWord) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        if (filterWord.equals(\"today\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            this.appointmentDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            this.appointmentDate \u003d ParserUtil.parseFilterAppointmentDate(filterWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        Appointment petAppointment \u003d pet.getAppointment();","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        LocalDateTime petAppointmentDateTime \u003d petAppointment.getDateTime();","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        if (petAppointmentDateTime !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            LocalDate petAppointmentDate \u003d petAppointmentDateTime.toLocalDate();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            return petAppointmentDate.equals(this.appointmentDate);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        return (other instanceof AppointmentContainsFilterWordPredicate// instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 appointmentDate.equals(((AppointmentContainsFilterWordPredicate) other)","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                .appointmentDate)); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":50}},{"path":"src/main/java/seedu/address/model/filter/DateContainsFilterDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":" * Tests that a {@code Pet}\u0027s {@code AttendanceEntry} matches the filter date given.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"public class DateContainsFilterDatePredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private final LocalDate filterDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"     * Constructor for class","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"     * @param filterWord Date string provided as filter word","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"     * @throws ParseException Throws exception if date provided is not of correct format","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    public DateContainsFilterDatePredicate(String filterWord) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        if (filterWord.equals(\"today\")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            this.filterDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            this.filterDate \u003d ParserUtil.parseFilterDate(filterWord);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        AttendanceHashMap petAttendance \u003d pet.getAttendanceHashMap();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        Optional\u003cAttendanceEntry\u003e checkAttendanceEntry \u003d petAttendance.getAttendance(filterDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        boolean petHasEntry \u003d checkAttendanceEntry.isPresent();","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"        if (petHasEntry) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            AttendanceEntry attendanceEntry \u003d checkAttendanceEntry.get();","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"            Optional\u003cBoolean\u003e hasMarkedAttendance \u003d attendanceEntry.getIsPresent();","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            if (hasMarkedAttendance.isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"                return hasMarkedAttendance.get();","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        return (other instanceof DateContainsFilterDatePredicate) // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 getFilterWord().equals(((DateContainsFilterDatePredicate) other).getFilterWord()); // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"tsumian":59}},{"path":"src/main/java/seedu/address/model/filter/FilterByContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"public abstract class FilterByContainsFilterWordPredicate implements Predicate\u003cPet\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    private final String filterWord;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    public FilterByContainsFilterWordPredicate(String filterWord) {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"        this.filterWord \u003d filterWord;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"     * Accessor method returns a {@code String} representing the filter word.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"     * @return Filter word String.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public String getFilterWord() {","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        return this.filterWord;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":21}},{"path":"src/main/java/seedu/address/model/filter/OwnerNameContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"public class OwnerNameContainsFilterWordPredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    public OwnerNameContainsFilterWordPredicate(String filterWord) {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        return StringUtil.tagOrNameContainsWordsIgnoreCase(pet.getOwnerName().toString(), getFilterWord());","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        return (other instanceof OwnerNameContainsFilterWordPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 getFilterWord().equals(((OwnerNameContainsFilterWordPredicate) other)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"                .getFilterWord())); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":27}},{"path":"src/main/java/seedu/address/model/filter/TagContainsFilterWordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.util.FilterUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"public class TagContainsFilterWordPredicate extends FilterByContainsFilterWordPredicate {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"    public TagContainsFilterWordPredicate(String filterWord) {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"        super(filterWord);","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"        return FilterUtil.tagContainFilterWord(pet.getTags(), getFilterWord());","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        return (other instanceof TagContainsFilterWordPredicate// instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"                \u0026\u0026 getFilterWord().equals(((TagContainsFilterWordPredicate) other).getFilterWord())); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tsumian":25}},{"path":"src/main/java/seedu/address/model/pet/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Pet\u0027s address in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        value \u003d address.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":3,"-":54}},{"path":"src/main/java/seedu/address/model/pet/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":" * Represents a Pet\u0027s upcoming appointment in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    /** Regex to match value attribute. eg: \"Mar-04-2022 09:30 AM at NUS VET\".*/","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"            \"\\\\w{3}-\\\\d{2}-\\\\d{4} \\\\d{2}:\\\\d{2} \\\\w{2} \\\\w+(\\\\s\\\\w+){1,}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    /** Date and time of appointment in \"dd-MM-yyyy HH:mm\" format.*/","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"    /** Location of appointment.*/","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    public final String location;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"     * Appointment details comprising information from dateTime and location.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"     * Format of value: dateTime + \" at \" + location. To be reflected in GUI.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    public final String value;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"     * Constructs an {@code Appointment} from the user input details.","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"     * @param dateTime in LocalDateTime format.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"     * @param location of appointment.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment(LocalDateTime dateTime, String location) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        requireAllNonNull(dateTime, location);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        this.value \u003d formatDateTime(dateTime) + \" at \" + location;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * Constructs an {@code Appointment} from the retrieved stored details.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     * @param value String representation of appointment details retrieved from storage.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment(String value) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        if (value.equals(\"\")) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"            this.location \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"            this.dateTime \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            String[] appointmentDetails \u003d value.split(\" at \");","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            String retrievedDateTime \u003d appointmentDetails[0];","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"            String retrievedLocation \u003d appointmentDetails[1];","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            DateTimeFormatter formatOfRetrievedDateTime \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy h:mm a\")","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                .withLocale(Locale.ENGLISH);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            this.location \u003d retrievedLocation;","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            this.dateTime \u003d LocalDateTime.parse(retrievedDateTime, formatOfRetrievedDateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     * Constructs an {@code Appointment} for empty appointment.","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"     * To be used when appointment field is empty or when appointment is cleared.","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment() {","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"        this.value \u003d \"\";","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"        this.dateTime \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"        this.location \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"        return this.dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"    public String getLocation() {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"        return this.location;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"     * Formats the LocalDateTime to String representation in format of \"MMM-dd-yyyy h:mm a\"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"     * to be reflected in GUI and for storage.","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"     * @param dateTime in LocalDateTime.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"     * @return String representation of dateTime in \"MMM-dd-yyyy h:mm a\".","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy h:mm a\")","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            .withLocale(Locale.ENGLISH);","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        String formattedDateTime \u003d dateTime.format(formatter);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        return formattedDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"     * Returns true if a given string is a valid appointment.","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"     * @param test The input string.","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"     * @return True if input matches VALIDATION_REGEX, False otherwise.","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"    public static boolean isValidAppointment(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"     * Compares appointment objects based on their dateTime attribute.","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"     * @param other appointment to be compared with.","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"    public int compareTo(Appointment other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"        if (this.dateTime \u003d\u003d null \u0026\u0026 other.getDateTime() \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"        } else if (this.dateTime !\u003d null \u0026\u0026 other.getDateTime() !\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"            return this.dateTime.compareTo(other.getDateTime());","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"        } else if ((this.dateTime \u003d\u003d null \u0026\u0026 other.getDateTime() !\u003d null)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"                || (other instanceof Appointment","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 value.equals(((Appointment) other).value));","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":134,"tobihy":5}},{"path":"src/main/java/seedu/address/model/pet/AttendanceHashMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":" * Represents a Pet\u0027s attendance history in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":" * Guarantees: is always valid.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"public class AttendanceHashMap {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private final HashMap\u003cLocalDate, AttendanceEntry\u003e attendanceHashMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Constructs an {@code AttendanceHashMap}.","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"     * @param attendanceHashMap A valid AttendanceHashMap.","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap(HashMap\u003cLocalDate, AttendanceEntry\u003e attendanceHashMap) {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceHashMap);","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"        this.attendanceHashMap \u003d new HashMap\u003c\u003e(attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * Constructs an empty {@code AttendanceHashMap}.","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap() {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        this.attendanceHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     * Checks if there is already an identical attendance entry in the table.","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the incoming attendance entry.","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"     * @return true if entry with same attendance already exists, false otherwise.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public boolean containsAttendance(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        LocalDate dateKey \u003d attendanceEntry.getAttendanceDate();","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        if (!(attendanceHashMap.containsKey(dateKey))) {","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"            return false;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        AttendanceEntry existingAttendanceEntry \u003d attendanceHashMap.get(dateKey);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        return existingAttendanceEntry.equals(attendanceEntry);","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"     * Checks if the attendance hash map is empty.","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"     * @return true if attendance hash map is empty, false otherwise.","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.isEmpty();","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"     * Adds an attendance entry into the current attendance hash map.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the attendance to be stored.","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    public void addAttendance(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.put(attendanceEntry.getAttendanceDate(), attendanceEntry);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"     * Retrieves the attendance entry at the specified date.","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate the specified date.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"     * @return an {@code Optional} object containing the attendance entry, if any.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"    public Optional\u003cAttendanceEntry\u003e getAttendance(LocalDate attendanceDate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        return Optional.ofNullable(attendanceHashMap.get(attendanceDate));","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"     * Returns the attendance hash map in collection form.","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"     * @return a collection containing date-attendance pairs.","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    public Collection\u003cAttendanceEntry\u003e toCollection() {","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.values();","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"     * Returns a copy of the current attendance hash map.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"     * @return a copy of the {@code AttendanceHashMap}.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap getCopy() {","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        return new AttendanceHashMap(","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            new HashMap\u003c\u003e(","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"                this.attendanceHashMap)","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"                || (other instanceof AttendanceHashMap","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"                \u0026\u0026 attendanceHashMap.equals(((AttendanceHashMap) other).attendanceHashMap));","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.hashCode();","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"tobihy":113}},{"path":"src/main/java/seedu/address/model/pet/Diet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":" * Represents a Pet\u0027s diet in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"public class Diet {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"    public final String value;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"     * Constructs a {@code Diet}.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * @param diet A pet\u0027s diet.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    public Diet(String diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"        requireNonNull(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"        value \u003d diet.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        return value;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"                || (other instanceof Diet","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"                \u0026\u0026 value.equals(((Diet) other).value));","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Tiffanylin21":1,"soloplxya":37}},{"path":"src/main/java/seedu/address/model/pet/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Pet\u0027s name in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        fullName \u003d name.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName));","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"     * Compare two {@code name} in lexicographical order","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     * @param other {@code name} to be compared with","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"     * @return an Integer","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        return Integer.compare(this.fullName.compareToIgnoreCase(other.fullName), 0);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":4,"-":54,"soloplxya":10}},{"path":"src/main/java/seedu/address/model/pet/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":" * Tests that a {@code Pet}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPet\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(pet.getName().fullName, keyword));","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":5,"-":26}},{"path":"src/main/java/seedu/address/model/pet/OwnerName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Pet\u0027s owner name in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOwnerName(String)}","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"public class OwnerName implements Comparable\u003cOwnerName\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"            \"Owner names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    /*","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    public final String value;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs an {@code OwnerName}.","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"     * @param ownerName A valid ownerName.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public OwnerName(String ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        checkArgument(isValidOwnerName(ownerName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        value \u003d ownerName.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns if a given string is a valid ownerName.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static boolean isValidOwnerName(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        return value;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"                || (other instanceof OwnerName // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 value.equals(((OwnerName) other).value)); // state check","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"     * Compare two {@code ownerName} in lexicographical order","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"     * @param other {@code ownerName} to be compared with","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"     * @return an Integer","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    public int compareTo(OwnerName other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        return Integer.compare(this.value.compareToIgnoreCase(other.value), 0);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":3,"Tiffanylin21":55,"soloplxya":11}},{"path":"src/main/java/seedu/address/model/pet/Pet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Pet in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"public class Pet {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    private final OwnerName ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    private final Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    private final Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    private final Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    private final AttendanceHashMap attendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    public Pet(Name name, OwnerName ownerName, Phone phone, Address address,","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"               Set\u003cTag\u003e tags, Diet diet, Appointment appointment, AttendanceHashMap attendanceHashMap) {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(name, ownerName, phone, address, tags, appointment, attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        this.ownerName \u003d ownerName;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        this.attendanceHashMap \u003d attendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"    public OwnerName getOwnerName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        return ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        return phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"    public Diet getDiet() {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        return diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"        return appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"    public AttendanceHashMap getAttendanceHashMap() {","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        return attendanceHashMap.getCopy();","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"     * Returns true if both pets have the same name.","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"     * This defines a weaker notion of equality between two pets.","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean isSamePet(Pet otherPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        if (otherPet \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        return otherPet !\u003d null","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 otherPet.getName().equals(getName());","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"     * Returns true if both pets have the same identity and data fields.","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"     * This defines a stronger notion of equality between two pets.","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"        if (!(other instanceof Pet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"        Pet otherPet \u003d (Pet) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"        return otherPet.getName().equals(getName())","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 otherPet.getOwnerName().equals(getOwnerName())","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 otherPet.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 otherPet.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"                \u0026\u0026 otherPet.getDiet().equals(getDiet())","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"                \u0026\u0026 otherPet.getAppointment().equals(getAppointment())","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 otherPet.getTags().equals(getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        return Objects.hash(name, ownerName, phone, address, tags, diet, appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"                .append(\"; OwnerName: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"                .append(getOwnerName())","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"                .append(\"; Diet: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"                .append(getDiet())","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"Dineshraj555"},"content":"                .append(\"; Appointment: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"Dineshraj555"},"content":"                .append(getAppointment());","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dineshraj555":19,"Tiffanylin21":18,"-":82,"soloplxya":7,"tobihy":23}},{"path":"src/main/java/seedu/address/model/pet/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a Pet\u0027s phone number in the address book.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":2,"-":51}},{"path":"src/main/java/seedu/address/model/pet/UniquePetList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.SortUtil.SORT_BY_APPOINTMENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.SortUtil.SORT_BY_DROP_OFF_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.SortUtil.SORT_BY_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.SortUtil.SORT_BY_OWNER;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.SortUtil.SORT_BY_PICK_UP_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.comparator.PetDropOffTimeComparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.comparator.PetPickUpTimeComparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.exceptions.PetNotFoundException;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":" * A list of pets that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":" * A pet is considered unique by comparing using {@code Pet#isSamePet(Pet)}. As such, adding and updating of","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":" * pets uses Pet#isSamePet(Pet) for equality so as to ensure that the pet being added or updated is","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":" * unique in terms of identity in the UniquePetList. However, the removal of a pet uses Pet#equals(Object) so","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":" * as to ensure that the pet with exactly the same fields will be removed.","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":" *","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":" *","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":" * @see Pet#isSamePet(Pet)","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"public class UniquePetList implements Iterable\u003cPet\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private final ObservableList\u003cPet\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    private final ObservableList\u003cPet\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if the list contains an equivalent pet as the given argument.","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean contains(Pet toCheck) {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"     * Sort list of pets by field using the comparators in the respective fields.","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"     * As of now, the field can be name, owner and appointment date.","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"     * @param field of the pet to be sorted by.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    public void sortPetList(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"        switch (field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        case SORT_BY_NAME:","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"            Comparator\u003cPet\u003e petNameComparator \u003d Comparator.comparing(Pet::getName);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"            FXCollections.sort(internalList, petNameComparator);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"            break;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        case SORT_BY_OWNER:","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            Comparator\u003cPet\u003e petOwnerNameComparator \u003d Comparator.comparing(Pet::getOwnerName);","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, petOwnerNameComparator);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        case SORT_BY_APPOINTMENT:","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"            Comparator\u003cPet\u003e petAppointmentComparator \u003d Comparator.comparing(Pet::getAppointment);","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, petAppointmentComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        case SORT_BY_DROP_OFF_TIME:","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, new PetDropOffTimeComparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"        case SORT_BY_PICK_UP_TIME:","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"            FXCollections.sort(internalList, new PetPickUpTimeComparator());","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"        default:","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"            assert false;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a pet to the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet must not already exist in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"    public void add(Pet toAdd) {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the pet {@code target} in the list with {@code editedPet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        requireAllNonNull(target, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"            throw new PetNotFoundException();","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        if (!target.isSamePet(editedPet) \u0026\u0026 contains(editedPet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.set(index, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"     * Removes the equivalent pet from the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"     * The pet must exist in the list.","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"    public void remove(Pet toRemove) {","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"            throw new PetNotFoundException();","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets(UniquePetList replacement) {","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"     * Replaces the contents of this list with {@code pets}.","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"     * {@code pets} must not contain duplicate pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets(List\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"        requireAllNonNull(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"        if (!petsAreUnique(pets)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"        internalList.setAll(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"    public ObservableList\u003cPet\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"    public Iterator\u003cPet\u003e iterator() {","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"                || (other instanceof UniquePetList // instanceof handles nulls","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"                        \u0026\u0026 internalList.equals(((UniquePetList) other).internalList));","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns true if {@code pets} contains only unique pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"    private boolean petsAreUnique(List\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"        for (int i \u003d 0; i \u003c pets.size() - 1; i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"            for (int j \u003d i + 1; j \u003c pets.size(); j++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"                if (pets.get(i).isSamePet(pets.get(j))) {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"                    return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"Tiffanylin21"},"content":"        return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":25,"Tiffanylin21":133,"soloplxya":13,"tobihy":4}},{"path":"src/main/java/seedu/address/model/pet/comparator/PetDropOffTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.model.pet.comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":" * Comparator class to compare pets based on pet\u0027s Drop Off Time.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"public class PetDropOffTimeComparator implements Comparator\u003cPet\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Compares pet objects based on their drop off time attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param first Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * @param second Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    public int compare(Pet first, Pet second) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e firstAttendanceEntry \u003d first.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e secondAttendanceEntry \u003d second.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        if (firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            return compareAttendanceEntries(firstAttendanceEntry.get(), secondAttendanceEntry.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        } else if (firstAttendanceEntry.isPresent() \u0026\u0026 !secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * Compares AttendanceEntries of pets based on their drop off time. Used in compare method.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @param firstPetAttendanceEntry AttendanceEntry of first pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @param secondPetAttendanceEntry AttendanceEntry of second pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    private int compareAttendanceEntries(AttendanceEntry firstPetAttendanceEntry,","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"                                         AttendanceEntry secondPetAttendanceEntry) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        boolean isFirstPetDropOffTimePresent \u003d firstPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        boolean isSecondPetDropOffTimePresent \u003d secondPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        if (isFirstPetDropOffTimePresent \u0026\u0026 isSecondPetDropOffTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime firstDropOffTime \u003d firstPetAttendanceEntry.getDropOffTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime secondDropOffTime \u003d secondPetAttendanceEntry.getDropOffTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            return firstDropOffTime.compareTo(secondDropOffTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        } else if (isFirstPetDropOffTimePresent \u0026\u0026 !isSecondPetDropOffTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!isFirstPetDropOffTimePresent \u0026\u0026 isSecondPetDropOffTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":64}},{"path":"src/main/java/seedu/address/model/pet/comparator/PetPickUpTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.model.pet.comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":" * Comparator class to compare pets based on pet\u0027s Pick Up Time.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"public class PetPickUpTimeComparator implements Comparator\u003cPet\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"     * Compares pet objects based on their pick up time attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"     * @param first Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"     * @param second Pet to be compared with.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    public int compare(Pet first, Pet second) {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e firstAttendanceEntry \u003d first.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        Optional\u003cAttendanceEntry\u003e secondAttendanceEntry \u003d second.getAttendanceHashMap().getAttendance(today);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        if (firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            return compareAttendanceEntries(firstAttendanceEntry.get(), secondAttendanceEntry.get());","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        } else if (firstAttendanceEntry.isPresent() \u0026\u0026 !secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!firstAttendanceEntry.isPresent() \u0026\u0026 secondAttendanceEntry.isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"     * Compares AttendanceEntries of pets based on their pick up time. Used in compare method.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"     * @param firstPetAttendanceEntry AttendanceEntry of first pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"     * @param secondPetAttendanceEntry AttendanceEntry of second pet.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"     * @return Value signifying in the difference between the comparing attribute.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    private int compareAttendanceEntries(AttendanceEntry firstPetAttendanceEntry,","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"                                         AttendanceEntry secondPetAttendanceEntry) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        boolean isFirstPetPickUpPresent \u003d firstPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        boolean isSecondPetPickUpTimePresent \u003d secondPetAttendanceEntry.hasTransportArrangement();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        if (isFirstPetPickUpPresent \u0026\u0026 isSecondPetPickUpTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime firstDropOffTime \u003d firstPetAttendanceEntry.getPickUpTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"            LocalTime secondDropOffTime \u003d secondPetAttendanceEntry.getPickUpTime().get();","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"            return firstDropOffTime.compareTo(secondDropOffTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        } else if (isFirstPetPickUpPresent \u0026\u0026 !isSecondPetPickUpTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"            return -1;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        } else if (!isFirstPetPickUpPresent \u0026\u0026 isSecondPetPickUpTimePresent) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"            return 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"            return 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Dineshraj555":64}},{"path":"src/main/java/seedu/address/model/pet/exceptions/DuplicatePetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet.exceptions;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":" * Signals that the operation will result in duplicate Pets (Pets are considered duplicates if they have the same","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"public class DuplicatePetException extends RuntimeException {","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"    public DuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"        super(\"Operation would result in duplicate pets\");","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tiffanylin21":3,"-":6,"tobihy":2}},{"path":"src/main/java/seedu/address/model/pet/exceptions/PetNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet.exceptions;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":" * Signals that the operation is unable to find the specified pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"public class PetNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Tiffanylin21":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\s*\\\\p{Alnum}[\\\\p{Alnum}\\\\s]*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        this.tagName \u003d tagName.replaceAll(\" +\", \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tiffanylin21":1,"tsumian":1,"-":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    public static final Diet EMPTY_DIET \u003d new Diet(\"\");","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    public static final Appointment EMPTY_APPOINTMENT \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public static Pet[] getSamplePets() {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        return new Pet[] {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Bagel\"), new OwnerName(\"Alex Yeo\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Japanese Spitz\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Tofu\"), new OwnerName(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Golden Retriever\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"PeePee\"), new OwnerName(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Bulldog\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Waffle\"), new OwnerName(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"British Shorthair\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Sesame\"), new OwnerName(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Poodle\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap()),","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"            new Pet(new Name(\"Avocado\"), new OwnerName(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                    getTagSet(\"Dachshund\"), EMPTY_DIET, EMPTY_APPOINTMENT, new AttendanceHashMap())","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        for (Pet samplePet : getSamplePets()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            sampleAb.addPet(samplePet);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Dineshraj555":8,"Tiffanylin21":9,"-":39,"soloplxya":4,"tobihy":7}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Tiffanylin21":2,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.AttendanceUtil.isValidIsPresentString;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":" * Jackson-friendly version of {@link AttendanceEntry}.","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"public class JsonAdaptedAttendance {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    public final String attendanceDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public final String isPresent;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    public final String pickUpTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    public final String dropOffTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"     * Constructs a {@code JsonAdaptedAttendance} with the given pet attendance details.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    public JsonAdaptedAttendance(@JsonProperty(\"attendance date\") String attendanceDate,","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"                                 @JsonProperty(\"isPresent\") String isPresent,","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"                                 @JsonProperty(\"Pick up time\") String pickUpTime,","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"                                 @JsonProperty(\"Drop off time\") String dropOffTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"        this.pickUpTime \u003d pickUpTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        this.dropOffTime \u003d dropOffTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"     * Constructs a given {@code Attendance} into this class for Jackson use.","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the attendance of the pet.","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    public JsonAdaptedAttendance(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"        this.attendanceDate \u003d attendanceEntry.getAttendanceDate().format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        this.isPresent \u003d attendanceEntry.getIsPresent().get().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalPickUpTime \u003d attendanceEntry.getPickUpTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        Optional\u003cLocalTime\u003e optionalDropOffTime \u003d attendanceEntry.getDropOffTime();","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        this.pickUpTime \u003d optionalPickUpTime.isEmpty()","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"                ? \"\"","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"                : optionalPickUpTime.map(t -\u003e t.format(DateTimeFormatter.ISO_LOCAL_TIME)).get();","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        this.dropOffTime \u003d optionalDropOffTime.isEmpty()","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"                ? \"\"","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"                : optionalDropOffTime.map(t -\u003e t.format(DateTimeFormatter.ISO_LOCAL_TIME)).get();","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     * Converts this Jackson-friendly adapted attendance object into the model\u0027s {@code Attendance} object.","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendance object.","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    public AttendanceEntry toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        if (!isValidIsPresentString(isPresent)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(AttendanceEntry.MESSAGE_INVALID_ISPRESENT);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        boolean modelIsPresent \u003d Boolean.parseBoolean(isPresent);","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        if (!modelIsPresent) {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"            return convertToAbsentEntry(attendanceDate); // absent attendance entry","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"        return convertToPresentEntry(attendanceDate, pickUpTime, dropOffTime); // present attendance entry","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"     * Creates an {@code AbsentAttendanceEntry} object for model use.","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate the attendance date in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"     * @return an {@code AbsentAttendanceEntry} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"     * @throws IllegalValueException if the given attendance date string is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    private AbsentAttendanceEntry convertToAbsentEntry(String attendanceDate) throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        LocalDate modelAttendanceDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"            modelAttendanceDate \u003d AttendanceUtil.convertToModelDate(attendanceDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        } catch (DateTimeParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(pe.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        return new AbsentAttendanceEntry(modelAttendanceDate);","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"     * Creates a {@code PresentAttendanceEntry} object for model use.","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"     * @param attendanceDate the attendance date in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"     * @param pickUpTime the pick-up time in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"     * @param dropOffTime the drop-off time in string format.","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"     * @return a {@code PresentAttendanceEntry} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"     * @throws IllegalValueException if the given attendance date, pick-up time or drop-off time string is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    private PresentAttendanceEntry convertToPresentEntry(String attendanceDate, String pickUpTime, String dropOffTime)","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"        throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        LocalDate modelAttendanceDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"        LocalTime modelPickUpTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"        LocalTime modelDropOffTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"            modelAttendanceDate \u003d AttendanceUtil.convertToModelDate(attendanceDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"            modelPickUpTime \u003d AttendanceUtil.convertToModelTime(pickUpTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"            modelDropOffTime \u003d AttendanceUtil.convertToModelTime(dropOffTime);","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"        } catch (DateTimeParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(pe.getMessage());","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        if (!PresentAttendanceEntry.isValidTimings(modelPickUpTime, modelDropOffTime)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"            throw new IllegalValueException(PresentAttendanceEntry.MESSAGE_TIME_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        return new PresentAttendanceEntry(modelAttendanceDate, modelPickUpTime, modelDropOffTime);","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tsumian":23,"tobihy":107}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":" * Jackson-friendly version of {@link Pet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"class JsonAdaptedPet {","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Pet\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private final String ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    private final String phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    private final String diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"    private final String appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    private final List\u003cJsonAdaptedAttendance\u003e attendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a {@code JsonAdaptedPet} with the given pet details.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"    public JsonAdaptedPet(@JsonProperty(\"name\") String name, @JsonProperty(\"ownerName\") String ownerName,","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                          @JsonProperty(\"phone\") String phone, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"                          @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged, @JsonProperty(\"diet\") String diet,","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"                          @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                          @JsonProperty(\"attendance\") List\u003cJsonAdaptedAttendance\u003e attendance) {","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        this.ownerName \u003d ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        if (attendance !\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            this.attendance.addAll(attendance);","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"     * Converts a given {@code Pet} into this class for Jackson use.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    public JsonAdaptedPet(Pet source) {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        ownerName \u003d source.getOwnerName().value;","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        diet \u003d source.getDiet().value;","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"        appointment \u003d source.getAppointment().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        attendance.addAll(source.getAttendanceHashMap()","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"                .toCollection()","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"                .stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"                .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"     * Converts this Jackson-friendly adapted pet object into the model\u0027s {@code Pet} object.","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"    public Pet toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        final List\u003cTag\u003e petTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"            petTags.add(tag.toModelType());","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"        final HashMap\u003cLocalDate, AttendanceEntry\u003e attendanceList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        for (JsonAdaptedAttendance attendance : attendance) {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            LocalDate attendanceDateKey \u003d AttendanceUtil.convertToModelDate(attendance.attendanceDate);","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"            attendanceList.put(attendanceDateKey, attendance.toModelType());","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"        if (ownerName \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"                    OwnerName.class.getSimpleName()));","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        if (!OwnerName.isValidOwnerName(ownerName)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"            throw new IllegalValueException(OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"        final OwnerName modelOwnerName \u003d new OwnerName(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"        if (diet \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Diet.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"        final Diet modelDiet \u003d new Diet(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"Dineshraj555"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"Dineshraj555"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"Dineshraj555"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"Dineshraj555"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"Dineshraj555"},"content":"        final Appointment modelAppointment \u003d new Appointment(appointment);","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(petTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        final AttendanceHashMap modelAttendanceHashMap \u003d new AttendanceHashMap(attendanceList);","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        return new Pet(modelName, modelOwnerName, modelPhone, modelAddress, modelTags, modelDiet, modelAppointment,","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"                modelAttendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dineshraj555":24,"Tiffanylin21":26,"-":69,"soloplxya":9,"tobihy":27}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}. Also creates an attendance file for each pet.","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tiffanylin21":1,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"Pets list contains duplicate pet(s).\";","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    private final List\u003cJsonAdaptedPet\u003e pets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"pets\") List\u003cJsonAdaptedPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        this.pets.addAll(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        pets.addAll(source.getPetList().stream().map(JsonAdaptedPet::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        for (JsonAdaptedPet jsonAdaptedPet : pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"            Pet pet \u003d jsonAdaptedPet.toModelType();","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"            if (addressBook.hasPet(pet)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"            addressBook.addPet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tiffanylin21":12,"-":48}},{"path":"src/main/java/seedu/address/ui/AttendanceTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.AttendanceUtil.ATTENDANCE_DATE_GUI_FORMATTER;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":" * A class that processes and produces attendance tags for the GUI.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"public class AttendanceTag {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    private static final String MISSING_ATTENDANCE_TAG_STYLE \u003d \"-fx-background-color: #c4c4c4\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    private static final String PRESENT_ATTENDANCE_TAG_STYLE \u003d \"-fx-background-color: #90be6d\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private static final String ABSENT_ATTENDANCE_TAG_STYLE \u003d \"-fx-background-color: #ff595e\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Private constructor to prevent creation.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private AttendanceTag() {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"     * Produces an attendance tag to be added to {@code PetCard}.","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the attendance to be converted to an attendance tag.","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * @return a green label if the pet is present on the given date,","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     * a red label if the pet is absent,","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     * and a grey label if no attendance was marked on that day.","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    public static Label createAttendanceTag(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceEntry);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        Optional\u003cBoolean\u003e isPresent \u003d attendanceEntry.getIsPresent();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        String dateString \u003d attendanceEntry.getAttendanceDate()","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            .format(ATTENDANCE_DATE_GUI_FORMATTER);","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        Label attendanceTag \u003d new Label(dateString);","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        if (isPresent.isEmpty()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"            attendanceTag.setStyle(MISSING_ATTENDANCE_TAG_STYLE);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"            boolean present \u003d isPresent.get();","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"            attendanceTag.setStyle(","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                present","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"                    ? PRESENT_ATTENDANCE_TAG_STYLE","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"                    : ABSENT_ATTENDANCE_TAG_STYLE","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"            );","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        return attendanceTag;","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tobihy":54}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    private PetListPanel petListPanel;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    private StackPane petListPanelPlaceholder;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        petListPanel \u003d new PetListPanel(logic.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        petListPanelPlaceholder.getChildren().add(petListPanel.getRoot());","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"    public PetListPanel getPetListPanel() {","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"        return petListPanel;","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tiffanylin21":6,"-":190}},{"path":"src/main/java/seedu/address/ui/PetCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.AttendanceUtil.getPastWeekAttendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":" * An UI component that displays information of a {@code Pet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"public class PetCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String FXML \u003d \"PetListCard.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    public final Pet pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    private Label id;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    private Label ownerName;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"    private Label diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    private Label appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    private FlowPane attendanceTags;","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    private FlowPane transportTags;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a {@code PetCode} with the given {@code Pet} and index to display.","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public PetCard(Pet pet, int displayedIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        this.pet \u003d pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        name.setText(pet.getName().fullName);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"        ownerName.setText(pet.getOwnerName().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        phone.setText(pet.getPhone().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        address.setText(pet.getAddress().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"        diet.setText(pet.getDiet().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"        appointment.setText(pet.getAppointment().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        pet.getTags().stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        AttendanceHashMap attendanceHashMap \u003d pet.getAttendanceHashMap();","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"        getPastWeekAttendance(attendanceHashMap)","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"                .forEach(attendance -\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"                    attendanceTags","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"                            .getChildren()","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"                            .add(AttendanceTag.createAttendanceTag(attendance));","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"                });","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        AttendanceUtil.getNextTwoDaysTransport(attendanceHashMap)","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"            .forEach(attendance -\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"                transportTags","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"                    .getChildren()","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"                    .add(TransportTag.createTransportTag(attendance));","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"            });","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"    public void setColour(String colour) {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        cardPane.setStyle(\"-fx-background-color: \" + colour);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        if (!(other instanceof PetCard)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        PetCard card \u003d (PetCard) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"                \u0026\u0026 pet.equals(card.pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Dineshraj555":7,"Tiffanylin21":15,"-":58,"soloplxya":4,"tobihy":25}},{"path":"src/main/java/seedu/address/ui/PetListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.GuiUtil.isEvenIndexCard;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":" * Panel containing the list of pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"public class PetListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String FXML \u003d \"PetListPanel.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PetListPanel.class);","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"    private ListView\u003cPet\u003e petListView;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a {@code PetListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public PetListPanel(ObservableList\u003cPet\u003e petList) {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        super(FXML);","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        petListView.setItems(petList);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        petListView.setCellFactory(listView -\u003e new PetListViewCell());","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Pet} using a {@code PetCard}.","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    class PetListViewCell extends ListCell\u003cPet\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        protected void updateItem(Pet pet, boolean empty) {","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"            super.updateItem(pet, empty);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"            if (empty || pet \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"                setText(null);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                setGraphic(createPetCard(pet).getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        private PetCard createPetCard(Pet pet) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"            int currentCellIndex \u003d getIndex();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"            PetCard petCard \u003d new PetCard(pet, currentCellIndex + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"            if (isEvenIndexCard(currentCellIndex)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                petCard.setColour(\"#744D26\");","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                petCard.setColour(\"#C4A484\");","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"            return petCard;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Tiffanylin21":48,"tobihy":16}},{"path":"src/main/java/seedu/address/ui/TransportTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":" * A class that processes and produces transport arrangement tags for the GUI.","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"public class TransportTag {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    private static final String TODAY_TRANSPORT_ARRANGEMENT_TAG_STYLE \u003d \"-fx-background-color: #f9c74f\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    private static final String TOMORROW_TRANSPORT_ARRANGEMENT_TAG_STYLE \u003d \"-fx-background-color: #f9844a\";","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    private static final String NO_TRANSPORT_ARRANGEMENT_TAG_STYLE \u003d \"-fx-background-color: #c4c4c4\";","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    private static final String TRANSPORT_TAG_ARRANGEMENT \u003d \"%1$s | Pick-up: %2$s, Drop-off: %3$s\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    private static final String TRANSPORT_TAG_NO_ARRANGEMENT \u003d \"%1$s | no arrangement\";","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"     * Private constructor to prevent creation.","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    private TransportTag() {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    };","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Produces a transport arrangement tag to be added to {@code PetCard}.","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"     * @param attendanceEntry the attendance to be converted to a transport tag.","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"     * @return a yellow label for today\u0027s arrangements,","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"     * an orange label for tomorrow\u0027s arrangements,","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"     * and a grey label if no transport arrangements were made that day.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    public static Label createTransportTag(AttendanceEntry attendanceEntry) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        requireNonNull(attendanceEntry);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        LocalDate tagDate \u003d attendanceEntry.getAttendanceDate();","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        if (!attendanceEntry.hasTransportArrangement()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"            return createTagWithNoArrangement(tagDate);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        return createTagWithArrangement(tagDate,","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"            attendanceEntry.getPickUpTime().get(),","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"            attendanceEntry.getDropOffTime().get());","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"     * Converts a given date into a string relative to today.","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"     * @param date the given date.","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"     * @return a {@code String} representing the date, relative to today.","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    private static String dateToDay(LocalDate date) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        if (date.isEqual(LocalDate.now())) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"            return \"Today\";","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        } else if (date.isEqual(LocalDate.now().plusDays(1))) {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"            return \"Tomorrow\";","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        return \"\"; // should not reach this point","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"     * Creates a transport tag in the context with no transport arrangements.","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"     * @param date the date of the transport arrangement.","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"     * @return a tag without any transport arrangement details.","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    private static Label createTagWithNoArrangement(LocalDate date) {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        Label transportTag \u003d new Label(","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            String.format(TRANSPORT_TAG_NO_ARRANGEMENT, dateToDay(date))","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        transportTag.setStyle(NO_TRANSPORT_ARRANGEMENT_TAG_STYLE);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        return transportTag;","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"     * Creates a transport tag in the context with transport arrangements.","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"     * @param date the date of the transport arrangement.","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"     * @param pickUpTime the pick-up time of the transport arrangement.","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"     * @param dropOffTime the drop-off time of the transport arrangement.","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"     * @return a tag with the details of the transport arrangement.","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    private static Label createTagWithArrangement(LocalDate date, LocalTime pickUpTime, LocalTime dropOffTime) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"        requireAllNonNull(date, pickUpTime, dropOffTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"        String style \u003d date.isEqual(LocalDate.now())","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"            ? TODAY_TRANSPORT_ARRANGEMENT_TAG_STYLE","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"            : TOMORROW_TRANSPORT_ARRANGEMENT_TAG_STYLE;","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        Label transportTag \u003d new Label(","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"            String.format(TRANSPORT_TAG_ARRANGEMENT, dateToDay(date),","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"                pickUpTime, dropOffTime)","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        transportTag.setStyle(style);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        return transportTag;","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tobihy":102}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/app_icon.png\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"tobihy":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter your command here...\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":8,"tobihy":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    -fx-prompt-text-fill: #383838;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":".split-pane:vertical .split-pane-divider {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: derive(#1d1d1d, 35%);","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"    -fx-padding: 5 0 5 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Segoe UI SemiBold\";","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \u0027Segoe UI\u0027;","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":273,"author":{"gitId":"tobihy"},"content":".scroll-bar .thumb:hover {","lastModifiedDate":"2022-03-16"},{"lineNumber":274,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: derive(#1d1d1d, 70%);","lastModifiedDate":"2022-03-16"},{"lineNumber":275,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":276,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"tobihy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":301,"author":{"gitId":"tobihy"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":305,"author":{"gitId":"tobihy"},"content":"#cardPane:hover {","lastModifiedDate":"2022-03-16"},{"lineNumber":306,"author":{"gitId":"tobihy"},"content":"    -fx-border-color: #ffffff;","lastModifiedDate":"2022-03-16"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #c4c4c4;","lastModifiedDate":"2022-03-16"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"tobihy"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"tobihy"},"content":"    -fx-border-insets: 5;","lastModifiedDate":"2022-03-16"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"tobihy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-16"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":323,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 40px;","lastModifiedDate":"2022-03-16"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":326,"author":{"gitId":"tobihy"},"content":"#promptText {","lastModifiedDate":"2022-03-16"},{"lineNumber":327,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"Tiffanylin21"},"content":"#filterField, #petListPanel, #petWebpage {","lastModifiedDate":"2022-03-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":346,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #ECDEAC;","lastModifiedDate":"2022-03-16"},{"lineNumber":347,"author":{"gitId":"tobihy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":348,"author":{"gitId":"tobihy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":349,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-16"},{"lineNumber":350,"author":{"gitId":"tobihy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-16"},{"lineNumber":351,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":352,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":353,"author":{"gitId":"tobihy"},"content":"#attendanceTags {","lastModifiedDate":"2022-03-16"},{"lineNumber":354,"author":{"gitId":"tobihy"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-16"},{"lineNumber":355,"author":{"gitId":"tobihy"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-16"},{"lineNumber":356,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":357,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":358,"author":{"gitId":"tobihy"},"content":"#attendanceTags .label {","lastModifiedDate":"2022-03-16"},{"lineNumber":359,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-16"},{"lineNumber":360,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #bffcc6;","lastModifiedDate":"2022-03-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":367,"author":{"gitId":"tobihy"},"content":"#attendancePane {","lastModifiedDate":"2022-03-16"},{"lineNumber":368,"author":{"gitId":"tobihy"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2022-03-16"},{"lineNumber":369,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-16"},{"lineNumber":370,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"tobihy"},"content":"#transportTags {","lastModifiedDate":"2022-03-26"},{"lineNumber":372,"author":{"gitId":"tobihy"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-26"},{"lineNumber":373,"author":{"gitId":"tobihy"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-26"},{"lineNumber":374,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":375,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":376,"author":{"gitId":"tobihy"},"content":"#transportTags .label {","lastModifiedDate":"2022-03-26"},{"lineNumber":377,"author":{"gitId":"tobihy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-26"},{"lineNumber":378,"author":{"gitId":"tobihy"},"content":"    -fx-background-color: #bffcc6;","lastModifiedDate":"2022-03-26"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-26"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-26"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"Tiffanylin21":1,"-":325,"tobihy":57}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"         title\u003d\"WoofAreYou\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"        \u003cImage url\u003d\"@/images/app_icon.png\"/\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"                \u003cSplitPane orientation\u003d\"VERTICAL\" VBox.vgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"                               minHeight\u003d\"100\" prefHeight\u003d\"150\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"                    \u003cVBox fx:id\u003d\"petList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"                          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"                        \u003cStackPane fx:id\u003d\"petListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Tiffanylin21":1,"-":47,"tobihy":14}},{"path":"src/main/resources/view/PetListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" prefWidth\u003d\"300\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"        \u003cVBox alignment\u003d\"CENTER\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"                \u003cLabel fx:id\u003d\"ownerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ownerName\"/\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"                \u003cLabel fx:id\u003d\"diet\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$diet\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"                \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        \u003cVBox id\u003d\"attendancePane\" alignment\u003d\"CENTER\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"                    \u003cInsets top\u003d\"5\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Attendance\"/\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"                \u003cFlowPane fx:id\u003d\"attendanceTags\" alignment\u003d\"CENTER_LEFT\"/\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"                    \u003cInsets top\u003d\"5\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Transport\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"                \u003cFlowPane fx:id\u003d\"transportTags\" alignment\u003d\"CENTER_LEFT\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dineshraj555":2,"-":33,"soloplxya":1,"tobihy":23}},{"path":"src/main/resources/view/PetListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"  \u003cListView fx:id\u003d\"petListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":1,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":8,"tobihy":1}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        final Index fifthPetIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(fifthPetIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(fifthPetIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(fifthPetIndex.equals(fifthPetIndex));","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(fifthPetIndex.equals(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(fifthPetIndex.equals(5.0f));","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(fifthPetIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tiffanylin21":7,"-":53}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"        assertNotNull(AppUtil.getImage(\"/images/app_icon.png\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"tobihy":1}},{"path":"src/test/java/seedu/address/commons/util/AttendanceUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import java.util.Random;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.MissingAttendanceEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"public class AttendanceUtilTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap allPresentAttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap allAbsentAttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap mixedAttendanceHashMap;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private static final AttendanceHashMap missingAttendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e allPresentAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e allAbsentAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e mixedAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    private static ArrayList\u003cAttendanceEntry\u003e missingAttendanceList;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    public static void createAllPresentAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e fullPresentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e fullPresentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        // creates an attendance hashmap with present entries","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        // from 30 days ago till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceEntry currentEntry \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"                    new PresentAttendanceEntry(d, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"            fullPresentHashMap.put(d, currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"            // creates an attendance list with entries from a week before till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"                fullPresentArrayList.add(currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        allPresentAttendanceHashMap \u003d new AttendanceHashMap(fullPresentHashMap);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"        allPresentAttendanceList \u003d fullPresentArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"    public static void createAllAbsentAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e fullAbsentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e fullAbsentArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        // creates an attendance hashmap with absent entries","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        // from 30 days ago till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"            AbsentAttendanceEntry currentEntry \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"                    new AbsentAttendanceEntry(d);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"            fullAbsentHashMap.put(d, currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"            // creates an attendance list with entries from a week before till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"                fullAbsentArrayList.add(currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        allAbsentAttendanceHashMap \u003d new AttendanceHashMap(fullAbsentHashMap);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        allAbsentAttendanceList \u003d fullAbsentArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    public static void createMixedAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"        // randomizer to create a mixed attendance hash map.","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"        Random rng \u003d new Random();","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e mixedHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e mixedArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        // creates an attendance hashmap with either absent or present entries","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        // from 30 days ago till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"            boolean isPresent \u003d rng.nextBoolean();","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"            AttendanceEntry currentEntry;","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"            if (isPresent) {","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"                currentEntry \u003d new PresentAttendanceEntry(d, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"                currentEntry \u003d new AbsentAttendanceEntry(d);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"            mixedHashMap.put(d, currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"            // creates an attendance list with entries from a week before till now.","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"                mixedArrayList.add(currentEntry);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"        mixedAttendanceHashMap \u003d new AttendanceHashMap(mixedHashMap);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"        mixedAttendanceList \u003d mixedArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"    public static void createMissingAttendanceScenario() {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        ArrayList\u003cAttendanceEntry\u003e missingArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        // creates an attendance list with missing entries for the week.","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"        for (LocalDate d \u003d DATE_TODAY.minusDays(30); d.isBefore(DATE_TODAY.plusDays(1)); d \u003d d.plusDays(1)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"            if (isWithinWeek(d)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"                missingArrayList.add(new MissingAttendanceEntry(d));","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"        missingAttendanceList \u003d missingArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"    public void isValidIsPresentString_validInputs_correctResult() {","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"        assertTrue(AttendanceUtil.isValidIsPresentString(\"true\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        assertTrue(AttendanceUtil.isValidIsPresentString(\"false\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"tue\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"True\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"        assertFalse(AttendanceUtil.isValidIsPresentString(\"False\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"    public void convertToModelDate_invalidInputs_throwsDateTimeParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        final String[] invalidDateStringArray \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"            {\"18-03-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"                \"18/03/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"                \"03-18-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"                \"03/18/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"                \"\",","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"                \"ABC\",","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"                \"09:00:00\",","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"                \"0900\",","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"                \"09:00\",","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"                \"9\",","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"                \"9.30 pm\"};","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidDateStringArray) {","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e AttendanceUtil.convertToModelDate(s));","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"    public void convertToModelTime_invalidInputs_throwsDateTimeParseException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"        final String[] invalidTimeStringArray \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"            {\"0900\",","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"                \"9\",","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"                \"9.30 pm\",","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"                \"18-03-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"                \"18/03/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"                \"03-18-2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"                \"03/18/2022\"};","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"        for (String s : invalidTimeStringArray) {","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"            assertThrows(DateTimeParseException.class, () -\u003e AttendanceUtil.convertToModelTime(s));","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e AttendanceUtil.getPastWeekAttendance(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_missingAttendance_returnsMissingEntriesWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"        assertEquals(missingAttendanceList, AttendanceUtil.getPastWeekAttendance(missingAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_allPresentAttendance_returnsCorrectWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"        assertEquals(allPresentAttendanceList, AttendanceUtil.getPastWeekAttendance(allPresentAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_allAbsentAttendance_returnsCorrectWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"        assertEquals(allAbsentAttendanceList, AttendanceUtil.getPastWeekAttendance(allAbsentAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"    public void getPastWeekAttendance_mixedAttendance_returnsCorrectWeeklyAttendanceList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"        assertEquals(mixedAttendanceList, AttendanceUtil.getPastWeekAttendance(mixedAttendanceHashMap));","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"     * Checks that a given date is within the past week,","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"     * i.e. within the range of [n - 6, n] dates, where n is the date today.","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"     * @param date the date to be checked","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"     * @return true if the given date is within the past week, false otherwise.","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"tobihy"},"content":"    public static boolean isWithinWeek(LocalDate date) {","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"tobihy"},"content":"        LocalDate dateRangeStart \u003d DATE_TODAY.minusDays(7);","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"tobihy"},"content":"        LocalDate dateRangeEnd \u003d DATE_TODAY.plusDays(1);","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"tobihy"},"content":"        return date.isAfter(dateRangeStart) \u0026\u0026 date.isBefore(dateRangeEnd);","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":221}},{"path":"src/test/java/seedu/address/commons/util/FilterUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"public class FilterUtilTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    private static final String ownerName \u003d \"ABC\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"    private static final String dateWord \u003d \"today\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    private static final String tagWord \u003d \"def\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    private static final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"    private static OwnerNameContainsFilterWordPredicate ownerPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    private static DateContainsFilterDatePredicate datePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"    private static AppointmentContainsFilterWordPredicate appPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    private static TagContainsFilterWordPredicate tagPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for isValidFilterArg --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    public void isValidFilterArg_valid_input() {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byDate/18-09-2022\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byApp/today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byOwner/abcd\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.isValidFilterArg(\"byTags/abc\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"    public void isValidFilterArg_invalid_input() {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        assertFalse(FilterUtil.isValidFilterArg(\"byDate/09-03-2022 byOwner/abcd\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        assertFalse(FilterUtil.isValidFilterArg(\"byTags/abc byApp/today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for successMessageMatch --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public static void createPredicates() {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            datePredicate \u003d new DateContainsFilterDatePredicate(dateWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            appPredicate \u003d new AppointmentContainsFilterWordPredicate(dateWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            fail(\"Should not have thrown parse exception.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        ownerPredicate \u003d new OwnerNameContainsFilterWordPredicate(ownerName);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        tagPredicate \u003d new TagContainsFilterWordPredicate(tagWord);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    public void successMessageMatch_test() {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"date\", FilterUtil.successMessageMatch(datePredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"appointment date\", FilterUtil.successMessageMatch(appPredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"owner\u0027s name\", FilterUtil.successMessageMatch(ownerPredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        assertEquals(\"tags\", FilterUtil.successMessageMatch(tagPredicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for tagContainsFilterWord --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    public static void createTags() {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        Tag tagOne \u003d new Tag(\"ABC\");","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"        Tag tagTwo \u003d new Tag(\"DEF\");","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"        Tag tagThree \u003d new Tag(\"GHI JKL\");","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        tags.add(tagOne);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        tags.add(tagTwo);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        tags.add(tagThree);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"    public void tagContainsFilterWord_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"        //Lower case match \"ABC\"","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.tagContainFilterWord(tags, \"abc\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        //Upper case match \"DEF\"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.tagContainFilterWord(tags, \"DEF\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"        //Lower case partial match \"GHI JKL\"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"        assertTrue(FilterUtil.tagContainFilterWord(tags, \"gh jk\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"    public void tagContainsFilterWord_failure() {","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"        assertFalse(FilterUtil.tagContainFilterWord(tags, \"MNO\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":96}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"    //---------------- Tests for tagContainsWordsIgnoreCase --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"    public void tagOrNameContainsWordsIgnoreCase_correct_result() {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"        //Actual match","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"ABC\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"        //Lower case actual match","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"abc\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"        //Partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"AB\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"        //Lower case partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC\", \"ab\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"        //Two words Partial Match","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF\", \"DE\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"        //Two words one full match, one partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF\", \"abc de\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"        //Three words, all partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF GHI\", \"ab de hi\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"        //Three words, two words partial match","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"        assertTrue(StringUtil.tagOrNameContainsWordsIgnoreCase(\"ABC DEF GHI\", \"ab de\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsumian":28,"-":142,"tobihy":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + OWNER_NAME_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        Pet expectedPet \u003d new PetBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.addPet(expectedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public void getFilteredPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPetList().remove(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Dineshraj555":2,"Tiffanylin21":9,"-":151}},{"path":"src/test/java/seedu/address/logic/commands/AbsentAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_PET;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"import seedu.address.testutil.AbsentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    private static final String MESSAGE_DATE_STUB \u003d LocalDate.now().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private static AbsentAttendanceDescriptor descriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    static void setupDescriptors() {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        descriptor \u003d new AbsentAttendanceDescriptorBuilder().withDate(DATE_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    // Pet does not have any attendance entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsAbsentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsAbsentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        execute_markPetAsAbsentUnfilteredList_success();","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"    // Pet has an absent attendance entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"    public void execute_markAbsentPetAbsentAgainUnfilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"        Pet thirdPet \u003d model.getFilteredPetList().get(INDEX_THIRD_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(thirdPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"            INDEX_THIRD_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedFailureMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(thirdPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(absentAttendanceCommand, model, expectedMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"    public void execute_markAbsentPetAbsentAgainFilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_THIRD_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"        Pet thirdPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(thirdPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedFailureMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(thirdPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(absentAttendanceCommand, model, expectedMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry with a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportAbsentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportAbsentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_SECOND_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry without a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAbsentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FOURTH_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"            INDEX_FOURTH_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAbsentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FOURTH_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceCommand absentAttendanceCommand \u003d new AbsentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"            descriptor","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d generateExpectedSuccessMessage(petToMarkAbsent, MESSAGE_DATE_STUB, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkAbsent);","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(absentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"    private static String generateExpectedSuccessMessage(Pet pet, String messageDate,","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"                                                         AbsentAttendanceDescriptor descriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"        return String.format(AbsentAttendanceCommand.MESSAGE_ABSENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"            pet.getName(), messageDate, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"    private static String generateExpectedFailureMessage(Pet pet, String messageDate,","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"                                                         AbsentAttendanceDescriptor descriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"        return String.format(AbsentAttendanceCommand.MESSAGE_ABSENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"            pet.getName(), messageDate, descriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":211}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_newPet_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.addPet(validPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandSuccess(new AddCommand(validPet), model,","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPet), expectedModel);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_duplicatePet_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petInList \u003d model.getAddressBook().getPetList().get(0);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(new AddCommand(petInList), model, AddCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Tiffanylin21":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public void constructor_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_petAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        ModelStubAcceptingPetAdded modelStub \u003d new ModelStubAcceptingPetAdded();","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        CommandResult commandResult \u003d new AddCommand(validPet).execute(modelStub);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPet), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(Arrays.asList(validPet), modelStub.petsAdded);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_duplicatePet_throwsCommandException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        AddCommand addCommand \u003d new AddCommand(validPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        ModelStub modelStub \u003d new ModelStubWithPet(validPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PET, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        Pet alice \u003d new PetBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        Pet bob \u003d new PetBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        public void addPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        public void sortPetList(String field) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"        public void deletePet(Pet target) {","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"        public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"        public void updateFilteredPetList(Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"        public ReadOnlyAddressBook undo() {","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"     * A Model stub that contains a single pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"    private class ModelStubWithPet extends ModelStub {","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"        private final Pet pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"        ModelStubWithPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"            this.pet \u003d pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"Tiffanylin21"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"Tiffanylin21"},"content":"            return this.pet.isSamePet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"Tiffanylin21"},"content":"     * A Model stub that always accept the pet being added.","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"Tiffanylin21"},"content":"    private class ModelStubAcceptingPetAdded extends ModelStub {","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"        final ArrayList\u003cPet\u003e petsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"Tiffanylin21"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"Tiffanylin21"},"content":"            return petsAdded.stream().anyMatch(pet::isSamePet);","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"Tiffanylin21"},"content":"        public void addPet(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"Tiffanylin21"},"content":"            requireNonNull(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"Tiffanylin21"},"content":"            petsAdded.add(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Tiffanylin21":41,"-":160,"soloplxya":3}},{"path":"src/test/java/seedu/address/logic/commands/AppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"class AppointmentCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_DATE_TIME_STUB \u003d \"02-04-2022 09:30\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    private static final String APPOINTMENT_LOCATION_STUB \u003d \"NUS Vet Clinic\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_addAppointmentUnfilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        Pet firstPerson \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedPerson \u003d new PetBuilder(firstPerson)","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB,","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"                        APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"                new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                        new Appointment(editedPerson.getAppointment().getDateTime(),","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"                                editedPerson.getAppointment().getLocation()));","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        String expectedMessage \u003d String.format(AppointmentCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.setPet(firstPerson, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(appointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_clearAppointmentUnfilteredList_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        Pet firstPerson \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedPerson \u003d new PetBuilder(firstPerson).withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"                editedPerson.getAppointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        String expectedMessage \u003d String.format(AppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.setPet(firstPerson, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(appointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"        Pet firstPerson \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedPerson \u003d new PetBuilder(model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased()))","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB, APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment(editedPerson.getAppointment().getDateTime(),","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Dineshraj555"},"content":"                        editedPerson.getAppointment().getLocation()));","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"        String expectedMessage \u003d String.format(AppointmentCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Dineshraj555"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.setPet(firstPerson, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(appointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Dineshraj555"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandFailure(appointmentCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"    /**s","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"Dineshraj555"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"Dineshraj555"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"Dineshraj555"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPetList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand appointmentCommand \u003d new AppointmentCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandFailure(appointmentCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"Dineshraj555"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"        final AppointmentCommand standardCommand \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"        AppointmentCommand commandWithSameValues \u003d new AppointmentCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment());","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(standardCommand.equals(new AppointmentCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"                new Appointment())));","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":134}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Tiffanylin21":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"import seedu.address.testutil.PresentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String VALID_NAME_BOB_WITH_SPACES \u003d \"Bob    Choo\";","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    public static final String VALID_OWNER_NAME_AMY \u003d \"Sarah Lee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    public static final String VALID_OWNER_NAME_BOB \u003d \"Bob Lee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"123 Bobby Street\";","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_ADDRESS_BOBA \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friends\";","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_DIET_AMY \u003d \"No meat for Amy for one month.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    public static final String VALID_DIET_BOB \u003d \"No dietary restrictions\";","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_DESC_AMY \u003d \" \" + PREFIX_OWNER_NAME + VALID_OWNER_NAME_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_DESC_BOB \u003d \" \" + PREFIX_OWNER_NAME + VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"    // \u0027!\u0027 not allowed in ownerNames","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"    public static final String INVALID_OWNER_NAME_DESC \u003d \" \" + PREFIX_OWNER_NAME + \"bob!yahoo\";","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"    public static final EditCommand.EditPetDescriptor DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    public static final EditCommand.EditPetDescriptor DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceDescriptor DESC_WITH_TRANSPORT_ARRANGEMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceDescriptor DESC_WITHOUT_TRANSPORT_ARRANGEMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        DESC_AMY \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Dineshraj555"},"content":"            .withPhone(VALID_PHONE_AMY).withOwnerName(VALID_OWNER_NAME_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        DESC_BOB \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Dineshraj555"},"content":"            .withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"        DESC_WITH_TRANSPORT_ARRANGEMENT \u003d new PresentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-27\").withPickUpTime(\"09:00\").withDropOffTime(\"17:30\")","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        DESC_WITHOUT_TRANSPORT_ARRANGEMENT \u003d new PresentAttendanceDescriptorBuilder()","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"            .withDate(\"2022-03-27\")","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"     * - the address book, filtered pet list and selected pet in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"     * Updates {@code model}\u0027s filtered list to show only the pet at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"    public static void showPetAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d model.getFilteredPetList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"        final String[] splitName \u003d pet.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(1, model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Dineshraj555":8,"Tiffanylin21":19,"-":102,"soloplxya":2,"tobihy":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PET_SUCCESS, petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.deletePet(petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PET_SUCCESS, petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.deletePet(petToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        showNoPet(expectedModel);","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"    private void showNoPet(Model model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        model.updateFilteredPetList(p -\u003e false);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(model.getFilteredPetList().isEmpty());","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Tiffanylin21":28,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/DietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIET_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIET_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"class DietCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    private static final String DIET_STUB \u003d \"Some diet\";","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    public void execute_addDietUnfilteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"        Pet firstPerson \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"        Pet editedPerson \u003d new PetBuilder(firstPerson).withDiet(DIET_STUB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"        DietCommand dietCommand \u003d new DietCommand(INDEX_FIRST_PET, new Diet(editedPerson.getDiet().value));","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(DietCommand.MESSAGE_ADD_DIET_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"        expectedModel.setPet(firstPerson, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(dietCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"    public void execute_deleteDietUnfilteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        Pet firstPerson \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        Pet editedPerson \u003d new PetBuilder(firstPerson).withDiet(\"\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        DietCommand dietCommand \u003d new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"                new Diet(editedPerson.getDiet().toString()));","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(DietCommand.MESSAGE_DELETE_DIET_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"        expectedModel.setPet(firstPerson, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(dietCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"        Pet firstPerson \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"        Pet editedPerson \u003d new PetBuilder(model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased()))","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"                .withDiet(DIET_STUB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"        DietCommand dietCommand \u003d new DietCommand(INDEX_FIRST_PET, new Diet(editedPerson.getDiet().value));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"        String expectedMessage \u003d String.format(DietCommand.MESSAGE_ADD_DIET_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        expectedModel.setPet(firstPerson, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(dietCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"        DietCommand dietCommand \u003d new DietCommand(outOfBoundIndex, new Diet(VALID_DIET_BOB));","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"        assertCommandFailure(dietCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"    /**s","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPetList().size());","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"        DietCommand remarkCommand \u003d new DietCommand(outOfBoundIndex, new Diet(VALID_DIET_BOB));","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"    public void equals() {","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"        final DietCommand standardCommand \u003d new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_AMY));","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"        DietCommand commandWithSameValues \u003d new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_AMY));","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new DietCommand(INDEX_SECOND_PET,","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_AMY))));","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        assertFalse(standardCommand.equals(new DietCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"                new Diet(VALID_DIET_BOB))));","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"soloplxya":128}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(editedPet).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, descriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        Index indexLastPet \u003d Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        Pet lastPet \u003d model.getFilteredPetList().get(indexLastPet.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        PetBuilder petInList \u003d new PetBuilder(lastPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d petInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPet, descriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(lastPet, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, new EditPetDescriptor());","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petInFilteredList \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedPet \u003d new PetBuilder(petInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"                new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), editedPet);","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_duplicatePetUnfilteredList_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(firstPet).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PET, descriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_duplicatePetFilteredList_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"        // edit pet in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        Pet petInList \u003d model.getAddressBook().getPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"                new EditPetDescriptorBuilder(petInList).build());","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_invalidPetIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_invalidPetIndexFilteredList_failure() {","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"                new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PET, DESC_AMY);","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor copyDescriptor \u003d new EditPetDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PET, copyDescriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PET, DESC_AMY)));","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PET, DESC_BOB)));","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Tiffanylin21":58,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/EditPetDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"public class EditPetDescriptorTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptorWithSameValues \u003d new EditPetDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withOwnerName(VALID_OWNER_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Dineshraj555":2,"Tiffanylin21":8,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import static seedu.address.commons.core.Messages.FILTER_MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.util.FilterUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"public class FilterCommandTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"    private static final String DROPOFF_TIME_STUB \u003d \"17:30\";","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    private static final String APPOINTMENT_DATE_TIME_STUB \u003d \"02-04-2022 09:30\";","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    private static final String APPOINTMENT_LOCATION_STUB \u003d \"NUS Vet Clinic\";","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    private static final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    private static final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    public void equals_date_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate firstDatePredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate secondDatePredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"22-03-2022\");","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterFirstCommand \u003d new FilterCommand(firstDatePredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterSecondCommand \u003d new FilterCommand(secondDatePredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"            FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstDatePredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"    public void equals_app_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate firstAppPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate secondAppPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(\"22-03-2022\");","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterFirstCommand \u003d new FilterCommand(firstAppPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"            FilterCommand filterSecondCommand \u003d new FilterCommand(secondAppPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"            FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstAppPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"            assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"tsumian"},"content":"            assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"tsumian"},"content":"    public void equals_owner_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate firstOwnerPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(\"first\");","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondOwnerPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(\"Second\");","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstOwnerPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondOwnerPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"tsumian"},"content":"        FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstOwnerPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"tsumian"},"content":"    public void equals_tags_predicate() {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstTagPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"first\");","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondTagPredicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"second\");","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstTagPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"tsumian"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondTagPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"tsumian"},"content":"        FilterCommand copyFirstFilterCommand \u003d new FilterCommand(firstTagPredicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"tsumian"},"content":"        assertTrue(filterFirstCommand.equals(copyFirstFilterCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"tsumian"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"tsumian"},"content":"    public static void setAttendance() {","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"tsumian"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"tsumian"},"content":"        Pet firstPetToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"tsumian"},"content":"                .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"tsumian"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"tsumian"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"tsumian"},"content":"        Pet secondPetToMarkPresent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"tsumian"},"content":"                .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"tsumian"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(firstPet, firstPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(secondPet, secondPetToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"tsumian"},"content":"    public void execute_noFilteredDateMatch_noPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"22-03-2021\");","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"tsumian"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"tsumian"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"tsumian"},"content":"    public void execute_attendanceDateMatch_multiplePetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":202,"author":{"gitId":"tsumian"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 2, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":203,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":205,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"tsumian"},"content":"    public void execute_ownerNameMatch_noPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d new OwnerNameContainsFilterWordPredicate(\"Poopoo\");","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":215,"author":{"gitId":"tsumian"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":216,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":217,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"    public void execute_ownerNameMatch_onePetFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":224,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d new OwnerNameContainsFilterWordPredicate(\"Alice Paul\");","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"tsumian"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 1, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":228,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"tsumian"},"content":"    public static void setTags() {","lastModifiedDate":"2022-03-26"},{"lineNumber":234,"author":{"gitId":"tsumian"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"        Pet firstPetSetTag \u003d new PetBuilder(firstPet).withTags(\"Golden Retriever\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_THIRD_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"        Pet secondPetSetTag \u003d new PetBuilder(secondPet).withTags(\"Golden Retriever\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":240,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"tsumian"},"content":"        model.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":245,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"tsumian"},"content":"    public void execute_tagMatch_zeroPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate predicate \u003d new TagContainsFilterWordPredicate(\"Nothing\");","lastModifiedDate":"2022-03-26"},{"lineNumber":250,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":251,"author":{"gitId":"tsumian"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":252,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":253,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":254,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":255,"author":{"gitId":"tsumian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":256,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":257,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":258,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":259,"author":{"gitId":"tsumian"},"content":"    public void execute_tagMatch_multiplePetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":260,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate predicate \u003d new TagContainsFilterWordPredicate(\"Golden Retriever\");","lastModifiedDate":"2022-03-26"},{"lineNumber":261,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"tsumian"},"content":"                String.format(FILTER_MESSAGE_SUCCESS, 2, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":263,"author":{"gitId":"tsumian"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"tsumian"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"tsumian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":268,"author":{"gitId":"tsumian"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-26"},{"lineNumber":269,"author":{"gitId":"tsumian"},"content":"    public static void setApp() {","lastModifiedDate":"2022-03-26"},{"lineNumber":270,"author":{"gitId":"tsumian"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"tsumian"},"content":"        Pet firstPetSetTag \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"tsumian"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB, APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":274,"author":{"gitId":"tsumian"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_THIRD_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":275,"author":{"gitId":"tsumian"},"content":"        Pet secondPetSetTag \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"tsumian"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB, APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":277,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"tsumian"},"content":"        model.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"tsumian"},"content":"        model.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":280,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":281,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(firstPet, firstPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"tsumian"},"content":"        expectedModel.setPet(secondPet, secondPetSetTag);","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":285,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":286,"author":{"gitId":"tsumian"},"content":"    public void execute_appMatch_zeroPetsFound() {","lastModifiedDate":"2022-03-26"},{"lineNumber":287,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":288,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d new AppointmentContainsFilterWordPredicate(\"today\");","lastModifiedDate":"2022-03-26"},{"lineNumber":289,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":290,"author":{"gitId":"tsumian"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 0, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":291,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":293,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":294,"author":{"gitId":"tsumian"},"content":"            assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-26"},{"lineNumber":295,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":296,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":297,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":298,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":299,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":300,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":301,"author":{"gitId":"tsumian"},"content":"    public void execute_appMatch_multiplePetsFound () {","lastModifiedDate":"2022-03-26"},{"lineNumber":302,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":303,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d new AppointmentContainsFilterWordPredicate(\"02-04-2022\");","lastModifiedDate":"2022-03-26"},{"lineNumber":304,"author":{"gitId":"tsumian"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":305,"author":{"gitId":"tsumian"},"content":"                    String.format(FILTER_MESSAGE_SUCCESS, 2, FilterUtil.successMessageMatch(predicate));","lastModifiedDate":"2022-03-26"},{"lineNumber":306,"author":{"gitId":"tsumian"},"content":"            FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":307,"author":{"gitId":"tsumian"},"content":"            expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":308,"author":{"gitId":"tsumian"},"content":"            assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":309,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":310,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":311,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":312,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":313,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":310,"tobihy":3}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PETS_FOUND;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BAGEL;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.PANCAKE;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.WAFFLE;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_zeroKeywords_noPetFound() {","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PETS_FOUND, 0);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    public void execute_multipleKeywords_multiplePetsFound() {","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PETS_FOUND, 3);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Bagel Pancake Waffle\");","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(Arrays.asList(BAGEL, PANCAKE, WAFFLE), model.getFilteredPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":13,"tsumian":3,"-":67}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/PresentAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_WITHOUT_TRANSPORT_ARRANGEMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_WITH_TRANSPORT_ARRANGEMENT;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_PET;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"import seedu.address.commons.util.AttendanceUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"import seedu.address.testutil.PresentAttendanceDescriptorBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    private static final String MESSAGE_DATE_STUB \u003d LocalDate.now().format(AttendanceUtil.ATTENDANCE_DATE_FORMATTER);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static final String ALTERNATE_PICKUP_TIME_STUB \u003d \"09:30\";","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static final String DROPOFF_TIME_STUB \u003d \"17:30\";","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    private static final String ALTERNATE_DROPOFF_TIME_STUB \u003d \"18:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    private static PresentAttendanceDescriptor descriptorWithTransportArrangement;","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"    private static PresentAttendanceDescriptor descriptorWithoutTransportArrangement;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    private static PresentAttendanceDescriptor alternateDescriptorWithTransportArrangement;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"    static void setupDescriptors() {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        descriptorWithTransportArrangement \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptorBuilder().withDate(DATE_STUB).withPickUpTime(PICKUP_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"                .withDropOffTime(DROPOFF_TIME_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        descriptorWithoutTransportArrangement \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptorBuilder().withDate(DATE_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"        alternateDescriptorWithTransportArrangement \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceDescriptorBuilder().withDate(DATE_STUB).withPickUpTime(ALTERNATE_PICKUP_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"                .withDropOffTime(ALTERNATE_DROPOFF_TIME_STUB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    // Pet does not have any attendance entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithTransportUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithTransportFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithoutTransportUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetAsPresentWithoutTransportFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"tobihy"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry with a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithAlternateTransportUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, ALTERNATE_PICKUP_TIME_STUB, ALTERNATE_DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"            alternateDescriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, alternateDescriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithAlternateTransportFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_SECOND_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(secondPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, ALTERNATE_PICKUP_TIME_STUB, ALTERNATE_DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"tobihy"},"content":"            alternateDescriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"tobihy"},"content":"            petToMarkPresent.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB, alternateDescriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(secondPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithDuplicateDetailsUnfilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"tobihy"},"content":"            secondPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithTransportPresentWithDuplicateDetailsFilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"tobihy"},"content":"        Pet secondPet \u003d model.getFilteredPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":225,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":226,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"tobihy"},"content":"            INDEX_SECOND_PET,","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"tobihy"},"content":"            secondPet.getName(),","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"tobihy"},"content":"    // Pet has a present attendance entry without a transport arrangement.","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentUnfilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FOURTH_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"tobihy"},"content":"            INDEX_FOURTH_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":251,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":252,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":253,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":254,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":255,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":256,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":258,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":263,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentFilteredList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FOURTH_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"tobihy"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(fourthPet)","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"tobihy"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"tobihy"},"content":"            descriptorWithTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"tobihy"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"tobihy"},"content":"        expectedModel.setPet(fourthPet, petToMarkPresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"tobihy"},"content":"        assertCommandSuccess(presentAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentUnfilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FOURTH_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"tobihy"},"content":"            INDEX_FOURTH_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":297,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":298,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":299,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":300,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":301,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":302,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":303,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":304,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":305,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":306,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-27"},{"lineNumber":307,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":308,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":310,"author":{"gitId":"tobihy"},"content":"    public void execute_markPetWithoutTransportAsPresentFilteredList_failure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":311,"author":{"gitId":"tobihy"},"content":"        showPetAtIndex(model, INDEX_FOURTH_PET);","lastModifiedDate":"2022-03-27"},{"lineNumber":312,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":313,"author":{"gitId":"tobihy"},"content":"        Pet fourthPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":314,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand presentAttendanceCommand \u003d new PresentAttendanceCommand(","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"tobihy"},"content":"            INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":317,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":318,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":319,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":320,"author":{"gitId":"tobihy"},"content":"        String failureMessage \u003d String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":321,"author":{"gitId":"tobihy"},"content":"            PresentAttendanceCommand.MESSAGE_PRESENT_ATTENDANCE_FAILURE,","lastModifiedDate":"2022-03-27"},{"lineNumber":322,"author":{"gitId":"tobihy"},"content":"            fourthPet.getName(),","lastModifiedDate":"2022-03-27"},{"lineNumber":323,"author":{"gitId":"tobihy"},"content":"            MESSAGE_DATE_STUB,","lastModifiedDate":"2022-03-27"},{"lineNumber":324,"author":{"gitId":"tobihy"},"content":"            descriptorWithoutTransportArrangement);","lastModifiedDate":"2022-03-27"},{"lineNumber":325,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"tobihy"},"content":"        assertCommandFailure(presentAttendanceCommand, model, failureMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":329,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":330,"author":{"gitId":"tobihy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"tobihy"},"content":"        final PresentAttendanceCommand standardCommand \u003d new PresentAttendanceCommand(INDEX_FIRST_PET,","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"tobihy"},"content":"            DESC_WITH_TRANSPORT_ARRANGEMENT);","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":334,"author":{"gitId":"tobihy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":335,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceDescriptor copyDescriptor \u003d new PresentAttendanceDescriptor(DESC_WITH_TRANSPORT_ARRANGEMENT);","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceCommand commandWithSameValues \u003d new PresentAttendanceCommand(INDEX_FIRST_PET, copyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":337,"author":{"gitId":"tobihy"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-27"},{"lineNumber":338,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"tobihy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":340,"author":{"gitId":"tobihy"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"tobihy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"tobihy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"tobihy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(INDEX_SECOND_PET, DESC_WITH_TRANSPORT_ARRANGEMENT)));","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"tobihy"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"tobihy"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceCommand(INDEX_FIRST_PET, DESC_WITHOUT_TRANSPORT_ARRANGEMENT)));","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":356}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"    private Model model;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"     * Initializes the model and expectedModel before running each test.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks if the pet list gets sorted by owner name after calling the sort command.","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsNotFiltered_showsSortedListByOwnerName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(\"owner\");","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(\"owner\"), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks if the pet list gets sorted by pet name after calling the sort command.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetName() {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(\"name\");","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(\"name\"), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"     * Test method that checks if the pet list gets sorted by pet appointment after calling the sort command.","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetAppointment() {","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(\"app\");","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(\"app\"), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"     * Test method that checks if the pet list gets sorted by pet name after calling the sort command.","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetDropOffTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(\"drop off\");","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(\"drop off\"), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"Dineshraj555"},"content":"     * Test method that checks if the pet list gets sorted by pet appointment after calling the sort command.","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"    public void execute_listIsNotFiltered_showsSortedListByPetPickUpTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"        expectedModel.sortPetList(\"pick up\");","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"Dineshraj555"},"content":"        assertCommandSuccess(new SortCommand(\"pick up\"), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Dineshraj555":32,"soloplxya":40}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"    private static final String APPOINTMENT_DATE_TIME_STUB \u003d \"02-04-2022 09:30\";","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    private static final String APPOINTMENT_LOCATION_STUB \u003d \"NUS Vet Clinic\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    private static final String DATE_STUB \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"    private static final String DIET_STUB \u003d \"Some diet\";","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"    private static final String DROPOFF_TIME_STUB \u003d \"17:30\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    private Model model;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"soloplxya"},"content":"     * Initializes the model and expectedModel before running each test.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"soloplxya"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"soloplxya"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"soloplxya"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of a delete command","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoDeleteCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"soloplxya"},"content":"        // Model result","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"soloplxya"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"soloplxya"},"content":"        model.deletePet(petToDelete);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of an add command","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoAddCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"soloplxya"},"content":"        Pet alice \u003d new PetBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"soloplxya"},"content":"        model.addPet(alice);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of an appointment command","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoAppointmentCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"                .withAppointment(APPOINTMENT_DATE_TIME_STUB,","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"soloplxya"},"content":"                        APPOINTMENT_LOCATION_STUB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, editedPet);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of a diet command","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoDietCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"soloplxya"},"content":"                .withDiet(DIET_STUB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, editedPet);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of a sort command","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoSortCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"Dineshraj555"},"content":"        model.sortPetList(\"owner\");","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of an edit command.","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoEditCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"        Index indexLastPet \u003d Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"        Pet lastPet \u003d model.getFilteredPetList().get(indexLastPet.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"soloplxya"},"content":"        PetBuilder petInList \u003d new PetBuilder(lastPet);","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"soloplxya"},"content":"        Pet editedPet \u003d petInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"soloplxya"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"soloplxya"},"content":"        model.setPet(lastPet, editedPet);","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of the present attendance command.","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoAddAttendanceCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"soloplxya"},"content":"        Pet petToMarkPresent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"soloplxya"},"content":"                .withPresentAttendanceEntry(DATE_STUB, PICKUP_TIME_STUB, DROPOFF_TIME_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, petToMarkPresent);","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"soloplxya"},"content":"     * Test method that checks for a successful undo of the absent attendance command.","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"soloplxya"},"content":"    public void execute_listIsFiltered_undoRemoveAttendanceCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"soloplxya"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"soloplxya"},"content":"        Pet petToMarkAbsent \u003d new PetBuilder(firstPet)","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"soloplxya"},"content":"                .withAbsentAttendanceEntry(DATE_STUB)","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"soloplxya"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"soloplxya"},"content":"        model.setPet(firstPet, petToMarkAbsent);","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"soloplxya"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"soloplxya"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Dineshraj555":1,"soloplxya":163}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OWNER_NAME_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OWNER_NAME_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        Pet expectedPet \u003d new PetBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_AMY + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        Pet expectedPetMultipleTags \u003d new PetBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPetMultipleTags));","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        Pet expectedPet \u003d new PetBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Dineshraj555"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + OWNER_NAME_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_OWNER_NAME_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_OWNER_NAME_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_OWNER_NAME_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + OWNER_NAME_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Dineshraj555":23,"Tiffanylin21":19,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PetUtil.getAddCommand(pet));","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(new AddCommand(pet), command);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PET.getOneBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PET), command);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(pet).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"                + INDEX_FIRST_PET.getOneBased() + \" \" + PetUtil.getEditPetDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PET, descriptor), command);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tiffanylin21":16,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PET));","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tiffanylin21":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OWNER_NAME_DESC;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OWNER_NAME_DESC_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"        // invalid ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, \"1\" + INVALID_OWNER_NAME_DESC, OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        // invalid phone followed by valid ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + OWNER_NAME_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Pet} being edited,","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"Dineshraj555"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_OWNER_NAME_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"Dineshraj555"},"content":"                + OWNER_NAME_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"                .withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"                .withOwnerName(VALID_OWNER_NAME_AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_THIRD_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"        // ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"Dineshraj555"},"content":"        userInput \u003d targetIndex.getOneBased() + OWNER_NAME_DESC_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"Dineshraj555"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withOwnerName(VALID_OWNER_NAME_AMY).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"Dineshraj555"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + OWNER_NAME_DESC_AMY","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"Dineshraj555"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + OWNER_NAME_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"Dineshraj555"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + OWNER_NAME_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder()","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"Tiffanylin21"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"Dineshraj555"},"content":"                .withOwnerName(VALID_OWNER_NAME_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"Tiffanylin21"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"Tiffanylin21"},"content":"        EditCommand.EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"Dineshraj555"},"content":"        userInput \u003d targetIndex.getOneBased() + OWNER_NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"Dineshraj555"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":211,"author":{"gitId":"Tiffanylin21"},"content":"        Index targetIndex \u003d INDEX_THIRD_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"Tiffanylin21"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Dineshraj555":20,"Tiffanylin21":38,"-":161}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.AppointmentContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.DateContainsFilterDatePredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.OwnerNameContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"import seedu.address.model.filter.TagContainsFilterWordPredicate;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"    public void parse_moreThanOneField_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"byDate/today byOwner/Alice\",","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"                Messages.FILTER_COMMAND_MORE_THAN_ONE_FIELD);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    public void parse_invalidField_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"byOtherStuff/abc\",","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"                FilterCommand.INVALID_FILTER_FIELD);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"    public void parse_emptyKeyword_throwsParseException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        assertParseFailure(parser, \"byDate/\",","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"                \"You did not provide a keyword!\");","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    public void parse_validOwnerArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"                new FilterCommand(new OwnerNameContainsFilterWordPredicate(\"Alice\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        assertParseSuccess(parser, \" byOwner/Alice\", expectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"    public void parse_validTagArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"                new FilterCommand(new TagContainsFilterWordPredicate(\"ABC DEF\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        assertParseSuccess(parser, \" byTags/ABC DEF\", expectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"    public void parse_validDateArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"            FilterCommand firstExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new DateContainsFilterDatePredicate(\"today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            FilterCommand secondExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new DateContainsFilterDatePredicate(\"23-03-2022\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byDate/today\", firstExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byDate/23-03-2022\", secondExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"    public void parse_validAppArg_returnsFilterCommand() {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"            FilterCommand firstExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new AppointmentContainsFilterWordPredicate(\"today\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"            FilterCommand secondExpectedFilterCommand \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"                    new FilterCommand(new AppointmentContainsFilterWordPredicate(\"23-03-2022\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byApp/today\", firstExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"            assertParseSuccess(parser, \" byApp/23-03-2022\", secondExpectedFilterCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"tsumian":89}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Tiffanylin21":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String INVALID_OWNERNAME \u003d \"S@rah\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String VALID_OWNERNAME \u003d \"Sarah\";","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(INDEX_FIRST_PET, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(INDEX_FIRST_PET, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOwnerName((String) null));","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOwnerName(INVALID_OWNERNAME));","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_validValueWithoutWhitespace_returnsOwnerName() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"        OwnerName expectedOwnerName \u003d new OwnerName(VALID_OWNERNAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedOwnerName, ParserUtil.parseOwnerName(VALID_OWNERNAME));","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"    public void parseOwnerName_validValueWithWhitespace_returnsTrimmedOwnerName() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"        String ownerNameWithWhitespace \u003d WHITESPACE + VALID_OWNERNAME + WHITESPACE;","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"        OwnerName expectedOwnerName \u003d new OwnerName(VALID_OWNERNAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedOwnerName, ParserUtil.parseOwnerName(ownerNameWithWhitespace));","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tsumian"},"content":"    public void parseAttendanceDate_returnsLocalDate() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"tsumian"},"content":"        LocalDate expectedLocalDate \u003d LocalDate.parse(\"22-03-2022\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseAttendanceDate(\"22-03-2022\"), expectedLocalDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"tsumian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendanceDate(\"2022-03-22\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"tsumian"},"content":"    public void parseAppointmentDateTime_returnsLocalDateTime() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"tsumian"},"content":"        LocalDateTime expectedLocalDateTime \u003d LocalDateTime.parse(\"22-03-2022 09:00\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseAppointmentDateTime(\"22-03-2022 09:00\"), expectedLocalDateTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"tsumian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDateTime(\"2022-03-22 0830\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"tsumian"},"content":"    public void parseFilterDate_returnsLocalDate() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"tsumian"},"content":"        LocalDate expectedLocalDate \u003d LocalDate.parse(\"22-03-2022\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseFilterDate(\"22-03-2022\"), expectedLocalDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"tsumian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFilterDate(\"2022-03-22\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"tsumian"},"content":"    public void parseFilterAppDate_returnsLocalDate() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"tsumian"},"content":"        LocalDate expectedLocalDate \u003d LocalDate.parse(\"22-03-2022\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseFilterAppointmentDate(\"22-03-2022\"), expectedLocalDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"tsumian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFilterAppointmentDate(\"2022-03-22\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"tsumian"},"content":"    public void parsePickUpTime_returnsLocalTime() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"tsumian"},"content":"        LocalTime expectedLocalTime \u003d LocalTime.parse(\"09:00\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parsePickUpTime(\"09:00\"), expectedLocalTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"tsumian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePickUpTime(\"0800\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"tsumian"},"content":"    public void parseDropOffTime_returnsLocalTime() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"tsumian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"tsumian"},"content":"        LocalTime expectedLocalTime \u003d LocalTime.parse(\"18:00\", formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"tsumian"},"content":"        assertEquals(ParserUtil.parseDropOffTime(\"18:00\"), expectedLocalTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"tsumian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDropOffTime(\"0800\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Tiffanylin21":20,"tsumian":52,"-":176}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soloplxya"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"soloplxya"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"soloplxya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"soloplxya"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"soloplxya"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"soloplxya"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"     * Checks that the parser throws an error when no arguments are provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"soloplxya"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"soloplxya"},"content":"     * Checks that the parser throws an error when an invalid argument is provided.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"soloplxya"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"soloplxya"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"soloplxya"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"soloplxya"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"soloplxya":29}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOBA;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPetList());","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    public void resetData_withValidReadOnlyWoofAreYou_replacesData() {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"    public void resetData_withDuplicatePets_throwsDuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        // Two pets with the same identity fields","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e newPets \u003d Arrays.asList(BOBA, editedAlice);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPets);","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPet(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petNotInWoofAreYou_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(addressBook.hasPet(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petInWoofAreYou_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        addressBook.addPet(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(addressBook.hasPet(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"    public void hasPet_petWithSameIdentityFieldsInWoofAreYou_returnsTrue() {","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        addressBook.addPet(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOBA).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(addressBook.hasPet(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"    public void getPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPetList().remove(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     * A stub ReadOnlyAddressBook whose pets list can violate interface constraints.","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        private final ObservableList\u003cPet\u003e pets \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        AddressBookStub(Collection\u003cPet\u003e pets) {","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"            this.pets.setAll(pets);","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        public ObservableList\u003cPet\u003e getPetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"            return pets;","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Tiffanylin21":30,"-":70,"tobihy":4}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.PIZZA;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPet(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petNotInWoofAreYou_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(modelManager.hasPet(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"    public void hasPet_petInWoofAreYou_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        modelManager.addPet(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(modelManager.hasPet(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public void getFilteredPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPetList().remove(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"tobihy"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPet(BOBA).withPet(PIZZA).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        String[] keywords \u003d BOBA.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"        modelManager.updateFilteredPetList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"        modelManager.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Tiffanylin21":16,"-":115,"tobihy":1}},{"path":"src/test/java/seedu/address/model/attendance/AbsentAttendanceEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceEntryTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceEntry ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceEntry PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public void getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        assertEquals(ABSENT_ATTENDANCE_ENTRY.getPickUpTime(), Optional.empty());","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    public void getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"        assertEquals(ABSENT_ATTENDANCE_ENTRY.getDropOffTime(), Optional.empty());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry similarAbsentAttendanceEntry \u003d new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        AbsentAttendanceEntry differentAbsentAttendanceEntry \u003d new AbsentAttendanceEntry(DATE_TODAY.plusDays(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        assertTrue(ABSENT_ATTENDANCE_ENTRY.equals(ABSENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        assertTrue(ABSENT_ATTENDANCE_ENTRY.equals(similarAbsentAttendanceEntry));","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        assertFalse(ABSENT_ATTENDANCE_ENTRY.equals(differentAbsentAttendanceEntry));","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"        assertFalse(ABSENT_ATTENDANCE_ENTRY.equals(PRESENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        assertFalse(ABSENT_ATTENDANCE_ENTRY.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":44}},{"path":"src/test/java/seedu/address/model/attendance/AttendanceEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"public class AttendanceEntryTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final AttendanceEntry PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    public static final AttendanceEntry ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    public void getAttendanceDate_presentAttendanceEntry_returnsCorrectDate() {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"        assertEquals(PRESENT_ATTENDANCE_ENTRY.getAttendanceDate(), DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public void getAttendanceDate_absentAttendanceEntry_returnsCorrectDate() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        assertEquals(ABSENT_ATTENDANCE_ENTRY.getAttendanceDate(), DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":29}},{"path":"src/test/java/seedu/address/model/attendance/PresentAttendanceEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceEntryTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"    public static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"    public static final LocalTime DROPOFF_TIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    public static final AbsentAttendanceEntry ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"        new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    // Valid attendance entries","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public static final PresentAttendanceEntry VALID_PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public void getPickUpTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"        assertEquals(VALID_PRESENT_ATTENDANCE_ENTRY.getPickUpTime(), Optional.of(PICKUP_TIME));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public void getDropOffTime() {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        assertEquals(VALID_PRESENT_ATTENDANCE_ENTRY.getDropOffTime(), Optional.of(DROPOFF_TIME));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    public void isValidTimings_validTimings_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"        assertTrue(PresentAttendanceEntry.isValidTimings(PICKUP_TIME, DROPOFF_TIME));","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"        assertTrue(PresentAttendanceEntry.isValidTimings(","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            LocalTime.of(0, 0), LocalTime.of(23, 59)));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        assertTrue(PresentAttendanceEntry.isValidTimings(null, null));","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"    public void isValidTimings_invalidTimings_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        assertFalse(PresentAttendanceEntry.isValidTimings(DROPOFF_TIME, PICKUP_TIME));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        assertFalse(PresentAttendanceEntry.isValidTimings(","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"            LocalTime.of(9, 0), LocalTime.of(9, 0)));","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        assertFalse(PresentAttendanceEntry.isValidTimings(","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"            LocalTime.of(23, 59), LocalTime.of(9, 0)","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"        ));","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry similarEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry differentDateEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY.plusDays(4), PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry differentPickUpTimeEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME.plusHours(1), DROPOFF_TIME);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        PresentAttendanceEntry differentDropOffTimeEntry \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME.plusHours(2));","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        assertTrue(VALID_PRESENT_ATTENDANCE_ENTRY.equals(VALID_PRESENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertTrue(VALID_PRESENT_ATTENDANCE_ENTRY.equals(similarEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(ABSENT_ATTENDANCE_ENTRY));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(differentDateEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(differentPickUpTimeEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        assertFalse(VALID_PRESENT_ATTENDANCE_ENTRY.equals(differentDropOffTimeEntry));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":73}},{"path":"src/test/java/seedu/address/model/filter/AppointmentContainsFilterWordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"public class AppointmentContainsFilterWordPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    private static final String DATETIME_STUB \u003d \"22-03-2022 09:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private static final String DATE_STUB \u003d \"22-03-2022\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    private static final String TODAY_LOCAL_DATE_STUB \u003d \"today\";","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    private static final String LOCATION_STUB \u003d \"NUS VET\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    public void test_appContainsDate_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"            assertTrue(predicate.test(new PetBuilder().withAppointment(DATETIME_STUB, LOCATION_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"    public void test_appDoesNotContainsDate_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"            // With appointment","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"            AppointmentContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"                    new AppointmentContainsFilterWordPredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"            assertFalse(predicate.test(new PetBuilder().withAppointment(DATETIME_STUB, LOCATION_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"            // Empty appointment","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"            assertFalse((predicate.test(new PetBuilder().build())));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":74}},{"path":"src/test/java/seedu/address/model/filter/DateContainsFilterDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"public class DateContainsFilterDatePredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    private static final String PARSE_EX_THROWN_MESSAGE \u003d \"Should not have thrown parse exception.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    private static final String DATE_STUB \u003d \"22-03-2022\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    private static final String LOCAL_DATE_STUB \u003d \"2022-03-22\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    private static final String TODAY_LOCAL_DATE_STUB \u003d \"today\";","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"    private static final String PICKUP_TIME_STUB \u003d \"09:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"    private static final String DROP_OFF_TIME_STUB \u003d \"16:00\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"            // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"            assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"            // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"            // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"            // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"            assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"    public void test_dateContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"            assertTrue(predicate.test(new PetBuilder()","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"                    .withPresentAttendanceEntry(LOCAL_DATE_STUB, PICKUP_TIME_STUB, DROP_OFF_TIME_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"    public void test_dateDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"            DateContainsFilterDatePredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"                    new DateContainsFilterDatePredicate(TODAY_LOCAL_DATE_STUB);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"            assertFalse(predicate.test(new PetBuilder()","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                    .withPresentAttendanceEntry(LOCAL_DATE_STUB, PICKUP_TIME_STUB, DROP_OFF_TIME_STUB).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"            fail(PARSE_EX_THROWN_MESSAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":73}},{"path":"src/test/java/seedu/address/model/filter/OwnerNameContainsFilterWordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"public class OwnerNameContainsFilterWordPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    private static final String firstNameKeyword \u003d \"Alice\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"    private static final String secondNameKeyword \u003d \"Pe Ter\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(secondNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"    public void test_ownerNameContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"        // Partial match: Alice Tan \u003d\u003d Alice -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        assertTrue(predicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"        // Multiple words full match per word i.e. Pe Ter Tan \u003d\u003d Pe Ter -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(secondNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        assertTrue(secondPredicate.test(new PetBuilder().withOwnerName(\"Pe Ter Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"        // Multiple words partial match per word: Peter Tera Tan \u003d\u003d Pe Ter -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(secondNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        assertTrue(thirdPredicate.test(new PetBuilder().withOwnerName(\"Peter Tera Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"        // Full match with excess filter word: Alice Tan \u003d\u003d Alice Tan Bee Bee -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword + \" Tan Bee Bee\");","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        assertTrue(fourthPredicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"        // Mixed case: Alice Tan \u003d\u003d ALiCe -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate fifthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(\"ALiCe\");","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        assertTrue(fifthPredicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"    public void test_ownerNameDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"        // No match: Peter Tan \u003d\u003d Alice -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate predicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"        assertFalse(predicate.test(new PetBuilder().withOwnerName(\"Peter Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        // Multiple words no match: Peter Tan \u003d\u003d Alice Ong -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword + \"Ong\");","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"        assertFalse(secondPredicate.test(new PetBuilder().withOwnerName(\"Peter Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"        // Multiple words partial match: Alice Tan \u003d\u003d Alice Ong -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"        OwnerNameContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"                new OwnerNameContainsFilterWordPredicate(firstNameKeyword + \"Ong\");","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"        assertFalse(thirdPredicate.test(new PetBuilder().withOwnerName(\"Alice Tan\").build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":86}},{"path":"src/test/java/seedu/address/model/filter/TagContainsFilterWordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsumian"},"content":"package seedu.address.model.filter;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tsumian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tsumian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tsumian"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tsumian"},"content":"public class TagContainsFilterWordPredicateTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tsumian"},"content":"    private static final String firstTagKeyword \u003d \"Golden Retriever\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tsumian"},"content":"    private static final String secondTagKeyword \u003d \"Beagle\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tsumian"},"content":"    public void test_equals() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(firstTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(secondTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tsumian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tsumian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(firstTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tsumian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tsumian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tsumian"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tsumian"},"content":"    public void test_tagContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tsumian"},"content":"        // Full match: Golden Retriever \u003d\u003d Golden Retriever -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(firstTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tsumian"},"content":"        assertTrue(firstPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Golden -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Golden\");","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tsumian"},"content":"        assertTrue(secondPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Retriever -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Retriever\");","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tsumian"},"content":"        assertTrue(thirdPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Gold Retri -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Gold Retri\");","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tsumian"},"content":"        assertTrue(fourthPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Gold -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate fifthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Gold\");","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tsumian"},"content":"        assertTrue(fifthPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tsumian"},"content":"        // Mixed case: Golden Retriever \u003d\u003d goLdEn ReTrieVer -\u003e true","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate sixthPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"goLdEn ReTrieVer\");","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tsumian"},"content":"        assertTrue(sixthPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tsumian"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tsumian"},"content":"    public void test_tagDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tsumian"},"content":"        // No match: Golden Retriever \u003d\u003d Beagle -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(secondTagKeyword);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tsumian"},"content":"        assertFalse(firstPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tsumian"},"content":"        // Partial match: Golden Retriever \u003d\u003d Gold Dachshund -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Gold Dachshund\");","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tsumian"},"content":"        assertFalse(secondPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tsumian"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tsumian"},"content":"        // No match: Golden Retriever \u003d\u003d Border Collie -\u003e false","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tsumian"},"content":"        TagContainsFilterWordPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tsumian"},"content":"                new TagContainsFilterWordPredicate(\"Border Collie\");","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"tsumian"},"content":"        assertFalse(thirdPredicate.test(new PetBuilder().withTags(firstTagKeyword).build()));","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"tsumian"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"tsumian"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tsumian":90}},{"path":"src/test/java/seedu/address/model/pet/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Tiffanylin21":1,"-":35}},{"path":"src/test/java/seedu/address/model/pet/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"public class AppointmentTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String RETRIEVED_APPOINTMENT_VALUE \u003d \"Mar-04-2022 09:30 AM at NUS VET\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final Appointment EMPTY_APPOINTMENT \u003d new Appointment();","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final Appointment RETRIEVED_APPOINTMENT \u003d new Appointment(RETRIEVED_APPOINTMENT_VALUE);","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null, null));","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public void isValidAppointment() {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"        // null appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidAppointment(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        // invalid appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"\")); // empty appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"Mar-04-2022 09:30 AM @ NUS VET\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"2022-Mar-04 09:30 AM at NUS VET\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"04-03-2022 09:30 AM at NUS VET\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(Appointment.isValidAppointment(\"Mar-04-2022 09:30 AM at\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"        // valid appointment","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(Appointment.isValidAppointment(RETRIEVED_APPOINTMENT_VALUE));","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(EMPTY_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(RETRIEVED_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(EMPTY_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(RETRIEVED_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(RETRIEVED_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(EMPTY_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(RETRIEVED_APPOINTMENT.compareTo(EMPTY_APPOINTMENT) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(EMPTY_APPOINTMENT.compareTo(RETRIEVED_APPOINTMENT) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":51}},{"path":"src/test/java/seedu/address/model/pet/AttendanceHashMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AttendanceEntry;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"public class AttendanceHashMapTest {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private static final LocalDate DATE_TODAY \u003d LocalDate.now();","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    private static final LocalDate DATE_TOMORROW \u003d DATE_TODAY.plusDays(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"    private static final LocalTime PICKUP_TIME \u003d LocalTime.of(9, 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    private static final LocalTime DROPOFF_TIME \u003d LocalTime.of(17, 30);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    private static final PresentAttendanceEntry presentAttendanceEntryWithTransport \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"        new PresentAttendanceEntry(DATE_TODAY, PICKUP_TIME, DROPOFF_TIME);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"    private static final AbsentAttendanceEntry absentAttendanceEntry \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"        new AbsentAttendanceEntry(DATE_TODAY);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    private static final PresentAttendanceEntry presentAttendanceEntryWithoutTransport \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        new PresentAttendanceEntry(DATE_TODAY, null, null);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap emptyAttendanceHashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap presentEntryAttendanceHashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static AttendanceHashMap absentEntryAttendanceHashMap;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    @BeforeAll","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    static void setupAttendanceHashMaps() {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        emptyAttendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e tempPresentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"        tempPresentHashMap.put(DATE_TODAY, presentAttendanceEntryWithTransport);","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        presentEntryAttendanceHashMap \u003d new AttendanceHashMap(tempPresentHashMap);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        HashMap\u003cLocalDate, AttendanceEntry\u003e tempAbsentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        tempAbsentHashMap.put(DATE_TODAY, absentAttendanceEntry);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tobihy"},"content":"        absentEntryAttendanceHashMap \u003d new AttendanceHashMap(tempAbsentHashMap);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tobihy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AttendanceHashMap(null));","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tobihy"},"content":"    public void containsAttendance() {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tobihy"},"content":"        // Attendance hash map with present entry that has transport arrangement","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tobihy"},"content":"        assertTrue(presentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"        assertFalse(presentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithoutTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tobihy"},"content":"        assertFalse(presentEntryAttendanceHashMap.containsAttendance(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"tobihy"},"content":"        // Empty attendance hash map","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"tobihy"},"content":"        assertFalse(emptyAttendanceHashMap.containsAttendance(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"tobihy"},"content":"        assertFalse(emptyAttendanceHashMap.containsAttendance(presentAttendanceEntryWithoutTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"tobihy"},"content":"        assertFalse(emptyAttendanceHashMap.containsAttendance(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        // Attendance hash map with absent entry","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"        assertTrue(absentEntryAttendanceHashMap.containsAttendance(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"tobihy"},"content":"        assertFalse(absentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"tobihy"},"content":"        assertFalse(absentEntryAttendanceHashMap.containsAttendance(presentAttendanceEntryWithoutTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"tobihy"},"content":"    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tobihy"},"content":"    public void getAttendance() {","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tobihy"},"content":"        // Successful retrieval of attendance entry","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"        assertEquals(presentEntryAttendanceHashMap.getAttendance(DATE_TODAY),","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tobihy"},"content":"            Optional.of(presentAttendanceEntryWithTransport));","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tobihy"},"content":"        assertEquals(absentEntryAttendanceHashMap.getAttendance(DATE_TODAY),","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tobihy"},"content":"            Optional.of(absentAttendanceEntry));","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tobihy"},"content":"        // No entry retrieved.","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tobihy"},"content":"        assertEquals(emptyAttendanceHashMap.getAttendance(DATE_TODAY), Optional.empty());","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tobihy"},"content":"        assertEquals(presentEntryAttendanceHashMap.getAttendance(DATE_TOMORROW), Optional.empty());","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"tobihy"},"content":"        assertEquals(absentEntryAttendanceHashMap.getAttendance(DATE_TOMORROW), Optional.empty());","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tobihy":87}},{"path":"src/test/java/seedu/address/model/pet/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        // Keywords match phone, ownerName and address, but does not match name","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Alice\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alix Yeo\").withPhone(\"12345\")","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"                .withOwnerName(\"Alice Yeo\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tiffanylin21":13,"-":62}},{"path":"src/test/java/seedu/address/model/pet/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_1 \u003d \"MOJO\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_2 \u003d \"PIKA\";","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_3 \u003d \"APPLE\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final String PET_NAME_4 \u003d \"APPO\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_1.compareTo(PET_NAME_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_2.compareTo(PET_NAME_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_3.compareTo(PET_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_1.compareTo(PET_NAME_2) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_2.compareTo(PET_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_3.compareTo(PET_NAME_1) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_1.compareTo(PET_NAME_2) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_2.compareTo(PET_NAME_3) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_3.compareTo(PET_NAME_1) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(PET_NAME_4.compareTo(PET_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_4.compareTo(PET_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(PET_NAME_3.compareTo(PET_NAME_4) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Dineshraj555":24,"Tiffanylin21":1,"-":39}},{"path":"src/test/java/seedu/address/model/pet/OwnerNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"public class OwnerNameTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_1 \u003d \"Lau Low\";","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_2 \u003d \"Zack\";","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_3 \u003d \"Adam\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    public static final String OWNER_NAME_4 \u003d \"Ah Tan\";","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OwnerName(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    public void constructor_invalidOwnerName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"        String invalidOwnerName \u003d \"\";","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OwnerName(invalidOwnerName));","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    public void isValidOwnerName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"        // null ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e OwnerName.isValidOwnerName(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"        // invalid ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"\")); // empty string","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\" \")); // spaces only","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(OwnerName.isValidOwnerName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        // valid ownerName","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(OwnerName.isValidOwnerName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"    public void compareTo() {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_1.compareTo(OWNER_NAME_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_2.compareTo(OWNER_NAME_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_3.compareTo(OWNER_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_1.compareTo(OWNER_NAME_2) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_2.compareTo(OWNER_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_3.compareTo(OWNER_NAME_1) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_1.compareTo(OWNER_NAME_2) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_2.compareTo(OWNER_NAME_3) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_3.compareTo(OWNER_NAME_1) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Dineshraj555"},"content":"        assertFalse(OWNER_NAME_4.compareTo(OWNER_NAME_3) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_4.compareTo(OWNER_NAME_3) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(OWNER_NAME_3.compareTo(OWNER_NAME_4) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":24,"Tiffanylin21":40}},{"path":"src/test/java/seedu/address/model/pet/PetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB_WITH_SPACES;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"public class PetTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e pet.getTags().remove(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public void isSamePet() {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.isSamePet(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.isSamePet(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withPhone(VALID_PHONE_BOB).withOwnerName(VALID_OWNER_NAME_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.isSamePet(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.isSamePet(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedBob \u003d new PetBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        assertTrue(BOB.isSamePet(editedBob));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        editedBob \u003d new PetBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOB.isSamePet(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        // name has duplicate spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        String nameWithDuplicateSpaces \u003d VALID_NAME_BOB_WITH_SPACES;","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        editedBob \u003d new PetBuilder(BOB).withName(nameWithDuplicateSpaces).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOB.isSamePet(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        Pet aliceCopy \u003d new PetBuilder(BOBA).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.equals(aliceCopy));","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(BOBA.equals(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(5));","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        // different pet -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(BOB));","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"Dineshraj555"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withOwnerName(VALID_OWNER_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        editedAlice \u003d new PetBuilder(BOBA).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(BOBA.equals(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Dineshraj555":3,"Tiffanylin21":39,"-":53,"tobihy":2}},{"path":"src/test/java/seedu/address/model/pet/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Tiffanylin21":1,"-":39}},{"path":"src/test/java/seedu/address/model/pet/UniquePetListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOBA;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.exceptions.PetNotFoundException;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"public class UniquePetListTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    private final UniquePetList uniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public void contains_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.contains(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    public void contains_petNotInList_returnsFalse() {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        assertFalse(uniquePetList.contains(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"    public void contains_petInList_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(uniquePetList.contains(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"    public void contains_petWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"tobihy"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOBA).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        assertTrue(uniquePetList.contains(editedAlice));","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"    public void add_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.add(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public void add_duplicatePet_throwsDuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.add(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_nullTargetPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPet(null, BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_nullEditedPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPet(BOBA, null));","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_targetPetNotInList_throwsPetNotFoundException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(PetNotFoundException.class, () -\u003e uniquePetList.setPet(BOBA, BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_editedPetIsSamePet_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.setPet(BOBA, BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        expectedUniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_editedPetHasSameIdentity_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"        Pet editedAlice \u003d new PetBuilder(BOBA).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"                .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.setPet(BOBA, editedAlice);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"        expectedUniquePetList.add(editedAlice);","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_editedPetHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.setPet(BOBA, BOB);","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"        expectedUniquePetList.add(BOB);","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_editedPetHasNonUniqueIdentity_throwsDuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOB);","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.setPet(BOBA, BOB));","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Tiffanylin21"},"content":"    public void remove_nullPet_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.remove(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"    public void remove_petDoesNotExist_throwsPetNotFoundException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(PetNotFoundException.class, () -\u003e uniquePetList.remove(BOBA));","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"Tiffanylin21"},"content":"    public void remove_existingPet_removesPet() {","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.remove(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"Tiffanylin21"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPet_nullUniquePetList_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPets((UniquePetList) null));","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets_uniquePetList_replacesOwnListWithProvidedUniquePetList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"Tiffanylin21"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"Tiffanylin21"},"content":"        expectedUniquePetList.add(BOB);","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.setPets(expectedUniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPets((List\u003cPet\u003e) null));","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.add(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e petList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"Tiffanylin21"},"content":"        uniquePetList.setPets(petList);","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"Tiffanylin21"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"Tiffanylin21"},"content":"        expectedUniquePetList.add(BOB);","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"Tiffanylin21"},"content":"    public void setPets_listWithDuplicatePets_throwsDuplicatePetException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"Tiffanylin21"},"content":"        List\u003cPet\u003e listWithDuplicatePets \u003d Arrays.asList(BOBA, BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.setPets(listWithDuplicatePets));","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"Tiffanylin21"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"Tiffanylin21"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"Tiffanylin21"},"content":"            -\u003e uniquePetList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Tiffanylin21":169,"tobihy":3}},{"path":"src/test/java/seedu/address/model/pet/comparator/PetDropOffTimeComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.model.pet.comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"public class PetDropOffTimeComparatorTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private PetDropOffTimeComparator comparator \u003d new PetDropOffTimeComparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    public void compare() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"        // compare pet with itself","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets without transport timing against themselves","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets with transport timing against pets without transport timing","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets with different transport timing against themselves","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":52}},{"path":"src/test/java/seedu/address/model/pet/comparator/PetPickUpTimeComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.model.pet.comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_ABSENT_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_MISSING_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.testutil.ComparatorUtil.PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"public class PetPickUpTimeComparatorTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"    private PetPickUpTimeComparator comparator \u003d new PetPickUpTimeComparator();","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    public void compare() {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"        // compare pet with itself","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets without transport timing against themselves","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_MISSING_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_ABSENT_ATTENDANCE_ENTRY,","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets with transport timing against pets without transport timi","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_ABSENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_MISSING_ATTENDANCE_ENTRY) \u003d\u003d -1);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Dineshraj555"},"content":"        // compare pets with different transport timing against themselves","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1,","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2) \u003c 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"        assertTrue(comparator.compare(PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2,","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Dineshraj555"},"content":"                PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1) \u003e 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":53}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.storage.JsonAdaptedPet.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.PIZZA;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"public class JsonAdaptedPetTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"    private static final String INVALID_OWNER_NAME \u003d \"S@arah\";","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String VALID_NAME \u003d PIZZA.getName().toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String VALID_PHONE \u003d PIZZA.getPhone().toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    private static final String VALID_OWNER_NAME \u003d PIZZA.getOwnerName().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    private static final String VALID_ADDRESS \u003d PIZZA.getAddress().toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"soloplxya"},"content":"    private static final String VALID_DIET \u003d PIZZA.getDiet().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"    private static final String VALID_APPOINTMENT \u003d PIZZA.getAppointment().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d PIZZA.getTags().stream()","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"    private static final List\u003cJsonAdaptedAttendance\u003e VALID_ATTENDANCE_MAP \u003d PIZZA.getAttendanceHashMap()","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            .toCollection()","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"            .stream()","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_validPetDetails_returnsPet() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(PIZZA);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(PIZZA, pet.toModelType());","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(INVALID_NAME, VALID_PHONE, VALID_OWNER_NAME, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(null, VALID_PHONE, VALID_OWNER_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"tobihy"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, INVALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, null,","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"tobihy"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_invalidOwnerName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, INVALID_OWNER_NAME, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d OwnerName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_nullOwnerName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Dineshraj555"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_NAME, null, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"tobihy"},"content":"                VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OwnerName.class.getSimpleName());","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, VALID_PHONE, INVALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"tobihy"},"content":"                        VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"soloplxya"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME,","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"tobihy"},"content":"                VALID_PHONE, null, VALID_TAGS, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Tiffanylin21"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"                new JsonAdaptedPet(VALID_NAME, VALID_OWNER_NAME, VALID_PHONE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"tobihy"},"content":"                        invalidTags, VALID_DIET, VALID_APPOINTMENT, VALID_ATTENDANCE_MAP);","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(IllegalValueException.class, pet::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dineshraj555":9,"Tiffanylin21":32,"-":67,"soloplxya":5,"tobihy":14}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.BOBA;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.HOON;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.IDA;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    public void readAddressBook_invalidPetAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPetsAddressBook.json\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"    public void readAddressBook_invalidAndValidPetAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPetAddressBook.json\"));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        original.addPet(HOON);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        original.removePet(BOBA);","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"        original.addPet(IDA);","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tiffanylin21":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.testutil.SimilarPets;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.testutil.TypicalPets;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"    private static final Path TYPICAL_PETS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPetsAddressBook.json\");","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"    private static final Path INVALID_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPetsAddressBook.json\");","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    private static final Path SIMILAR_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"similarPetsAddressBook.json\");","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_typicalPetsFile_success() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PETS_FILE,","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        AddressBook typicalPetsAddressBook \u003d TypicalPets.getTypicalAddressBook();","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"        assertEquals(addressBookFromFile, typicalPetsAddressBook);","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    public void toModelType_invalidPetFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PET_FILE,","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    public void toModelType_sameNamePetsDifferentOwner_success() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(SIMILAR_PET_FILE,","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"        AddressBook similarPetsAddressBook \u003d SimilarPets.getSimilarAddressBook();","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"        assertEquals(addressBookFromFile, similarPetsAddressBook);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tiffanylin21":9,"-":33,"tobihy":7}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalAddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AbsentAttendanceDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.AbsentAttendanceCommand.AbsentAttendanceDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"public class AbsentAttendanceDescriptorBuilder {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"    private AbsentAttendanceDescriptor descriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceDescriptorBuilder() {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"        descriptor \u003d new AbsentAttendanceDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"     * Sets the attendance date of the {@code AbsentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"        descriptor.setAttendanceDate(LocalDate.parse(date));","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"    public AbsentAttendanceDescriptor build() {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        return descriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tobihy":26}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":" * A utility class to help with building AddressBook objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPet(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     * Adds a new {@code Pet} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    public AddressBookBuilder withPet(Pet pet) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        addressBook.addPet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":3,"-":28,"tobihy":3}},{"path":"src/test/java/seedu/address/testutil/ComparatorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dineshraj555"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Dineshraj555"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":" * A utility class to assist with the testing of PetDropOffTimeComparator and PetPickUpTimeComparator.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Dineshraj555"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Dineshraj555"},"content":"public class ComparatorUtil {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_MISSING_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().build();","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_DATE \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_PICK_UP_1 \u003d \"08:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_DROP_OFF_1 \u003d \"21:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_PICK_UP_2 \u003d \"10:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Dineshraj555"},"content":"    private static final String TEST_DROP_OFF_2 \u003d \"20:30\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_ABSENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withAbsentAttendanceEntry(TEST_DATE).build();","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_PRESENT_ATTENDANCE_ENTRY \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withPresentAttendanceEntry(TEST_DATE).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_1 \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withPresentAttendanceEntry(TEST_DATE, TEST_PICK_UP_1, TEST_DROP_OFF_1).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Dineshraj555"},"content":"    public static final Pet PET_WITH_PRESENT_ATTENDANCE_ENTRY_AND_TRANSPORT_TIMING_2 \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Dineshraj555"},"content":"            new PetBuilder().withPresentAttendanceEntry(TEST_DATE, TEST_PICK_UP_2, TEST_DROP_OFF_2).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Dineshraj555":29}},{"path":"src/test/java/seedu/address/testutil/EditPetDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class to help with building EditPetDescriptor objects.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"public class EditPetDescriptorBuilder {","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"    private EditPetDescriptor descriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder() {","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditCommand.EditPetDescriptor();","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder(EditCommand.EditPetDescriptor descriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"        this.descriptor \u003d new EditPetDescriptor(descriptor);","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns an {@code EditPetDescriptor} with fields containing {@code pet}\u0027s details","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setName(pet.getName());","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setPhone(pet.getPhone());","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setOwnerName(pet.getOwnerName());","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setAddress(pet.getAddress());","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setTags(pet.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"soloplxya"},"content":"        descriptor.setDiet(pet.getDiet());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"Dineshraj555"},"content":"        descriptor.setAppointment(pet.getAppointment());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Name} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Phone} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code OwnerName} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withOwnerName(String ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setOwnerName(new OwnerName(ownerName));","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Address} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPetDescriptor}","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"     * that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    public EditPetDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"    public EditCommand.EditPetDescriptor build() {","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"        return descriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":1,"Tiffanylin21":88,"soloplxya":2}},{"path":"src/test/java/seedu/address/testutil/PetBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.AbsentAttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.attendance.PresentAttendanceEntry;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Dineshraj555"},"content":"import seedu.address.model.pet.Appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.AttendanceHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"soloplxya"},"content":"import seedu.address.model.pet.Diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class to help with building Pet objects.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"public class PetBuilder {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Dineshraj555"},"content":"    public static final String DEFAULT_OWNER_NAME \u003d \"Emma Lee\";","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"soloplxya"},"content":"    public static final String DEFAULT_DIET \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"    private Name name;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"    private OwnerName ownerName;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Dineshraj555"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Tiffanylin21"},"content":"    private Address address;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"soloplxya"},"content":"    private Diet diet;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Dineshraj555"},"content":"    private Appointment appointment;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    private final AttendanceHashMap attendanceHashMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"     * Creates a {@code PetBuilder} with the default details.","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder() {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Tiffanylin21"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Dineshraj555"},"content":"        ownerName \u003d new OwnerName(DEFAULT_OWNER_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Tiffanylin21"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"soloplxya"},"content":"        diet \u003d new Diet(DEFAULT_DIET);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"Dineshraj555"},"content":"        appointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap \u003d new AttendanceHashMap();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"     * Initializes the PetBuilder with the data of {@code petToCopy}.","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder(Pet petToCopy) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Tiffanylin21"},"content":"        name \u003d petToCopy.getName();","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"        ownerName \u003d petToCopy.getOwnerName();","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Dineshraj555"},"content":"        phone \u003d petToCopy.getPhone();","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"        address \u003d petToCopy.getAddress();","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"soloplxya"},"content":"        diet \u003d petToCopy.getDiet();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"Dineshraj555"},"content":"        appointment \u003d petToCopy.getAppointment();","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"        tags \u003d new HashSet\u003c\u003e(petToCopy.getTags());","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap \u003d petToCopy.getAttendanceHashMap();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Name} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withName(String name) {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Address} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withAddress(String address) {","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Tiffanylin21"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code Phone} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Tiffanylin21"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Tiffanylin21"},"content":"     * Sets the {@code OwnerName} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Tiffanylin21"},"content":"    public PetBuilder withOwnerName(String ownerName) {","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Tiffanylin21"},"content":"        this.ownerName \u003d new OwnerName(ownerName);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Tiffanylin21"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"soloplxya"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"soloplxya"},"content":"     * Sets the {@code Diet} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"soloplxya"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"soloplxya"},"content":"    public PetBuilder withDiet(String diet) {","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"soloplxya"},"content":"        this.diet \u003d new Diet(diet);","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"soloplxya"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"soloplxya"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"Dineshraj555"},"content":"     * Sets the {@code Appointment} of the {@code Pet} that we are building to be empty.","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"Dineshraj555"},"content":"    public PetBuilder withAppointment() {","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d new Appointment();","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"Dineshraj555"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"Dineshraj555"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"Dineshraj555"},"content":"     * Sets the {@code Appointment} of the {@code Pet} that we are building with the input.","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"Dineshraj555"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"Dineshraj555"},"content":"    public PetBuilder withAppointment(String dateTime, String location) {","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"Dineshraj555"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"Dineshraj555"},"content":"        LocalDateTime formattedDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"Dineshraj555"},"content":"        this.appointment \u003d new Appointment(formattedDateTime, location);","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"Dineshraj555"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"Dineshraj555"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"Dineshraj555"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"tobihy"},"content":"     * Sets the {@code PresentAttendanceEntry} of the {@code Pet} that we are building,","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tobihy"},"content":"     * including transport arrangements.","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"tobihy"},"content":"    public PetBuilder withPresentAttendanceEntry(String attendanceDate, String pickUpTime, String dropOffTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.addAttendance(","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"tobihy"},"content":"                LocalDate.parse(attendanceDate),","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"tobihy"},"content":"                LocalTime.parse(pickUpTime),","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"tobihy"},"content":"                LocalTime.parse(dropOffTime)));","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tobihy"},"content":"     * Sets the {@code PresentAttendanceEntry} of the {@code Pet} that we are building,","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tobihy"},"content":"     * excluding transport arrangements.","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tobihy"},"content":"    public PetBuilder withPresentAttendanceEntry(String attendanceDate) {","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.addAttendance(","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tobihy"},"content":"            new PresentAttendanceEntry(","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tobihy"},"content":"                LocalDate.parse(attendanceDate),","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tobihy"},"content":"                null,","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"tobihy"},"content":"                null","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"tobihy"},"content":"            )","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"tobihy"},"content":"     * Sets the {@code AbsentAttendanceEntry} of the {@code Pet} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"tobihy"},"content":"    public PetBuilder withAbsentAttendanceEntry(String attendanceDate) {","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"tobihy"},"content":"        attendanceHashMap.addAttendance(","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"tobihy"},"content":"            new AbsentAttendanceEntry(","lastModifiedDate":"2022-03-20"},{"lineNumber":171,"author":{"gitId":"tobihy"},"content":"                LocalDate.parse(attendanceDate)","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"tobihy"},"content":"            )","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"tobihy"},"content":"        );","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"tobihy"},"content":"     * Builds the {@code Pet} object with the data in the builder.","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"tobihy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"tobihy"},"content":"     * @return a Pet object.","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"Tiffanylin21"},"content":"    public Pet build() {","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"tobihy"},"content":"        return new Pet(name, ownerName, phone, address, tags, diet, appointment, attendanceHashMap);","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":26,"Tiffanylin21":91,"soloplxya":13,"tobihy":56}},{"path":"src/test/java/seedu/address/testutil/PetUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"soloplxya"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class for Pet.","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"public class PetUtil {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns an add command string for adding the {@code pet}.","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"    public static String getAddCommand(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Tiffanylin21"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPetDetails(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the part of command string for the given {@code pet}\u0027s details.","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    public static String getPetDetails(Pet pet) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"        sb.append(PREFIX_NAME + pet.getName().fullName + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"        sb.append(PREFIX_PHONE + pet.getPhone().value + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Dineshraj555"},"content":"        sb.append(PREFIX_OWNER_NAME + pet.getOwnerName().value + \" \");","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"        sb.append(PREFIX_ADDRESS + pet.getAddress().value + \" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        pet.getTags().stream().forEach(","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the part of command string for the given {@code EditPetDescriptor}\u0027s details.","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"    public static String getEditPetDescriptorDetails(EditCommand.EditPetDescriptor descriptor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Dineshraj555"},"content":"        descriptor.getOwnerName().ifPresent(ownerName -\u003e sb.append(PREFIX_OWNER_NAME).append(ownerName.value)","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":3,"Tiffanylin21":16,"-":44,"soloplxya":2}},{"path":"src/test/java/seedu/address/testutil/PresentAttendanceDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"import seedu.address.logic.commands.PresentAttendanceCommand.PresentAttendanceDescriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":" * A utility class to help with building PresentAttendanceDescriptor objects.","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"public class PresentAttendanceDescriptorBuilder {","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"    private PresentAttendanceDescriptor descriptor;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder() {","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"        descriptor \u003d new PresentAttendanceDescriptor();","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"     * Sets the attendance date of the {@code PresentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"tobihy"},"content":"        descriptor.setAttendanceDate(LocalDate.parse(date));","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"     * Sets the pick-up time of the {@code PresentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder withPickUpTime(String pickUpTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"        descriptor.setPickUpTime(LocalTime.parse(pickUpTime));","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"     * Sets the drop-off time of the {@code PresentAttendanceDescriptorBuilder} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptorBuilder withDropOffTime(String dropOffTime) {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"        descriptor.setDropOffTime(LocalTime.parse(dropOffTime));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"    public PresentAttendanceDescriptor build() {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tobihy"},"content":"        return descriptor;","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"tobihy":46}},{"path":"src/test/java/seedu/address/testutil/SimilarPets.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tobihy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"tobihy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"tobihy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"tobihy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"tobihy"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"tobihy"},"content":"public class SimilarPets {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final Pet WAFFLE \u003d new PetBuilder().withName(\"Waffle\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"tobihy"},"content":"            .withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"tobihy"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"tobihy"},"content":"            .withDiet(\"cute oranges\")","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Dineshraj555"},"content":"            .withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tobihy"},"content":"    public static final Pet ANOTHER_WAFFLE \u003d new PetBuilder().withName(\"Waffle\").withAddress(\"4th street\")","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"tobihy"},"content":"            .withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tobihy"},"content":"            .withPhone(\"88887778\")","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"tobihy"},"content":"            .withDiet(\"cute apples\")","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Dineshraj555"},"content":"            .withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tobihy"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"tobihy"},"content":"    private SimilarPets() {} // prevents instantiation","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tobihy"},"content":"     * Returns an {@code AddressBook} with all the similar pets.","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"tobihy"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"tobihy"},"content":"    public static AddressBook getSimilarAddressBook() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"tobihy"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tobihy"},"content":"        for (Pet pet : getSimilarPets()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tobihy"},"content":"            ab.addPet(pet);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"tobihy"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"        return ab;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"    public static List\u003cPet\u003e getSimilarPets() {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WAFFLE, ANOTHER_WAFFLE));","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tobihy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"tobihy"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Dineshraj555":2,"tobihy":40}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the middle index of the pet in the {@code model}\u0027s pet list.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Tiffanylin21"},"content":"        return Index.fromOneBased(model.getFilteredPetList().size() / 2);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the last index of the pet in the {@code model}\u0027s pet list.","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"        return Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns the pet in the {@code model}\u0027s pet list at {@code index}.","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    public static Pet getPet(Model model, Index index) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"        return model.getFilteredPetList().get(index.getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tiffanylin21":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Index INDEX_FIRST_PET \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Index INDEX_SECOND_PET \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Index INDEX_THIRD_PET \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"tobihy"},"content":"    public static final Index INDEX_FOURTH_PET \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Tiffanylin21":3,"-":9,"tobihy":1}},{"path":"src/test/java/seedu/address/testutil/TypicalPets.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tiffanylin21"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_AMY;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"Dineshraj555"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OWNER_NAME_BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Tiffanylin21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"tobihy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Tiffanylin21"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Tiffanylin21"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Tiffanylin21"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Tiffanylin21"},"content":" * A utility class containing a list of {@code Pet} objects to be used in tests.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Tiffanylin21"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Tiffanylin21"},"content":"public class TypicalPets {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"tobihy"},"content":"    public static final String DATE_TODAY \u003d LocalDate.now().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tobihy"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet BOBA \u003d new PetBuilder().withName(\"Boba\")","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Tiffanylin21"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Tiffanylin21"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Dineshraj555"},"content":"            .withTags(\"friends\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet PIZZA \u003d new PetBuilder().withName(\"Pizza\")","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Tiffanylin21"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Tiffanylin21"},"content":"            .withOwnerName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"tobihy"},"content":"            .withTags(\"owesMoney\", \"friends\").withDiet(\"\").withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tobihy"},"content":"            .withPresentAttendanceEntry(DATE_TODAY, \"09:00\", \"17:30\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet BAGEL \u003d new PetBuilder().withName(\"Bagel\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"tobihy"},"content":"            .withOwnerName(\"Heinz Ketchup\").withAddress(\"wall street\").withDiet(\"\").withAppointment()","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tobihy"},"content":"            .withAbsentAttendanceEntry(DATE_TODAY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet DANIEL \u003d new PetBuilder().withName(\"Peepee\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"Daniel Meier\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"tobihy"},"content":"            .withDiet(\"\").withAppointment().withPresentAttendanceEntry(DATE_TODAY).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet PANCAKE \u003d new PetBuilder().withName(\"Pancake\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"Elle Meyer\").withAddress(\"michegan ave\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet WAFFLE \u003d new PetBuilder().withName(\"Waffle\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"Fiona Kunz\").withAddress(\"little tokyo\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet TOFU \u003d new PetBuilder().withName(\"Tofu\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(\"George Best\").withAddress(\"4th street\").withDiet(\"\").withAppointment().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Tiffanylin21"},"content":"    // Manually added","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet HOON \u003d new PetBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Tiffanylin21"},"content":"            .withOwnerName(\"Stefan Sim\").withAddress(\"little india\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet IDA \u003d new PetBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Tiffanylin21"},"content":"            .withOwnerName(\"Han Solo\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Tiffanylin21"},"content":"    // Manually added - Pet\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet AMY \u003d new PetBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(VALID_OWNER_NAME_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Tiffanylin21"},"content":"    public static final Pet BOB \u003d new PetBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Dineshraj555"},"content":"            .withOwnerName(VALID_OWNER_NAME_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"Tiffanylin21"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Tiffanylin21"},"content":"            .build();","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Tiffanylin21"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Tiffanylin21"},"content":"    private TypicalPets() {} // prevents instantiation","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Tiffanylin21"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Tiffanylin21"},"content":"     * Returns an {@code AddressBook} with all the typical pets.","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Tiffanylin21"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Tiffanylin21"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Tiffanylin21"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Tiffanylin21"},"content":"        for (Pet pet : getTypicalPets()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Tiffanylin21"},"content":"            ab.addPet(pet);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Tiffanylin21"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Tiffanylin21"},"content":"        return ab;","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Tiffanylin21"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Tiffanylin21"},"content":"    public static List\u003cPet\u003e getTypicalPets() {","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Tiffanylin21"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BOBA, PIZZA, BAGEL, DANIEL, PANCAKE, WAFFLE, TOFU));","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Tiffanylin21"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Tiffanylin21"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Dineshraj555":9,"Tiffanylin21":66,"tobihy":8}}]
