[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"# Reache","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"_Reache_ is a desktop app that helps **busy working professionals** manage their large list of contacts by providing an easy-to-use interface to store contacts and organize meetings. _Reache_ is especially suited for professionals who would like to optimize their contact management by using a **Command Line Interface (CLI)**.","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"## Quick Start","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"1. Ensure you have Java 11 installed on your computer.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    1. Open the Terminal (Mac/Linux users) or the Command Prompt (Windows User) and run `java -version`.","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"    2. If you do not have Java 11 installed, follow the guide given [here](https://java.com/en/download/help/download_options.html).","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"2. Download the latest reache.jar from [here](https://github.com/AY2122S2-CS2103T-W12-4/tp/releases).","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for _Reache_.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"_This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"ckcherry23":13,"NicsunXnus":1,"-":4,"tonishka":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"    archiveName \u003d \u0027reache.jar\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"tonishka"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tonishka"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":73,"tonishka":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Charisma Kausar","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"\u003cimg src\u003d\"images/ckcherry23.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"[[homepage](https://ckcherry23.github.io)]","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"[[github](https://github.com/ckcherry23)]","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"[[portfolio](team/ckcherry23.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"* Role: Developer","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"* Responsibilities: In-charge of **Storage** and **Commons**","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"### Murad Durrani","lastModifiedDate":"2022-02-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"\u003cimg src\u003d\"images/muraddurrani.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"[[github](http://github.com/muraddurrani)]","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"[[portfolio](team/muraddurrani.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"* Responsibilities: In-charge of **Model** and **UI**","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Tonishka Singh","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"\u003cimg src\u003d\"images/tonishka.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"[[github](http://github.com/tonishka)] [[portfolio](team/tonishka.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"* Responsibilities: In-charge of **Main** and **Testing**","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Nicholas Sun","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"\u003cimg src\u003d\"images/nicsunxnus.png\" width\u003d\"200px\" height\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"[[github](http://github.com/NicsunXnus)]","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"[[portfolio](team/nicsunxnus.md)]","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"* Role: Developer","lastModifiedDate":"2022-03-04"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"* Responsibilities: In-charge of **Parser** and **Commands**","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"ckcherry23":6,"NicsunXnus":5,"muraddurrani":5,"-":30,"tonishka":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"NicsunXnus"},"content":"### Edit feature","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"NicsunXnus"},"content":"The edit mechanism is a feature used to change the details of the contacts. It is only allowed in the application after initiating an add command or view command and in other words, it is functional only in the contact details windows. It is facilitated mainly by the `ContactDetailsParser`, `EditCommandParser` and `EditCommand` classes.","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"NicsunXnus"},"content":"The following sequence diagram shows how the edit operation works:","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"NicsunXnus"},"content":"![EditCommandSequenceDiagram](images/EditCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"NicsunXnus"},"content":"- Here, the user executes an add command which takes in a new name input \"Jack\" which is tagged with a prefix \"n/\" for input type identification.","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"NicsunXnus"},"content":"- If a user were to execute a view command instead, the only difference would be that the editing is done on an existing contact instead of a new one.","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"NicsunXnus"},"content":"![DetailedParsingForEditSequenceDiagram](images/DetailedParsingForEditSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"NicsunXnus"},"content":"Below is an activity diagram summarising the possible paths for an edit command:","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"NicsunXnus"},"content":"![EditActivityDiagram](images/EditActivityDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"NicsunXnus"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"NicsunXnus"},"content":"**Aspect: How edit saves:**","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"NicsunXnus"},"content":"* **Alternative 1 (current choice):** Each edit is saved immediately.","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"NicsunXnus"},"content":"    * Pros: Prevents data loss from system crashes.","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"NicsunXnus"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"NicsunXnus"},"content":"* **Alternative 2 :** All edits are saved only after executing a save command (not implemented feature).","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"    * Pros: Allows user to revert their changes","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"    * Cons: System crashes will not save the edits.","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"### Delete fields feature","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"The **delete fields** feature can be used to delete fields stored for the contacts. ","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"ckcherry23"},"content":"This feature is also restricted to the Contact Details screen (in _edit_ mode), ","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"which can be accessed after the _add_ or _view_ commands. ","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"It is mainly facilitated by the `ContactDetailsParser`, `DeleteFieldCommandParser` and `DeleteFieldCommand` classes.","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"\u003cins\u003eNote\u003c/ins\u003e: This feature is different from the **delete contacts** feature, ","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"which is only accessible on the Person Details screen (in _default_ mode).","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"The _delete fields_ operation works similar to the _edit_ operation, except for:","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"ckcherry23"},"content":"1. the deletion functionality ","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"ckcherry23"},"content":"2. the parsing of the command","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"The deletion functionality sets the fields to return to their initial empty values.","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":"It is illustrated in the code snippets below:","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"```java","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"    // Single-valued fields","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"    if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"        deleteFieldDescriptor.setCompany(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"```java","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"    // Multi-valued fields","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"ckcherry23"},"content":"    if (deleteFieldDescriptor.getNumbers().isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"        Collection\u003cString\u003e numbersToBeDeleted \u003d argMultimap.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"ckcherry23"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(numbersToBeDeleted);","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"ckcherry23"},"content":"    ","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":"        if (CollectionUtil.hasEmptyString(numbersToBeDeleted)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"            deleteFieldDescriptor.setNumbers(new HashMap\u003cString, Phone\u003e());","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"ckcherry23"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"ckcherry23"},"content":"            Map\u003cString, Phone\u003e numbers \u003d new HashMap\u003c\u003e(deleteFieldDescriptor.getNumbers()","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"ckcherry23"},"content":"                    .orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"ckcherry23"},"content":"            numbersToBeDeleted.forEach(numbers::remove);","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":"            deleteFieldDescriptor.setNumbers(numbers);","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"ckcherry23"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":"Since certain fields allow for multiple values to be stored, ","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"the user needs to specify the label of the value (or the value itself for non-labelled fields) ","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"they want to delete along with the field to be deleted for such fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"ckcherry23"},"content":"**Aspect: What happens when the user does not specify a label or value:**","lastModifiedDate":"2022-03-22"},{"lineNumber":230,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":231,"author":{"gitId":"ckcherry23"},"content":"* **Alternative 1 (current choice):** Delete all the values stored for this field immediately.","lastModifiedDate":"2022-03-22"},{"lineNumber":232,"author":{"gitId":"ckcherry23"},"content":"    * Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"ckcherry23"},"content":"      * Seems to be the most intuitive approach.","lastModifiedDate":"2022-03-22"},{"lineNumber":234,"author":{"gitId":"ckcherry23"},"content":"      * Easier to implement.","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"ckcherry23"},"content":"      * Faster to execute command.","lastModifiedDate":"2022-03-22"},{"lineNumber":236,"author":{"gitId":"ckcherry23"},"content":"    * Cons:","lastModifiedDate":"2022-03-22"},{"lineNumber":237,"author":{"gitId":"ckcherry23"},"content":"      * User may have forgotten to mention the label or field, which could lead to unintended loss of data.","lastModifiedDate":"2022-03-22"},{"lineNumber":238,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"ckcherry23"},"content":"* **Alternative 2 :** Confirm that the user wants to delete all values for this field","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"ckcherry23"},"content":"    * Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"ckcherry23"},"content":"      * Allows user to cancel the command if it was unintentional.","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"ckcherry23"},"content":"    * Cons:","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"ckcherry23"},"content":"      * Slower to execute command.","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"ckcherry23"},"content":"      * Difficult to implement, since the current implementation does not store command history.","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"ckcherry23"},"content":"We picked _alternative 1_ since the focus of our CLI app is on speed and efficiency. Additionally, _alternative 2_ required a lot of changes to the existing implementation which would not be very helpful for executing other commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"ckcherry23"},"content":"### Clear address book feature","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"ckcherry23"},"content":"The **clear address book** feature can be used to delete all the contacts stored by the user ","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"ckcherry23"},"content":"and to start with a new address book. Since deleted data cannot be recovered, ","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"ckcherry23"},"content":"the app opens a pop-up window asking for confirmation that ","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"ckcherry23"},"content":"the user wants to delete all of their stored contacts.","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"ckcherry23"},"content":"The following sequence diagram shows how the clear operation works:","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"ckcherry23"},"content":"![ClearSequenceDiagram](images/ClearSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"ckcherry23"},"content":"This activity diagram summarises the possible paths of executing the _clear_ command:","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"ckcherry23"},"content":"![ClearActivityDiagram](images/ClearActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"muraddurrani"},"content":"### View person feature","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"muraddurrani"},"content":"The view feature allows the user to view the full contact details of a specified person in the address book. The command is only available from the person list window,and is thus facilitated by the `AddressBookParser`, `ViewCommandParser`, and `ViewCommand`. Additionally, it implements the following operation:","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"muraddurrani"},"content":"* `MainWindow#LoadContactScreen(Person personToDisplay)` — Constructs and shows a `ContactDetailsPanel`, which displays the full details of the `Person` provided as argument.","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"muraddurrani"},"content":"Given below is an example usage scenario and how the view mechanism behaves at each step.","lastModifiedDate":"2022-03-22"},{"lineNumber":269,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":270,"author":{"gitId":"muraddurrani"},"content":"Step 1. From the person list window, the user executes `view 2` to view the contact details of the second person in the address book. A `ViewCommand` is constructed with the index of the person to de displayed.","lastModifiedDate":"2022-03-22"},{"lineNumber":271,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":272,"author":{"gitId":"muraddurrani"},"content":"Step 2. The `ViewCommand` is executed, and the person that corresponds to the provided index is returned to the `MainWindow` inside a `CommandResult`.","lastModifiedDate":"2022-03-22"},{"lineNumber":273,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":274,"author":{"gitId":"muraddurrani"},"content":"Step 3. `MainWindow#loadContactScreen(Person personToDisplay)` is executed with the specified person passed as argument, which constructs and displays the respective `ContactDetailsPanel`.","lastModifiedDate":"2022-03-22"},{"lineNumber":275,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":276,"author":{"gitId":"muraddurrani"},"content":"The following sequence diagram shows how the view feature works:","lastModifiedDate":"2022-03-22"},{"lineNumber":277,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":278,"author":{"gitId":"ckcherry23"},"content":"![ViewSequenceDiagram](images/ViewCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":280,"author":{"gitId":"muraddurrani"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-22"},{"lineNumber":281,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":282,"author":{"gitId":"muraddurrani"},"content":"**Aspect: Where to display a person\u0027s contact details:**","lastModifiedDate":"2022-03-22"},{"lineNumber":283,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"muraddurrani"},"content":"* **Alternative 1:** Display all contact information in the person list screen.","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"muraddurrani"},"content":"  * Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"muraddurrani"},"content":"    * Easy to implement","lastModifiedDate":"2022-03-22"},{"lineNumber":287,"author":{"gitId":"muraddurrani"},"content":"    * Does not require the user to navigate to a new screen, which speeds up program use","lastModifiedDate":"2022-03-22"},{"lineNumber":288,"author":{"gitId":"muraddurrani"},"content":"  * Cons:","lastModifiedDate":"2022-03-22"},{"lineNumber":289,"author":{"gitId":"muraddurrani"},"content":"    * Clutters the person list screen with a lot of information for each person","lastModifiedDate":"2022-03-22"},{"lineNumber":290,"author":{"gitId":"muraddurrani"},"content":"    ","lastModifiedDate":"2022-03-22"},{"lineNumber":291,"author":{"gitId":"muraddurrani"},"content":"* **Alternative 2 (current choice):** Navigate to a new screen to for contact information","lastModifiedDate":"2022-03-22"},{"lineNumber":292,"author":{"gitId":"muraddurrani"},"content":"  * Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":293,"author":{"gitId":"muraddurrani"},"content":"    * Greatly reduces clutter in the person list screen","lastModifiedDate":"2022-03-22"},{"lineNumber":294,"author":{"gitId":"muraddurrani"},"content":"    * Reduces the size of the person list, making it easier to scroll through","lastModifiedDate":"2022-03-22"},{"lineNumber":295,"author":{"gitId":"muraddurrani"},"content":"  * Cons:","lastModifiedDate":"2022-03-22"},{"lineNumber":296,"author":{"gitId":"muraddurrani"},"content":"    * Difficult to implement","lastModifiedDate":"2022-03-22"},{"lineNumber":297,"author":{"gitId":"muraddurrani"},"content":"    * Slower program use due to the addition of an additional navigation step","lastModifiedDate":"2022-03-22"},{"lineNumber":298,"author":{"gitId":"muraddurrani"},"content":"    ","lastModifiedDate":"2022-03-22"},{"lineNumber":299,"author":{"gitId":"muraddurrani"},"content":"We chose alternative 2 because its benefit to the visual clarity of the address book and thus the ease of its use outweighs the cost of including an additional navigation step.","lastModifiedDate":"2022-03-22"},{"lineNumber":300,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"tonishka"},"content":"### Find feature","lastModifiedDate":"2022-03-22"},{"lineNumber":386,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":387,"author":{"gitId":"tonishka"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":388,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":389,"author":{"gitId":"tonishka"},"content":"The find command is used to search for people based on certain criteria.","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"tonishka"},"content":"\u003cbr\u003e {More details to be added later}","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"tonishka"},"content":"Below is a sequence diagram summarising the mechanism of find command:","lastModifiedDate":"2022-03-22"},{"lineNumber":393,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":394,"author":{"gitId":"tonishka"},"content":"![FindSequencdDiagaram](images/FindSequenceDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":395,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":396,"author":{"gitId":"tonishka"},"content":"Below is an activity diagram summarising the possible paths for a find command:","lastModifiedDate":"2022-03-22"},{"lineNumber":397,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":398,"author":{"gitId":"tonishka"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":399,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":400,"author":{"gitId":"tonishka"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-22"},{"lineNumber":401,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":402,"author":{"gitId":"tonishka"},"content":"#### Aspect: How keywords are matched","lastModifiedDate":"2022-03-22"},{"lineNumber":403,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":404,"author":{"gitId":"tonishka"},"content":"- **Alternative 1 (Current Choice):** Ignore case and full match is required \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":405,"author":{"gitId":"tonishka"},"content":"  - Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":406,"author":{"gitId":"tonishka"},"content":"    - Easy to implement. ","lastModifiedDate":"2022-03-22"},{"lineNumber":407,"author":{"gitId":"tonishka"},"content":"    - It gives the best performance if the user remembers the exact keyword they are searching for.","lastModifiedDate":"2022-03-22"},{"lineNumber":408,"author":{"gitId":"tonishka"},"content":"  - Cons: Weak matching, i.e., `abc` does not match with `ab`. The current implementation would be less useful if the user ","lastModifiedDate":"2022-03-22"},{"lineNumber":409,"author":{"gitId":"tonishka"},"content":"  remembers only some part of the search keywords.","lastModifiedDate":"2022-03-22"},{"lineNumber":410,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":411,"author":{"gitId":"tonishka"},"content":"- **Alternative 2:** Ignore case but full match is not required \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":412,"author":{"gitId":"tonishka"},"content":"  - Pros: Strong matching, would be especially helpful if the user remembers only bits and pieces of search keywords.","lastModifiedDate":"2022-03-22"},{"lineNumber":413,"author":{"gitId":"tonishka"},"content":"  - Cons: Difficult and time-consuming to implement.","lastModifiedDate":"2022-03-22"},{"lineNumber":414,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":415,"author":{"gitId":"tonishka"},"content":"#### Aspect: What happens when user does not specify a field","lastModifiedDate":"2022-03-22"},{"lineNumber":416,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":417,"author":{"gitId":"tonishka"},"content":"**Note:** \u003cbr\u003e ","lastModifiedDate":"2022-03-22"},{"lineNumber":418,"author":{"gitId":"tonishka"},"content":"For evaluating the usefulness of the alternatives these are the assumptions made as to why the user does not specify ","lastModifiedDate":"2022-03-22"},{"lineNumber":419,"author":{"gitId":"tonishka"},"content":"the field: \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":420,"author":{"gitId":"tonishka"},"content":"a) they forgot, \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":421,"author":{"gitId":"tonishka"},"content":"b) they do not want to restrict their search to one field, or \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":422,"author":{"gitId":"tonishka"},"content":"c) they do not remember which field they want to search.","lastModifiedDate":"2022-03-22"},{"lineNumber":423,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":424,"author":{"gitId":"tonishka"},"content":"**Alternative 1 (Current Choice):** Search all fields for the keyword \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":425,"author":{"gitId":"tonishka"},"content":"- Pros:","lastModifiedDate":"2022-03-22"},{"lineNumber":426,"author":{"gitId":"tonishka"},"content":"  - This is the most intuitive approach. ","lastModifiedDate":"2022-03-22"},{"lineNumber":427,"author":{"gitId":"tonishka"},"content":"  - For all above mentioned scenarios a-c, this alternative is will produce the most useful result.","lastModifiedDate":"2022-03-22"},{"lineNumber":428,"author":{"gitId":"tonishka"},"content":"- Cons:","lastModifiedDate":"2022-03-22"},{"lineNumber":429,"author":{"gitId":"tonishka"},"content":"  - If there is a lot of data it will take more time to search all fields for every person.","lastModifiedDate":"2022-03-22"},{"lineNumber":430,"author":{"gitId":"tonishka"},"content":"  - Requires the most complex implementation among all alternatives. ","lastModifiedDate":"2022-03-22"},{"lineNumber":431,"author":{"gitId":"tonishka"},"content":"  - Performs a lot of unnecessary comparisons (`alex` will never match any phone number, likewise `659347563` will ","lastModifiedDate":"2022-03-22"},{"lineNumber":432,"author":{"gitId":"tonishka"},"content":"  never match any name). ","lastModifiedDate":"2022-03-22"},{"lineNumber":433,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":434,"author":{"gitId":"tonishka"},"content":"**Alternative 2:** Use name as the default search field","lastModifiedDate":"2022-03-22"},{"lineNumber":435,"author":{"gitId":"tonishka"},"content":"- Pros: Simple implementation. Since searching people by their name is the most probable and intuitive use of this command, this is likely to produce a useful result.","lastModifiedDate":"2022-03-22"},{"lineNumber":436,"author":{"gitId":"tonishka"},"content":"- Cons: Useless for scenario b) and c).","lastModifiedDate":"2022-03-22"},{"lineNumber":437,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":438,"author":{"gitId":"tonishka"},"content":"**Alternative 3:** Produce a command syntax error and ask user to enter field","lastModifiedDate":"2022-03-22"},{"lineNumber":439,"author":{"gitId":"tonishka"},"content":"- Pros: Simple implementation. Useful in scenario a) above.","lastModifiedDate":"2022-03-22"},{"lineNumber":440,"author":{"gitId":"tonishka"},"content":"- Cons: Useless for scenario b) and c).","lastModifiedDate":"2022-03-22"},{"lineNumber":441,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":442,"author":{"gitId":"tonishka"},"content":"  ","lastModifiedDate":"2022-03-22"},{"lineNumber":443,"author":{"gitId":"ckcherry23"},"content":"### Manage meetings","lastModifiedDate":"2022-03-24"},{"lineNumber":444,"author":{"gitId":"ckcherry23"},"content":"[Coming soon]","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":451,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"ckcherry23"},"content":"* really busy working professional","lastModifiedDate":"2022-03-04"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"ckcherry23"},"content":"**User persona**:","lastModifiedDate":"2022-03-04"},{"lineNumber":472,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":473,"author":{"gitId":"ckcherry23"},"content":"\u003cimg src\u003d\"images/Persona.png\" /\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":474,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":475,"author":{"gitId":"ckcherry23"},"content":"**Value proposition**: ","lastModifiedDate":"2022-03-04"},{"lineNumber":476,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":477,"author":{"gitId":"ckcherry23"},"content":"We help _busy working professionals_ manage their large list of contacts by providing an **easy-to-use interface to store contacts** and help organize meetings. Our product will help users organize contacts by their companies, job titles, etc., and navigate their professional network quickly and efficiently to find who they are looking for. ","lastModifiedDate":"2022-03-04"},{"lineNumber":478,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"| Priority | As a …​              | I want to …​                                                     | So that I can…​                                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"ckcherry23"},"content":"| -------- | ----------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------------------------- |","lastModifiedDate":"2022-03-14"},{"lineNumber":487,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | new user                | view a help page with commands and usage instructions               | understand how to use the application                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":488,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | add a new person to the contact list                                | expand my contacts list                                                               |","lastModifiedDate":"2022-03-03"},{"lineNumber":489,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | delete a person from the contact list                               | remove contacts I no longer require                                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":490,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | label and store a person\u0027s phone numbers                            | know how to contact them via phone and which number to use (personal, office, etc.)   |","lastModifiedDate":"2022-03-03"},{"lineNumber":491,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | label and store a person\u0027s email addresses                          | know how to contact them via email and which email to use (personal, office, etc.)    |","lastModifiedDate":"2022-03-03"},{"lineNumber":492,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | label and store a person\u0027s addresses                                | know how to find them via address and which address to use (home, office, etc.)       |","lastModifiedDate":"2022-03-03"},{"lineNumber":493,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | store a person\u0027s company                                            | check which company they work at                                                      |","lastModifiedDate":"2022-03-03"},{"lineNumber":494,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | store a person\u0027s job title                                          | check what job they have                                                              |","lastModifiedDate":"2022-03-03"},{"lineNumber":495,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | store a person\u0027s pronouns                                           | check how they prefer to be addressed                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":496,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | assign custom tags to a person                                      | identify them by the tags I give them                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":497,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | edit a person\u0027s contact information                                 | update their contact information without having to delete and create a new contact    |","lastModifiedDate":"2022-03-03"},{"lineNumber":498,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | delete all contacts from the contact list                           | remove all contacts when I no longer require them and start with a fresh contact list |","lastModifiedDate":"2022-03-03"},{"lineNumber":499,"author":{"gitId":"muraddurrani"},"content":"| `* * *`  | user                    | view all my contacts as a list                                      | scroll the list to view all contacts or find the one I want                           |","lastModifiedDate":"2022-03-03"},{"lineNumber":500,"author":{"gitId":"ckcherry23"},"content":"| `* * *`  | user                    | save my data automatically                                          | reduce the risk of my data being lost                                                 |","lastModifiedDate":"2022-03-10"},{"lineNumber":501,"author":{"gitId":"ckcherry23"},"content":"| `* * *`  | advanced user           | save all my contacts in an editable file                            | edit my contacts directly from the data file                                          |","lastModifiedDate":"2022-03-10"},{"lineNumber":502,"author":{"gitId":"muraddurrani"},"content":"| `* *`    | new user                | be provided suggested commands when I am adding contact information | know what kind of information I am able to add                                        |","lastModifiedDate":"2022-03-03"},{"lineNumber":503,"author":{"gitId":"muraddurrani"},"content":"| `* *`    | new user                | view sample contacts when I first launch the application            | see how the application looks when in use                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":504,"author":{"gitId":"muraddurrani"},"content":"| `* *`    | new user                | easily remove existing sample contact information                   | begin adding my own contacts without confusion                                        |","lastModifiedDate":"2022-03-03"},{"lineNumber":505,"author":{"gitId":"muraddurrani"},"content":"| `* *`    | user                    | be warned when I create a contact with a name that exists           | make sure I do not accidentally create a duplicate contact                            |","lastModifiedDate":"2022-03-03"},{"lineNumber":506,"author":{"gitId":"muraddurrani"},"content":"| `* *`    | user with many contacts | search for a contact by name                                        | find the contact I am looking for without having to scroll through a long list        |","lastModifiedDate":"2022-03-03"},{"lineNumber":507,"author":{"gitId":"muraddurrani"},"content":"| `* *`    | user with many contacts | search for a contact by their contact information                   | find the person I am looking for when I do not remember their name                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":508,"author":{"gitId":"muraddurrani"},"content":"| `*`      | user                    | change the colour scheme of the application                         | personalise my experience                                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":509,"author":{"gitId":"muraddurrani"},"content":"| `*`      | user                    | be able to undo my previous command                                 | undo a command if I make a mistake                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":510,"author":{"gitId":"muraddurrani"},"content":"| `*`      | user                    | save my contacts\u0027 addresses as Google Maps links                    | use Google Maps for directions                                                        |","lastModifiedDate":"2022-03-03"},{"lineNumber":511,"author":{"gitId":"ckcherry23"},"content":"| `*`      | user                    | see information about my business dealings with my contacts         | continue my business with them                                                        |","lastModifiedDate":"2022-03-19"},{"lineNumber":512,"author":{"gitId":"muraddurrani"},"content":"| `*`      | user with many contacts | be provided a history of my most searched-for contacts              | easily find the contacts I use more often                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":513,"author":{"gitId":"muraddurrani"},"content":"| `*`      | user with many contacts | access my recent search history                                     | can easily search for a previously searched contact                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"NicsunXnus"},"content":"(For all use cases below, the **System** is the `Reache` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-03"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"NicsunXnus"},"content":"**Use case: UC1 - Add a contact**","lastModifiedDate":"2022-03-04"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"NicsunXnus"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":522,"author":{"gitId":"NicsunXnus"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":523,"author":{"gitId":"NicsunXnus"},"content":"1. User requests to add a contact by their name. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":524,"author":{"gitId":"NicsunXnus"},"content":"2. Reache goes into ‘edit’ mode. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":525,"author":{"gitId":"NicsunXnus"},"content":"3. User \u003cins\u003eedits the contact’s details (UC2)\u003c/ins\u003e. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":526,"author":{"gitId":"NicsunXnus"},"content":"4. Reache displays the newly added contact in the list of contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":527,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"NicsunXnus"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"NicsunXnus"},"content":"**Extensions:** \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":531,"author":{"gitId":"NicsunXnus"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":532,"author":{"gitId":"NicsunXnus"},"content":"1a. User inputs using the wrong format. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":533,"author":{"gitId":"NicsunXnus"},"content":"\u0026emsp; 1a1. Reache displays an error message. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":534,"author":{"gitId":"NicsunXnus"},"content":"\u0026emsp; Use case resumes from step 1. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":535,"author":{"gitId":"NicsunXnus"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":536,"author":{"gitId":"NicsunXnus"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":537,"author":{"gitId":"NicsunXnus"},"content":"2a. Reache informs that the contact name already exists. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":538,"author":{"gitId":"ckcherry23"},"content":"Use case resumes at step 1. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":539,"author":{"gitId":"NicsunXnus"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"tonishka"},"content":"**Use case: UC2 - Edit contact details**","lastModifiedDate":"2022-03-04"},{"lineNumber":542,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":543,"author":{"gitId":"tonishka"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":544,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":545,"author":{"gitId":"ckcherry23"},"content":"1. User requests to add details for specific field(s) of the contact. \u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":546,"author":{"gitId":"ckcherry23"},"content":"2. Reache saves the specified details along with their respective field(s). \u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":547,"author":{"gitId":"tonishka"},"content":"\u0026emsp;Repeat steps 1 and 2 until satisfied. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":548,"author":{"gitId":"tonishka"},"content":"3. User requests to leave ‘edit’ mode. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":549,"author":{"gitId":"tonishka"},"content":"4. Reache returns to ‘default’ mode. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":550,"author":{"gitId":"tonishka"},"content":"Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":551,"author":{"gitId":"NicsunXnus"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":552,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":553,"author":{"gitId":"tonishka"},"content":"**Extensions:** \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":554,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":555,"author":{"gitId":"tonishka"},"content":"1a. User inputs the wrong format. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":556,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 1a1. Reache displays an error message. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":557,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case resumes from step 1.","lastModifiedDate":"2022-03-04"},{"lineNumber":558,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":559,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":560,"author":{"gitId":"NicsunXnus"},"content":"**Use case: UC3 - Delete a contact**","lastModifiedDate":"2022-03-04"},{"lineNumber":561,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":562,"author":{"gitId":"tonishka"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":563,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":564,"author":{"gitId":"tonishka"},"content":"1. User requests to delete a contact. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":565,"author":{"gitId":"tonishka"},"content":"2. Reache asks for confirmation. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":566,"author":{"gitId":"tonishka"},"content":"3. User confirms deletion. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":567,"author":{"gitId":"tonishka"},"content":"4. Reache deletes the contact. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":568,"author":{"gitId":"tonishka"},"content":"Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":569,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":570,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":571,"author":{"gitId":"tonishka"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":572,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":573,"author":{"gitId":"tonishka"},"content":"1a.  The requested contact does not exist. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":574,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 1a1. Reache displays an error message. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":575,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case resumes at step 1.","lastModifiedDate":"2022-03-04"},{"lineNumber":576,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":577,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":578,"author":{"gitId":"tonishka"},"content":"3a.  User chooses to cancel the deletion. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":579,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 3a1. Reache cancels the deletion. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":580,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":581,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":582,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":583,"author":{"gitId":"tonishka"},"content":"**Use case: UC4 - Find contacts by field**","lastModifiedDate":"2022-03-04"},{"lineNumber":584,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":585,"author":{"gitId":"tonishka"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":586,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":587,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":588,"author":{"gitId":"tonishka"},"content":"1. User requests to find contacts by a given value for a field. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":589,"author":{"gitId":"tonishka"},"content":"2. Reache shows all contacts that match the find criterion. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":590,"author":{"gitId":"tonishka"},"content":"Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":591,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":592,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":593,"author":{"gitId":"tonishka"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":594,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":595,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":596,"author":{"gitId":"tonishka"},"content":"1a. No contacts match the find criterion. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":597,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 1a1. Reache alerts that no contacts were found. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":598,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":599,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":600,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":601,"author":{"gitId":"tonishka"},"content":"**Use case: UC5 - View contact\u0027s full details**","lastModifiedDate":"2022-03-04"},{"lineNumber":602,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":603,"author":{"gitId":"tonishka"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":604,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":605,"author":{"gitId":"tonishka"},"content":"1. User requests to view a contact\u0027s full details. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":606,"author":{"gitId":"tonishka"},"content":"2. Reache displays the contact\u0027s full details. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":607,"author":{"gitId":"tonishka"},"content":"Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":608,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":609,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":610,"author":{"gitId":"tonishka"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":611,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":612,"author":{"gitId":"tonishka"},"content":"1a.  The requested contact does not exist. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":613,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 1a1. Reache displays an error message. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":614,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case resumes at step 1.","lastModifiedDate":"2022-03-04"},{"lineNumber":615,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":616,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":617,"author":{"gitId":"tonishka"},"content":"**Use case: UC6 - List all contacts**","lastModifiedDate":"2022-03-04"},{"lineNumber":618,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":619,"author":{"gitId":"tonishka"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":620,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":621,"author":{"gitId":"tonishka"},"content":"1. User requests to see a list of all contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":622,"author":{"gitId":"tonishka"},"content":"2. Reache displays the list. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":623,"author":{"gitId":"tonishka"},"content":"Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":624,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":625,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":626,"author":{"gitId":"tonishka"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":627,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":628,"author":{"gitId":"tonishka"},"content":"1a. There are no contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":629,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 1a1. Reache alerts that contact list is empty. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":630,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":631,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":632,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":633,"author":{"gitId":"tonishka"},"content":"**Use case: UC7 - Clear all contacts**","lastModifiedDate":"2022-03-04"},{"lineNumber":634,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":635,"author":{"gitId":"tonishka"},"content":"**MSS:**","lastModifiedDate":"2022-03-04"},{"lineNumber":636,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":637,"author":{"gitId":"tonishka"},"content":"1. User requests to see a list of all contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":638,"author":{"gitId":"tonishka"},"content":"2. Reache asks for confirmation. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":639,"author":{"gitId":"tonishka"},"content":"3. User confirms the action. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":640,"author":{"gitId":"tonishka"},"content":"4. Reache clears all contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":641,"author":{"gitId":"tonishka"},"content":"Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":642,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":643,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":644,"author":{"gitId":"tonishka"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":645,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":646,"author":{"gitId":"tonishka"},"content":"1a. There are no contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":647,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 1a1. Reache alerts that contact list is empty. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":648,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":649,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":650,"author":{"gitId":"tonishka"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":651,"author":{"gitId":"tonishka"},"content":"3a.  User chooses to cancel clearing contacts. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":652,"author":{"gitId":"tonishka"},"content":"\u0026emsp; 3a1. Reache cancels the clearing. \u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":653,"author":{"gitId":"tonishka"},"content":"\u0026emsp; Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":654,"author":{"gitId":"tonishka"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":656,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"ckcherry23"},"content":"**Technical requirements:**","lastModifiedDate":"2022-03-03"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"ckcherry23"},"content":"1.  The product should work on any _mainstream OS_ as long as it has Java `11` installed.","lastModifiedDate":"2022-03-03"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":662,"author":{"gitId":"ckcherry23"},"content":"**Quality requirements:**","lastModifiedDate":"2022-03-03"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":664,"author":{"gitId":"ckcherry23"},"content":"1.  A user with above average typing speed for plain English text should be able to accomplish most of the tasks using commands faster than with the mouse.","lastModifiedDate":"2022-03-03"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":666,"author":{"gitId":"ckcherry23"},"content":"**Testability requirements:**","lastModifiedDate":"2022-03-04"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":668,"author":{"gitId":"ckcherry23"},"content":"1.  The product should be only for a single user for higher testability.","lastModifiedDate":"2022-03-03"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":670,"author":{"gitId":"ckcherry23"},"content":"**Data requirements:**","lastModifiedDate":"2022-03-03"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":672,"author":{"gitId":"ckcherry23"},"content":"1.  Data should be stored locally and on a human-editable file.","lastModifiedDate":"2022-03-03"},{"lineNumber":673,"author":{"gitId":"ckcherry23"},"content":"2.  The final JAR file size should not exceed 100MB.","lastModifiedDate":"2022-03-03"},{"lineNumber":674,"author":{"gitId":"ckcherry23"},"content":"3.  The PDF file size for the DG and UG should not exceed 15 MB per file.","lastModifiedDate":"2022-03-03"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":676,"author":{"gitId":"ckcherry23"},"content":"**Usability requirements:**","lastModifiedDate":"2022-03-03"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"ckcherry23"},"content":"1.  The DG and UG must be PDF-friendly. ","lastModifiedDate":"2022-03-03"},{"lineNumber":679,"author":{"gitId":"ckcherry23"},"content":"2.  The GUI should not cause any resolution-related inconveniences to the user for:","lastModifiedDate":"2022-03-03"},{"lineNumber":680,"author":{"gitId":"ckcherry23"},"content":"    1.  standard screen resolutions 1920x1080 and higher","lastModifiedDate":"2022-03-03"},{"lineNumber":681,"author":{"gitId":"ckcherry23"},"content":"    2.  screen scales 100% and 125%.","lastModifiedDate":"2022-03-03"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"ckcherry23"},"content":"    In addition, all functions in the GUI should be usable even if the user experience is not optimal for:","lastModifiedDate":"2022-03-03"},{"lineNumber":684,"author":{"gitId":"ckcherry23"},"content":"    1.  resolutions 1280x720 and higher","lastModifiedDate":"2022-03-03"},{"lineNumber":685,"author":{"gitId":"ckcherry23"},"content":"    2.  screen scales 150%.","lastModifiedDate":"2022-03-03"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"ckcherry23"},"content":"* **Mainstream OS:** Windows, MacOS, Linux","lastModifiedDate":"2022-03-03"},{"lineNumber":691,"author":{"gitId":"ckcherry23"},"content":"* **Busy working professionals:** Someone who has to manage a large number of interpersonal relationships for success at work and life","lastModifiedDate":"2022-03-03"},{"lineNumber":692,"author":{"gitId":"ckcherry23"},"content":"* **Personal and professional network:** Friends, family, neighbors, acquaintances, co-workers, clients, mentors, mentees","lastModifiedDate":"2022-03-03"},{"lineNumber":693,"author":{"gitId":"ckcherry23"},"content":"* **\u0027Default\u0027 mode:** Allows the user to view their list of contacts","lastModifiedDate":"2022-03-03"},{"lineNumber":694,"author":{"gitId":"ckcherry23"},"content":"* **\u0027Edit\u0027 mode:** Allows the user to edit contact details","lastModifiedDate":"2022-03-03"},{"lineNumber":695,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":696,"author":{"gitId":"ckcherry23"},"content":"*{More to be added}*","lastModifiedDate":"2022-03-03"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ckcherry23":122,"NicsunXnus":47,"muraddurrani":62,"-":350,"tonishka":168}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"Reache is a desktop app that helps busy working professionals manage their large list of contacts by providing an easy-to-use interface to store contacts and organize meetings. Reache is especially suited for professionals who would like to optimize their contact management by using a Command Line Interface (CLI).","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"## Table of Contents","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"- [Quick Start](#1-quick-start)","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"- [Features](#2-features)","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"   - [Managing Contacts](#21-managing-contacts)","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"   - [Finding Contacts](#22-finding-contacts)","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"   - [Editing Information](#23-editing-information)","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"   - [Viewing Help](#24-viewing-help-help)","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"   - [Exiting the program](#25-exiting-the-program-exit)","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"- [Command Summary](#3-command-summary)","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"- [Contact Fields Summary](#4-contact-fields-summary)","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"## 1. Quick start","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"1. Download the latest `reache.jar` from [here](https://github.com/AY2122S2-CS2103T-W12-4/tp/releases).","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Reache.","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds [Disclaimer: Actual GUI not shown]. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"1. Refer to the Features below for details of each command.","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"#### Notes about the command format:","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"- Words in `\u003cUPPER_CASE\u003e` are the parameters to be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"  e.g. in `add n/\u003cNAME\u003e`, `NAME` is a parameter which can be used as `add n/Alex Dunphy`.","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"- Items in square brackets are optional. \u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/Alex Dunphy t/Likes Science` or as `n/Alex Dunphy`.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"- Items with ... after them can be used multiple times including zero times.","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"  e.g. `[ph/\u003cPHONE_NUMBER\u003e l/\u003cLABEL\u003e]...` can be used as ` `(i.e. 0 times), `ph/12345678 l/personal`, `ph/90123456 l/office ph/78901234` etc.","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"- Parameters can be in any order.","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"- `l/` is used to label parameters. They are optional.","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":" ","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"## 2. Features","lastModifiedDate":"2022-03-01"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"### 2.1 Managing Contacts","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"#### 2.1.1 Adding a contact: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"Adds a person to the contact list.","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"Format: `add n/\u003cNAME\u003e [ph/\u003cPHONE_NUMBER\u003e l/\u003cLABEL\u003e]... [e/\u003cEMAIL\u003e l/\u003cLABEL\u003e]... [a/\u003cADDRESS\u003e l/LABEL]... [t/TAG]...`","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"After adding a person to the contact list, you will be navigated to their contact details page. ","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"From this page, you can edit their contact details using the commands found under the [Editing Information](#23-editing-information) section.","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"Example: `add n/Alex Dunphy`","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"#### 2.1.2 Clearing all contacts: `clear`","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"Clears all contacts from the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"Format: `clear`","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"#### 2.1.3 Deleting a contact: `del`","lastModifiedDate":"2022-03-01"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2022-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"Format: `del \u003cINDEX NO\u003e`","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"Example: `del 66`","lastModifiedDate":"2022-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"#### 2.1.4 Editing a contact: edit","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"Enters editing mode to modify contact details in the address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"Format: `edit \u003cANY NUMBER AND TYPE OF FIELDS IN ANY ORDER\u003e `","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"Information about the details that can be added is found under the [Editing Information](#23-editing-information) section.","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"Example: `edit n/Alex ph/98765432 t/has kids`","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"#### 2.1.5 Editing the data file","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"_Reache_ data is saved as a JSON file at [_Reache_ Jar file location]/data/reache.json. Advanced users are welcome to update data directly by editing the data file.","lastModifiedDate":"2022-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"#### 2.1.6 Saving changes","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"_Reache_ saves to the hard disk automatically after any command is issued that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"### 2.2 Finding Contacts","lastModifiedDate":"2022-03-01"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"#### 2.2.1 Finding contacts: `find`","lastModifiedDate":"2022-03-01"},{"lineNumber":89,"author":{"gitId":"tonishka"},"content":"Finds a person based on a search field and keywords provided. Searchable categories can be found in the [Editing Information](#23-editing-information) section.","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":91,"author":{"gitId":"tonishka"},"content":"Format: `find \u003cOPTIONAL_FIELD\u003e \u003cKEYWORDS\u003e`","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":94,"author":{"gitId":"tonishka"},"content":"`find c/Tesla SpaceX` Finds all contacts who work in `Tesla` or `SpaceX`.\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"tonishka"},"content":"`find n/Katy Cathy Cate` Finds all contacts with the name `Katy` or `Cathy` or `Cate`.\u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"tonishka"},"content":"`find t/supplier` Finds all contacts who are tagged as `Supplier`. \u003cbr\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"tonishka"},"content":"`find Alexandra` Finds all contacts who have `Alexandra` somewhere in their contact information.","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"tonishka"},"content":"**Note: `find` expects at least one keyword to match.**","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"#### 2.2.2 Listing all contacts: `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"Shows a list of all contacts in the address book.","lastModifiedDate":"2022-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"Format: `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"#### 2.2.3 Viewing a person\u0027s full details: `view`","lastModifiedDate":"2022-03-01"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"Displays the specified person\u0027s contact information and allows the contact to be edited.","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"Format: `view \u003cINDEX NO\u003e`","lastModifiedDate":"2022-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"Example: `view 34`","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"#### 2.2.4 Returning after viewing a person\u0027s full details: `back`","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"Returns to the list of all contacts after viewing and/or editing a person\u0027s contact details.","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"Format: `back`","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"muraddurrani"},"content":"### 2.3 Editing Information","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"*Note:*","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"1. To edit existing information, adding a new entry with the same category/label as the existing entry will overwrite it with the new one. ","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"2. Difference between tags and labels: Labels distinguish multiple entries in the same field whereas tags group together any number of contacts based on some criterion.","lastModifiedDate":"2022-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.1 Symbols Legend","lastModifiedDate":"2022-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"NicsunXnus"},"content":"| Symbol | Meaning |","lastModifiedDate":"2022-03-04"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"| --- | --- | ","lastModifiedDate":"2022-03-04"},{"lineNumber":127,"author":{"gitId":"NicsunXnus"},"content":"| ... | Indicates that the preceding entry can be provided multiple times. |","lastModifiedDate":"2022-03-04"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"| / | Used to indicate a label for the preceding field. \u003cbr\u003e Labels are optional and if not provided, a default label will be assigned. \u003cbr\u003e E.g. `ph/ 12345678 l/personal` labels the given number as \"personal\". |","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"| \u003c...\u003e | Indicates the argument that the user should provide in that area |","lastModifiedDate":"2022-03-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.2 Add/Edit phone numbers: phone","lastModifiedDate":"2022-03-03"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"Format: `ph/\u003cNUMBER 1\u003e l/\u003cLABEL\u003e ph/\u003cNUMBER 2\u003e l/\u003cLABEL\u003e...`","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"Example: `ph/8765432 l/Personal ph/9753468 l/Office`","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":136,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.3 Add/Edit emails: `email`","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"Format:  `e/\u003cEMAIL 1\u003e l/\u003cLABEL\u003e e/\u003cEMAIL 2\u003e l/\u003cLABEL\u003e...`","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"Example: `e/alex@reache.com l/Official; e/alex98@gmail.com`","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.4 Add/Edit address: `address`","lastModifiedDate":"2022-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"NicsunXnus"},"content":"Format: `a/\u003cADDRESS 1\u003e l/\u003cLABEL\u003e; a/\u003cADDRESS 2\u003e l/\u003cLABEL\u003e...`","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":145,"author":{"gitId":"NicsunXnus"},"content":"Example: `a/28 Francis Mine, Sacramento, CA - 654321 l/Home`  ","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.5 Add/Edit company: `company`","lastModifiedDate":"2022-03-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"Format: `c/\u003cCOMPANY\u003e`","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"NicsunXnus"},"content":"Example: `c/Tesla`","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":153,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.6 Add/Edit job title: `job`","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":155,"author":{"gitId":"NicsunXnus"},"content":"Format: `j/\u003cJOB TITLE\u003e`","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":157,"author":{"gitId":"NicsunXnus"},"content":"Example: `j/Software Engineer` ","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":159,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.7 Add/Edit tags: `tag`","lastModifiedDate":"2022-03-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"NicsunXnus"},"content":"Format: `t/\u003cTAG 1\u003e t/\u003cTAG 2\u003e...`","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":163,"author":{"gitId":"NicsunXnus"},"content":"Example: `t/Media Contact t/Has kids`","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":165,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.8 Add/Edit pronoun: `pronoun`","lastModifiedDate":"2022-03-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":167,"author":{"gitId":"NicsunXnus"},"content":"Format: `pr/\u003cPRONOUN 1\u003e pr/\u003cPRONOUN 2\u003e...`","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":169,"author":{"gitId":"NicsunXnus"},"content":"Example: `pr/He pr/Him`","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":171,"author":{"gitId":"NicsunXnus"},"content":"#### 2.3.9 Delete field: `del`","lastModifiedDate":"2022-03-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"Format: `del \u003cTYPE 1\u003e \u003cLABEL 1\u003e \u003cTYPE 2\u003e \u003cLABEL 2\u003e...`","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":175,"author":{"gitId":"NicsunXnus"},"content":"`\u003cTYPE\u003e` refers to the category of information you wish to delete, as indicated by its command word.","lastModifiedDate":"2022-03-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":177,"author":{"gitId":"NicsunXnus"},"content":"Without a `\u003cLABEL\u003e`, the command will delete all information stored in `\u003cTYPE\u003e`.","lastModifiedDate":"2022-03-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"Examples:","lastModifiedDate":"2022-03-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"`del ph/ personal` -    Deletes the personal phone number of the contact.","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"`del a/` -         Deletes all addresses of the contact.","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"`del e/ Official` -   Deletes the Official email of the contact.","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"   ","lastModifiedDate":"2022-03-03"},{"lineNumber":187,"author":{"gitId":"NicsunXnus"},"content":"#### 2.4 Viewing help: `help`","lastModifiedDate":"2022-03-03"},{"lineNumber":188,"author":{"gitId":"NicsunXnus"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":190,"author":{"gitId":"NicsunXnus"},"content":"Format: `help`","lastModifiedDate":"2022-03-03"},{"lineNumber":191,"author":{"gitId":"NicsunXnus"},"content":"   ","lastModifiedDate":"2022-03-03"},{"lineNumber":192,"author":{"gitId":"NicsunXnus"},"content":"#### 2.5 Exiting the program: `exit`","lastModifiedDate":"2022-03-03"},{"lineNumber":193,"author":{"gitId":"NicsunXnus"},"content":"Exits the program.","lastModifiedDate":"2022-03-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":195,"author":{"gitId":"NicsunXnus"},"content":"Format: `exit`","lastModifiedDate":"2022-03-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"## 3. Command Summary","lastModifiedDate":"2022-03-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"| **Action** | **Format, Example**                                                                                                                                                                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"|------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"NicsunXnus"},"content":"| **Add**    | Format: `add n/\u003cNAME\u003e` \u003cbr\u003e Example: `add n/Alex Dunphy`                                                                                                                                                    |","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"| **Edit**   | Format: `edit \u003cANY NUMBER AND TYPE OF FIELDS IN ANY ORDER\u003e` \u003cbr\u003e Example: `edit n/Michael J Wolf pr/her j/Farmer c/FarmingInc ph/999 l/Police t/friend ph/123456`                                           |                                                                                                                                                                                        |","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"| **Delete** | **Deleting contacts** \u003cbr\u003e Format: `del \u003cINDEX NO\u003e` \u003cbr\u003e Example: `del 88` \u003cbr\u003e \u003cbr\u003e **Deleting fields** \u003cbr\u003e Format: `del \u003cANY NUMBER AND TYPE OF FIELDS IN ANY ORDER\u003e` \u003cbr\u003e Example: `del p/ personal e/` |","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"| **Clear**  | Format: `clear`                                                                                                                                                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"| **Find**   | Format: `find \u003cFIELD\u003e \u003cVALUE\u003e` \u003cbr\u003e Example: `find n/ Michael Scott`                                                                                                                                        |","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"| **View**   | Format: `view \u003cINDEX\u003e` \u003cbr\u003e Example: `view 5`                                                                                                                                                               |","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"| **Back**   | Format: `back`                                                                                                                                                                                              |","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"ckcherry23"},"content":"| **List**   | Format: `list`                                                                                                                                                                                              |","lastModifiedDate":"2022-03-01"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"| **Help**   | Format: `help`                                                                                                                                                                                              |","lastModifiedDate":"2022-03-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"## 4. Contact Fields Summary","lastModifiedDate":"2022-03-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":"| **Field**        | **Mandatory** | **Format, Example**                                                                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"|------------------|---------------|--------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"NicsunXnus"},"content":"| **Name**         | Yes           | Format: `n/\u003cNAME\u003e` \u003cbr\u003e Example: `n/Alex Dunphy`                                                                               |","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"NicsunXnus"},"content":"| **Phone Number** | No            | Format: `ph/\u003cNUMBER 1\u003e l/\u003cLABEL\u003e ph/\u003cNUMBER 2\u003e l/\u003cLABEL\u003e...` \u003cbr\u003e Example: `ph/98765432 l/Personal ph/9753468 l/Office`        |","lastModifiedDate":"2022-03-13"},{"lineNumber":217,"author":{"gitId":"NicsunXnus"},"content":"| **Email ID**     | No            | Format: `e/\u003cEMAIL 1\u003e l/\u003cLABEL\u003e e/\u003cEMAIL 2\u003e l/\u003cLABEL\u003e...` \u003cbr\u003e Example: `e/alex@reache.com l/Official e/alex98@gmail.com`       |","lastModifiedDate":"2022-03-13"},{"lineNumber":218,"author":{"gitId":"NicsunXnus"},"content":"| **Address**      | No            | Format: `a/\u003cADDRESS 1\u003e l/\u003cLABEL\u003e a/\u003cADDRESS 2\u003e l/\u003cLABEL\u003e...` \u003cbr\u003e Example: `a/28 Francis Mine, Sacramento, CA - 654321 l/Home` |","lastModifiedDate":"2022-03-13"},{"lineNumber":219,"author":{"gitId":"NicsunXnus"},"content":"| **Company**      | No            | Format: `c/\u003cCOMPANY\u003e` \u003cbr\u003e Example: `c/Tesla`                                                                                  |","lastModifiedDate":"2022-03-13"},{"lineNumber":220,"author":{"gitId":"NicsunXnus"},"content":"| **Job Title**    | No            | Format: `j/\u003cJOB TITLE\u003e` \u003cbr\u003e Example: `j/Software Engineer`                                                                    |","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"| **Tags**         | No            | Format: `t/\u003cTAG 1\u003e t/\u003cTAG 2\u003e...` \u003cbr\u003e Example: `t/MediaContact t/HasKids`                                                      |","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"NicsunXnus"},"content":"| **Pronouns**     | No            | Format: `pr/\u003cPRONOUNS\u003e` \u003cbr\u003e Example: `pr/They pr/Them`                                                                        |","lastModifiedDate":"2022-03-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"NicsunXnus"},"content":"[Back to top](#table-of-contents)","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"ckcherry23":36,"NicsunXnus":81,"muraddurrani":19,"-":81,"tonishka":7}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ckcherry23"},"content":"    content: \"Reache\";","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ckcherry23":1,"-":294}},{"path":"docs/diagrams/ClearActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":":User enters clear command;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":":Confirmation window is opened;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"if () then ([User confirms","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"action])","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"  :Address book is cleared;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"else ([User cancels","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"action])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":":Confirmation window closes;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ckcherry23":15}},{"path":"docs/diagrams/ClearSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"!include Style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"participant \":ConfirmWindow\" as ConfirmWindow UI_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"participant \":ClearCommand\" as ClearCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"-\u003e MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"activate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"MainWindow -\u003e LogicManager:executePersonListCommand(clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(clear)","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"create ClearCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"AddressBookParser -\u003e ClearCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"activate ClearCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"ClearCommand --\u003e AddressBookParser :","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"deactivate ClearCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"LogicManager -\u003e ClearCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"activate ClearCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"ClearCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"deactivate ClearCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"LogicManager --\u003e MainWindow : commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"MainWindow -\u003e MainWindow : handleConfirmation()","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"activate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"MainWindow -\u003e ConfirmWindow : show()","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"activate ConfirmWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"ConfirmWindow -\u003e LogicManager : clearAddressBook()","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"LogicManager -\u003e ConfirmWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"ConfirmWindow --\u003e MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"deactivate ConfirmWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"MainWindow --\u003e MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"\u003c-- MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ckcherry23":64}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"[-\u003e LogicManager : execute(\"del 1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"del 1\")","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"note left of Model : deletePerson takes in\\nthe person object to\\nbe deleted","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"NicsunXnus":4,"-":66}},{"path":"docs/diagrams/DetailedParsingForEditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"!include Style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"hide footbox","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"mainframe ref","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"participant \"EditCommandParser\" as ECP LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"participant \"editPersonDescriptor\\n:EditPersonDescriptor\" as EditPersonDescriptor MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"participant \"jack:Name\" as Jack MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"participant \"editCommand\\n:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"activate ECP","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"ECP -\u003e ArgumentTokenizer : tokenize(n/Jack, n/, c/,\\n j/, pr/,ph/, e/, a/, t/)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"ECP \u003c-- ArgumentTokenizer : argMultiMap","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"ECP -\u003e EditPersonDescriptor ** : EditPersonDescriptor()","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"ECP \u003c-- EditPersonDescriptor : editPersonDescriptor","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"ECP -\u003e ParserUtil : parseName(Jack)","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"activate ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"ParserUtil -\u003e Jack ** : Name(Jack)","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"activate Jack","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"Jack --\u003e ParserUtil : jack","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"deactivate Jack","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"ECP \u003c-- ParserUtil : jack","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"deactivate ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"ECP -\u003e EditPersonDescriptor : setName(jack)","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"ECP \u003c-- EditPersonDescriptor","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"ECP -\u003e EditCommand ** : EditCommand(editPersonDescriptor, personToEdit)","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"activate  EditCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"ECP \u003c-- EditCommand :editCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"deactivate EditCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"NicsunXnus":47}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"start","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":":User executes add or view command;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"if () then ([is Add Command])","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"    :AddressbookStorage saves contact with details added;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"else ([is View Command])","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"    endif","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":":Open contact details window;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"repeat","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"    :User executes edit command;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"    :AddressbookStorage saves changes;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"repeat while () is ([User wants to make more edits])","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":":User executes back command;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"stop","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"NicsunXnus":18}},{"path":"docs/diagrams/EditCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"!include Style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"hide footbox","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"participant \":ContactDetailsParser\" as ContactDetailsParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"participant \"editCommand:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"activate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"note left of LogicManager: personToEdit is the Person object\\n encompassing the edited contact","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"-\u003e LogicManager : executeContactDetailsCommand\\n(edit n/Jack, personToEdit)","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"LogicManager -\u003e ContactDetailsParser : parseCommand\\n(edit n/Jack, personToEdit)","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"activate ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"ContactDetailsParser -\u003e EditCommandParser ** : EditCommandParser()","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"activate EditCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"EditCommandParser --\u003e ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"ContactDetailsParser -\u003e EditCommandParser : parse(n/Jack, personToEdit)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"activate EditCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"ref over EditCommandParser, EditCommand : The more detailed parsing of each field to edit","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"EditCommandParser --\u003e ContactDetailsParser : editCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"ContactDetailsParser --\u003e LogicManager : editCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"deactivate ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"note right of LogicManager : model is the list of contacts","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"LogicManager -\u003e EditCommand : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"activate EditCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"EditCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"deactivate EditCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"\u003c-- LogicManager: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"@enduml","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"NicsunXnus":35}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"participant \"c:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"participant \"model:Model\" as model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"participant \"predicate:FieldContainsKeywordsPredicate\"  as FieldContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"activate model","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"[-\u003e LogicManager : executePersonListCommand(find n/alex)","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(find n/alex)","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"activate FindCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"AddressBookParser \u003c-- FindCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"AddressBookParser -\u003e FindCommandParser : parse(n/alex)","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"activate FieldContainsKeywordsPredicate","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"FindCommandParser -\u003e FieldContainsKeywordsPredicate","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"activate FindCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"FindCommandParser \u003c-- FindCommand :f","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"AddressBookParser \u003c-- FindCommandParser :f","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"LogicManager \u003c-- AddressBookParser :f","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"FindCommand -\u003e model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"loop For each person in address book","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"model -\u003e FieldContainsKeywordsPredicate : test(person)","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"deactivate FieldContainsKeywordsPredicate","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"FindCommand -\u003e model : getFilteredPersonList()","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"activate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"FindCommand \u003c-- CommandResult : c","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"LogicManager \u003c-- FindCommand :c","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tonishka":55}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"Class ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"LogicManager --\u003e\"1\" ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"ContactDetailsParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"NicsunXnus":3,"-":46}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"Class ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"HiddenOutside ..\u003e ContactDetailsParser","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"ContactDetailsParser .down.\u003e XYZCommandParser: creats \u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"NicsunXnus":3,"-":38}},{"path":"docs/diagrams/ViewCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"!include Style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"participant \":ContactDetailsPanel\" as ContactDetailsPanel UI_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"-\u003e MainWindow : executePersonListCommand(view 2)","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"activate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"MainWindow -\u003e LogicManager:executePersonListCommand(view 2)","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(view 2)","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"create ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"AddressBookParser -\u003e ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"activate ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"ViewCommand --\u003e AddressBookParser : v","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"deactivate ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"activate ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"ViewCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"ViewCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"deactivate ViewCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"LogicManager --\u003e MainWindow : commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"MainWindow -\u003e MainWindow : loadContactScreen()","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"activate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"create ContactDetailsPanel","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"MainWindow -\u003e ContactDetailsPanel","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"activate ContactDetailsPanel","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"ContactDetailsPanel --\u003e MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"deactivate ContactDetailsPanel","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"MainWindow --\u003e MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"\u003c-- MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"deactivate MainWindow","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"muraddurrani":69}},{"path":"docs/diagrams/plantuml/Find.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"start","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":":User executes find command;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"if () then ([Field is given])","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":"  :Search given field for keyword(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"else ([else])","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":":Search all fields for keyword(s);","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"endif","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":":Display list of matched people;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"stop","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tonishka":14}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"title: Reache","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103T-W12-4/tp)","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"_Reache_ is a desktop app that helps **busy working professionals** manage their large list of contacts by providing an easy-to-use interface to store contacts and organize meetings. _Reache_ is especially suited for professionals who would like to optimize their contact management by using a **Command Line Interface (CLI)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"* If you are interested in using Reache, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"* If you are interested about developing Reache, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"_This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ckcherry23":5,"NicsunXnus":4,"-":11}},{"path":"docs/team/ckcherry23.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"title: Charisma Kausar\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"### Project: Reache","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"_Reache_ is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"## Summary of Contribution","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"* **Code Contributed**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"* **Enhancements Implemented**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"* **Contributions to the UG**: `to be added soon`","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"* **Contributions to the DG**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"* **Contributions to the team-baed tasks**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"* **Review/mentoring contributions**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"* **Contributions beyond the project team**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"* **Contributions to the Developer Guide (Extracts)**: `to be added soon` ","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"* **Contributions to the User Guide (Extracts)**: `to be added soon` ","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ckcherry23":20}},{"path":"docs/team/muraddurrani.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"title: Murad Durrani\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"### Project: Reache","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"_Reache_ is a desktop app that helps busy working professionals manage their large list","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"of contacts by providing an easy-to-use interface to store contacts and organize","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"meetings.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"## Summary of Contributions","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"* **Code Contributed**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"* **Enhancements Implemented**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"* **Contributions to the UG**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"* **Contributions to the DG**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"* **Contributions to the team-based tasks**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"* **Review/mentoring contributions**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"* **Contributions beyond the project team**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"* **Contributions to the Developer Guide (Extracts)**: `to be added soon`","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"* **Contributions to the User Guide (Extracts)**: `to be added soon` ","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"muraddurrani":22}},{"path":"docs/team/nicsunxnus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"title: Nicholas Sun\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"### Project: Reache","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"_Reache_ is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"## Summary of Contribution","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"* **Code Contributed**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"* **Enhancements Implemented**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"* **Contributions to the UG**: `to be added soon`","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"* **Contributions to the DG**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"* **Contributions to the team-baed tasks**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"* **Review/mentoring contributions**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"* **Contributions beyond the project team**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"* **Contributions to the Developer Guide (Extracts)**: `to be added soon` ","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"* **Contributions to the User Guide (Extracts)**: `to be added soon` ","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"NicsunXnus":20}},{"path":"docs/team/tonishka.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"tonishka":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.storage.meeting.JsonMeetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.storage.meeting.MeetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Reache ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        //commenting out this does not affect the startup","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"        MeetingBookStorage meetingBookStorage \u003d new JsonMeetingBookStorage(userPrefs.getMeetingBookFilePath());","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"        storage \u003d new StorageManager(addressBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"        Optional\u003cReadOnlyMeetingBook\u003e meetingBookOptional;","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"        ReadOnlyAddressBook initialAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"        ReadOnlyMeetingBook initialMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook and MeetingBook\");","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"            initialAddressBook \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"            logger.warning(\"Data file not in the correct format. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"                    + \"Will be starting with an empty AddressBook and MeetingBook\");","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"            logger.warning(\"Problem while reading from the file. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"                    + \"Will be starting with an empty AddressBook and MeetingBook\");","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"            meetingBookOptional \u003d storage.readMeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"            if (!meetingBookOptional.isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"                logger.info(\"Data file not found. Will be starting with an empty MeetingBook\");","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"                initialMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"                initialMeetingBook \u003d meetingBookOptional.get();","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"            logger.warning(\"Data file not in the correct format. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"                    + \"Will be starting with an empty MeetingBook\");","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"            initialMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"            logger.warning(\"Problem while reading from the file. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"                    + \"Will be starting with an empty MeetingBook\");","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":"            initialMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"        return new ModelManager(initialAddressBook, initialMeetingBook, userPrefs);","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ckcherry23":31,"NicsunXnus":3,"-":177,"tonishka":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"A person with this name already exists. \"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"            + \"Please do add tags to other persons with the same name to differentiate between them!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"A meeting with this agenda already exists. \";","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_DUPLICATE_DETAILS \u003d \"A person with these details already exists. \"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"            + \"Please do add tags that differentiate between them!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_INVALID_VIEW \u003d \"This command is invalid here!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":5,"NicsunXnus":2,"-":12}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"    //Important","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NicsunXnus":2,"-":116}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        return \"Index: \" + zeroBasedIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"NicsunXnus":5,"-":54}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if {@code items} contain any elements that are empty strings.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"    public static boolean hasEmptyString(Collection\u003c?\u003e items) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"        return items.contains(\"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":7,"-":35}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"     * Returns true if one or more of entries in the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"     *       containsWordIgnoreCaseInSet([\"ABc def\", \"pqr\", \"wst\"], \"abc\") \u003d\u003d true","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"     *       containsWordIgnoreCaseInSet([\"def\", \"aBc\", \"bnm\"], \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"     *       containsWordIgnoreCaseInSet([\"ABc def\", \"pqr\"], \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"tonishka"},"content":"    public static boolean containsWordIgnoreCaseInSet(HashSet\u003c? extends Object\u003e sentence, String word) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"tonishka"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"tonishka"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"tonishka"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"tonishka"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"tonishka"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"tonishka"},"content":"        return sentence.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"tonishka"},"content":"                .flatMap(t -\u003e Arrays.stream(t.toString().split(\" \")))","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"tonishka"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"tonishka"},"content":"     * Returns true if one or more entries in the value set of {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"tonishka"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"tonishka"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"tonishka"},"content":"     *       containsWordIgnoreCaseInMap({a\u003d\"ABc def\", b\u003d\"pqr\", c\u003d\"wst\"}, \"abc\") \u003d\u003d true","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"tonishka"},"content":"     *       containsWordIgnoreCaseInMap({d\u003d\"def\", e\u003d\"aBc\", f\u003d\"bnm\"}, \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"tonishka"},"content":"     *       containsWordIgnoreCaseInMap({g\u003d\"ABc def\", h\u003d\"pqr\"}, \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"tonishka"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"tonishka"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"tonishka"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"tonishka"},"content":"    public static boolean containsWordIgnoreCaseInMap(Map\u003cLabel, ? extends Object\u003e sentence, String word) {","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"tonishka"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"tonishka"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"tonishka"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"tonishka"},"content":"        return sentence.values().stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"tonishka"},"content":"                .flatMap(s -\u003e Arrays.stream(s.toString().split(\" \")))","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"tonishka"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"muraddurrani":1,"-":69,"tonishka":50}},{"path":"src/main/java/seedu/address/logic/LabelUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import java.util.TreeMap;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":" * Contains utility methods for processing placeholder labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"public class LabelUtil {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"     * Replaces all placeholder labels in the given {@code Map\u003cLabel, Phone\u003e} with default labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"     * @param entries Map of phone numbers.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"     * @return A {@code Map\u003cLabel, Phone\u003e} with default labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"    public static Map\u003cLabel, Phone\u003e replacePhonePlaceholders(Map\u003cLabel, Phone\u003e entries) {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e labelledEntries \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e placeholderEntries \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"        for (Label label : entries.keySet()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"            if (label.isPlaceholder) {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"                placeholderEntries.put(label, entries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"                labelledEntries.put(label, entries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"        int i \u003d labelledEntries.size() + 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"        for (Label label : placeholderEntries.keySet()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"            labelledEntries.put(new Label(\"Phone #\" + i, false), placeholderEntries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"            i++;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"        return labelledEntries;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"     * Replaces all placeholder labels in the given {@code Map\u003cLabel, Email\u003e} with default labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"     * @param entries Map of emails.","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"     * @return A {@code Map\u003cLabel, Email\u003e} with default labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"    public static Map\u003cLabel, Email\u003e replaceEmailPlaceholders(Map\u003cLabel, Email\u003e entries) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e labelledEntries \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e placeholderEntries \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"        for (Label label : entries.keySet()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"            if (label.isPlaceholder) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"                placeholderEntries.put(label, entries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"                labelledEntries.put(label, entries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"        int i \u003d labelledEntries.size() + 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"        for (Label label : placeholderEntries.keySet()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"            labelledEntries.put(new Label(\"Email #\" + i, false), placeholderEntries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"            i++;","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"        return labelledEntries;","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"     * Replaces all placeholder labels in the given {@code Map\u003cLabel, Address\u003e} with default labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"     * @param entries Map of addresses.","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"     * @return A {@code Map\u003cLabel, Address\u003e} with default labels.","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"    public static Map\u003cLabel, Address\u003e replaceAddressPlaceholders(Map\u003cLabel, Address\u003e entries) {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e labelledEntries \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e placeholderEntries \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"        for (Label label : entries.keySet()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"            if (label.isPlaceholder) {","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"                placeholderEntries.put(label, entries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"                labelledEntries.put(label, entries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"        int i \u003d labelledEntries.size() + 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"        for (Label label : placeholderEntries.keySet()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"muraddurrani"},"content":"            labelledEntries.put(new Label(\"Address #\" + i, false), placeholderEntries.get(label));","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"muraddurrani"},"content":"            i++;","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"        return labelledEntries;","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"muraddurrani":96}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    CommandResult executePersonListCommand(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    CommandResult executeContactDetailsCommand(String commandText, Person person)","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"            throws CommandException, ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"    /** Returns an unmodifiable view of the list of persons */","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"     * Returns the MeetingBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"     * @see seedu.address.model.Model#getMeetingBook()","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"    ReadOnlyMeetingBook getMeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"    /** Returns an unmodifiable view of the list of meetings */","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"    /** Returns an unmodifiable view of the filtered list of meetings */","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"     * Returns the user prefs\u0027 meeting book file path.","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ckcherry23":15,"muraddurrani":19,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.parser.ContactDetailsParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    private final ContactDetailsParser contactDetailsParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        contactDetailsParser \u003d new ContactDetailsParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"    public CommandResult executePersonListCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"            storage.saveMeetingBook(model.getMeetingBook());","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"    public CommandResult executeContactDetailsCommand(String commandText, Person person)","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"            throws CommandException, ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"        CommandResult commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"        Command command \u003d contactDetailsParser.parseCommand(commandText, person);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":91,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"muraddurrani"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"        return model.getPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"    public ReadOnlyMeetingBook getMeetingBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"        return model.getMeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"        return model.getMeetingList();","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"muraddurrani"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"muraddurrani"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"        return model.getMeetingBookFilePath();","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"     * Clears the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"    public void clearAddressBook() {","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"     * Clears the meeting book.","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"    public void clearMeetingBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"        model.setMeetingBook(new MeetingBook());","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ckcherry23":33,"muraddurrani":29,"-":89}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRONOUN;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"            + \"Required Parameters: \"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_NAME + \"NAME \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"            + \"Optional Parameters: \"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_JOBTITLE + \"JOB TITLE \"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_PRONOUN + \"PRONOUN \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_JOBTITLE + \"salesperson \"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_COMPANY + \"Dunder Mifflin \"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_PRONOUN + \"He \"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_PRONOUN + \"Him\";","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"tonishka"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.getName().fullName), false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tonishka"},"content":"                false, true, false, toAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"        return \"Added: \" + toAdd.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":1,"NicsunXnus":5,"muraddurrani":16,"-":58,"tonishka":2}},{"path":"src/main/java/seedu/address/logic/commands/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"public class BackCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"    public static final String COMMAND_WORD \u003d \"back\";","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Returned to all contacts!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false,","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"                true, false, false, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"ckcherry23":17}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Opened clear confirmation window\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false, true, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":2,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"     * The person to be displayed in the ContactDetailsPanel.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"    private final Person person;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"     * The application should exit.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"     * The application should display the PersonListPanel.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    private final boolean loadPersonList;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"     * The application should display the ContactDetailsPanel.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"    private final boolean loadContactDetails;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"     * The previous command requires confirmation.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"    private final boolean requiresConfirmation;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean loadPersonList,","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"                         boolean loadContactDetails, boolean requiresConfirmation, Person person) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"        this.loadPersonList \u003d loadPersonList;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"        this.loadContactDetails \u003d loadContactDetails;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        this.requiresConfirmation \u003d requiresConfirmation;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        this(feedbackToUser, false, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"                false, false, null);","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showHelp}, and {@code exit},","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"    public CommandResult(String feedBackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"        this(feedBackToUser, showHelp, exit, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"                false, null);","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"muraddurrani"},"content":"    public boolean isLoadPersonList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"muraddurrani"},"content":"        return loadPersonList;","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"    public boolean isLoadContactDetails() {","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"        return loadContactDetails;","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    public boolean requiresConfirmation() {","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"        return requiresConfirmation;","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"    public Person getPerson() {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"        return person;","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":10,"NicsunXnus":23,"muraddurrani":29,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/ConfirmCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"public class ConfirmCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"    public static final String CONFIRMATION_MESSAGE \u003d \"Are you sure you want to proceed? (yes/no)\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"        return new CommandResult(CONFIRMATION_MESSAGE, false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"                true, false, true, null);","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":15}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete), false, false,","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"                true, false, false, null);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"        return targetIndex.equals(((DeleteCommand) other).targetIndex);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":12,"muraddurrani":2,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteFieldCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_DETAILS;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":" * Deletes the specified field from the contact being displayed.","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"public class DeleteFieldCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"            + \": Deletes the specified field from the contact being displayed.\"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"            + \"If a label is provided, deletes information for only that label.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"            + \"Parameters: FIELD [LABEL]\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"            + \"Example: \" + COMMAND_WORD + \" ph/ personal\";","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_DELETE_FIELD_SUCCESS \u003d \"Person after Field Delete: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_DELETE_NAME_FAILURE \u003d \"Name cannot be deleted\";","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    private final EditPersonDescriptor deleteFieldDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    private final Person personToDeleteField;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"     * Creates a command to facilitate deletion of fields in contact information.","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"     * @param deleteFieldDescriptor EditPersonDescriptor.","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"     * @param personToDeleteField Person.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"    public DeleteFieldCommand(EditPersonDescriptor deleteFieldDescriptor, Person personToDeleteField) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(deleteFieldDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(personToDeleteField);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"        this.personToDeleteField \u003d personToDeleteField;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"        this.deleteFieldDescriptor \u003d deleteFieldDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"        Person personToDeleteField \u003d this.personToDeleteField;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"        Person updatedPerson \u003d DeleteFieldCommand.createUpdatedPerson(deleteFieldDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"        if (!personToDeleteField.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DETAILS);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"        model.setPerson(personToDeleteField, updatedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FIELD_SUCCESS, updatedPerson), false, false,","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"                false, true, false, updatedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"        if (!(other instanceof DeleteFieldCommand)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"        return personToDeleteField.equals(((DeleteFieldCommand) other).personToDeleteField)","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 deleteFieldDescriptor.equals(((DeleteFieldCommand) other).deleteFieldDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToDeleteField}","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"     * edited with {@code deleteFieldDescriptor}.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"    public static Person createUpdatedPerson(EditPersonDescriptor deleteFieldDescriptor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"        Name updatedName \u003d deleteFieldDescriptor.getName().orElse(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"        Company updatedCompany \u003d deleteFieldDescriptor.getCompany().orElse(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"        JobTitle updatedJobTitle \u003d deleteFieldDescriptor.getJobTitle().orElse(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e updatedPhones \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"                new HashMap\u003c\u003e(deleteFieldDescriptor.getNumbers().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e updatedEmails \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"                new HashMap\u003c\u003e(deleteFieldDescriptor.getEmails().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e updatedAddresses \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"                new HashMap\u003c\u003e(deleteFieldDescriptor.getAddresses().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"        Set\u003cPronoun\u003e updatedPronouns \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"                new HashSet\u003c\u003e(deleteFieldDescriptor.getPronouns().orElse(new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"        Set\u003cTag\u003e updatedTags \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"                new HashSet\u003c\u003e(deleteFieldDescriptor.getTags().orElse(new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"        return new Person(updatedName, updatedPhones, updatedEmails, updatedAddresses,","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":"                updatedCompany, updatedJobTitle, updatedPronouns, updatedTags);","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":120,"muraddurrani":4}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_DETAILS;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.LabelUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the newly added person \"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"            + \" or an existing person being viewed in the displayed contact details list. \"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"            + \"Parameters (Any Order):\"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"%1$s\u0027s information has been updated\";","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"    private final Person personToEdit;","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"     * @param personToEdit         the target person","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"    public EditCommand(EditPersonDescriptor editPersonDescriptor, Person personToEdit) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        this.personToEdit \u003d personToEdit;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"        Person personToEdit \u003d this.personToEdit;","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"        Person editedPerson \u003d createUpdatedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DETAILS);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"tonishka"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson.getName().fullName),","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"tonishka"},"content":"                false, false, false, true, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"tonishka"},"content":"                editedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"     * edited with {@code editPersonDescriptor}.Note that this is different from createEditedPerson as","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"     * createEditedPerson replaces all HashMaps and HashSet components of Person with that of the editPersonDescriptor","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"     * while this adds the values of the HashMaps and HashSet components of Person with that of the","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"     * editedPersonDescriptor.","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"    public static Person createUpdatedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"        Id id \u003d personToEdit.getId();","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"        Name updatedName \u003d editPersonDescriptor.getName()","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"                .orElse(personToEdit.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"        Company updatedCompany \u003d editPersonDescriptor.getCompany()","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"                .orElse(personToEdit.getCompany().orElse(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"        JobTitle updatedJobTitle \u003d editPersonDescriptor.getJobTitle()","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"                .orElse(personToEdit.getJobTitle().orElse(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"        //New HashMaps are created to remove Unmodifiable Map\u0027s limitation","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e updatedPhones \u003d new HashMap\u003c\u003e(personToEdit.getNumbers());","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"        updatedPhones.putAll(editPersonDescriptor.getNumbers().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"        updatedPhones \u003d LabelUtil.replacePhonePlaceholders(updatedPhones);","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e updatedEmails \u003d new HashMap\u003c\u003e(personToEdit.getEmails());","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"        updatedEmails.putAll(editPersonDescriptor.getEmails().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"muraddurrani"},"content":"        updatedEmails \u003d LabelUtil.replaceEmailPlaceholders(updatedEmails);","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e updatedAddresses \u003d new HashMap\u003c\u003e(personToEdit.getAddresses());","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"        updatedAddresses.putAll(editPersonDescriptor.getAddresses().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"        updatedAddresses \u003d LabelUtil.replaceAddressPlaceholders(updatedAddresses);","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cPronoun\u003e updatedPronouns \u003d new HashSet\u003c\u003e(personToEdit.getPronouns());","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"        updatedPronouns.addAll(editPersonDescriptor.getPronouns().orElse(new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"        updatedTags.addAll(editPersonDescriptor.getTags().orElse(new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"muraddurrani"},"content":"        return new Person(id, updatedName, updatedPhones, updatedEmails, updatedAddresses,","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"                updatedCompany, updatedJobTitle, updatedPronouns, updatedTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"NicsunXnus"},"content":"        return personToEdit.equals(e.personToEdit)","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"        return \"Edit \" + personToEdit + \": \" + editPersonDescriptor;","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ckcherry23":10,"NicsunXnus":38,"muraddurrani":14,"-":86,"tonishka":4}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/Tesla SpaceX\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alice Bob\";","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"    private final FieldContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"    public FindCommand(FieldContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":37,"tonishka":6}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":" * Views the full contact details of the specified person.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the contact details of the person identified \"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"    public static final String SHOWING_CONTACT_INFO \u003d \"Showing contact information for %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    private final Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"     * @param index of the person in the filtered person list to display","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        Person toDisplay \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"        return new CommandResult(String.format(SHOWING_CONTACT_INFO, toDisplay.getName().fullName), false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"                false, true, false, toDisplay);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"ckcherry23":1,"muraddurrani":49,"tonishka":2}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"NicsunXnus":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/meeting/CancelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"public class CancelCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    public static final String COMMAND_WORD \u003d \"cancel\";","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"            + \": Cancels the meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Cancelled Meeting: %1$s\";","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"    public CancelCommand(Index targetIndex) {","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, meetingToDelete));","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"        if (!(other instanceof CancelCommand)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"        // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        return targetIndex.equals(((CancelCommand) other).targetIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":59}},{"path":"src/main/java/seedu/address/logic/commands/meeting/EmptyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"    public static final String COMMAND_WORD \u003d \"empty\";","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Opened clearing of meetings confirmation window\";","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false,","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"                true, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":18}},{"path":"src/main/java/seedu/address/logic/commands/meeting/MeetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDEES_INDEX;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_AGENDA;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_PLACE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":" * Creates a new meeting for the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"public class MeetCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"    public static final String COMMAND_WORD \u003d \"meet\";","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":Adds a new meeting.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"            + \"Required Parameters: \"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_ATTENDEES_INDEX + \"[INDEX OF PERSON IN REACHE] [MORE INDICES OF PEOPLE IN REACHE]...\"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"            + PREFIX_MEETING_AGENDA + \"AGENDA \"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"            + PREFIX_MEETING_PLACE + \"MEETING PLACE \"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"            + PREFIX_MEETING_TIME + \"MEETING TIME\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_ATTENDEES_INDEX + \"1 3 5 67 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"            + PREFIX_MEETING_AGENDA + \"Product Demo with Client \"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"            + PREFIX_MEETING_PLACE + \"Conference Room 5A \"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"            + PREFIX_MEETING_TIME + \"05-04-2022 15:44\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Created a new meeting: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"    private final Meeting toMeet;","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"    public MeetCommand(Meeting meeting) {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"        toMeet \u003d meeting;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"        Set\u003cId\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"        for (Index index : toMeet.getIndexes()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"                LogsCenter.getLogger(MeetCommand.class).info(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"            } else { //only add if valid","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"                attendees.add(lastShownList.get(index.getZeroBased()).getId());","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"        Meeting meetingWithAttendeesAdded \u003d toMeet.setAttendees(attendees);","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"        model.addMeeting(meetingWithAttendeesAdded);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingWithAttendeesAdded), false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"                true, false, false, null);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"                || (other instanceof MeetCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 toMeet.equals(((MeetCommand) other).toMeet));","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"        return \"New meeting: \" + toMeet.getAgenda().toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"ckcherry23":4,"NicsunXnus":76,"muraddurrani":4}},{"path":"src/main/java/seedu/address/logic/commands/meeting/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_MEETING;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDEES_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_AGENDA;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_PLACE;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Agenda;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.EditMeetingDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingPlace;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"            + \"[\" + PREFIX_ATTENDEES_INDEX + \"LIST_OF_ATTENDEES_INDEX] \"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"            + \"[\" + PREFIX_MEETING_AGENDA + \"AGENDA] \"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"            + \"[\" + PREFIX_MEETING_TIME + \"MEETING_TIME] \"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"            + \"[\" + PREFIX_MEETING_PLACE + \"MEETING PLACE] \";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_UPDATE_MEETING_SUCCESS \u003d \"%1$s\u0027s information has been updated\";","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_NOT_UPDATED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"     * @param targetIndex of the meeting in the filtered meeting list to edit","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"    public UpdateCommand(Index targetIndex, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"        List\u003cMeeting\u003e lastShownMeetingList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownMeetingList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"        Meeting meetingToEdit \u003d lastShownMeetingList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor, lastShownPersonList);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"        if (!meetingToEdit.isSameMeeting(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_MEETING_SUCCESS, meetingToEdit));","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor,","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"                                               List\u003cPerson\u003e lastShownPersonList) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(meetingToEdit);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"        Agenda updatedAgenda \u003d editMeetingDescriptor.getAgenda().orElse(meetingToEdit.getAgenda());","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"        MeetingPlace updatedPlace \u003d editMeetingDescriptor.getMeetingPlace().orElse(meetingToEdit.getPlace());","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"        MeetingTime updatedTime \u003d editMeetingDescriptor.getMeetingTime().orElse(meetingToEdit.getTime());","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cIndex\u003e updatedAttendeesIndexes \u003d editMeetingDescriptor.getAttendees()","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"                .orElse(meetingToEdit.getIndexes());","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"        Set\u003cId\u003e updatedAttendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"        for (Index index : updatedAttendeesIndexes) {","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"                LogsCenter.getLogger(MeetCommand.class).info(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"            } else { //only add if valid","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"                updatedAttendees.add(lastShownPersonList.get(index.getZeroBased()).getId());","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"        return new Meeting(updatedAgenda, updatedPlace, updatedTime, updatedAttendeesIndexes, updatedAttendees);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"        if (!(other instanceof UpdateCommand)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"        // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"        return targetIndex.equals(((UpdateCommand) other).targetIndex);","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ckcherry23":3,"NicsunXnus":117}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRONOUN;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.LabelUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"                ArgumentTokenizer","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"                        .tokenize(args,","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"                                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_COMPANY,","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"                                PREFIX_JOBTITLE, PREFIX_PRONOUN);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"        Company company \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"        JobTitle jobTitle \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e numbers \u003d ParserUtil.parseNumbers(argMultimap.getAllValues(PREFIX_PHONE));","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"        numbers \u003d LabelUtil.replacePhonePlaceholders(numbers);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e emails \u003d ParserUtil.parseEmails(argMultimap.getAllValues(PREFIX_EMAIL));","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"        emails \u003d LabelUtil.replaceEmailPlaceholders(emails);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e addresses \u003d ParserUtil.parseAddresses(argMultimap.getAllValues(PREFIX_ADDRESS));","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"        addresses \u003d LabelUtil.replaceAddressPlaceholders(addresses);","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_COMPANY)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"            company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_JOBTITLE)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"            jobTitle \u003d ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOBTITLE).get());","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cPronoun\u003e pronounList \u003d ParserUtil.parsePronouns(argMultimap.getAllValues(PREFIX_PRONOUN));","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"        Person person \u003d new Person(name, numbers, emails, addresses,","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"                company, jobTitle, pronounList, tagList);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ckcherry23":14,"NicsunXnus":17,"muraddurrani":13,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_VIEW;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.BackCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.CancelCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.EmptyCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.MeetCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.UpdateCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.meeting.CancelCommandParser;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.meeting.MeetCommandParser;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.meeting.UpdateCommandParser;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":" * Parses user input entered from the PersonList screen.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"        case MeetCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"            return new MeetCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"        case BackCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"            throw new ParseException(MESSAGE_INVALID_VIEW);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"        case CancelCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"            return new CancelCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"        case EmptyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"            return new EmptyCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":4,"NicsunXnus":21,"muraddurrani":5,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"     **/","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        for (Map.Entry\u003cPrefix, List\u003cString\u003e\u003e entry : argMultimap.entrySet()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"            builder.append(\"(Prefix:\" + entry.getKey() + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"            for (String arg : entry.getValue()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"                builder.append(\"Arg:\" + arg + \") \");","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"NicsunXnus":15,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"NicsunXnus":1,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"ph/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_PRONOUN \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_JOBTITLE \u003d new Prefix(\"j/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_LABEL \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_MEETING_TIME \u003d new Prefix(\"on/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_MEETING_PLACE \u003d new Prefix(\"in/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_MEETING_AGENDA \u003d new Prefix(\"for/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"    public static final Prefix PREFIX_ATTENDEES_INDEX \u003d new Prefix(\"with/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"NicsunXnus":9,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/ContactDetailsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.BackCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.DeleteFieldCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":" * Parses user input entered from the ContactDetails screen.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"public class ContactDetailsParser {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"    public Command parseCommand(String userInput, Person person) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"        case BackCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"            return new BackCommand();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"            return new EditCommandParser().parse(arguments, person);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        case DeleteFieldCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"            return new DeleteFieldCommandParser().parse(arguments, person);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":14,"NicsunXnus":1,"muraddurrani":49}},{"path":"src/main/java/seedu/address/logic/parser/DeleteFieldCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_VIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRONOUN;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.commands.DeleteFieldCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"public class DeleteFieldCommandParser implements Parser\u003cDeleteFieldCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    public DeleteFieldCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"        throw new ParseException(MESSAGE_INVALID_VIEW);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"     * Parses the user input to delete desired fields.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"     * @param args User input.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"     * @param personToDeleteField Person being edited.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"     * @return Command to delete fields of a person.","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"     * @throws ParseException For invalid user input.","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    public DeleteFieldCommand parse(String args, Person personToDeleteField) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY, PREFIX_JOBTITLE,","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"                        PREFIX_PRONOUN, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"                    DeleteFieldCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"        EditPersonDescriptor deleteFieldDescriptor \u003d new EditPersonDescriptor(personToDeleteField);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"            throw new ParseException(MESSAGE_INVALID_VIEW + \"\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"                    + DeleteFieldCommand.MESSAGE_DELETE_NAME_FAILURE);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"            deleteFieldDescriptor.setCompany(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"        if (argMultimap.getValue(PREFIX_JOBTITLE).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"            deleteFieldDescriptor.setJobTitle(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"        if (deleteFieldDescriptor.getNumbers().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"            Collection\u003cString\u003e numbersToBeDeleted \u003d argMultimap.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"            requireNonNull(numbersToBeDeleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"            if (CollectionUtil.hasEmptyString(numbersToBeDeleted)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"                deleteFieldDescriptor.setNumbers(new HashMap\u003c\u003e());","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"                Map\u003cLabel, Phone\u003e numbers \u003d new HashMap\u003c\u003e(deleteFieldDescriptor.getNumbers().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"                for (String number : numbersToBeDeleted) {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"                    if (!Label.isValidLabel(number)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"                        throw new ParseException(Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"                    numbers.remove(new Label(number, false));","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"                deleteFieldDescriptor.setNumbers(numbers);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"        if (deleteFieldDescriptor.getEmails().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"            Collection\u003cString\u003e emailsToBeDeleted \u003d argMultimap.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"            requireNonNull(emailsToBeDeleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"            if (CollectionUtil.hasEmptyString(emailsToBeDeleted)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"muraddurrani"},"content":"                deleteFieldDescriptor.setEmails(new HashMap\u003c\u003e());","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"                Map\u003cLabel, Email\u003e emails \u003d new HashMap\u003c\u003e(deleteFieldDescriptor.getEmails().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"                for (String email : emailsToBeDeleted) {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"                    if (!Label.isValidLabel(email)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"muraddurrani"},"content":"                        throw new ParseException(Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"                    emails.remove(new Label(email, false));","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"                deleteFieldDescriptor.setEmails(emails);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"        if (deleteFieldDescriptor.getAddresses().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"            Collection\u003cString\u003e addressesToBeDeleted \u003d argMultimap.getAllValues(PREFIX_ADDRESS);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"            requireNonNull(addressesToBeDeleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"            if (CollectionUtil.hasEmptyString(addressesToBeDeleted)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"muraddurrani"},"content":"                deleteFieldDescriptor.setAddresses(new HashMap\u003c\u003e());","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"muraddurrani"},"content":"                Map\u003cLabel, Address\u003e addresses \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"                        new HashMap\u003c\u003e(deleteFieldDescriptor.getAddresses().orElse(new HashMap\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"muraddurrani"},"content":"                for (String address : addressesToBeDeleted) {","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"muraddurrani"},"content":"                    if (!Label.isValidLabel(address)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"muraddurrani"},"content":"                        throw new ParseException(Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"muraddurrani"},"content":"                    }","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"muraddurrani"},"content":"                    addresses.remove(new Label(address, false));","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"muraddurrani"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"                deleteFieldDescriptor.setAddresses(addresses);","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"        if (deleteFieldDescriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"            Collection\u003cString\u003e tagsToBeDeleted \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"            requireNonNull(tagsToBeDeleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"            if (CollectionUtil.hasEmptyString(tagsToBeDeleted)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"muraddurrani"},"content":"                deleteFieldDescriptor.setTags(new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"                Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(deleteFieldDescriptor.getTags().orElse(new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":"                tagsToBeDeleted.forEach(tag -\u003e tags.remove(new Tag(tag)));","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"                deleteFieldDescriptor.setTags(tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"        if (deleteFieldDescriptor.getPronouns().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"            Collection\u003cString\u003e pronounsToBeDeleted \u003d argMultimap.getAllValues(PREFIX_PRONOUN);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":"            requireNonNull(pronounsToBeDeleted);","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"            if (CollectionUtil.hasEmptyString(pronounsToBeDeleted)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"muraddurrani"},"content":"                deleteFieldDescriptor.setPronouns(new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"                Set\u003cPronoun\u003e pronouns \u003d new HashSet\u003c\u003e(deleteFieldDescriptor.getPronouns().orElse(new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"ckcherry23"},"content":"                pronounsToBeDeleted.forEach(pronoun -\u003e pronouns.remove(new Pronoun(pronoun)));","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":"                deleteFieldDescriptor.setPronouns(pronouns);","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"ckcherry23"},"content":"        return new DeleteFieldCommand(deleteFieldDescriptor, personToDeleteField);","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":134,"muraddurrani":30}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRONOUN;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"public class EditCommandParser {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"    public EditCommand parse(String args, Person personToEdit) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY,","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"                        PREFIX_JOBTITLE, PREFIX_PRONOUN, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"        //----Single-field data----","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"            editPersonDescriptor.setCompany(ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"        if (argMultimap.getValue(PREFIX_JOBTITLE).isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"            editPersonDescriptor.setJobTitle(ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOBTITLE).get()));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"        //----Multi-field data-----","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        parseNumbersForEdit(argMultimap.getAllValues(PREFIX_PHONE)).ifPresent(editPersonDescriptor::setNumbers);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"        parseAddressesForEdit(argMultimap.getAllValues(PREFIX_ADDRESS)).ifPresent(editPersonDescriptor::setAddresses);","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"        parseEmailsForEdit(argMultimap.getAllValues(PREFIX_EMAIL)).ifPresent(editPersonDescriptor::setEmails);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"        parsePronounsForEdit(argMultimap.getAllValues(PREFIX_PRONOUN)).ifPresent(editPersonDescriptor::setPronouns);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"        return new EditCommand(editPersonDescriptor, personToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"    private Optional\u003cHashMap\u003cLabel, Email\u003e\u003e parseEmailsForEdit(Collection\u003cString\u003e emails) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"        assert emails !\u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"        if (emails.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"        Collection\u003cString\u003e emailCollection \u003d emails.size() \u003d\u003d 1 \u0026\u0026 emails.contains(\"\")","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"                ? Collections.emptySet() : emails;","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.of(ParserUtil.parseEmails(emailCollection));","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"    private Optional\u003cHashMap\u003cLabel, Phone\u003e\u003e parseNumbersForEdit(Collection\u003cString\u003e numbers) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"        assert numbers !\u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"        if (numbers.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"        Collection\u003cString\u003e numberCollection \u003d numbers.size() \u003d\u003d 1 \u0026\u0026 numbers.contains(\"\")","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"                ? Collections.emptySet() : numbers;","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.of(ParserUtil.parseNumbers(numberCollection));","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"    private Optional\u003cHashMap\u003cLabel, Address\u003e\u003e parseAddressesForEdit(Collection\u003cString\u003e addresses)","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"            throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"        assert addresses !\u003d null;","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"        if (addresses.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"        Collection\u003cString\u003e addressCollection \u003d addresses.size() \u003d\u003d 1 \u0026\u0026 addresses.contains(\"\")","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"                ? Collections.emptySet() : addresses;","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.of(ParserUtil.parseAddresses(addressCollection));","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"     * Parses {@code Collection\u003cString\u003e pronouns} into a {@code Set\u003cPronoun\u003e} if {@code pronouns} is non-empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"NicsunXnus"},"content":"     * If {@code pronouns} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"NicsunXnus"},"content":"     * {@code Set\u003cPronoun\u003e} containing zero tags.","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"NicsunXnus"},"content":"    private Optional\u003cSet\u003cPronoun\u003e\u003e parsePronounsForEdit(Collection\u003cString\u003e pronouns) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"        assert pronouns !\u003d null;","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"NicsunXnus"},"content":"        if (pronouns.isEmpty()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"NicsunXnus"},"content":"        Collection\u003cString\u003e pronounSet \u003d pronouns.size() \u003d\u003d 1 \u0026\u0026 pronouns.contains(\"\")","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"                ? Collections.emptySet() : pronouns;","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.of(ParserUtil.parsePronouns(pronounSet));","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ckcherry23":1,"NicsunXnus":73,"muraddurrani":4,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"        // If field is not provided or not a valid field, all fields are searched.","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"        String field \u003d \"all\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"        // To be used as keywords if no field is specified, updated later conditionally.","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"        String[] fieldKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"        // Temporary array to hold intermediate values.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"        String[] tempArr \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"        // Regex to check if field is specified by user.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"        String checkField \u003d \"^[a-z]{1,2}[/](.|\\\\n)*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"        if (trimmedArgs.matches(checkField)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"            tempArr \u003d trimmedArgs.split(\"/\", 2);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"            field \u003d tempArr[0];","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"        if (!field.equals(\"all\") \u0026\u0026 tempArr[1].trim().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":"            // Field provided but no keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"        if (!field.equals(\"all\") \u0026\u0026 !tempArr[1].trim().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"            // Field provided and keywords are given","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"            fieldKeywords \u003d tempArr[1].trim().split(\"\\\\s+\");","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"        return new FindCommand(new FieldContainsKeywordsPredicate(Arrays.asList(fieldKeywords), field));","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"-":30,"tonishka":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Agenda;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingPlace;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"     * Parse a series of indexes in a String into a Set of Index.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"     * index in the String can be spaced apart anyhow and if the index","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"     * is invalid etc; Not a number, throws a MESSAGE_INVALID_INDEX","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"     * @param indexes series of indexes to be parsed","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"     * @return a set of Index","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"    public static Set\u003cIndex\u003e parseAttendees(String indexes) {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"        HashSet\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"        String[] arrayOfIndexes \u003d indexes.split(\"\\\\s+\"); //if indexes are randomly spaced apart","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"        Arrays.stream(arrayOfIndexes).forEach(index -\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"                int indexIntegerForm \u003d Integer.parseInt(index.trim());","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"                indexSet.add(Index.fromOneBased(indexIntegerForm)); //creates and add indexes to the hashset","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"            } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"                LogsCenter.getLogger(ParserUtil.class).info(() -\u003e MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"        });","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"        return indexSet;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the meeting agenda information from the String to","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"     * an MeetingAgenda object.","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"     * @param agenda Meeting agenda","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"     * @return MeetingAgenda","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException when agenda is invalid","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"    public static Agenda parseAgenda(String agenda) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(agenda);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedAgenda \u003d agenda.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"        if (!Agenda.isValidAgenda(trimmedAgenda)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(Agenda.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"        return new Agenda(trimmedAgenda);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the meeting place information from the String to","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"     * an MeetingPlace object","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"     * @param meetingPlace MeetingPlace","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"     * @return MeetingPlace","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException when meeting place is invalid","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"    public static MeetingPlace parseMeetingPlace(String meetingPlace) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(meetingPlace);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedMeetingPlace \u003d meetingPlace.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"        if (!MeetingPlace.isValidMeetingPlace(trimmedMeetingPlace)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(MeetingPlace.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"        return new MeetingPlace(trimmedMeetingPlace);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the meeting time information from the String to","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"     * an MeetingTime object","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"     * @param meetingTime MeetingTime","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"     * @return MeetingTime","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException when meeting time is invalid","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"    public static MeetingTime parseMeetingTime(String meetingTime) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedMeetingTime \u003d meetingTime.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"            LocalDateTime meetingTimeFormatted \u003d LocalDateTime.parse(trimmedMeetingTime,","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"            return new MeetingTime(meetingTimeFormatted);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"NicsunXnus"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"muraddurrani"},"content":"     * Parses {@code String userInput} into an {@code Label}.","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException if the {@code trimmedLabel} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"muraddurrani"},"content":"    public static Label parseLabel(String userInput) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedUserInput \u003d userInput.trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"NicsunXnus"},"content":"        if (trimmedUserInput.contains(\" l/\")) {","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"muraddurrani"},"content":"            String[] inputWithTag \u003d trimmedUserInput.split(\" l/\", 2);","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"muraddurrani"},"content":"            String trimmedLabel \u003d inputWithTag[1].trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"muraddurrani"},"content":"            if (!Label.isValidLabel(trimmedLabel)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"muraddurrani"},"content":"                throw new ParseException(Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"muraddurrani"},"content":"            return new Label(trimmedLabel, false);","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"NicsunXnus"},"content":"        } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"muraddurrani"},"content":"            return new Label(userInput, true);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"NicsunXnus"},"content":"     * Parses a {@code String company} into a {@code Company}.","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"NicsunXnus"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(company);","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"NicsunXnus"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"NicsunXnus"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"     * Parses a {@code String jobTitle} into a {@code JobTitle}.","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if the given {@code jobTitle} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"NicsunXnus"},"content":"    public static JobTitle parseJobTitle(String jobTitle) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedJobTitle \u003d jobTitle.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"NicsunXnus"},"content":"        if (!JobTitle.isValidJobTitle(trimmedJobTitle)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"NicsunXnus"},"content":"        return new JobTitle(trimmedJobTitle);","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"NicsunXnus"},"content":"     * Parses a {@code String Address} into a {@code Address}.","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":200,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if the given {@code Address} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":201,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":202,"author":{"gitId":"NicsunXnus"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":205,"author":{"gitId":"NicsunXnus"},"content":"        String[] addressWithTag \u003d trimmedAddress.split(\" l/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"NicsunXnus"},"content":"        //Regardless if there is a label or not, the first entry in the array","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"NicsunXnus"},"content":"        //will always be the main value (without label), so this works","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"NicsunXnus"},"content":"        if (!Address.isValidAddress(addressWithTag[0]) || addressWithTag[0].contains(\"l/\")) {","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":210,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":211,"author":{"gitId":"NicsunXnus"},"content":"        return new Address(addressWithTag[0].trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":213,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":215,"author":{"gitId":"muraddurrani"},"content":"     * Parses a collection of {@code Collection\u003cString\u003e addresses} into pairs of {@code Address} and its {@code Label}.","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"NicsunXnus"},"content":"     * The Address object-label pairs are then added into a HashMap.","lastModifiedDate":"2022-03-09"},{"lineNumber":217,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException if the given address or label is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"muraddurrani"},"content":"    public static HashMap\u003cLabel, Address\u003e parseAddresses(Collection\u003cString\u003e addresses) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(addresses);","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"muraddurrani"},"content":"        final HashMap\u003cLabel, Address\u003e addressesMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"NicsunXnus"},"content":"        for (String address : addresses) {","lastModifiedDate":"2022-03-09"},{"lineNumber":225,"author":{"gitId":"NicsunXnus"},"content":"            Address parsedAddress \u003d parseAddress(address);","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"muraddurrani"},"content":"            Label label \u003d parseLabel(address);","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"NicsunXnus"},"content":"            addressesMap.put(label, parsedAddress);","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":229,"author":{"gitId":"NicsunXnus"},"content":"        return addressesMap;","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":241,"author":{"gitId":"NicsunXnus"},"content":"        String[] phoneWithTag \u003d trimmedPhone.split(\" l/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":242,"author":{"gitId":"NicsunXnus"},"content":"        //Regardless if there is a label or not, the first entry in the array","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"NicsunXnus"},"content":"        //will always be the main value (without label), so this works","lastModifiedDate":"2022-03-10"},{"lineNumber":244,"author":{"gitId":"NicsunXnus"},"content":"        if (!Phone.isValidPhone(phoneWithTag[0]) || phoneWithTag[0].contains(\"l/\")) {","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"NicsunXnus"},"content":"        return new Phone(phoneWithTag[0].trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"muraddurrani"},"content":"     * Parses a collection of {@code Collection\u003cString\u003e numbers} into pairs of {@code Phone} and its {@code Label}.","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"NicsunXnus"},"content":"     * The Phone object-label pairs are then added into a HashMap.","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException if the given phone or label is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"muraddurrani"},"content":"    public static HashMap\u003cLabel, Phone\u003e parseNumbers(Collection\u003cString\u003e numbers) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(numbers);","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"muraddurrani"},"content":"        final HashMap\u003cLabel, Phone\u003e numbersMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"NicsunXnus"},"content":"        for (String phone : numbers) {","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"NicsunXnus"},"content":"            Phone parsedPhone \u003d parsePhone(phone);","lastModifiedDate":"2022-03-10"},{"lineNumber":262,"author":{"gitId":"muraddurrani"},"content":"            Label label \u003d parseLabel(phone);","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"NicsunXnus"},"content":"            numbersMap.put(label, parsedPhone);","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":265,"author":{"gitId":"NicsunXnus"},"content":"        return numbersMap;","lastModifiedDate":"2022-03-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"NicsunXnus"},"content":"     * Parses a {@code String email} into a {@code Email}.","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":277,"author":{"gitId":"NicsunXnus"},"content":"        String[] emailWithTag \u003d trimmedEmail.split(\" l/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":278,"author":{"gitId":"NicsunXnus"},"content":"        //Regardless if there is a label or not, the first entry in the array","lastModifiedDate":"2022-03-10"},{"lineNumber":279,"author":{"gitId":"NicsunXnus"},"content":"        //will always be the main value (without label), so this works","lastModifiedDate":"2022-03-10"},{"lineNumber":280,"author":{"gitId":"NicsunXnus"},"content":"        if (!Email.isValidEmail(emailWithTag[0]) || emailWithTag[0].contains(\"l/\")) {","lastModifiedDate":"2022-03-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":283,"author":{"gitId":"NicsunXnus"},"content":"        return new Email(emailWithTag[0].trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":284,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":285,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"muraddurrani"},"content":"     * Parses a collection of {@code Collection\u003cString\u003e emails} into pairs of {@code Email} and its {@code Label}.","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"NicsunXnus"},"content":"     * The Email object-label pairs are then added into a HashMap.","lastModifiedDate":"2022-03-09"},{"lineNumber":289,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-09"},{"lineNumber":290,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":291,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException if the given email or label is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"muraddurrani"},"content":"    public static HashMap\u003cLabel, Email\u003e parseEmails(Collection\u003cString\u003e emails) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(emails);","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"muraddurrani"},"content":"        final HashMap\u003cLabel, Email\u003e emailMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"NicsunXnus"},"content":"        for (String email : emails) {","lastModifiedDate":"2022-03-09"},{"lineNumber":297,"author":{"gitId":"NicsunXnus"},"content":"            Email parsedEmail \u003d parseEmail(email);","lastModifiedDate":"2022-03-10"},{"lineNumber":298,"author":{"gitId":"muraddurrani"},"content":"            Label label \u003d parseLabel(email);","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"NicsunXnus"},"content":"            emailMap.put(label, parsedEmail);","lastModifiedDate":"2022-03-10"},{"lineNumber":300,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"NicsunXnus"},"content":"        return emailMap;","lastModifiedDate":"2022-03-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":330,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":331,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":332,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":333,"author":{"gitId":"NicsunXnus"},"content":"     * Parses a {@code String pronoun} into a {@code Pronoun}.","lastModifiedDate":"2022-03-06"},{"lineNumber":334,"author":{"gitId":"NicsunXnus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":335,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":336,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if the given {@code pronoun} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":337,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":338,"author":{"gitId":"NicsunXnus"},"content":"    public static Pronoun parsePronoun(String pronoun) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":339,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(pronoun);","lastModifiedDate":"2022-03-06"},{"lineNumber":340,"author":{"gitId":"NicsunXnus"},"content":"        String trimmedPronoun \u003d pronoun.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":341,"author":{"gitId":"NicsunXnus"},"content":"        if (!Pronoun.isValidPronoun(trimmedPronoun)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":342,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(Pronoun.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":343,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":344,"author":{"gitId":"NicsunXnus"},"content":"        return new Pronoun(trimmedPronoun);","lastModifiedDate":"2022-03-06"},{"lineNumber":345,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":346,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":347,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":348,"author":{"gitId":"NicsunXnus"},"content":"     * Parses {@code Collection\u003cString\u003e pronouns} into a {@code Set\u003cPronoun\u003e}.","lastModifiedDate":"2022-03-06"},{"lineNumber":349,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":350,"author":{"gitId":"NicsunXnus"},"content":"    public static Set\u003cPronoun\u003e parsePronouns(Collection\u003cString\u003e pronouns) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":351,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(pronouns);","lastModifiedDate":"2022-03-06"},{"lineNumber":352,"author":{"gitId":"NicsunXnus"},"content":"        final Set\u003cPronoun\u003e pronounSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":353,"author":{"gitId":"NicsunXnus"},"content":"        for (String pronoun : pronouns) {","lastModifiedDate":"2022-03-06"},{"lineNumber":354,"author":{"gitId":"NicsunXnus"},"content":"            pronounSet.add(parsePronoun(pronoun));","lastModifiedDate":"2022-03-06"},{"lineNumber":355,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":356,"author":{"gitId":"NicsunXnus"},"content":"        return pronounSet;","lastModifiedDate":"2022-03-06"},{"lineNumber":357,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"NicsunXnus":215,"muraddurrani":27,"-":114,"tonishka":2}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"NicsunXnus":1,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"     * and returns an ViewCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"        Index index;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"muraddurrani":37}},{"path":"src/main/java/seedu/address/logic/parser/meeting/CancelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.CancelCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"public class CancelCommandParser {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the given {@code String} of arguments in the context of the CancelCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"     * and returns a CancelCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    public CancelCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"            return new CancelCommand(index);","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"NicsunXnus":25}},{"path":"src/main/java/seedu/address/logic/parser/meeting/MeetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDEES_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_AGENDA;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_PLACE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.MeetCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Agenda;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingPlace;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"public class MeetCommandParser implements Parser\u003cMeetCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"     * Returns true if all prefixes are present in the multimap.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"     * @param argMap argument multimap","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"     * @param prefixes prefixes should contain with/, for/, in/, on/","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"     * @return true if all prefixes are present in the multimap","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"    private static boolean checkAllPrefixPresent(ArgumentMultimap argMap, Prefix... prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"            if (!arePrefixesPresent(argMap, prefix)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"        return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"     * Parses a string of argument into a MeetCommand. The information pertaining to a Meeting","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"     * is read and extracted out by the ParserUtil class and a Meeting object is created","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"     * from the extracted information.","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"     * Note that this means it is not allowed for indexes to","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"     * @param args arguments for a meeting","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"     * @return MeetCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if there are no indexes or agenda in the arguments","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"    public MeetCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"                ArgumentTokenizer","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"                        .tokenize(args,","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"                                PREFIX_ATTENDEES_INDEX, PREFIX_MEETING_AGENDA, PREFIX_MEETING_PLACE,","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"                                PREFIX_MEETING_TIME);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        if (!checkAllPrefixPresent(argMultimap, PREFIX_MEETING_AGENDA, PREFIX_MEETING_TIME, PREFIX_MEETING_PLACE,","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"                PREFIX_ATTENDEES_INDEX)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeetCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"        Set\u003cIndex\u003e indexes \u003d ParserUtil.parseAttendees(argMultimap.getValue(PREFIX_ATTENDEES_INDEX).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"        //return a Hashset of indexes and not a set of person since the model is only accessible inside the MeetCommand.","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"        //Inside the meet command is where the handling of out of bounds exceptions happens.","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"        Agenda agenda \u003d ParserUtil.parseAgenda(argMultimap.getValue(PREFIX_MEETING_AGENDA).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"        MeetingPlace meetingPlace \u003d ParserUtil.parseMeetingPlace(argMultimap.getValue(PREFIX_MEETING_PLACE).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"        MeetingTime meetingTime \u003d ParserUtil.parseMeetingTime(argMultimap.getValue(PREFIX_MEETING_TIME).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"        Meeting createdMeeting \u003d new Meeting(agenda, meetingPlace, meetingTime, indexes, new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"        return new MeetCommand(createdMeeting);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"ckcherry23":3,"NicsunXnus":79}},{"path":"src/main/java/seedu/address/logic/parser/meeting/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDEES_INDEX;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_AGENDA;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_PLACE;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_TIME;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.commands.meeting.UpdateCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.EditMeetingDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"     * and returns a UpdateCommand object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"    public UpdateCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ATTENDEES_INDEX, PREFIX_MEETING_TIME,","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"                        PREFIX_MEETING_PLACE, PREFIX_MEETING_AGENDA);","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"        Index index;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"        if (argMultimap.getValue(PREFIX_ATTENDEES_INDEX).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"            editMeetingDescriptor.setAttendees(ParserUtil","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"                    .parseAttendees(argMultimap.getValue(PREFIX_ATTENDEES_INDEX).get()));","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_AGENDA).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"            editMeetingDescriptor.setAgenda(ParserUtil.parseAgenda(argMultimap.getValue(PREFIX_MEETING_AGENDA).get()));","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_TIME).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"            editMeetingDescriptor.setMeetingTime(ParserUtil","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"                    .parseMeetingTime(argMultimap.getValue(PREFIX_MEETING_TIME).get()));","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_PLACE).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"            editMeetingDescriptor.setMeetingPlace(ParserUtil","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"                    .parseMeetingPlace(argMultimap.getValue(PREFIX_MEETING_PLACE).get()));","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"            throw new ParseException(UpdateCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"        return new UpdateCommand(index, editMeetingDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"NicsunXnus":61}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"    public AddressBook() {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"        return persons.asUnmodifiableObservableList().size() + \"AddressBook{\"","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"                + \"persons\u003d\" + persons.toString() + \u0027}\u0027;","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ckcherry23":2,"NicsunXnus":2,"-":116}},{"path":"src/main/java/seedu/address/model/MeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.MeetingsList;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":" * Wraps all data at the model-book level","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":" * Duplicates are not allowed (by .isSameMeeting comparison)","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"public class MeetingBook implements ReadOnlyMeetingBook {","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"    private final MeetingsList meetings;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"    /*","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"     *   among constructors.","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"    {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"        meetings \u003d new MeetingsList();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"    public MeetingBook() {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"     * Creates a MeetingBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"    public MeetingBook(ReadOnlyMeetingBook toBeCopied) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"        this();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"     * Resets the existing data of this {@code MeetingBook} with {@code newData}.","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"    public void resetData(ReadOnlyMeetingBook newData) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"    //// person-level operations","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the model book.","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"     * Adds a meeting to the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"     * The meeting must not already exist in the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"        meetings.add(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"     * {@code target} must exist in the model book.","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the model book.","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"     * Removes {@code key} from this {@code MeetingBook}.","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"     * {@code key} must exist in the model book.","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"        meetings.remove(key);","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"    //// util methods","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"        return meetings.asUnmodifiableObservableList().size() + \"MeetingBook{\"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"                + \"meetings\u003d\" + meetings.toString() + \u0027}\u0027;","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"tonishka"},"content":"        return meetings.asUnmodifiableObservableList().filtered(m -\u003e !m.getTime().isExpiredMeetingTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"                || (other instanceof MeetingBook // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 meetings.equals(((MeetingBook) other).meetings));","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"        return meetings.hashCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":119,"tonishka":1}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"    /** Returns an unmodifiable view of the list of persons */","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"    //--------------------------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"     * Returns the user prefs\u0027 meeting book file path.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"     * Sets the user prefs\u0027 meeting book file path.","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"    void setMeetingBookFilePath(Path meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"     * Replaces meeeting book data with the data in {@code meetingBook}.","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"    void setMeetingBook(ReadOnlyMeetingBook meetingBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"    ReadOnlyMeetingBook getMeetingBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the meeting book.","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"     * The meeting must exist in the meeting book.","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"NicsunXnus"},"content":"    void deleteMeeting(Meeting meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"     * Adds the given meeting.","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"     * {@code meeting} must not already exist in the meeting book.","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"NicsunXnus"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"     * Replaces the given model {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"NicsunXnus"},"content":"     * {@code target} must exist in the meeting book.","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"NicsunXnus"},"content":"     * The meeting identity of {@code editedMeeting} must not be the","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"     * same as another existing meeting in the meeting book.","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"NicsunXnus"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"muraddurrani"},"content":"    /** Returns an unmodifiable view of the list of meetings */","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"muraddurrani"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"NicsunXnus"},"content":"    /** Returns an unmodifiable view of the filtered meeting list */","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"NicsunXnus"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"NicsunXnus"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"NicsunXnus"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ckcherry23":11,"NicsunXnus":48,"muraddurrani":6,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"    private final MeetingBook meetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"     * Initializes a ModelManager with the given addressBook, modelBook and userPrefs.","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyMeetingBook meetingBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"        requireAllNonNull(addressBook, meetingBook, userPrefs);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \", meeting book: \" + meetingBook","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"        this.meetingBook \u003d new MeetingBook(meetingBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.meetingBook.getMeetingList());","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"        this(new AddressBook(), new MeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"        return userPrefs.getMeetingBookFilePath();","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"    public void setMeetingBookFilePath(Path meetingBookFilePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"        userPrefs.setMeetingBookFilePath(meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MeetingBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeetingBook(ReadOnlyMeetingBook meetingBook) {","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"NicsunXnus"},"content":"        this.meetingBook.resetData(meetingBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"    public ReadOnlyMeetingBook getMeetingBook() {","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"NicsunXnus"},"content":"        return meetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"NicsunXnus"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"        return meetingBook.hasMeeting(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"NicsunXnus"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"NicsunXnus"},"content":"        meetingBook.removeMeeting(target);","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"NicsunXnus"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"NicsunXnus"},"content":"        meetingBook.addMeeting(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"NicsunXnus"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"NicsunXnus"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"NicsunXnus"},"content":"        meetingBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"NicsunXnus"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"muraddurrani"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting}","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"muraddurrani"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"muraddurrani"},"content":"        return meetingBook.getMeetingList().sorted(Meeting::compareTo);","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"NicsunXnus"},"content":"     * {@code versionedMeetingBook}","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"NicsunXnus"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"NicsunXnus"},"content":"        return filteredMeetings.sorted(Meeting::compareTo);","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"NicsunXnus"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"NicsunXnus"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"muraddurrani"},"content":"     * Returns an unmodifiable view of the list of {@code Person}","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"muraddurrani"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"muraddurrani"},"content":"        return addressBook.getPersonList().sorted(Person::compareTo);","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"tonishka"},"content":"        return filteredPersons.sorted(Person::compareTo);","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":212,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"NicsunXnus"},"content":"        //TODO needs updating","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":241,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"NicsunXnus"},"content":"        //TODO needs updating","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"ckcherry23"},"content":"        return \"ModelManager{\"","lastModifiedDate":"2022-03-11"},{"lineNumber":244,"author":{"gitId":"ckcherry23"},"content":"                + \"addressBook\u003d\" + addressBook","lastModifiedDate":"2022-03-11"},{"lineNumber":245,"author":{"gitId":"ckcherry23"},"content":"                + \", userPrefs\u003d\" + userPrefs","lastModifiedDate":"2022-03-11"},{"lineNumber":246,"author":{"gitId":"ckcherry23"},"content":"                + \", filteredPersons\u003d\" + filteredPersons","lastModifiedDate":"2022-03-11"},{"lineNumber":247,"author":{"gitId":"ckcherry23"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-03-11"},{"lineNumber":248,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ckcherry23":21,"NicsunXnus":68,"muraddurrani":16,"-":143,"tonishka":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyMeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"public interface ReadOnlyMeetingBook {","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ckcherry23":1,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    private Path meetingBookFilePath \u003d Paths.get(\"data\" , \"meetingbook.json\");","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"        setMeetingBookFilePath(newUserPrefs.getMeetingBookFilePath());","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"        return meetingBookFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    public void setMeetingBookFilePath(Path meetingBookFilePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"        this.meetingBookFilePath \u003d meetingBookFilePath;","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 meetingBookFilePath.equals(o.meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"        sb.append(\"\\nLocal data address file location : \" + addressBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"        sb.append(\"\\nLocal data meeting file location : \" + meetingBookFilePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ckcherry23":16,"-":84}},{"path":"src/main/java/seedu/address/model/label/Label.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.model.label;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":" * Represents a Label in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidLabel(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"public class Label implements Comparable\u003cLabel\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Labels can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"    public final String label;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    public final boolean isPlaceholder;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"     * Constructs a {@code Label}.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"     * @param label A valid label name.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    public Label(String label, boolean isPlaceholder) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(label);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"        checkArgument(isValidLabel(label), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"        this.isPlaceholder \u003d isPlaceholder;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"     * Returns true if a given string is a valid label name.","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    public static boolean isValidLabel(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"                || (other instanceof Label // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 label.equals(((Label) other).label)","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 (isPlaceholder \u003d\u003d ((Label) other).isPlaceholder)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        return label.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"        return label;","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"    public int compareTo(Label other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"        return label.compareTo(other.label);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"muraddurrani":64}},{"path":"src/main/java/seedu/address/model/meeting/Agenda.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":" * Represents the agenda for the meeting","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"public class Agenda {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":"            \"Agenda can contain any character, and it should not be blank\";","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"     * The first character of the Agenda must not be a whitespace,","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"    public final String description;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"     * Constructs a {@code Agenda}.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"     * @param description A valid description of the agenda.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"    public Agenda(String description) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"        checkArgument(isValidAgenda(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"     * Returns true if a given string is a valid description of the agenda.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"    public static boolean isValidAgenda(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":"        return this.description;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"                || (other instanceof Agenda // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 description.equals(((Agenda) other).description)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"        return description.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tonishka":56}},{"path":"src/main/java/seedu/address/model/meeting/EditMeetingDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":" * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":" * corresponding field value of the person.","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"public class EditMeetingDescriptor {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"    private Agenda agenda;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"    private MeetingPlace meetingPlace;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"    private MeetingTime meetingTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"    private HashSet\u003cIndex\u003e attendees;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"    public EditMeetingDescriptor() {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"     * Copy constructor.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"     * A defensive copy of {@code attendees} is used internally.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"    public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"        setAttendees(toCopy.attendees);","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"        setMeetingTime(toCopy.meetingTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"        setMeetingPlace(toCopy.meetingPlace);","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"        setAgenda(toCopy.agenda);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"     * Meeting constructor.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"    public EditMeetingDescriptor(Meeting toCopy) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"        setAgenda(toCopy.getAgenda());","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"        setMeetingPlace(toCopy.getPlace());","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"        setMeetingTime(toCopy.getTime());","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"        setAttendees(toCopy.getIndexes());","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"        return CollectionUtil.isAnyNonNull(agenda, attendees, meetingPlace, meetingTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    //----Single data fields----","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"    //Agenda","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"    public void setAgenda(Agenda agenda) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"        this.agenda \u003d agenda;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"    public Optional\u003cAgenda\u003e getAgenda() {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.ofNullable(agenda);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"    //MeetingPlace","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeetingPlace(MeetingPlace meetingPlace) {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"        this.meetingPlace \u003d meetingPlace;","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"    public Optional\u003cMeetingPlace\u003e getMeetingPlace() {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.ofNullable(meetingPlace);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"    //MeetingTime","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeetingTime(MeetingTime meetingTime) {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"    public Optional\u003cMeetingTime\u003e getMeetingTime() {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"        return Optional.ofNullable(meetingTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"     * Sets {@code attendees} to this object\u0027s {@code attendees}.","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"     * A defensive copy of {@code attendees} is used internally.","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"    public void setAttendees(Set\u003cIndex\u003e attendees) {","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"        this.attendees \u003d (attendees !\u003d null) ? new HashSet\u003c\u003e(attendees) : null;","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"     * Returns an unmodifiable index set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"     * Returns {@code Optional#empty()} if {@code attendees} is null.","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"    public Optional\u003cSet\u003cIndex\u003e\u003e getAttendees() {","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"        return (attendees !\u003d null) ? Optional.of(Collections.unmodifiableSet(attendees)) : Optional.empty();","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"        if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"        // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"        EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"        return getAgenda().equals(e.getAgenda())","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 getMeetingPlace().equals(e.getMeetingPlace())","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 getMeetingTime().equals(e.getMeetingTime())","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 getAttendees().equals(e.getAttendees());","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"        builder.append(\"EditMeetingDescriptor: [\");","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cIndex\u003e attendees \u003d getAttendees().get();","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"        builder.append(\"Attendees: \");","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"NicsunXnus"},"content":"        attendees.forEach(index -\u003e builder.append(index).append(\" \"));","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"NicsunXnus"},"content":"        builder.append(\"; Agenda: \")","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"                .append(getAgenda())","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"                .append(\"; MeetingPlace: \")","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"NicsunXnus"},"content":"                .append(getMeetingPlace())","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"NicsunXnus"},"content":"                .append(\"; MeetingTime: \")","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"                .append(getMeetingTime());","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"        builder.append(\"]\");","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"NicsunXnus"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":137}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":" * Represents a meeting of which the user is a part.","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"public class Meeting implements Comparable\u003cMeeting\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"    private final Agenda agenda;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"    private final MeetingPlace place;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"    private final MeetingTime time;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    private final HashSet\u003cIndex\u003e indexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    private final HashSet\u003cId\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a new meeting with the given parameters","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * @param agenda  Agenda of the meeting","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     * @param place   Meeting place","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"     * @param time    Meeting time and date","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"     * @param indexes  Indexes of attendees in the displayed list","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"     * @param attendees Ids of attendees of the meeting","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    public Meeting(Agenda agenda, MeetingPlace place, MeetingTime time, Set\u003cIndex\u003e indexes, Set\u003cId\u003e attendees) {","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"        this.agenda \u003d agenda;","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"        this.place \u003d place;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"        this.indexes.addAll(indexes);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"        this.attendees.addAll(attendees);","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"     * Constructs a new meeting with the given parameters","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"     * @param agenda  Agenda of the meeting","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"     * @param place   Meeting place","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"     * @param time    Meeting time and date","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"     * @param attendees Ids of attendees of the meeting","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"    public Meeting(Agenda agenda, MeetingPlace place, MeetingTime time, Set\u003cId\u003e attendees) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"        this.agenda \u003d agenda;","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"        this.place \u003d place;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        this.attendees.addAll(attendees);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"     * Constructs a new meeting with the given parameters","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"     * @param attendees Other attendees of the meeting","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"    public Meeting setAttendees(Set\u003cId\u003e attendees) {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"        return new Meeting(agenda, place, time, attendees);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tonishka"},"content":"    public Agenda getAgenda() {","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tonishka"},"content":"        return this.agenda;","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"tonishka"},"content":"    public MeetingPlace getPlace() {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"tonishka"},"content":"        return this.place;","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"tonishka"},"content":"    public MeetingTime getTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"        return this.time;","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    public HashSet\u003cIndex\u003e getIndexes() {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"        return this.indexes;","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"    public HashSet\u003cId\u003e getAttendees() {","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tonishka"},"content":"        return this.attendees;","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"     * Returns true if both meetings have the same agenda, time, place and attendees.","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"tonishka"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"tonishka"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"tonishka"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tonishka"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 otherMeeting.getAgenda().equals(getAgenda())","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 otherMeeting.getTime().equals(getTime())","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 otherMeeting.getPlace().equals(getPlace())","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 otherMeeting.getAttendees().equals(getAttendees());","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tonishka"},"content":"     * Chronological order is enforced on meetings.","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"tonishka"},"content":"    public int compareTo(Meeting other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"tonishka"},"content":"        return getTime().dateTime.compareTo((other.getTime().dateTime));","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"muraddurrani"},"content":"        //Cannot list attendees without Id implementation","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"        return \"Agenda: \" + agenda","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"                + \"; place: \" + place","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"tonishka"},"content":"                + \"; time: \" + time.toPrettyString();","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"ckcherry23":29,"NicsunXnus":11,"muraddurrani":7,"tonishka":63}},{"path":"src/main/java/seedu/address/model/meeting/MeetingPlace.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":" * Represents the location of the meeting.","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"public class MeetingPlace {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Places can take any values, and it should not be blank.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"     * The first character of the place must not be a whitespace,","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"    public final String place;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"     * Constructs an {@code MeetingPlace}.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"     * @param place A valid place.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"    public MeetingPlace(String place) {","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"        requireNonNull(place);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"        checkArgument(isValidMeetingPlace(place), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"        this.place \u003d place;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"     * Returns true if a given string is a valid meeting place.","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"    public static boolean isValidMeetingPlace(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"        return this.place;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"                || (other instanceof MeetingPlace // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"                \u0026 place.equals(((MeetingPlace) other).place)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"        return place.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tonishka":53}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"import java.util.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":" * Represents the meeting time for a meeting.","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"public class MeetingTime {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"            \"Meeting time must be in the following format: dd-MM-yyyy HH:mm\\n Example: 25-05-2022 23:59\";","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * Creates a new meeting time.","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     * @param dateTime Meeting date and time.","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"    public MeetingTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if a given string is a valid meeting time.","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    public static boolean isValidMeetingTime(String test) {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"            LocalDateTime.parse(test, formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"     * Returns true if a given meeting has expired.","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"    public boolean isExpiredMeetingTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"        return this.dateTime.isBefore(LocalDateTime.now());","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"    public static LocalDateTime formatTime(String dateTime) {","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"     * Formats the time in a user-friendly 12-hour format.","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"     * @param dateTime","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"tonishka"},"content":"     * @return formatted time","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"tonishka"},"content":"    public static String prettyTime(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"tonishka"},"content":"        String time \u003d \"11:59 PM\"; // To bypass uninitialised string error","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"tonishka"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"tonishka"},"content":"            String timeToFormat \u003d dateTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"tonishka"},"content":"            SimpleDateFormat twentyFourHrFormat \u003d new SimpleDateFormat(\"HH:mm\");","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"tonishka"},"content":"            SimpleDateFormat twelveHrFormat \u003d new SimpleDateFormat(\"hh:mm a\");","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tonishka"},"content":"            Date dateToFormat \u003d twentyFourHrFormat.parse(timeToFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"tonishka"},"content":"            time \u003d twelveHrFormat.format(dateToFormat);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"tonishka"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"tonishka"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"        return time;","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"tonishka"},"content":"     * Formats the date in a user-friendly manner.","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"tonishka"},"content":"     * @param dateTime","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"tonishka"},"content":"     * @return formatted date","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"tonishka"},"content":"    public static String prettyDate(LocalDateTime dateTime) {","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"tonishka"},"content":"        String date \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"tonishka"},"content":"        return date;","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"tonishka"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"tonishka"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"tonishka"},"content":"    public String toPrettyString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"tonishka"},"content":"        return prettyDate(dateTime) + \", \" + prettyTime(dateTime);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"tonishka"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tonishka"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"tonishka"},"content":"                || (other instanceof MeetingTime // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"tonishka"},"content":"                \u0026 dateTime.isEqual(((MeetingTime) other).dateTime)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"tonishka"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"tonishka"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"ckcherry23":23,"tonishka":79}},{"path":"src/main/java/seedu/address/model/meeting/MeetingsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"public class MeetingsList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeetings(MeetingsList replacement) {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"tonishka"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tonishka"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"                || (other instanceof MeetingsList // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 internalList.equals(((MeetingsList) other).internalList));","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"     * Returns true if {@code meetings} contains only unique meetings.","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"                    return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"        return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"NicsunXnus"},"content":"        return \"MeetingList {\"","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"                + \"internalList \u003d \" + internalList.toString()","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"                + \", internalUnmodifiableList \u003d \" + internalUnmodifiableList.toString() + \u0027}\u0027;","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"NicsunXnus":93,"tonishka":38}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":" * Signals that the operation will result in duplicate Meetings (Meetings are considered duplicates if they have the","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":" * same identity).","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"NicsunXnus":7}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"    //private static final String NO_SPACE \u003d \"^[^\\\\s].*$\";","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    public final String address;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        return address;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 address.equals(((Address) other).address)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"        return address.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"muraddurrani":6,"-":51,"tonishka":1}},{"path":"src/main/java/seedu/address/model/person/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":" * Represents a Person\u0027s company in the address book.","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"public class Company implements Comparable\u003cCompany\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Companies can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    public final String company;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"     * Constructs an {@code Company}.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     * @param company A valid company.","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    public Company(String company) {","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(company);","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"        return company;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 company.equals(((Company) other).company)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"        return company.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    public int compareTo(Company o) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"        return this.company.compareTo(o.company);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"ckcherry23":6,"NicsunXnus":1,"muraddurrani":54}},{"path":"src/main/java/seedu/address/model/person/EditPersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":" * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":" * corresponding field value of the person.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"public class EditPersonDescriptor {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    private Name name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private HashMap\u003cLabel, Phone\u003e numbers;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"    private HashMap\u003cLabel, Email\u003e emails;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    private HashMap\u003cLabel, Address\u003e addresses;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    private Company company;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    private JobTitle jobTitle;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    private HashSet\u003cPronoun\u003e pronouns;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    private HashSet\u003cTag\u003e tags;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public EditPersonDescriptor() {}","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"     * Copy constructor.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"        setName(toCopy.name);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"        setNumbers(toCopy.numbers);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"        setEmails(toCopy.emails);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        setAddresses(toCopy.addresses);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        setCompany(toCopy.company);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        setJobTitle(toCopy.jobTitle);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"        setPronouns(toCopy.pronouns);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"     * Person constructor.","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"    public EditPersonDescriptor(Person toCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"        setName(toCopy.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        setNumbers(toCopy.getNumbers());","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        setEmails(toCopy.getEmails());","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"        setAddresses(toCopy.getAddresses());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"        setTags(toCopy.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"        setCompany(toCopy.getCompany().isPresent() ? toCopy.getCompany().get() : null);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        setJobTitle(toCopy.getJobTitle().isPresent() ? toCopy.getJobTitle().get() : null);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"        setPronouns(toCopy.getPronouns());","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"        return CollectionUtil.isAnyNonNull(name, numbers, emails, addresses, tags, company, pronouns, jobTitle);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"    //----Single data fields----","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    //Company","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"    public void setCompany(Company company) {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"        return Optional.ofNullable(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    //JobTitle","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"    public void setJobTitle(JobTitle jobTitle) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cJobTitle\u003e getJobTitle() {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"        return Optional.ofNullable(jobTitle);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"    //Name","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"    //-----Multiple data fields----","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"    //Phone","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"    public void setNumbers(Map\u003cLabel, Phone\u003e numbers) {","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"        this.numbers \u003d (numbers !\u003d null) ? new HashMap\u003c\u003e(numbers) : null;","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"    public Optional\u003cMap\u003cLabel, Phone\u003e\u003e getNumbers() {","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"        return (numbers !\u003d null) ? Optional.of(Collections.unmodifiableMap(numbers)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"    //Email","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"    public void setEmails(Map\u003cLabel, Email\u003e emails) {","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"        this.emails \u003d (emails !\u003d null) ? new HashMap\u003c\u003e(emails) : null;","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"muraddurrani"},"content":"    public Optional\u003cMap\u003cLabel, Email\u003e\u003e getEmails() {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"        return (emails !\u003d null) ? Optional.of(Collections.unmodifiableMap(emails)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"    //Address","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"    public void setAddresses(Map\u003cLabel, Address\u003e addresses) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"muraddurrani"},"content":"        this.addresses \u003d (addresses !\u003d null) ? new HashMap\u003c\u003e(addresses) : null;","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"muraddurrani"},"content":"    public Optional\u003cMap\u003cLabel, Address\u003e\u003e getAddresses() {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"        return (addresses !\u003d null) ? Optional.of(Collections.unmodifiableMap(addresses)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"    //Tags","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"ckcherry23"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"ckcherry23"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"ckcherry23"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"    //Pronouns","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"     * Sets {@code pronouns} to this object\u0027s {@code pronouns}.","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"     * A defensive copy of {@code pronouns} is used internally.","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"    public void setPronouns(Set\u003cPronoun\u003e pronouns) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"        this.pronouns \u003d (pronouns !\u003d null) ? new HashSet\u003c\u003e(pronouns) : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"     * Returns an unmodifiable pronouns set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"     * Returns {@code Optional#empty()} if {@code pronouns} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cSet\u003cPronoun\u003e\u003e getPronouns() {","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":"        return (pronouns !\u003d null) ? Optional.of(Collections.unmodifiableSet(pronouns)) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"    //","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"ckcherry23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"ckcherry23"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"        if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"ckcherry23"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"ckcherry23"},"content":"        EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"ckcherry23"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 getNumbers().equals(e.getNumbers())","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 getEmails().equals(e.getEmails())","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 getAddresses().equals(e.getAddresses())","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"ckcherry23"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"        builder.append(\"EditPersonDescriptor: [\");","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"ckcherry23"},"content":"                .append(getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"                .append(getCompany())","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":"                .append(\"; Job Title: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"                .append(getJobTitle());","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"ckcherry23"},"content":"        if (getPronouns().isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"            Set\u003cPronoun\u003e pronouns \u003d getPronouns().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"            builder.append(\"; Pronouns: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":"            pronouns.forEach(builder::append);","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"        if (getTags().isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"            Set\u003cTag\u003e tags \u003d getTags().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"        if (getNumbers().isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"muraddurrani"},"content":"            Map\u003cLabel, Phone\u003e numbers \u003d getNumbers().get();","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"            builder.append(\"; Numbers: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"muraddurrani"},"content":"            numbers.forEach((label, number) -\u003e builder.append(number.phone).append(\" l/\").append(label).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":"        if (getAddresses().isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"muraddurrani"},"content":"            Map\u003cLabel, Address\u003e addresses \u003d getAddresses().get();","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"ckcherry23"},"content":"            builder.append(\"; Addresses: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"muraddurrani"},"content":"            addresses.forEach((label, address) -\u003e builder.append(address.address).append(\" l/\")","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"muraddurrani"},"content":"                    .append(label).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"ckcherry23"},"content":"        if (getEmails().isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"muraddurrani"},"content":"            Map\u003cLabel, Email\u003e emails \u003d getEmails().get();","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"ckcherry23"},"content":"            builder.append(\"; Emails: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"muraddurrani"},"content":"            emails.forEach((label, email) -\u003e builder.append(email.email).append(\" l/\").append(label).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":"        builder.append(\"]\");","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":208,"muraddurrani":20}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"    public final String email;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"        return email;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 email.equals(((Email) other).email)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"        return email.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NicsunXnus":5,"-":66}},{"path":"src/main/java/seedu/address/model/person/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":" * Tests that a {@code Person}\u0027s details matches any of the keywords given for a specified field in {@code Name,","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":" * Company, Job Title, Address, Email, Phone, Tags}.","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"public class FieldContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"    private final String field;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"     * Constructor for FieldContainsKeywordsPredicate","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"     * @param keywords The list of keywords to match","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"     * @param field The field to search in","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"    public FieldContainsKeywordsPredicate(List\u003cString\u003e keywords, String field) {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"        this.field \u003d field;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"        if (\"c\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"            return testCompany(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"        } else if (\"j\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"            return testJob(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"        } else if (\"t\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"            return testTag(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"        } else if (\"p\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"            return testPhone(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"        } else if (\"e\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"            return testEmail(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"        } else if (\"a\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"            return testAddress(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"        } else if (\"n\".equals(field)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"            return testName(person);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"        return testAll(person);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"    private boolean testCompany(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"        if (person.getCompany().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"            return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getCompany().get().company, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"    private boolean testName(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"tonishka"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"tonishka"},"content":"    private boolean testJob(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"tonishka"},"content":"        if (person.getJobTitle().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"tonishka"},"content":"            return keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"tonishka"},"content":"                    person.getJobTitle().get().jobTitle, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tonishka"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"tonishka"},"content":"    private boolean testTag(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"tonishka"},"content":"        if (person.getTagSet().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"tonishka"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"tonishka"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseInSet(person.getTagSet(), keyword));","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"tonishka"},"content":"    private boolean testPhone(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"tonishka"},"content":"        if (person.getNumbers().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"tonishka"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"tonishka"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"tonishka"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseInMap(person.getNumbers(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"tonishka"},"content":"    private boolean testEmail(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"tonishka"},"content":"        if (person.getEmails().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"tonishka"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"tonishka"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"tonishka"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseInMap(person.getEmails(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"tonishka"},"content":"    private boolean testAddress(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"tonishka"},"content":"        if (person.getAddresses().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"tonishka"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"tonishka"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"tonishka"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"tonishka"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseInMap(person.getAddresses(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"tonishka"},"content":"    private boolean testAll(Person person) {","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"tonishka"},"content":"        return testAddress(person)","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"tonishka"},"content":"                || testName(person)","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"tonishka"},"content":"                || testTag(person)","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"tonishka"},"content":"                || testJob(person)","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"tonishka"},"content":"                || testCompany(person)","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"tonishka"},"content":"                || testEmail(person)","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"tonishka"},"content":"                || testPhone(person);","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"tonishka"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"tonishka"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"tonishka"},"content":"                || (other instanceof FieldContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 keywords.equals(((FieldContainsKeywordsPredicate) other).keywords))","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"tonishka"},"content":"                \u0026\u0026 field.equals(((FieldContainsKeywordsPredicate) other).field); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tonishka":116}},{"path":"src/main/java/seedu/address/model/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":" * Represents a Person\u0027s ID in the address book.","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":" * Guarantees: immutable","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"public class Id {","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    /*","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"     * The format is quite elaborate and seeing the user should never be manually creating an ID,","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"     * the message is kept short for brevity.","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"            \"IDs must follow the string representation as defined by the UUID format\";","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    public final UUID id;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"     * Constructs an {@code Id} with a randomly generated ID.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    public Id() {","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"        this.id \u003d UUID.randomUUID();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"     * Constructs an {@code Id} from a predesignated {@code String} ID.","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"     * @param id The designated ID.","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"     * @throws IllegalValueException if the provided ID does not obey the UUID format.","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    public Id(String id) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"        this.id \u003d UUID.fromString(id);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"            UUID uuid \u003d UUID.fromString(test);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"        return id.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 id.equals(((Id) other).id)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"        return id.hashCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ckcherry23":18,"muraddurrani":53}},{"path":"src/main/java/seedu/address/model/person/JobTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":" * Represents a Person\u0027s job title in the address book.","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJobTitle(String)}","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"public class JobTitle implements Comparable\u003cJobTitle\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"            \"JobTitle can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"     * The first character of the job title must not be a whitespace,","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\p{javaSpaceChar}\\\\d\\\\p{Punct}][A-Za-z\\\\d\\\\s]*$\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"    public final String jobTitle;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     * Constructs an {@code JobTitle}.","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"     * @param jobTitle A valid job title.","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"    public JobTitle(String jobTitle) {","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"        checkArgument(isValidJobTitle(jobTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"     * Returns true if a given string is a valid job title.","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    public static boolean isValidJobTitle(String test) {","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"        return jobTitle;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"                || (other instanceof JobTitle // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 jobTitle.equals(((JobTitle) other).jobTitle)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"        return jobTitle.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    public int compareTo(JobTitle o) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"        return this.jobTitle.compareTo(o.jobTitle);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"ckcherry23":6,"NicsunXnus":8,"muraddurrani":47,"tonishka":2}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{L} .\u0027-]+$\";","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"tonishka":2}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    private final Id id;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    private final Name name;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    private final Map\u003cLabel, Phone\u003e numbers;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    private final Map\u003cLabel, Email\u003e emails;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"    private final Map\u003cLabel, Address\u003e addresses;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    private final Company company;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    private final JobTitle jobTitle;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    private final HashSet\u003cPronoun\u003e pronouns \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    private final HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"     * Name, numbers, emails, addresses, pronouns, and tags must be present and not null.","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    public Person(Name name, Map\u003cLabel, Phone\u003e numbers, Map\u003cLabel, Email\u003e emails,","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"                  Map\u003cLabel, Address\u003e addresses, Company company, JobTitle jobTitle, Set\u003cPronoun\u003e pronouns,","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"                  Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"        requireAllNonNull(name, numbers, emails, addresses, pronouns, tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        this.numbers \u003d numbers;","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"        this.emails \u003d emails;","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"        this.addresses \u003d addresses;","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"        this.pronouns.addAll(pronouns);","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"        this.id \u003d new Id();","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"     * Constructs a {@code Person} with a predesignated {@code Id}.","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"    public Person(Id id, Name name, Map\u003cLabel, Phone\u003e numbers, Map\u003cLabel, Email\u003e emails,","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"                  Map\u003cLabel, Address\u003e addresses, Company company, JobTitle jobTitle, Set\u003cPronoun\u003e pronouns,","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"                  Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"        requireAllNonNull(name, numbers, emails, addresses, pronouns, tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"        this.numbers \u003d numbers;","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"        this.emails \u003d emails;","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"        this.addresses \u003d addresses;","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"        this.pronouns.addAll(pronouns);","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"     * Returns an empty person with nothing values.","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"     * @return an empty person with nothing values","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"    public static Person getEmptyPerson() {","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"        return new Person(new Name(\"No name\"), new HashMap\u003c\u003e(), new HashMap\u003c\u003e(), new HashMap\u003c\u003e(),","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"                new Company(\"No Company\"), new JobTitle(\"No JobTitle\"), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"    public Id getId() {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"        return id;","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"    public Map\u003cLabel, Phone\u003e getNumbers() {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"        return numbers;","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"    public Map\u003cLabel, Email\u003e getEmails() {","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"        return emails;","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"    public Map\u003cLabel, Address\u003e getAddresses() {","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"        return addresses;","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"    public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"        return Optional.ofNullable(company);","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"muraddurrani"},"content":"    public Optional\u003cJobTitle\u003e getJobTitle() {","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"        return Optional.ofNullable(jobTitle);","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"    public Set\u003cPronoun\u003e getPronouns() {","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"        return Collections.unmodifiableSet(pronouns);","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"tonishka"},"content":"    public HashSet\u003cTag\u003e getTagSet() {","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"tonishka"},"content":"        return this.tags;","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if both persons have the same name and tags.","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"ckcherry23"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"        return otherPerson.getName() !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 otherPerson.getName().equals(this.getName())","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 otherPerson.getTags() !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 otherPerson.getTags().equals(this.getTags());","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"muraddurrani"},"content":"        //Including ID equality check will cause tests to fail because EmptyPerson is generated with a random ID","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 otherPerson.getNumbers().equals(getNumbers())","lastModifiedDate":"2022-03-05"},{"lineNumber":159,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 otherPerson.getEmails().equals(getEmails())","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 otherPerson.getAddresses().equals(getAddresses())","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 otherPerson.getCompany().equals(getCompany())","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 otherPerson.getJobTitle().equals(getJobTitle())","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"muraddurrani"},"content":"                \u0026\u0026 otherPerson.getPronouns().equals(getPronouns())","lastModifiedDate":"2022-03-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"muraddurrani"},"content":"        return Objects.hash(name, numbers, emails, addresses, company, jobTitle, pronouns, tags);","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"NicsunXnus"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"muraddurrani"},"content":"                .append(getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"muraddurrani"},"content":"        getCompany().map(c -\u003e builder.append(\"; Company: \").append(c));","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"muraddurrani"},"content":"        getJobTitle().map(j -\u003e builder.append(\"; Job Title: \").append(j));","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"muraddurrani"},"content":"        Set\u003cPronoun\u003e pronouns \u003d getPronouns();","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"muraddurrani"},"content":"        if (!pronouns.isEmpty()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"muraddurrani"},"content":"            builder.append(\"; Pronouns: \");","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"            pronouns.stream().limit(1).forEach(builder::append);","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"muraddurrani"},"content":"            pronouns.stream().skip(1).forEach(pronoun -\u003e builder.append(\"/\").append(pronoun));","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"tonishka"},"content":"            tags.forEach(tag -\u003e builder.append(tag.prettyString()));","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e numbers \u003d getNumbers();","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"NicsunXnus"},"content":"        if (!numbers.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"NicsunXnus"},"content":"            builder.append(\"; Numbers: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"muraddurrani"},"content":"            numbers.forEach((label, number) -\u003e builder.append(number.phone).append(\" l/\").append(label.label)","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"muraddurrani"},"content":"                    .append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e addresses \u003d getAddresses();","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"NicsunXnus"},"content":"        if (!addresses.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"NicsunXnus"},"content":"            builder.append(\"; Addresses: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"muraddurrani"},"content":"            addresses.forEach((label, address) -\u003e builder.append(address.address).append(\" l/\")","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"muraddurrani"},"content":"                    .append(label.label).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e emails \u003d getEmails();","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"NicsunXnus"},"content":"        if (!emails.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"NicsunXnus"},"content":"            builder.append(\"; Emails: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"muraddurrani"},"content":"            emails.forEach((label, email) -\u003e builder.append(email.email).append(\" l/\").append(label.label).append(\" \"));","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"tonishka"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"tonishka"},"content":"    public int compareTo(Person another) {","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"tonishka"},"content":"        int nameCompare \u003d this.name.fullName.compareTo(another.name.fullName);","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"ckcherry23"},"content":"        int companyCompare \u003d (this.company !\u003d null \u0026\u0026 another.company !\u003d null)","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"                ? this.company.compareTo(another.company)","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":"                : 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"        int jobCompare \u003d (this.jobTitle !\u003d null \u0026\u0026 another.jobTitle !\u003d null)","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"                ? this.jobTitle.compareTo(another.jobTitle)","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"                : 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"tonishka"},"content":"        return nameCompare \u003d\u003d 0 ? (companyCompare \u003d\u003d 0 ? jobCompare : companyCompare) : nameCompare;","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":15,"NicsunXnus":29,"muraddurrani":86,"-":90,"tonishka":11}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"    public final String phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"        return phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 phone.equals(((Phone) other).phone)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"        return phone.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NicsunXnus":5,"-":48}},{"path":"src/main/java/seedu/address/model/person/Pronoun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":" * Represents a Person\u0027s pronouns in the address book.","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPronoun(String)}","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"public class Pronoun {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Pronouns can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"     * The first character of the pronouns must not be a whitespace,","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"    public final String pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"     * Constructs an {@code Pronoun}.","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     * @param pronoun A valid pronoun.","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    public Pronoun(String pronoun) {","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"        requireNonNull(pronoun);","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"        checkArgument(isValidPronoun(pronoun), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"        this.pronoun \u003d pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"     * Returns true if a given string is a valid pronoun.","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"    public static boolean isValidPronoun(String test) {","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"        return pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"                || (other instanceof Pronoun // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"                \u0026\u0026 pronoun.equals(((Pronoun) other).pronoun)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"        return pronoun.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"NicsunXnus":6,"muraddurrani":50}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"        return \"UniquePersonList {\"","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"                + \"internalList \u003d \" + internalList.toString()","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"                + \", internalUnmodifiableList \u003d \" + internalUnmodifiableList.toString() + \u0027}\u0027;","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ckcherry23":7,"-":137}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\s]+\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":"        return tagName;","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"    public String prettyString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":"        return \"[\" + tagName + \"]\";","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"tonishka"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"tonishka":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.logic.LabelUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Agenda;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.MeetingPlace;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"            new Person(","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"                    new Id(\"1ddd72fa-e32e-4ed7-b475-32d4b19f6b70\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"                    new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Personal\", false), new Phone(\"87438807\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Work\", false), new Phone(\"82165492\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Personal\", false), new Email(\"alexyeoh@example.com\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Work\", false), new Email(\"alex_y@company.com\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Home\", false), new Address(\"Blk 30 Geylang Street 29, #06-40\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Office\", false), new Address(\"123 Raffles Business Tower\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"                    new Company(\"Monsters Inc\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"                    new JobTitle(\"Scarer\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(new Pronoun(\"he\"), new Pronoun(\"him\"))),","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(new Tag(\"friend\")))","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"            ),","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"            new Person(","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"                    new Id(\"2ddd72fa-e32e-4ed7-b475-32d4b19f6b70\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"                    new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Personal\", false), new Phone(\"99272758\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Work\", false), new Phone(\"93210283\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Personal\", false), new Email(\"berniceyu@example.com\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Work\", false), new Email(\"bernice_y@company.com\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Home\", false),","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"                                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Office\", false), new Address(\"1725 Slough Avenue, Scranton PA\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"                    new Company(\"Dunder Mifflin\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"                    new JobTitle(\"Salesperson\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(new Pronoun(\"she\"), new Pronoun(\"her\"))),","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(new Tag(\"colleague\"), new Tag(\"friend\")))","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"            ),","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"            new Person(","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"                    new Id(\"3ddd72fa-e32e-4ed7-b475-32d4b19f6b70\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"                    new Name(\"David Li\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Personal\", false), new Phone(\"91031282\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Work\", false), new Phone(\"92492021\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Personal\", false), new Email(\"lidavid@example.com\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Work\", false), new Email(\"david_li@company.com\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"                    new HashMap\u003c\u003e() {{","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Home\", false),","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"muraddurrani"},"content":"                                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"muraddurrani"},"content":"                        put(new Label(\"Office\", false),","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"                                new Address(\"43 Springfield Avenue, Greendale County\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"                    }},","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"                    new Company(\"Greendale College\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"                    new JobTitle(\"Spanish Professor\"),","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(new Pronoun(\"he\"), new Pronoun(\"him\"))),","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(new Tag(\"family\")))","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"muraddurrani"},"content":"            )","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"    public static Meeting[] getSampleMeetings() {","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"        Person[] samplePersons \u003d getSamplePersons();","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"        return new Meeting[]{","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"            new Meeting(","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"                    new Agenda(\"Paper supply for Greendale College\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"                    new MeetingPlace(\"David\u0027s Office\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"                    new MeetingTime(MeetingTime.formatTime(\"02-04-2022 13:30\")),","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"                    new HashSet\u003c\u003e(Arrays.asList(samplePersons[1].getId(), samplePersons[2].getId()))","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"            )","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"    public static ReadOnlyMeetingBook getSampleMeetingBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"        MeetingBook sampleMb \u003d new MeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"ckcherry23"},"content":"        for (Meeting sampleMeeting : getSampleMeetings()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"ckcherry23"},"content":"            sampleMb.addMeeting(sampleMeeting);","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"        return sampleMb;","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"NicsunXnus"},"content":"     * Returns a pronoun set containing the list of strings given.","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"NicsunXnus"},"content":"    public static Set\u003cPronoun\u003e getPronounSet(String... strings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"NicsunXnus"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"NicsunXnus"},"content":"                .map(Pronoun::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"NicsunXnus"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"     * Returns a address map containing the list of strings given.","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"muraddurrani"},"content":"    public static Map\u003cLabel, Address\u003e getAddressMap(String... strings) {","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e addresses \u003d Arrays.stream(strings)","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"NicsunXnus"},"content":"                .map(addressLabelPair -\u003e addressLabelPair.split(\" l/\"))","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"muraddurrani"},"content":"                .collect(Collectors.toMap(addressLabelPair -\u003e addressLabelPair.length \u003d\u003d 1","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"muraddurrani"},"content":"                                ? new Label(addressLabelPair[0], true)","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"muraddurrani"},"content":"                                : new Label(addressLabelPair[1], false),","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"NicsunXnus"},"content":"                    addressLabelPair -\u003e new Address(addressLabelPair[0])));","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"muraddurrani"},"content":"        return LabelUtil.replaceAddressPlaceholders(addresses);","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"NicsunXnus"},"content":"     * Returns a email map containing the list of strings given.","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"muraddurrani"},"content":"    public static Map\u003cLabel, Email\u003e getEmailMap(String... strings) {","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e emails \u003d Arrays.stream(strings)","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"NicsunXnus"},"content":"                .map(emailLabelPair -\u003e emailLabelPair.split(\" l/\"))","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"muraddurrani"},"content":"                .collect(Collectors.toMap(emailLabelPair -\u003e emailLabelPair.length \u003d\u003d 1","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"muraddurrani"},"content":"                                ? new Label(emailLabelPair[0], true)","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"muraddurrani"},"content":"                                : new Label(emailLabelPair[1], false),","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"NicsunXnus"},"content":"                    emailLabelPair -\u003e new Email(emailLabelPair[0])));","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"muraddurrani"},"content":"        return LabelUtil.replaceEmailPlaceholders(emails);","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"NicsunXnus"},"content":"     * Returns a phone map containing the list of strings given.","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"muraddurrani"},"content":"    public static Map\u003cLabel, Phone\u003e getPhoneMap(String... strings) {","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e numbers \u003d Arrays.stream(strings)","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"                .map(phoneLabelPair -\u003e phoneLabelPair.split(\" l/\"))","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"muraddurrani"},"content":"                .collect(Collectors.toMap(phoneLabelPair -\u003e phoneLabelPair.length \u003d\u003d 1","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"muraddurrani"},"content":"                                ? new Label(phoneLabelPair[0], true)","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"muraddurrani"},"content":"                                : new Label(phoneLabelPair[1], false),","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"                    phoneLabelPair -\u003e new Phone(phoneLabelPair[0])));","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"muraddurrani"},"content":"        return LabelUtil.replacePhonePlaceholders(numbers);","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":"     * Returns an attendee set containing the list of strings given.","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"ckcherry23"},"content":"    public static Set\u003cId\u003e getAttendeeSet(String... strings) {","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"ckcherry23"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"                .map(Id::new)","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"     * Drives sample data util.","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"     * @param s parameter","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"NicsunXnus"},"content":"    public static void main(String[] s) {","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e map \u003d getAddressMap(\"Blk 30 Geylang Street 29, #06-40\", \"Blk 30 Geylang l/ home\");","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"muraddurrani"},"content":"        for (Map.Entry\u003cLabel, Address\u003e entry : map.entrySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"muraddurrani"},"content":"            Label key \u003d entry.getKey();","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"NicsunXnus"},"content":"            Address tab \u003d entry.getValue();","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"NicsunXnus"},"content":"            System.out.print(\"Label: \" + key + \", \");","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"NicsunXnus"},"content":"            System.out.println(\"Address: \" + tab);","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ckcherry23":41,"NicsunXnus":37,"muraddurrani":91,"-":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"public class JsonAdaptedAddress {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    private final String address;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonAdaptedAddress} with the given {@code address}.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedAddress(String address) {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code Address} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedAddress(Address source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        address \u003d source.address;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    @JsonValue","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public String getAddress() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"        return address;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Address} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted address.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    public Address toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        return new Address(address);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"ckcherry23":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEmail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"public class JsonAdaptedEmail {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    private final String email;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonAdaptedEmail} with the given {@code email}.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedEmail(String email) {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code Email} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedEmail(Email source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        email \u003d source.email;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    @JsonValue","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public String getEmail() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"        return email;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Email} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted email.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    public Email toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        return new Email(email);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"ckcherry23":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import java.util.TreeMap;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"    private final String id;","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    private final String company;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    private final String jobTitle;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    private final HashMap\u003cString, JsonAdaptedPhone\u003e numbers;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    private final HashMap\u003cString, JsonAdaptedEmail\u003e emails;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    private final HashMap\u003cString, JsonAdaptedAddress\u003e addresses;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"    private final List\u003cJsonAdaptedPronoun\u003e pronouns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"id\") String id,","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"            @JsonProperty(\"company\") String company,","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"            @JsonProperty(\"jobTitle\") String jobTitle,","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"            @JsonProperty(\"numbers\") HashMap\u003cString, JsonAdaptedPhone\u003e numbers,","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"            @JsonProperty(\"emails\") HashMap\u003cString, JsonAdaptedEmail\u003e emails,","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"            @JsonProperty(\"addresses\") HashMap\u003cString, JsonAdaptedAddress\u003e addresses,","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"            @JsonProperty(\"pronouns\") List\u003cJsonAdaptedPronoun\u003e pronouns,","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"        this.numbers \u003d numbers;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"        this.emails \u003d emails;","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"        this.addresses \u003d addresses;","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"        if (pronouns !\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"            this.pronouns.addAll(pronouns);","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"        id \u003d source.getId().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"        company \u003d source.getCompany().map(c -\u003e c.company).orElse(null);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"        jobTitle \u003d source.getJobTitle().map(j -\u003e j.jobTitle).orElse(null);","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e numbersMap \u003d new HashMap\u003cString, JsonAdaptedPhone\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"        for (Label key : source.getNumbers().keySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"            numbersMap.put(key.label, new JsonAdaptedPhone(source.getNumbers().get(key)));","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"        numbers \u003d numbersMap;","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e emailsMap \u003d new HashMap\u003cString, JsonAdaptedEmail\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"        for (Label key : source.getEmails().keySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"            emailsMap.put(key.label, new JsonAdaptedEmail(source.getEmails().get(key)));","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"        emails \u003d emailsMap;","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e addressesMap \u003d new HashMap\u003cString, JsonAdaptedAddress\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"        for (Label key : source.getAddresses().keySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"            addressesMap.put(key.label, new JsonAdaptedAddress(source.getAddresses().get(key)));","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"        addresses \u003d addressesMap;","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"        pronouns.addAll(source.getPronouns().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"                .map(JsonAdaptedPronoun::new)","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"muraddurrani"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"muraddurrani"},"content":"        if (!(company \u003d\u003d null || Company.isValidCompany(company))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"muraddurrani"},"content":"        final Company modelCompany \u003d company !\u003d null ? new Company(company) : null;","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"muraddurrani"},"content":"        if (!(jobTitle \u003d\u003d null || JobTitle.isValidJobTitle(jobTitle))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"muraddurrani"},"content":"        final JobTitle modelJobTitle \u003d jobTitle !\u003d null ? new JobTitle(jobTitle) : null;","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"muraddurrani"},"content":"        TreeMap\u003cLabel, Phone\u003e modelNumbers \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"        if (numbers !\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"            for (Map.Entry\u003cString, JsonAdaptedPhone\u003e mapElement : numbers.entrySet()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"                String key \u003d mapElement.getKey();","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"muraddurrani"},"content":"                modelNumbers.put(new Label(key, false), mapElement.getValue().toModelType());","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"muraddurrani"},"content":"        TreeMap\u003cLabel, Email\u003e modelEmails \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"        if (emails !\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"            for (Map.Entry\u003cString, JsonAdaptedEmail\u003e mapElement : emails.entrySet()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"                String key \u003d mapElement.getKey();","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"muraddurrani"},"content":"                modelEmails.put(new Label(key, false), mapElement.getValue().toModelType());","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"muraddurrani"},"content":"        TreeMap\u003cLabel, Address\u003e modelAddresses \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"        if (addresses !\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"ckcherry23"},"content":"            for (Map.Entry\u003cString, JsonAdaptedAddress\u003e mapElement : addresses.entrySet()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":"                String key \u003d mapElement.getKey();","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"muraddurrani"},"content":"                modelAddresses.put(new Label(key, false), mapElement.getValue().toModelType());","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"ckcherry23"},"content":"        final List\u003cPronoun\u003e personPronouns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"        for (JsonAdaptedPronoun pronoun : pronouns) {","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":"            personPronouns.add(pronoun.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"muraddurrani"},"content":"        final Set\u003cPronoun\u003e modelPronouns \u003d new HashSet\u003c\u003e(personPronouns);","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"muraddurrani"},"content":"        return new Person(modelId, modelName, modelNumbers, modelEmails, modelAddresses,","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"ckcherry23"},"content":"                modelCompany, modelJobTitle, modelPronouns, modelTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"        return \"JsonAdaptedPerson{\"","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"muraddurrani"},"content":"                + \"ID\u003d\u0027\" + id + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"                + \"name\u003d\u0027\" + name + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"ckcherry23"},"content":"                + \", company\u003d\u0027\" + company + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"                + \", jobTitle\u003d\u0027\" + jobTitle + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"                + \", phone\u003d\u0027\" + numbers + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"ckcherry23"},"content":"                + \", email\u003d\u0027\" + emails + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"                + \", addresses\u003d\u0027\" + addresses + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"                + \", pronouns\u003d\" + pronouns","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":"                + \", tagged\u003d\" + tagged","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ckcherry23":78,"muraddurrani":37,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"public class JsonAdaptedPhone {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    private final String phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonAdaptedPhone} with the given {@code phone}.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedPhone(String phone) {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code Phone} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedPhone(Phone source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        phone \u003d source.phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    @JsonValue","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public String getPhone() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"        return phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Phone} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted phone.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    public Phone toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        return new Phone(phone);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"ckcherry23":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPronoun.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"public class JsonAdaptedPronoun {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    private final String pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonAdaptedPronoun} with the given {@code pronoun}.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedPronoun(String pronoun) {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"        this.pronoun \u003d pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code Pronoun} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedPronoun(Pronoun source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        pronoun \u003d source.pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    @JsonValue","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public String getPronoun() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"        return pronoun;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Pronoun} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted pronoun.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    public Pronoun toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        if (!Pronoun.isValidPronoun(pronoun)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Pronoun.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        return new Pronoun(pronoun);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"ckcherry23":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"        return \"JsonAdaptedTag: \" + tagName;","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NicsunXnus":4,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"        builder.append(\"JsonSerializableAddressBook:\\n\");","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"        for (JsonAdaptedPerson person : persons) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"            builder.append(\"[\" + person + \"]\\n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"NicsunXnus":10,"-":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.storage.meeting.MeetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"public interface Storage extends AddressBookStorage, MeetingBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ckcherry23":12,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.storage.meeting.MeetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    private MeetingBookStorage meetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, MeetingBookStorage meetingBookStorage,","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"        this.meetingBookStorage \u003d meetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MeetingBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"        return meetingBookStorage.getMeetingBookFilePath();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"        return readMeetingBook(meetingBookStorage.getMeetingBookFilePath());","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"        return meetingBookStorage.readMeetingBook(filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"        saveMeetingBook(meetingBook, meetingBookStorage.getMeetingBookFilePath());","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"        meetingBookStorage.saveMeetingBook(meetingBook, filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ckcherry23":34,"-":77}},{"path":"src/main/java/seedu/address/storage/meeting/JsonAdaptedAttendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage.meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.UUID;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":" * Jackson-friendly version of {@link Id}.","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"class JsonAdaptedAttendee {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    private final String attendeeId;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonAdaptedAttendee} with the given {@code attendeeId}.","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedAttendee(UUID attendeeId) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"        this.attendeeId \u003d attendeeId.toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code Id} into this class for Jackson use.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedAttendee(Id source) {","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"        this.attendeeId \u003d source.id.toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    @JsonValue","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    public String getAttendeeId() {","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"        return attendeeId;","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"     * Converts this Jackson-friendly adapted attendee object into the model\u0027s {@code Id} object.","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendee.","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    public Id toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"        if (!Id.isValidId(attendeeId)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"        return new Id(attendeeId);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        return \"JsonAdaptedAttendee: \" + attendeeId;","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"ckcherry23":54}},{"path":"src/main/java/seedu/address/storage/meeting/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage.meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Agenda;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.MeetingPlace;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    private final String agenda;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    private final String meetingPlace;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    private final String meetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    private final List\u003cJsonAdaptedAttendee\u003e attendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"agenda\") String agenda,","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"                             @JsonProperty(\"meetingPlace\") String meetingPlace,","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"                             @JsonProperty(\"meetingTime\") String meetingTime,","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"                             @JsonProperty(\"attendees\") List\u003cJsonAdaptedAttendee\u003e attendees) {","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        this.agenda \u003d agenda;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"        this.meetingPlace \u003d meetingPlace;","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        if (attendees !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"            this.attendees.addAll(attendees);","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        agenda \u003d source.getAgenda().description;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        meetingPlace \u003d source.getPlace().place;","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"        meetingTime \u003d source.getTime().toString();","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"        attendees.addAll(source.getAttendees().stream()","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"                .map(JsonAdaptedAttendee::new)","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"        if (agenda \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"agenda\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"        if (!Agenda.isValidAgenda(agenda)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(Agenda.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"        final Agenda modelAgenda \u003d new Agenda(agenda);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"        if (!(meetingPlace \u003d\u003d null || MeetingPlace.isValidMeetingPlace(meetingPlace))) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(MeetingPlace.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"        final MeetingPlace modelPlace \u003d meetingPlace !\u003d null ? new MeetingPlace(meetingPlace) : null;","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"        if (!(meetingTime \u003d\u003d null || MeetingTime.isValidMeetingTime(meetingTime))) {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"            throw new IllegalValueException(MeetingTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"        final MeetingTime modelTime \u003d meetingTime !\u003d null ? new MeetingTime(MeetingTime.formatTime(meetingTime)) : null;","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"        final List\u003cId\u003e attendeeIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"        for (JsonAdaptedAttendee attendee : attendees) {","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"            attendeeIds.add(attendee.toModelType());","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"        final Set\u003cId\u003e modelAttendees \u003d new HashSet\u003c\u003e(attendeeIds);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"        return new Meeting(modelAgenda, modelPlace, modelTime, modelAttendees);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"        return \"JsonAdaptedMeeting{\"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"                + \"agenda\u003d\u0027\" + agenda + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"                + \", place\u003d\u0027\" + meetingPlace + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"                + \", time\u003d\u0027\" + meetingTime + \u0027\\\u0027\u0027","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"                + \", attendees\u003d\" + attendees","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ckcherry23":105}},{"path":"src/main/java/seedu/address/storage/meeting/JsonMeetingBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage.meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":" * A class to access MeetingBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"public class JsonMeetingBookStorage implements MeetingBookStorage {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonMeetingBookStorage.class);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    public JsonMeetingBookStorage(Path filePath) {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"        return filePath;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"        return readMeetingBook(filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"     * Similar to {@link #readMeetingBook()}.","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"        Optional\u003cJsonSerializableMeetingBook\u003e jsonMeetingBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"                filePath, JsonSerializableMeetingBook.class);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"        if (!jsonMeetingBook.isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"            return Optional.of(jsonMeetingBook.get().toModelType());","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"        saveMeetingBook(meetingBook, filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"     * Similar to {@link #saveMeetingBook(ReadOnlyMeetingBook)}.","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(meetingBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableMeetingBook(meetingBook), filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ckcherry23":80}},{"path":"src/main/java/seedu/address/storage/meeting/JsonSerializableMeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage.meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":" * An Immutable MeetingBook that is serializable to JSON format.","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"@JsonRootName(value \u003d \"meetingbook\")","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"class JsonSerializableMeetingBook {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meeting list contains duplicate meeting(s).\";","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"     * Constructs a {@code JsonSerializableMeetingBook} with the given persons.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    public JsonSerializableMeetingBook(@JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     * Converts a given {@code ReadOnlyMeetingBook} into this class for Jackson use.","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableMeetingBook}.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    public JsonSerializableMeetingBook(ReadOnlyMeetingBook source) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"     * Converts this meeting book into the model\u0027s {@code MeetingBook} object.","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"        MeetingBook meetingBook \u003d new MeetingBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"            if (meetingBook.hasMeeting(meeting)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"            meetingBook.addMeeting(meeting);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"        return meetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"        builder.append(\"JsonSerializableMeetingBook:\\n\");","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"        for (JsonAdaptedMeeting meeting : meetings) {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"            builder.append(\"[\" + meeting + \"]\\n\");","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ckcherry23":70}},{"path":"src/main/java/seedu/address/storage/meeting/MeetingBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.storage.meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":" * Represents a storage for {@link seedu.address.model.MeetingBook}.","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"public interface MeetingBookStorage {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"     * Returns MeetingBook data as a {@link ReadOnlyMeetingBook}.","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"     * @see #getMeetingBookFilePath()","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"     * Saves the given {@link ReadOnlyMeetingBook} to the storage.","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     * @param meetingBook cannot be null.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"     * @see #saveMeetingBook(ReadOnlyMeetingBook)","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"    void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ckcherry23":45}},{"path":"src/main/java/seedu/address/ui/AddressesCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":" * Card containing the addresses associated with a person.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"public class AddressesCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"AddressesCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AddressesCard.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private VBox addressesContainer;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     * Creates an {@code AddressesCard} with the given {@code Map} of addresses and their respective labels.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    public AddressesCard(Map\u003cLabel, Address\u003e addresses) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"        for (Map.Entry\u003cLabel, Address\u003e address : addresses.entrySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"            addressesContainer.getChildren().add(new InfoBox(address.getKey().label, address.getValue().address)","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"                    .getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":3,"muraddurrani":30}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    public void setFocused() {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"         * @see seedu.address.logic.Logic#executePersonListCommand(String)","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"ckcherry23":3,"muraddurrani":2,"-":83}},{"path":"src/main/java/seedu/address/ui/ConfirmWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":" * Controller for a clear confirmation","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"public class ConfirmWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    public static final String CONFIRM_MESSAGE \u003d \"Are you sure you want to proceed? Deleted data cannot be recovered\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ConfirmWindow.class);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    private static final String FXML \u003d \"ConfirmWindow.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    private LogicManager logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    private Button confirm;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    private Label confirmMessage;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"     * Creates a new ConfirmWindow.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    public ConfirmWindow(Stage root) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"        confirmMessage.setText(CONFIRM_MESSAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"     * Creates a new ConfirmWindow.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"    public ConfirmWindow(Logic logic) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"        this.logic \u003d (LogicManager) logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"     * Shows the confirm window.","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    public void show() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"        logger.fine(\"Asking for user confirmation.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"     * Returns true if the confirm window is currently being shown.","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"     * Hides the confirm window.","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"    public void hide() {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"     * Focuses on the confirm window.","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"    public void focus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"     * Returns confirmation.","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    private void confirm() {","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"        logic.clearAddressBook();","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"        hide();","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":103}},{"path":"src/main/java/seedu/address/ui/ContactDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"public class ContactDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"ContactDetailsPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactDetailsPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"    private final ParticularsCard particularsCard;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    private final NumbersCard numbersCard;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    private final EmailsCard emailsCard;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    private final AddressesCard addressesCard;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private StackPane particularsCardPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"    private StackPane numbersCardPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    private StackPane emailsCardPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    private StackPane addressesCardPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"    private Person person;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"    public ContactDetailsPanel(Person personToDisplay) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"        person \u003d personToDisplay;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"        particularsCard \u003d new ParticularsCard(person.getName(), person.getPronouns(), person.getTags(),","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"                person.getJobTitle().orElse(null), person.getCompany().orElse(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"        particularsCardPlaceholder.getChildren().add(particularsCard.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"        numbersCard \u003d new NumbersCard(person.getNumbers());","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"        numbersCardPlaceholder.getChildren().add(numbersCard.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        emailsCard \u003d new EmailsCard(person.getEmails());","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"        emailsCardPlaceholder.getChildren().add(emailsCard.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"        addressesCard \u003d new AddressesCard(person.getAddresses());","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"        addressesCardPlaceholder.getChildren().add(addressesCard.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"    public Person getPerson() {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"        return person;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":2,"NicsunXnus":3,"muraddurrani":53}},{"path":"src/main/java/seedu/address/ui/EmailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":" * Card containing the emails associated with a person.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"public class EmailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"EmailsCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EmailsCard.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private VBox emailsContainer;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     * Creates an {@code EmailsCard} with the given {@code Map} of emails and their associated labels.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    public EmailsCard(Map\u003cLabel, Email\u003e emails) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"        for (Map.Entry\u003cLabel, Email\u003e email : emails.entrySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"            emailsContainer.getChildren().add(new InfoBox(email.getKey().label, email.getValue().email).getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":3,"muraddurrani":29}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import java.net.URL;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"    private void openUrl() {","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"            Desktop.getDesktop().browse(new URL(USERGUIDE_URL).toURI());","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ckcherry23":11,"-":94}},{"path":"src/main/java/seedu/address/ui/InfoBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":" * Bordered container that displays a piece of information below its corresponding label.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"public class InfoBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"InfoBox.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InfoBox.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    private Label label;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private Label value;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     * Creates an {@code InfoBox} with the given {@code label} and {@value}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    public InfoBox(String label, String value) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"        this.label.setText(label);","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"        this.value.setText(value);","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":2,"muraddurrani":29}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    private ContactDetailsPanel contactDetailsPanel;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    private ConfirmWindow confirmWindow;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"    private StackPane panelPlaceholder;","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"        confirmWindow \u003d new ConfirmWindow(logic);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"muraddurrani"},"content":"        panelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getMeetingList(), logic.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executePersonListCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"     * Opens the confirmation window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"    public void handleConfirmation() {","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"        if (!confirmWindow.isShowing()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":"            confirmWindow.show();","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"            confirmWindow.focus();","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"muraddurrani"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"muraddurrani"},"content":"        return primaryStage;","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"muraddurrani"},"content":"     * Switches the screen to display the list of all contacts.","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"muraddurrani"},"content":"    private void loadPersonListScreen() {","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"muraddurrani"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"muraddurrani"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executePersonListCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getMeetingList(), logic.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"muraddurrani"},"content":"        panelPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"muraddurrani"},"content":"        commandBoxPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanelPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"muraddurrani"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"muraddurrani"},"content":"        panelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"muraddurrani"},"content":"        commandBox.setFocused();","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"muraddurrani"},"content":"     * Switches the screen to display the contact information of a specific person.","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"NicsunXnus"},"content":"    private void loadContactScreen(Person personToDisplay) {","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"NicsunXnus"},"content":"        contactDetailsPanel \u003d new ContactDetailsPanel(personToDisplay);","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"muraddurrani"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeContactDetailsCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getMeetingList(), logic.getPersonList());","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"muraddurrani"},"content":"        panelPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"muraddurrani"},"content":"        commandBoxPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanelPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"muraddurrani"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"muraddurrani"},"content":"        panelPlaceholder.getChildren().add(contactDetailsPanel.getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"muraddurrani"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"muraddurrani"},"content":"        commandBox.setFocused();","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"muraddurrani"},"content":"     * @see seedu.address.logic.Logic#executePersonListCommand(String)","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"muraddurrani"},"content":"    private CommandResult executePersonListCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"muraddurrani"},"content":"            CommandResult commandResult \u003d logic.executePersonListCommand(commandText);","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"ckcherry23"},"content":"            if (commandResult.requiresConfirmation()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"ckcherry23"},"content":"                handleConfirmation();","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"muraddurrani"},"content":"            if (commandResult.isLoadPersonList()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"muraddurrani"},"content":"                loadPersonListScreen();","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"ckcherry23"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"muraddurrani"},"content":"            if (commandResult.isLoadContactDetails()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":243,"author":{"gitId":"NicsunXnus"},"content":"                Person personToEdit \u003d commandResult.getPerson();","lastModifiedDate":"2022-03-13"},{"lineNumber":244,"author":{"gitId":"NicsunXnus"},"content":"                requireNonNull(personToEdit);","lastModifiedDate":"2022-03-13"},{"lineNumber":245,"author":{"gitId":"NicsunXnus"},"content":"                loadContactScreen(personToEdit);","lastModifiedDate":"2022-03-13"},{"lineNumber":246,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"muraddurrani"},"content":"            return commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"muraddurrani"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"muraddurrani"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-03-10"},{"lineNumber":251,"author":{"gitId":"muraddurrani"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-10"},{"lineNumber":252,"author":{"gitId":"muraddurrani"},"content":"            throw e;","lastModifiedDate":"2022-03-10"},{"lineNumber":253,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":256,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":257,"author":{"gitId":"muraddurrani"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-10"},{"lineNumber":258,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":259,"author":{"gitId":"muraddurrani"},"content":"     * @see seedu.address.logic.Logic#executePersonListCommand(String)","lastModifiedDate":"2022-03-10"},{"lineNumber":260,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":261,"author":{"gitId":"muraddurrani"},"content":"    private CommandResult executeContactDetailsCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":262,"author":{"gitId":"muraddurrani"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"muraddurrani"},"content":"            Person currentPerson \u003d contactDetailsPanel.getPerson();","lastModifiedDate":"2022-03-10"},{"lineNumber":264,"author":{"gitId":"muraddurrani"},"content":"            CommandResult commandResult \u003d logic.executeContactDetailsCommand(commandText, currentPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":265,"author":{"gitId":"muraddurrani"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-10"},{"lineNumber":266,"author":{"gitId":"muraddurrani"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"muraddurrani"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"muraddurrani"},"content":"                handleHelp();","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":271,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":272,"author":{"gitId":"muraddurrani"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"muraddurrani"},"content":"                handleExit();","lastModifiedDate":"2022-03-10"},{"lineNumber":274,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":275,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":276,"author":{"gitId":"muraddurrani"},"content":"            if (commandResult.isLoadPersonList()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":277,"author":{"gitId":"muraddurrani"},"content":"                loadPersonListScreen();","lastModifiedDate":"2022-03-10"},{"lineNumber":278,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":279,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":280,"author":{"gitId":"muraddurrani"},"content":"            if (commandResult.isLoadContactDetails()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":281,"author":{"gitId":"muraddurrani"},"content":"                Person personToEdit \u003d commandResult.getPerson();","lastModifiedDate":"2022-03-14"},{"lineNumber":282,"author":{"gitId":"muraddurrani"},"content":"                requireNonNull(personToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":283,"author":{"gitId":"muraddurrani"},"content":"                loadContactScreen(personToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":284,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":285,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ckcherry23":20,"NicsunXnus":6,"muraddurrani":97,"-":170}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"    private final Meeting meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    private final ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    private VBox cardPane;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"    private Label index;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    private Label agenda;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"    private Label time;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"    private Label place;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"    private Label attendees;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"        this.index.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"        this.agenda.setText(meeting.getAgenda().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"        this.time.setText(meeting.getTime().toPrettyString());","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"        this.place.setText(meeting.getPlace().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"        this.attendees.setText(attendeesToLabel(meeting.getAttendees()));","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"    private String attendeesToLabel(HashSet\u003cId\u003e attendees) {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"        Iterator\u003cId\u003e iterator \u003d attendees.iterator();","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"            Id attendee \u003d iterator.next();","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"            String name \u003d \"Unknown attendee\";","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"            for (Person person : personList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"                if (person.getId().equals(attendee)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"                    name \u003d person.getName().toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"            strBuilder.append(name);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"            if (iterator.hasNext()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"                strBuilder.append(\", \");","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"        return strBuilder.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"muraddurrani":81,"tonishka":1}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private final ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListPanel.MeetingListViewCell());","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"                setText(null);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1, personList).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"muraddurrani":52}},{"path":"src/main/java/seedu/address/ui/NumbersCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":" * Card containing the numbers associated with a person.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"public class NumbersCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"NumbersCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(NumbersCard.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"    private VBox numbersContainer;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"     * Creates a {@code NumbersCard} with the given {@code Map} of numbers and their respective labels.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"    public NumbersCard(Map\u003cLabel, Phone\u003e numbers) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"        for (Map.Entry\u003cLabel, Phone\u003e number : numbers.entrySet()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"            numbersContainer.getChildren().add(new InfoBox(number.getKey().label, number.getValue().phone).getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":3,"muraddurrani":29}},{"path":"src/main/java/seedu/address/ui/ParticularsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":" * Card that displays a persons particulars, including their name, pronouns, tags, and occupation details.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"public class ParticularsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"    private static final String FXML \u003d \"ParticularsCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ParticularsCard.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"    private Label name;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"muraddurrani"},"content":"    private Label pronouns;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"    private Label occupation;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"muraddurrani"},"content":"     * Creates a {@code ParticularsCard} with the given personal particulars.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"muraddurrani"},"content":"    public ParticularsCard(Name name, Set\u003cPronoun\u003e pronouns, Set\u003cTag\u003e tags, JobTitle job, Company company) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"        this.name.setText(name.toString());","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"        this.pronouns.setText(pronounsToString(pronouns));","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"        tags.forEach(tag -\u003e this.tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"        if (!isNull(job) \u0026\u0026 !isNull(company)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"muraddurrani"},"content":"            occupation.setText(job.jobTitle + \", \" + company.company);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"muraddurrani"},"content":"        } else if (!isNull(job)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"            occupation.setText(job.jobTitle);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"muraddurrani"},"content":"        } else if (!isNull(company)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"muraddurrani"},"content":"            occupation.setText(company.company);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"     * Converts a {@code Set} of pronouns into a human-readable {@code String}.","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"     * @param pronouns Pronouns associated with a person.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"     * @return Pronouns in string form.","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"    public String pronounsToString(Set\u003cPronoun\u003e pronouns) {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"        if (!pronouns.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"            StringBuilder pronounsBuilder \u003d new StringBuilder().append(\"(\");","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"muraddurrani"},"content":"            Iterator\u003cPronoun\u003e iterator \u003d pronouns.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"            while (iterator.hasNext()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"muraddurrani"},"content":"                Pronoun p \u003d iterator.next();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"muraddurrani"},"content":"                if (iterator.hasNext()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"                    pronounsBuilder.append(p).append(\"/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"                } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"                    pronounsBuilder.append(p).append(\")\");","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"muraddurrani"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"            return pronounsBuilder.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"muraddurrani"},"content":"        } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"            return \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"ckcherry23":6,"muraddurrani":75}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"        person.getTags().forEach(tag -\u003e this.tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"NicsunXnus":1,"-":64}},{"path":"src/main/resources/view/AddressesCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"label\" text\u003d\"Addresses\" styleClass\u003d\"primary_text\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"    \u003cVBox fx:id\u003d\"addressesContainer\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"muraddurrani":9}},{"path":"src/main/resources/view/ConfirmWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"#confirm, #confirmMessage {","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"#confirm {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"#confirm:hover {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"#confirm:armed {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"#confirmMessageContainer {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":19}},{"path":"src/main/resources/view/ConfirmWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Confirm\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"                \u003cURL value\u003d\"@ConfirmWindow.css\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"confirmMessageContainer\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"                    \u003cLabel fx:id\u003d\"confirmMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"                    \u003cButton fx:id\u003d\"confirm\" mnemonicParsing\u003d\"false\" onAction\u003d\"#confirm\" text\u003d\"Yes\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"ckcherry23":44}},{"path":"src/main/resources/view/ContactDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"\u003cScrollPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"background\"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"            fitToWidth\u003d\"true\" fitToHeight\u003d\"true\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    \u003cVBox styleClass\u003d\"background\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"particularsCardPlaceholder\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"numbersCardPlaceholder\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"                \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"emailsCardPlaceholder\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"                \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"addressesCardPlaceholder\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"                \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"muraddurrani"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"muraddurrani"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"muraddurrani"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"muraddurrani":28}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"muraddurrani"},"content":".headline {","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"muraddurrani"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"muraddurrani"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"muraddurrani"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"muraddurrani"},"content":".primary_text {","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"muraddurrani"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"muraddurrani"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"muraddurrani"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"muraddurrani"},"content":".secondary_text {","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"muraddurrani"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"muraddurrani"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"muraddurrani"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"muraddurrani"},"content":".info-box {","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"muraddurrani"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"muraddurrani"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"muraddurrani"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"muraddurrani"},"content":"     -fx-border-insets: 4px;","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"muraddurrani"},"content":"     -fx-padding: 5px;","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"muraddurrani"},"content":"     -fx-border-radius: 5px;","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"muraddurrani"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-03-10"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-15"},{"lineNumber":374,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #FDF37C;","lastModifiedDate":"2022-03-15"},{"lineNumber":375,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2022-03-15"},{"lineNumber":376,"author":{"gitId":"tonishka"},"content":"    -fx-border-radius: 6;","lastModifiedDate":"2022-03-15"},{"lineNumber":377,"author":{"gitId":"tonishka"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-15"},{"lineNumber":378,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"muraddurrani":27,"-":334,"tonishka":19}},{"path":"src/main/resources/view/EmailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"label\" text\u003d\"Emails\" styleClass\u003d\"primary_text\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"    \u003cVBox fx:id\u003d\"emailsContainer\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"muraddurrani":9}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"#openButton, #helpMessage {","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"#openButton {","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"#openButton:hover {","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"#openButton:armed {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ckcherry23":4,"-":15}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\" prefHeight\u003d\"100\" prefWidth\u003d\"600\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"          \u003cButton fx:id\u003d\"openButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\" text\u003d\"Go to User Guide\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"ckcherry23":1,"-":42,"tonishka":1}},{"path":"src/main/resources/view/InfoBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"info-box\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"label\" text\u003d\"Numbers\" styleClass\u003d\"primary_text\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"value\" text\u003d\"Numbers\" styleClass\u003d\"secondary_text\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"muraddurrani":9}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"         title\u003d\"Reache\" minWidth\u003d\"850\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"        \u003cURL value\u003d\"@ReacheTheme.css\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"muraddurrani"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"muraddurrani"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"muraddurrani"},"content":"              \u003cStackPane fx:id\u003d\"panelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"muraddurrani"},"content":"          \u003cVBox styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"muraddurrani"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"muraddurrani"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"muraddurrani"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"muraddurrani"},"content":"            \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"muraddurrani"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"muraddurrani"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"muraddurrani":14,"-":56,"tonishka":1}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"      prefWidth\u003d\"375\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"        \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"headline\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"        \u003cLabel fx:id\u003d\"agenda\" styleClass\u003d\"headline\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"secondary_text\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"place\" styleClass\u003d\"secondary_text\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"attendees\" styleClass\u003d\"secondary_text\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"muraddurrani":20}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel text\u003d\"Meetings\" styleClass\u003d\"headline\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"            \u003cInsets bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"muraddurrani":16}},{"path":"src/main/resources/view/NumbersCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"label\" text\u003d\"Numbers\" styleClass\u003d\"primary_text\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"    \u003cVBox fx:id\u003d\"numbersContainer\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"muraddurrani":9}},{"path":"src/main/resources/view/OptWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicsunXnus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Optional\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"NicsunXnus"},"content":"            \u003cHBox fx:id\u003d\"OptContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"500.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"               \u003cLabel snapToPixel\u003d\"false\" text\u003d\"sss\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"                    \u003cTextField fx:id\u003d\"optTextField\" centerShape\u003d\"false\" focusTraversable\u003d\"false\" layoutX\u003d\"100.0\" layoutY\u003d\"100.0\" onAction\u003d\"#handleCommandEntered\" pickOnBounds\u003d\"false\" scaleShape\u003d\"false\" snapToPixel\u003d\"false\" translateX\u003d\"-50.0\" translateY\u003d\"-200.0\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"                  \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"NicsunXnus"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"NicsunXnus":24}},{"path":"src/main/resources/view/ParticularsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"muraddurrani"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"muraddurrani"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"muraddurrani"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"headline\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"        \u003cLabel fx:id\u003d\"pronouns\" styleClass\u003d\"secondary_text\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"muraddurrani"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"muraddurrani"},"content":"                \u003cInsets left\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"muraddurrani"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"muraddurrani"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"muraddurrani"},"content":"    \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"    \u003cLabel fx:id\u003d\"occupation\" styleClass\u003d\"secondary_text\" \u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"muraddurrani"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"muraddurrani"},"content":"            \u003cInsets top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"muraddurrani"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"muraddurrani"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"muraddurrani":24}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"NicsunXnus"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"NicsunXnus":1,"-":32}},{"path":"src/main/resources/view/ReacheTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tonishka"},"content":".background {","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"tonishka"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"tonishka"},"content":".label {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"tonishka"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"tonishka"},"content":".label-bright {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"tonishka"},"content":".label-header {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"tonishka"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":".text-field {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":".tab-pane {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tonishka"},"content":".table-view {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"tonishka"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"tonishka"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"tonishka"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"tonishka"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"tonishka"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"tonishka"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"tonishka"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"tonishka"},"content":"    -fx-border-color:","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"tonishka"},"content":"        transparent","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"tonishka"},"content":"        transparent","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"tonishka"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"tonishka"},"content":"        transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"tonishka"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"tonishka"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"tonishka"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"tonishka"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"tonishka"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"tonishka"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"tonishka"},"content":".split-pane {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"tonishka"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"tonishka"},"content":".list-view {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"tonishka"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"tonishka"},"content":".list-cell {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"tonishka"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"tonishka"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"tonishka"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"tonishka"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"tonishka"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"tonishka"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"tonishka"},"content":".list-cell .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"tonishka"},"content":".cell_big_label {","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"tonishka"},"content":".cell_small_label {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"tonishka"},"content":".headline {","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica Bold\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"tonishka"},"content":".primary_text {","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica Bold\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"tonishka"},"content":".secondary_text {","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"tonishka"},"content":".stack-pane {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"tonishka"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"tonishka"},"content":".pane-with-border {","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"tonishka"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"tonishka"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"tonishka"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"tonishka"},"content":".info-box {","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"tonishka"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"tonishka"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"tonishka"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"tonishka"},"content":"     -fx-border-insets: 4px;","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"tonishka"},"content":"     -fx-padding: 5px;","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"tonishka"},"content":"     -fx-border-radius: 5px;","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"tonishka"},"content":".status-bar {","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"tonishka"},"content":".result-display {","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"tonishka"},"content":".result-display .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"tonishka"},"content":".status-bar .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"tonishka"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"tonishka"},"content":".status-bar-with-border {","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"tonishka"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"tonishka"},"content":".grid-pane {","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"tonishka"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"tonishka"},"content":".context-menu {","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"tonishka"},"content":".context-menu .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"tonishka"},"content":".menu-bar {","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"tonishka"},"content":".menu-bar .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"tonishka"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"tonishka"},"content":".menu .left-container {","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"tonishka"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"tonishka"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"tonishka"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"tonishka"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"tonishka"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"tonishka"},"content":".button {","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"tonishka"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"tonishka"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"tonishka"},"content":".button:hover {","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"tonishka"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"tonishka"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"tonishka"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"tonishka"},"content":".button:focused {","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"tonishka"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"tonishka"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"tonishka"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"tonishka"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"tonishka"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"tonishka"},"content":".button:default {","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"tonishka"},"content":".button:default:hover {","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"tonishka"},"content":".dialog-pane {","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"tonishka"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"tonishka"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"tonishka"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"tonishka"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"tonishka"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"tonishka"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"tonishka"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"tonishka"},"content":".scroll-bar {","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"tonishka"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-03-15"},{"lineNumber":316,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"tonishka"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":319,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":320,"author":{"gitId":"tonishka"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-03-15"},{"lineNumber":321,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":322,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":323,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":324,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":325,"author":{"gitId":"tonishka"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-03-15"},{"lineNumber":326,"author":{"gitId":"tonishka"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-03-15"},{"lineNumber":327,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":328,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":329,"author":{"gitId":"tonishka"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-03-15"},{"lineNumber":330,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-03-15"},{"lineNumber":331,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":332,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":333,"author":{"gitId":"tonishka"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-03-15"},{"lineNumber":334,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":335,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":336,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":337,"author":{"gitId":"tonishka"},"content":"#cardPane {","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-15"},{"lineNumber":339,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":340,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":341,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":342,"author":{"gitId":"tonishka"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-03-15"},{"lineNumber":343,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-15"},{"lineNumber":344,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-03-15"},{"lineNumber":345,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":346,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":347,"author":{"gitId":"tonishka"},"content":"#commandTextField {","lastModifiedDate":"2022-03-15"},{"lineNumber":348,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"tonishka"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":350,"author":{"gitId":"tonishka"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-03-15"},{"lineNumber":351,"author":{"gitId":"tonishka"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":352,"author":{"gitId":"tonishka"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":353,"author":{"gitId":"tonishka"},"content":"    -fx-font-family: \"Helvetica\", Arial, sans-serif;","lastModifiedDate":"2022-03-15"},{"lineNumber":354,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":355,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-15"},{"lineNumber":356,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":357,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":358,"author":{"gitId":"tonishka"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-03-15"},{"lineNumber":359,"author":{"gitId":"tonishka"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":361,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":362,"author":{"gitId":"tonishka"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2022-03-15"},{"lineNumber":364,"author":{"gitId":"tonishka"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-15"},{"lineNumber":365,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":366,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":367,"author":{"gitId":"tonishka"},"content":"#tags {","lastModifiedDate":"2022-03-15"},{"lineNumber":368,"author":{"gitId":"tonishka"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-15"},{"lineNumber":369,"author":{"gitId":"tonishka"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-15"},{"lineNumber":370,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":371,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":372,"author":{"gitId":"tonishka"},"content":"#tags .label {","lastModifiedDate":"2022-03-15"},{"lineNumber":373,"author":{"gitId":"tonishka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-15"},{"lineNumber":374,"author":{"gitId":"tonishka"},"content":"    -fx-background-color: #FDF37C;","lastModifiedDate":"2022-03-15"},{"lineNumber":375,"author":{"gitId":"tonishka"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2022-03-15"},{"lineNumber":376,"author":{"gitId":"tonishka"},"content":"    -fx-border-radius: 6;","lastModifiedDate":"2022-03-15"},{"lineNumber":377,"author":{"gitId":"tonishka"},"content":"    -fx-background-radius: 6;","lastModifiedDate":"2022-03-15"},{"lineNumber":378,"author":{"gitId":"tonishka"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-15"},{"lineNumber":379,"author":{"gitId":"tonishka"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":380,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tonishka":380}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRONOUN_DESC_SHE;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRONOUN_DESC_THEY;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.storage.meeting.JsonMeetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"        JsonMeetingBookStorage meetingBookStorage \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"                new JsonMeetingBookStorage(temporaryFolder.resolve(\"meetingBook.json\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"        String deleteCommand \u003d \"del 9\";","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"        JsonMeetingBookStorage meetingBookStorage \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"                new JsonMeetingBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionMeetingBook.json\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"                + ADDRESS_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + PRONOUN_DESC_SHE + PRONOUN_DESC_THEY;","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"        CommandResult result \u003d logic.executePersonListCommand(inputCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.executePersonListCommand(inputCommand));","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"ckcherry23"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"    private static class JsonMeetingBookIoExceptionThrowingStub extends JsonMeetingBookStorage {","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"ckcherry23"},"content":"        private JsonMeetingBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"ckcherry23"},"content":"            super(filePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"ckcherry23"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"ckcherry23"},"content":"        public void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ckcherry23":29,"muraddurrani":2,"-":155}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson.getName().fullName), expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"        assertCommandFailure(new AddCommand(personInList), model, MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ckcherry23":6,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.ReadOnlyMeetingBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson.getName().fullName),","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"        assertThrows(CommandException.class, MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"        public Path getMeetingBookFilePath() {","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"        public void setMeetingBookFilePath(Path meetingBookFilePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"muraddurrani"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"muraddurrani"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"muraddurrani"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":170,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"NicsunXnus"},"content":"        public void setMeetingBook(ReadOnlyMeetingBook meetingBook) {","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":174,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":176,"author":{"gitId":"NicsunXnus"},"content":"        public ReadOnlyMeetingBook getMeetingBook() {","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"        public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"NicsunXnus"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"NicsunXnus"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"muraddurrani"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"muraddurrani"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"muraddurrani"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"muraddurrani"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":206,"author":{"gitId":"NicsunXnus"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":207,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":208,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":209,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":210,"author":{"gitId":"NicsunXnus"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"NicsunXnus"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"NicsunXnus"},"content":"        };","lastModifiedDate":"2022-03-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ckcherry23":14,"NicsunXnus":42,"muraddurrani":10,"-":192}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"        // expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ckcherry23":4,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRONOUN;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"KFC\";","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"MCDONALDS\";","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_JOB_TITLE_AMY \u003d \"Cook\";","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_JOB_TITLE_BOB \u003d \"Cashier\";","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_PRONOUN_SHE \u003d \"she\";","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_PRONOUN_HIM \u003d \"him\";","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"    public static final String VALID_PRONOUN_THEY \u003d \"they\";","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"    public static final String LABEL_HOME \u003d \"home\";","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    public static final String LABEL_WORK \u003d \"work\";","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"    public static final String LABEL_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"    //@Todo CHANGE THIS TO HAVE ANOTHER WHTIESPACE AFTER PREFIX","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"    public static final String COMPANY_DESC_AMY \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"    public static final String COMPANY_DESC_BOB \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"    public static final String JOB_TITLE_DESC_AMY \u003d \" \" + PREFIX_JOBTITLE + VALID_JOB_TITLE_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"    public static final String JOB_TITLE_DESC_BOB \u003d \" \" + PREFIX_JOBTITLE + VALID_JOB_TITLE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"    public static final String LABEL_DESC_HOME \u003d \" \" + PREFIX_LABEL + LABEL_HOME;","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"    public static final String LABEL_DESC_WORK \u003d \" \" + PREFIX_LABEL + LABEL_WORK;","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"    public static final String LABEL_DESC_FRIEND \u003d \" \" + PREFIX_LABEL + LABEL_FRIEND;","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"    public static final String PRONOUN_DESC_HIM \u003d \" \" + PREFIX_PRONOUN + VALID_PRONOUN_HIM;","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"    public static final String PRONOUN_DESC_SHE \u003d \" \" + PREFIX_PRONOUN + VALID_PRONOUN_SHE;","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"    public static final String PRONOUN_DESC_THEY \u003d \" \" + PREFIX_PRONOUN + VALID_PRONOUN_THEY;","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"    // empty string not allowed for addresses","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS + \"  l/home\";","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"                .withCompany(VALID_COMPANY_AMY).withJobTitle(VALID_JOB_TITLE_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"                .withNumbers(VALID_PHONE_AMY).withEmails(VALID_EMAIL_AMY).withAddresses(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"                .withTags(VALID_TAG_FRIEND).withPronouns(VALID_PRONOUN_SHE).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"                .withCompany(VALID_COMPANY_BOB).withJobTitle(VALID_JOB_TITLE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"                .withNumbers(VALID_PHONE_BOB).withEmails(VALID_EMAIL_BOB).withAddresses(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"                .withPronouns(VALID_PRONOUN_THEY, VALID_PRONOUN_HIM).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ckcherry23":3,"NicsunXnus":31,"muraddurrani":2,"-":121,"tonishka":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ckcherry23":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_DETAILS;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor, personToEdit);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"        Person updatedPerson \u003d EditCommand.createUpdatedPerson(personToEdit, descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"                updatedPerson.getName().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), updatedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withNumbers(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"muraddurrani"},"content":"                .withNumbers(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor, lastPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"        Person updatedPerson \u003d EditCommand.createUpdatedPerson(lastPerson, descriptor);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"                updatedPerson.getName().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"        expectedModel.setPerson(lastPerson, updatedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(new EditPersonDescriptor());","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"        editCommand \u003d editCommand.parsePerson(editedPerson);","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"    */","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(),","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"                model.getFilteredPersonList().get(0));","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"                editedPerson.getName().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"        // no need to add editCommand \u003d EditCommand.parsePerson()","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"        // since personToEdit in editCommand is guaranteed to be different","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"        // from firstPerson.","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_DUPLICATE_DETAILS);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"                new EditPersonDescriptorBuilder(personInList).build(), Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_DUPLICATE_DETAILS);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"NicsunXnus"},"content":"    //Should be changed to suit ViewCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"    /*@Test","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"    }*/","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"     * Should be changed to suit ViewCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"NicsunXnus"},"content":"    /*@Test","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"NicsunXnus"},"content":"    }*/","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"NicsunXnus"},"content":"        final EditCommand standardCommand \u003d new EditCommand(DESC_AMY, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(copyDescriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"        assertFalse(standardCommand.equals(new EditCommand(DESC_BOB, Person.getEmptyPerson())));","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ckcherry23":22,"NicsunXnus":29,"muraddurrani":1,"-":133}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNumbers(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmails(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"muraddurrani"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddresses(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ckcherry23":1,"muraddurrani":3,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"tonishka"},"content":"        FieldContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tonishka"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"first\"), \"c\");","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"        FieldContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"                new FieldContainsKeywordsPredicate(Collections.singletonList(\"second\"), \"t\");","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"tonishka"},"content":"        FieldContainsKeywordsPredicate predicate \u003d preparePredicate(\" \", \"n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"tonishka"},"content":"        FieldContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\", \"n\");","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"tonishka"},"content":"    private FieldContainsKeywordsPredicate preparePredicate(String userInput, String field) {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"tonishka"},"content":"        return new FieldContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")), field);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ckcherry23":3,"-":72,"tonishka":9}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ckcherry23":3,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRONOUN_DESC_HIM;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRONOUN_DESC_THEY;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRONOUN_HIM;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"                + PRONOUN_DESC_HIM + PRONOUN_DESC_THEY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"                + PRONOUN_DESC_HIM + PRONOUN_DESC_THEY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"muraddurrani"},"content":"        // multiple phones - all phones accepted","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"        Person expectedPersonMultiplePhones \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"muraddurrani"},"content":"                .withNumbers(VALID_PHONE_AMY, VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"muraddurrani"},"content":"                + PRONOUN_DESC_HIM + PRONOUN_DESC_THEY, new AddCommand(expectedPersonMultiplePhones));","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"        // multiple emails - all emails accepted","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"muraddurrani"},"content":"        Person expectedPersonMultipleEmails \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"                .withEmails(VALID_EMAIL_AMY, VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"                + PRONOUN_DESC_HIM + PRONOUN_DESC_THEY, new AddCommand(expectedPersonMultipleEmails));","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"        // multiple addresses - all addresses accepted","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"        Person expectedPersonMultipleAddresses \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"                .withAddresses(VALID_ADDRESS_AMY, VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"muraddurrani"},"content":"                + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"muraddurrani"},"content":"                + PRONOUN_DESC_HIM + PRONOUN_DESC_THEY, new AddCommand(expectedPersonMultipleAddresses));","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"                + JOB_TITLE_DESC_BOB + PRONOUN_DESC_HIM + PRONOUN_DESC_THEY,","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"        Person expectedPerson \u003d new PersonBuilder().withTags().build();","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY,","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"                + VALID_TAG_FRIEND + VALID_PRONOUN_HIM + VALID_COMPANY_BOB + VALID_JOB_TITLE_BOB,","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ckcherry23":9,"NicsunXnus":16,"muraddurrani":16,"-":113}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_VIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"    public void parseCommand_edit_throwsParseException() throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_VIEW, () -\u003e parser.parseCommand(\"edit n/name\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"tonishka"},"content":"                FindCommand.COMMAND_WORD + \" c/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"tonishka"},"content":"        assertEquals(new FindCommand(new FieldContainsKeywordsPredicate(keywords, \"c\")), command);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ckcherry23":2,"NicsunXnus":1,"-":89,"tonishka":3}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"tonishka"},"content":"            throw new IllegalArgumentException(\"Invalid user input.\", pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"NicsunXnus"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"NicsunXnus"},"content":"     * equals to {@code expectedCommand}. Only for editCommandParser","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    public static void assertParseSuccess(EditCommandParser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"            Command command \u003d parser.parse(userInput, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"            throw new IllegalArgumentException(\"Invalid user input.\", pe);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"     * equals to {@code expectedMessage}. Only for editCommandParser.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"NicsunXnus"},"content":"    public static void assertParseFailure(EditCommandParser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"            parser.parse(userInput, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"NicsunXnus":24,"-":40,"tonishka":1}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"tonishka"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, \"\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"        String userInput \u003d PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"                .withNumbers(VALID_PHONE_BOB).withEmails(VALID_EMAIL_AMY).withAddresses(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"NicsunXnus"},"content":"        String userInput \u003d PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"muraddurrani"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withNumbers(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"muraddurrani"},"content":"                .withEmails(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"NicsunXnus"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"muraddurrani"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNumbers(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"        expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"NicsunXnus"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"muraddurrani"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmails(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"NicsunXnus"},"content":"        expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"        userInput \u003d ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"muraddurrani"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddresses(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"NicsunXnus"},"content":"        expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"NicsunXnus"},"content":"        userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"NicsunXnus"},"content":"        expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"muraddurrani"},"content":"    public void parse_multipleRepeatedFields_acceptsAll() {","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"NicsunXnus"},"content":"        String userInput \u003d PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"muraddurrani"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"muraddurrani"},"content":"                .withNumbers(VALID_PHONE_AMY, VALID_PHONE_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"muraddurrani"},"content":"                .withEmails(VALID_EMAIL_AMY, VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"muraddurrani"},"content":"                .withAddresses(VALID_ADDRESS_AMY, VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"muraddurrani"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"        String userInput \u003d TAG_EMPTY;","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"NicsunXnus"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor, Person.getEmptyPerson());","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ckcherry23":1,"NicsunXnus":32,"muraddurrani":12,"-":142,"tonishka":1}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"tonishka"},"content":"                new FindCommand(new FieldContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"), \"n\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"tonishka"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"tonishka"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":29,"tonishka":4}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.ParserUtil.parseLabel;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"    private static final String INVALID_PRONOUN \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"    private static final String INVALID_COMPANY \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"    private static final String INVALID_JOBTITLE \u003d \"123Manager\";","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"tonishka"},"content":"    private static final String INVALID_JOBTITLE_2 \u003d \"_PizzaHutWorker\";","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_JOBTITLE_3 \u003d \"        \";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_PHONE_LABEL_1 \u003d \"123456l/ home\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"    private static final String INVALID_PHONE_LABEL_2 \u003d \"123456l/home\";","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_ADDRESS_WITH_LABEL_1 \u003d \"l/home\";","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"    private static final String INVALID_ADDRESS_WITH_LABEL_2 \u003d \"123 Main Street #0505l/home\";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_ADDRESS_WITH_LABEL_3 \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"    private static final String INVALID_EMAIL_WITH_LABEL_2 \u003d \"rachel@example.coml/home\";","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"    private static final String INVALID_EMAIL_WITH_LABEL_3 \u003d \"rachel@example.coml/ home\";","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    private static final String VALID_COMPANY \u003d \"Microhard\";","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"    private static final String VALID_PRONOUN \u003d \"they\";","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"NicsunXnus"},"content":"    private static final String VALID_PRONOUN_2 \u003d \"she\";","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"tonishka"},"content":"    private static final String VALID_JOBTITLE \u003d \"Head Chef\";","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"    private static final String VALID_ADDRESS_WITH_LABEL \u003d \"123 Main Street #0505 l/home\";","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"    private static final String VALID_EMAIL_WITH_LABEL \u003d \"rachel@example.com l/friend\";","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"    private static final String VALID_PHONE_WITH_LABEL \u003d \"123456 l/home\";","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"                .parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"    public void parseLabel_validValueWithoutLabel_returnsPlaceholderLabel() throws Exception {","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"muraddurrani"},"content":"        Label expectedLabel \u003d new Label(VALID_ADDRESS, true);","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"muraddurrani"},"content":"        Label actualContent \u003d parseLabel(VALID_ADDRESS);","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"muraddurrani"},"content":"        assertEquals(expectedLabel, actualContent);","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"muraddurrani"},"content":"    public void parseLabel_validValueWithLabel_returnsLabel() throws Exception {","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"muraddurrani"},"content":"        Label expectedLabel \u003d new Label(\"home\", false);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"muraddurrani"},"content":"        Label actualContent \u003d parseLabel(VALID_ADDRESS_WITH_LABEL);","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"muraddurrani"},"content":"        assertEquals(expectedLabel, actualContent);","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"    public void parseJobTitle_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseJobTitle(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"NicsunXnus"},"content":"    public void parseJobTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"tonishka"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJobTitle(INVALID_JOBTITLE));","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"tonishka"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJobTitle(INVALID_JOBTITLE_2));","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"tonishka"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJobTitle(INVALID_JOBTITLE_3));","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"NicsunXnus"},"content":"    public void parseJobTitle_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"NicsunXnus"},"content":"        JobTitle expectedJobTitle \u003d new JobTitle(VALID_JOBTITLE);","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedJobTitle, ParserUtil.parseJobTitle(VALID_JOBTITLE));","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"NicsunXnus"},"content":"    public void parseJobTitle_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"NicsunXnus"},"content":"        String jobtitleWithWhitespace \u003d WHITESPACE + VALID_JOBTITLE + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"NicsunXnus"},"content":"        JobTitle expectedJobTitle \u003d new JobTitle(VALID_JOBTITLE);","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedJobTitle, ParserUtil.parseJobTitle(jobtitleWithWhitespace));","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"NicsunXnus"},"content":"    public void parseCompany_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompany(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"NicsunXnus"},"content":"    public void parseCompany_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompany(INVALID_COMPANY));","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"NicsunXnus"},"content":"    public void parseCompany_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"NicsunXnus"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(VALID_COMPANY));","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS***","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"NicsunXnus"},"content":"    public void parseCompany_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"NicsunXnus"},"content":"        String companyWithWhitespace \u003d WHITESPACE + VALID_COMPANY + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"NicsunXnus"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(companyWithWhitespace));","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePhone_invalidValueWithoutLabel_throwsParseException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":204,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":205,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":206,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePhone_invalidValueWithLabel_throwsParseException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE_LABEL_1));","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":209,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":210,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":212,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePhone_validValueWithoutLabelWithWhiteSpace_returnsPhone() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"NicsunXnus"},"content":"        String phoneWithWhiteSpace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":214,"author":{"gitId":"NicsunXnus"},"content":"        Phone parsedPhone \u003d ParserUtil.parsePhone(phoneWithWhiteSpace);","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedPhone, parsedPhone);","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":219,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":221,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePhone_validValueWithWhitespaceWithLabel_returnsPhone() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"NicsunXnus"},"content":"        String phoneWithWhiteSpace \u003d WHITESPACE + VALID_PHONE_WITH_LABEL + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":223,"author":{"gitId":"NicsunXnus"},"content":"        Phone parsedPhone \u003d ParserUtil.parsePhone(phoneWithWhiteSpace);","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedPhone, parsedPhone);","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":227,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":228,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":229,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"NicsunXnus"},"content":"    public void parseNumbers_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":231,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNumbers(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"NicsunXnus"},"content":"    public void parseNumbers_collectionWithInvalidNumbers_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":238,"author":{"gitId":"NicsunXnus"},"content":"                .parseNumbers(Arrays.asList(VALID_PHONE_WITH_LABEL, INVALID_PHONE)));","lastModifiedDate":"2022-03-10"},{"lineNumber":239,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNumbers(Arrays.asList(VALID_PHONE, INVALID_PHONE)));","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"NicsunXnus"},"content":"    public void parseNumbers_collectionWithInvalidNumbersPlusLabel_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":245,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNumbers(Arrays.asList(VALID_PHONE, INVALID_PHONE)));","lastModifiedDate":"2022-03-09"},{"lineNumber":246,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":247,"author":{"gitId":"NicsunXnus"},"content":"                .parseNumbers(Arrays.asList(VALID_PHONE, INVALID_PHONE_LABEL_1)));","lastModifiedDate":"2022-03-10"},{"lineNumber":248,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":249,"author":{"gitId":"NicsunXnus"},"content":"                .parseNumbers(Arrays.asList(VALID_PHONE, INVALID_PHONE_LABEL_2)));","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":254,"author":{"gitId":"NicsunXnus"},"content":"    public void parseNumbers_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":255,"author":{"gitId":"NicsunXnus"},"content":"        assertTrue(ParserUtil.parseNumbers(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":258,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":259,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"NicsunXnus"},"content":"    public void parseNumbers_collectionWithValidNumbers_returnsNumberMap() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"muraddurrani"},"content":"        HashMap\u003cLabel, Phone\u003e actualNumbersMap \u003d ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"NicsunXnus"},"content":"                .parseNumbers(Arrays.asList(VALID_PHONE, VALID_PHONE_WITH_LABEL));","lastModifiedDate":"2022-03-10"},{"lineNumber":263,"author":{"gitId":"muraddurrani"},"content":"        HashMap\u003cLabel, Phone\u003e expectedNumbersMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"muraddurrani"},"content":"        expectedNumbersMap","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"muraddurrani"},"content":"                .put(new Label(VALID_PHONE, true), new Phone(VALID_PHONE));","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"muraddurrani"},"content":"        expectedNumbersMap.put(new Label(\"home\", false), new Phone(VALID_PHONE));","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedNumbersMap, actualNumbersMap);","lastModifiedDate":"2022-03-09"},{"lineNumber":269,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":270,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":271,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":272,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":273,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":279,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-03-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":285,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":286,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":287,"author":{"gitId":"NicsunXnus"},"content":"    public void parseAddress_validValueWithoutLabelWithWhiteSpace_returnsAddress() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":288,"author":{"gitId":"NicsunXnus"},"content":"        String addressWithWhiteSpace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":289,"author":{"gitId":"NicsunXnus"},"content":"        Address parsedAddress \u003d ParserUtil.parseAddress(addressWithWhiteSpace);","lastModifiedDate":"2022-03-10"},{"lineNumber":290,"author":{"gitId":"NicsunXnus"},"content":"        Address expectedAddressContent \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-03-10"},{"lineNumber":291,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedAddressContent, parsedAddress);","lastModifiedDate":"2022-03-10"},{"lineNumber":292,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":293,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":294,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":295,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":296,"author":{"gitId":"NicsunXnus"},"content":"    public void parseAddress_validValueWithWhitespaceWithLabel_returnaAddress() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":297,"author":{"gitId":"NicsunXnus"},"content":"        String addressWithWhiteSpace \u003d WHITESPACE + VALID_ADDRESS_WITH_LABEL + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":298,"author":{"gitId":"NicsunXnus"},"content":"        Address parsedAddress \u003d ParserUtil.parseAddress(addressWithWhiteSpace);","lastModifiedDate":"2022-03-10"},{"lineNumber":299,"author":{"gitId":"NicsunXnus"},"content":"        Address expectedAddressContent \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-03-10"},{"lineNumber":300,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedAddressContent, parsedAddress);","lastModifiedDate":"2022-03-10"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":303,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":305,"author":{"gitId":"NicsunXnus"},"content":"    public void parseAddresses_collectionWithValidAddresses_returnsAddressesMap() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":306,"author":{"gitId":"muraddurrani"},"content":"        HashMap\u003cLabel, Address\u003e actualAddressesMap \u003d ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"NicsunXnus"},"content":"                .parseAddresses(Arrays.asList(VALID_ADDRESS, VALID_ADDRESS_WITH_LABEL));","lastModifiedDate":"2022-03-10"},{"lineNumber":308,"author":{"gitId":"muraddurrani"},"content":"        HashMap\u003cLabel, Address\u003e expectedAddressesMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"muraddurrani"},"content":"        expectedAddressesMap","lastModifiedDate":"2022-03-23"},{"lineNumber":311,"author":{"gitId":"muraddurrani"},"content":"                .put(new Label(VALID_ADDRESS, true), new Address(VALID_ADDRESS));","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"muraddurrani"},"content":"        expectedAddressesMap.put(new Label(\"home\", false), new Address(VALID_ADDRESS));","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedAddressesMap, actualAddressesMap);","lastModifiedDate":"2022-03-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"NicsunXnus"},"content":"    public void parseAddresses_collectionWithInvalidAddressesPlusLabel_throwsParseException() throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":319,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":320,"author":{"gitId":"NicsunXnus"},"content":"                .parseAddresses(Arrays.asList(VALID_ADDRESS, INVALID_ADDRESS)));","lastModifiedDate":"2022-03-10"},{"lineNumber":321,"author":{"gitId":"ckcherry23"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":322,"author":{"gitId":"ckcherry23"},"content":"                .parseAddresses(Arrays.asList(VALID_ADDRESS, INVALID_ADDRESS_WITH_LABEL_1)));","lastModifiedDate":"2022-03-10"},{"lineNumber":323,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":324,"author":{"gitId":"NicsunXnus"},"content":"                .parseAddresses(Arrays.asList(VALID_ADDRESS, INVALID_ADDRESS_WITH_LABEL_2)));","lastModifiedDate":"2022-03-10"},{"lineNumber":325,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":326,"author":{"gitId":"NicsunXnus"},"content":"                .parseAddresses(Arrays.asList(VALID_ADDRESS, INVALID_ADDRESS_WITH_LABEL_3)));","lastModifiedDate":"2022-03-10"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":330,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":331,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":334,"author":{"gitId":"NicsunXnus"},"content":"        HashMap\u003cString, Email\u003e testEmailMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":335,"author":{"gitId":"muraddurrani"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":338,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-03-10"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":345,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":346,"author":{"gitId":"NicsunXnus"},"content":"    public void parseEmail_validValueWithoutLabel_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":347,"author":{"gitId":"NicsunXnus"},"content":"        Email parsedEmail \u003d ParserUtil.parseEmail(VALID_EMAIL);","lastModifiedDate":"2022-03-10"},{"lineNumber":348,"author":{"gitId":"NicsunXnus"},"content":"        Email expectedEmailContent \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-10"},{"lineNumber":349,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedEmailContent, parsedEmail);","lastModifiedDate":"2022-03-10"},{"lineNumber":350,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":351,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":352,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":353,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":354,"author":{"gitId":"NicsunXnus"},"content":"    public void parseEmail_validValueWithLabel_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":355,"author":{"gitId":"NicsunXnus"},"content":"        Email parsedEmail \u003d ParserUtil.parseEmail(VALID_EMAIL_WITH_LABEL);","lastModifiedDate":"2022-03-10"},{"lineNumber":356,"author":{"gitId":"NicsunXnus"},"content":"        Email expectedEmailContent \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-10"},{"lineNumber":357,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedEmailContent, parsedEmail);","lastModifiedDate":"2022-03-10"},{"lineNumber":358,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":359,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":360,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":361,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":362,"author":{"gitId":"NicsunXnus"},"content":"    public void parseEmail_validValueWithWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":363,"author":{"gitId":"NicsunXnus"},"content":"        String emailWithWhiteSpace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":364,"author":{"gitId":"NicsunXnus"},"content":"        Email parsedEmail \u003d ParserUtil.parseEmail(emailWithWhiteSpace);","lastModifiedDate":"2022-03-10"},{"lineNumber":365,"author":{"gitId":"NicsunXnus"},"content":"        Email expectedEmailContent \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-10"},{"lineNumber":366,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedEmailContent, parsedEmail);","lastModifiedDate":"2022-03-10"},{"lineNumber":367,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":368,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":369,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THESE***","lastModifiedDate":"2022-03-09"},{"lineNumber":370,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"NicsunXnus"},"content":"    public void parseEmail_validValueWithWhitespaceWithLabel_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":372,"author":{"gitId":"NicsunXnus"},"content":"        String emailWithWhiteSpace \u003d WHITESPACE + VALID_EMAIL_WITH_LABEL + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":373,"author":{"gitId":"NicsunXnus"},"content":"        Email parsedEmail \u003d ParserUtil.parseEmail(emailWithWhiteSpace);","lastModifiedDate":"2022-03-10"},{"lineNumber":374,"author":{"gitId":"NicsunXnus"},"content":"        Email expectedEmailContent \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-10"},{"lineNumber":375,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedEmailContent, parsedEmail);","lastModifiedDate":"2022-03-10"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":378,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":380,"author":{"gitId":"NicsunXnus"},"content":"    public void parseEmails_collectionWithValidEmails_returnsEmailsMap() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":381,"author":{"gitId":"muraddurrani"},"content":"        HashMap\u003cLabel, Email\u003e actualEmailsMap \u003d ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":382,"author":{"gitId":"NicsunXnus"},"content":"                .parseEmails(Arrays.asList(VALID_EMAIL, VALID_EMAIL_WITH_LABEL));","lastModifiedDate":"2022-03-10"},{"lineNumber":383,"author":{"gitId":"muraddurrani"},"content":"        HashMap\u003cLabel, Email\u003e expectedEmailsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":384,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":385,"author":{"gitId":"muraddurrani"},"content":"        expectedEmailsMap","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"muraddurrani"},"content":"                .put(new Label(VALID_EMAIL, true), new Email(VALID_EMAIL));","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"muraddurrani"},"content":"        expectedEmailsMap.put(new Label(\"friend\", false), new Email(VALID_EMAIL));","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedEmailsMap, actualEmailsMap);","lastModifiedDate":"2022-03-09"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":391,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":393,"author":{"gitId":"NicsunXnus"},"content":"    public void parseEmails_collectionWithInvalidEmailsPlusLabel_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmails(Arrays.asList(VALID_EMAIL, INVALID_EMAIL)));","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":396,"author":{"gitId":"NicsunXnus"},"content":"                .parseEmails(Arrays.asList(VALID_EMAIL, INVALID_EMAIL_WITH_LABEL_2)));","lastModifiedDate":"2022-03-10"},{"lineNumber":397,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":398,"author":{"gitId":"NicsunXnus"},"content":"                .parseEmails(Arrays.asList(VALID_EMAIL, INVALID_EMAIL_WITH_LABEL_3)));","lastModifiedDate":"2022-03-10"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":401,"author":{"gitId":"NicsunXnus"},"content":"    //------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":402,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":448,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":449,"author":{"gitId":"NicsunXnus"},"content":"    //-------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-09"},{"lineNumber":450,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":451,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":452,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronoun_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":453,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePronoun(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":454,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":455,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":456,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":457,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":458,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronoun_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":459,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePronoun(INVALID_PRONOUN));","lastModifiedDate":"2022-03-09"},{"lineNumber":460,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":461,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":462,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":463,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":464,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronoun_validValueWithoutWhitespace_returnsPronoun() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":465,"author":{"gitId":"NicsunXnus"},"content":"        Pronoun expectedPronoun \u003d new Pronoun(VALID_PRONOUN);","lastModifiedDate":"2022-03-09"},{"lineNumber":466,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedPronoun, ParserUtil.parsePronoun(VALID_PRONOUN));","lastModifiedDate":"2022-03-09"},{"lineNumber":467,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":468,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":469,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":470,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":471,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronoun_validValueWithWhitespace_returnsTrimmedPronoun() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":472,"author":{"gitId":"NicsunXnus"},"content":"        String pronounWithWhitespace \u003d WHITESPACE + VALID_PRONOUN + WHITESPACE;","lastModifiedDate":"2022-03-09"},{"lineNumber":473,"author":{"gitId":"NicsunXnus"},"content":"        Pronoun expectedPronoun \u003d new Pronoun(VALID_PRONOUN);","lastModifiedDate":"2022-03-09"},{"lineNumber":474,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedPronoun, ParserUtil.parsePronoun(pronounWithWhitespace));","lastModifiedDate":"2022-03-09"},{"lineNumber":475,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":476,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":477,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":478,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":479,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronouns_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":480,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePronouns(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":481,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":482,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":483,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":484,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":485,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronouns_collectionWithInvalidPronouns_throwsParseException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":486,"author":{"gitId":"NicsunXnus"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2022-03-10"},{"lineNumber":487,"author":{"gitId":"NicsunXnus"},"content":"                .parsePronouns(Arrays.asList(VALID_PRONOUN, INVALID_PRONOUN)));","lastModifiedDate":"2022-03-10"},{"lineNumber":488,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":489,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":490,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":491,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":492,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronouns_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":493,"author":{"gitId":"NicsunXnus"},"content":"        assertTrue(ParserUtil.parsePronouns(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-09"},{"lineNumber":494,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":495,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":496,"author":{"gitId":"NicsunXnus"},"content":"    //***PLEASE DOUBLE CHECK THIS****","lastModifiedDate":"2022-03-09"},{"lineNumber":497,"author":{"gitId":"NicsunXnus"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":498,"author":{"gitId":"NicsunXnus"},"content":"    public void parsePronouns_collectionWithValidPronouns_returnsPronounSet() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":499,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cPronoun\u003e actualPronounSet \u003d ParserUtil.parsePronouns(Arrays.asList(VALID_PRONOUN, VALID_PRONOUN_2));","lastModifiedDate":"2022-03-09"},{"lineNumber":500,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cPronoun\u003e expectedPronounSet \u003d new HashSet\u003c\u003e(Arrays","lastModifiedDate":"2022-03-10"},{"lineNumber":501,"author":{"gitId":"NicsunXnus"},"content":"                .asList(new Pronoun(VALID_PRONOUN), new Pronoun(VALID_PRONOUN_2)));","lastModifiedDate":"2022-03-10"},{"lineNumber":502,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":503,"author":{"gitId":"NicsunXnus"},"content":"        assertEquals(expectedPronounSet, actualPronounSet);","lastModifiedDate":"2022-03-09"},{"lineNumber":504,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":505,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ckcherry23":8,"NicsunXnus":278,"muraddurrani":33,"-":180,"tonishka":6}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddresses(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddresses(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ckcherry23":2,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_1;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.testutil.MeetingBookBuilder;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"        assertEquals(new MeetingBook(), new MeetingBook(modelManager.getMeetingBook()));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"        userPrefs.setMeetingBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        userPrefs.setMeetingBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"        MeetingBook meetingBook \u003d new MeetingBookBuilder().withMeeting(MEETING_1).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"        modelManager \u003d new ModelManager(addressBook, meetingBook, userPrefs);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, meetingBook, userPrefs);","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, meetingBook, userPrefs)));","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, meetingBook, userPrefs)));","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, meetingBook, differentUserPrefs)));","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ckcherry23":11,"-":127}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withNumbers(\"12345\")","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"                .withEmails(\"alice@email.com\").withAddresses(\"Main Street\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"NicsunXnus":2,"-":73}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"tonishka"},"content":"        //assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"tonishka"},"content":"        //assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"tonishka"},"content":"        //assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"tonishka"},"content":"        //assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":36,"tonishka":4}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNumbers(VALID_PHONE_BOB).withEmails(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"NicsunXnus"},"content":"                .withAddresses(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"        // same name and tags, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNumbers(VALID_PHONE_BOB).withEmails(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"                .withAddresses(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNumbers(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmails(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddresses(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ckcherry23":6,"NicsunXnus":5,"-":85}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddresses(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddresses(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ckcherry23":1,"NicsunXnus":1,"-":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"tonishka"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"muraddurrani"},"content":"    private static final String INVALID_ID \u003d \"12345\";","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_COMPANY \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_JOBTITLE \u003d \"#1 Employee\";","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    private static final String INVALID_PRONOUN \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    private static final String VALID_ID \u003d \"9ddd72fa-e32e-4ed7-b475-32d4b19f6b72\";","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    private static final String VALID_NAME \u003d \"Benson\";","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    private static final String VALID_COMPANY \u003d \"Apple\";","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    private static final String VALID_JOBTITLE \u003d \"Accountant\";","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    private static final String VALID_PHONE \u003d \"98765432\";","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    private static final String VALID_EMAIL \u003d \"benson.murphy@example.com\";","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Monty Carl, 326459\";","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    private static final List\u003cJsonAdaptedPronoun\u003e VALID_PRONOUNS \u003d BENSON.getPronouns().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"            .map(JsonAdaptedPronoun::new)","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"    //    Cannot use the ID constructor without try-catch if it throws Exception","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"    //    @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"    //    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"    //        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    //        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"    //","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    //        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    //        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    //","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"    //        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"    //        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    //","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"    //        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"    //                new JsonAdaptedPerson(INVALID_ID, VALID_NAME, VALID_COMPANY, VALID_JOBTITLE, validNumbers,","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    //                        validEmails, validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"    //        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"    //        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"    //    }","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"                new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_COMPANY, VALID_JOBTITLE, validNumbers,","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"                        validEmails, validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_COMPANY, VALID_JOBTITLE,","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"                validNumbers, validEmails,","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"                validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"muraddurrani"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_COMPANY, VALID_JOBTITLE, validNumbers,","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"                        validEmails, validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"    public void toModelType_invalidJobTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"muraddurrani"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_COMPANY, INVALID_JOBTITLE, validNumbers,","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"                        validEmails, validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"        String expectedMessage \u003d JobTitle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e invalidNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"        invalidNumbers.put(\"phone#1\", new JsonAdaptedPhone(INVALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"muraddurrani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_COMPANY, VALID_JOBTITLE,","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":"                invalidNumbers, validEmails, validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e invalidEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"        invalidEmails.put(\"email#1\", new JsonAdaptedEmail(INVALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"muraddurrani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_COMPANY, VALID_JOBTITLE,","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"ckcherry23"},"content":"                validNumbers, invalidEmails, validAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e invalidAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"        invalidAddresses.put(\"address#1\", new JsonAdaptedAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"muraddurrani"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_COMPANY, VALID_JOBTITLE,","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":"                validNumbers, validEmails, invalidAddresses, VALID_PRONOUNS, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":"    public void toModelType_invalidPronouns_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"        List\u003cJsonAdaptedPronoun\u003e invalidPronouns \u003d new ArrayList\u003c\u003e(VALID_PRONOUNS);","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"        invalidPronouns.add(new JsonAdaptedPronoun(INVALID_PRONOUN));","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":210,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":212,"author":{"gitId":"muraddurrani"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_COMPANY, VALID_JOBTITLE,","lastModifiedDate":"2022-03-26"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":"                        validNumbers, validEmails, validAddresses, invalidPronouns, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":222,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedAddress\u003e validAddresses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":223,"author":{"gitId":"ckcherry23"},"content":"        validAddresses.put(\"address#1\", new JsonAdaptedAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedPhone\u003e validNumbers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"        validNumbers.put(\"phone#1\", new JsonAdaptedPhone(VALID_PHONE));","lastModifiedDate":"2022-03-11"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"        HashMap\u003cString, JsonAdaptedEmail\u003e validEmails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":229,"author":{"gitId":"ckcherry23"},"content":"        validEmails.put(\"email#1\", new JsonAdaptedEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-11"},{"lineNumber":230,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":232,"author":{"gitId":"muraddurrani"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_COMPANY, VALID_JOBTITLE,","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"ckcherry23"},"content":"                        validNumbers, validEmails, validAddresses, VALID_PRONOUNS, invalidTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ckcherry23":134,"muraddurrani":12,"-":88,"tonishka":2}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"        assertEquals(addressBookFromFile.toString(), typicalPersonsAddressBook.toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"tonishka"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ckcherry23":1,"-":46,"tonishka":1}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"        userPrefs.setMeetingBookFilePath(Paths.get(\"meetingbook.json\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ckcherry23":1,"-":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.storage.meeting.JsonMeetingBookStorage;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"        JsonMeetingBookStorage meetingBookStorage \u003d new JsonMeetingBookStorage(getTempFilePath(\"mb\"));","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ckcherry23":3,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"muraddurrani"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"muraddurrani"},"content":"        descriptor.setCompany(person.getCompany().orElse(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"muraddurrani"},"content":"        descriptor.setJobTitle(person.getJobTitle().orElse(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setNumbers(person.getNumbers());","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setEmails(person.getEmails());","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setAddresses(person.getAddresses());","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setPronouns(person.getPronouns());","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code Company} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"    public EditPersonDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code JobTitle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"    public EditPersonDescriptorBuilder withJobTitle(String jobTitle) {","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setJobTitle(new JobTitle(jobTitle));","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"muraddurrani"},"content":"     * Sets the numbers of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"muraddurrani"},"content":"    public EditPersonDescriptorBuilder withNumbers(String... numbers) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Phone\u003e parsedNumbers \u003d Arrays.stream(numbers)","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"muraddurrani"},"content":"                .map(phoneLabelPair -\u003e phoneLabelPair.split(\" l/\"))","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"muraddurrani"},"content":"                .collect(Collectors.toMap(phoneLabelPair -\u003e phoneLabelPair.length \u003d\u003d 1","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"muraddurrani"},"content":"                                ? new Label(phoneLabelPair[0], true)","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"muraddurrani"},"content":"                                : new Label(phoneLabelPair[1], false),","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"muraddurrani"},"content":"                    phoneLabelPair -\u003e new Phone(phoneLabelPair[0])));","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"muraddurrani"},"content":"        descriptor.setNumbers(parsedNumbers);","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"muraddurrani"},"content":"     * Sets the emails of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"muraddurrani"},"content":"    public EditPersonDescriptorBuilder withEmails(String... emails) {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Email\u003e parsedEmails \u003d Arrays.stream(emails)","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"muraddurrani"},"content":"                .map(emailLabelPair -\u003e emailLabelPair.split(\" l/\"))","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"                .collect(Collectors.toMap(emailLabelPair -\u003e emailLabelPair.length \u003d\u003d 1","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"muraddurrani"},"content":"                                ? new Label(emailLabelPair[0], true)","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"muraddurrani"},"content":"                                : new Label(emailLabelPair[1], false),","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"muraddurrani"},"content":"                    emailLabelPair -\u003e new Email(emailLabelPair[0])));","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"muraddurrani"},"content":"        descriptor.setEmails(parsedEmails);","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"muraddurrani"},"content":"     * Sets the addresses of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"muraddurrani"},"content":"    public EditPersonDescriptorBuilder withAddresses(String... addresses) {","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"muraddurrani"},"content":"        Map\u003cLabel, Address\u003e parsedAddresses \u003d Arrays.stream(addresses)","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"muraddurrani"},"content":"                .map(addressLabelPair -\u003e addressLabelPair.split(\" l/\"))","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"muraddurrani"},"content":"                .collect(Collectors.toMap(addressLabelPair -\u003e addressLabelPair.length \u003d\u003d 1","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"muraddurrani"},"content":"                                ? new Label(addressLabelPair[0], true)","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"muraddurrani"},"content":"                                : new Label(addressLabelPair[1], false),","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"muraddurrani"},"content":"                    addressLabelPair -\u003e new Address(addressLabelPair[0])));","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"muraddurrani"},"content":"        descriptor.setAddresses(parsedAddresses);","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the {@code pronouns} into a {@code Set\u003cPronouns\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"     * that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"    public EditPersonDescriptorBuilder withPronouns(String... pronouns) {","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"NicsunXnus"},"content":"        Set\u003cPronoun\u003e pronounSet \u003d Stream.of(pronouns).map(Pronoun::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"NicsunXnus"},"content":"        descriptor.setPronouns(pronounSet);","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ckcherry23":1,"NicsunXnus":21,"muraddurrani":35,"-":88}},{"path":"src/test/java/seedu/address/testutil/MeetingBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":" * A utility class to help with building MeetingBook objects.","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":" *     {@code MeetingBook mb \u003d new MeetingBookBuilder().withAgenda(\"Meet n Greet\").build();}","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"public class MeetingBookBuilder {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    private MeetingBook meetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBookBuilder() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"        meetingBook \u003d new MeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBookBuilder(MeetingBook meetingBook) {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"        this.meetingBook \u003d meetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"     * Adds a new {@code Person} to the {@code MeetingBook} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBookBuilder withMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"        meetingBook.addMeeting(meeting);","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBook build() {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"        return meetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"ckcherry23":34}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Agenda;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.MeetingPlace;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"public class MeetingBuilder {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    public static final String DEFAULT_AGENDA \u003d \"Paper supply for Greendale College\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    public static final String DEFAULT_PLACE \u003d \"David\u0027s Office\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    public static final String DEFAULT_TIME \u003d \"02-04-2022 13:30\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    private Agenda agenda;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    private MeetingPlace meetingPlace;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    private MeetingTime meetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    private Set\u003cId\u003e attendees;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"        agenda \u003d new Agenda(DEFAULT_AGENDA);","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"        meetingPlace \u003d new MeetingPlace(DEFAULT_PLACE);","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"        meetingTime \u003d new MeetingTime(MeetingTime.formatTime(DEFAULT_TIME));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"        attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        agenda \u003d meetingToCopy.getAgenda();","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"        meetingPlace \u003d meetingToCopy.getPlace();","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"        meetingTime \u003d meetingToCopy.getTime();","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"        attendees \u003d new HashSet\u003c\u003e(meetingToCopy.getAttendees());","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"     * Sets the {@code Agenda} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBuilder withAgenda(String agenda) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        this.agenda \u003d new Agenda(agenda);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"     * Sets the {@code MeetingPlace} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBuilder withPlace(String place) {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"        this.meetingPlace \u003d new MeetingPlace(place);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"     * Sets the {@code MeetingTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBuilder withTime(String time) {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"        this.meetingTime \u003d new MeetingTime(MeetingTime.formatTime(time));","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"     * Parses the {@code attendees} into a {@code Set\u003cId\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"    public MeetingBuilder withAttendees(String... attendees) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"        this.attendees \u003d SampleDataUtil.getAttendeeSet(attendees);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"        return this;","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"     * Builds a {@code Meeting} with the fields of {@code MeetingBuilder}","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"    public Meeting build() {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"        return new Meeting(agenda, meetingPlace, meetingTime, attendees);","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"        return \"MeetingBuilder{\"","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"                + \"agenda\u003d\" + agenda","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"                + \", meetingPlace\u003d\" + meetingPlace","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"                + \", meetingTime\u003d\" + meetingTime","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"                + \", attendees\u003d\" + attendees","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"ckcherry23":95}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"muraddurrani"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"NicsunXnus"},"content":"    public static final String DEFAULT_COMPANY \u003d \"KFC\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"NicsunXnus"},"content":"    public static final String DEFAULT_JOB_TITLE \u003d \"Cook\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"NicsunXnus"},"content":"    private Company company;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"NicsunXnus"},"content":"    private JobTitle jobTitle;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"muraddurrani"},"content":"    private Map\u003cLabel, Phone\u003e numbers;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"muraddurrani"},"content":"    private Map\u003cLabel, Address\u003e addresses;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"muraddurrani"},"content":"    private Map\u003cLabel, Email\u003e emails;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"NicsunXnus"},"content":"    private Set\u003cPronoun\u003e pronouns;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"        jobTitle \u003d new JobTitle(DEFAULT_JOB_TITLE);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"        numbers \u003d new HashMap\u003cLabel, Phone\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"        addresses \u003d new HashMap\u003cLabel, Address\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"        emails \u003d new HashMap\u003cLabel, Email\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"        pronouns \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"muraddurrani"},"content":"        company \u003d personToCopy.getCompany().orElse(null);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"muraddurrani"},"content":"        jobTitle \u003d personToCopy.getJobTitle().orElse(null);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"        numbers \u003d personToCopy.getNumbers();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"        emails \u003d personToCopy.getEmails();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"        addresses \u003d personToCopy.getAddresses();","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"        pronouns \u003d new HashSet\u003c\u003e(personToCopy.getPronouns());","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code Company} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"NicsunXnus"},"content":"    public PersonBuilder withCompany(String company) {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"NicsunXnus"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code JobTitle} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"NicsunXnus"},"content":"    public PersonBuilder withJobTitle(String jobTitle) {","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"NicsunXnus"},"content":"        this.jobTitle \u003d new JobTitle(jobTitle);","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"     * Parses the {@code pronouns} into a {@code Set\u003cPronoun\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"    public PersonBuilder withPronouns(String... pronouns) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"        this.pronouns \u003d SampleDataUtil.getPronounSet(pronouns);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code Addresses} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"    public PersonBuilder withAddresses(String... addresses) {","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"        this.addresses \u003d SampleDataUtil.getAddressMap(addresses);","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code Numbers} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"    public PersonBuilder withNumbers(String... numbers) {","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"        this.numbers \u003d SampleDataUtil.getPhoneMap(numbers);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"     * Sets the {@code Emails} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"NicsunXnus"},"content":"    public PersonBuilder withEmails(String... emails) {","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"NicsunXnus"},"content":"        this.emails \u003d SampleDataUtil.getEmailMap(emails);","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"muraddurrani"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"muraddurrani"},"content":"     * Builds a {@code Person} with the fields of {@code PersonBuilder}","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"muraddurrani"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":134,"author":{"gitId":"NicsunXnus"},"content":"        return new Person(name, numbers, emails, addresses, company, jobTitle, pronouns, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"        return \"PersonBuilder{\"","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"                + \"name\u003d\" + name","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"                + \", company\u003d\" + company","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"                + \", jobTitle\u003d\" + jobTitle","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":"                + \", numbers\u003d\" + numbers","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"                + \", addresses\u003d\" + addresses","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"                + \", emails\u003d\" + emails","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"                + \", pronouns\u003d\" + pronouns","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"                + \", tags\u003d\" + tags","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ckcherry23":14,"NicsunXnus":44,"muraddurrani":15,"-":77}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOBTITLE;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"NicsunXnus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRONOUN;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"NicsunXnus"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"muraddurrani"},"content":"import seedu.address.model.label.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.person.EditPersonDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"NicsunXnus"},"content":"import seedu.address.model.person.Pronoun;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"        sb.append(PREFIX_NAME).append(person.getName().fullName).append(\" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"muraddurrani"},"content":"        person.getCompany().map(c -\u003e sb.append(PREFIX_COMPANY).append(c.company).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"muraddurrani"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"muraddurrani"},"content":"        person.getJobTitle().map(j -\u003e sb.append(PREFIX_JOBTITLE).append(j.jobTitle).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"        person.getPronouns().stream().forEach(","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"            s -\u003e sb.append(PREFIX_PRONOUN + s.pronoun + \" \")","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"        );","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"        person.getAddresses().forEach((","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"            label, address) -\u003e sb.append(PREFIX_ADDRESS + address.address + \" l/\" + label + \" \")","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"        );","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"        person.getEmails().forEach((","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"            label, email) -\u003e sb.append(PREFIX_EMAIL + email.email + \" l/\" + label + \" \")","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"        );","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"        person.getNumbers().forEach((","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"            label, number) -\u003e sb.append(PREFIX_PHONE + number.phone + \" l/\" + label + \" \")","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"NicsunXnus"},"content":"        );","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"muraddurrani"},"content":"        descriptor.getCompany().ifPresent(company -\u003e sb.append(PREFIX_COMPANY).append(company.company).append(\" \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"        descriptor.getJobTitle().ifPresent(jobTitle -\u003e sb.append(PREFIX_JOBTITLE)","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"                .append(jobTitle.jobTitle).append(\" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"NicsunXnus"},"content":"                sb.append(PREFIX_TAG + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"NicsunXnus"},"content":"        if (descriptor.getPronouns().isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"NicsunXnus"},"content":"            Set\u003cPronoun\u003e pronouns \u003d descriptor.getPronouns().get();","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"NicsunXnus"},"content":"            if (pronouns.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"NicsunXnus"},"content":"                sb.append(PREFIX_PRONOUN + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"NicsunXnus"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"NicsunXnus"},"content":"                pronouns.forEach(s -\u003e sb.append(PREFIX_PRONOUN).append(s.pronoun).append(\" \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"NicsunXnus"},"content":"        if (descriptor.getNumbers().isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"muraddurrani"},"content":"            Map\u003cLabel, Phone\u003e numbers \u003d descriptor.getNumbers().get();","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"NicsunXnus"},"content":"            if (numbers.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"NicsunXnus"},"content":"                sb.append(PREFIX_PHONE + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"NicsunXnus"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"NicsunXnus"},"content":"                numbers.forEach((label, number) -\u003e sb.append(PREFIX_PHONE + number.phone + \" l/\" + label + \" \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"NicsunXnus"},"content":"        if (descriptor.getEmails().isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"muraddurrani"},"content":"            Map\u003cLabel, Email\u003e emails \u003d descriptor.getEmails().get();","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"NicsunXnus"},"content":"            if (emails.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"NicsunXnus"},"content":"                sb.append(PREFIX_EMAIL + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"NicsunXnus"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"NicsunXnus"},"content":"                emails.forEach((label, email) -\u003e sb.append(PREFIX_EMAIL + email.email + \" l/\" + label + \" \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"NicsunXnus"},"content":"        if (descriptor.getAddresses().isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"muraddurrani"},"content":"            Map\u003cLabel, Address\u003e addresses \u003d descriptor.getAddresses().get();","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"NicsunXnus"},"content":"            if (addresses.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"NicsunXnus"},"content":"                sb.append(PREFIX_ADDRESS + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"NicsunXnus"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"                addresses.forEach((label, address) -\u003e sb.append(PREFIX_ADDRESS + address.address","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"                        + \" l/\" + label + \" \"));","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"NicsunXnus"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"NicsunXnus"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"NicsunXnus"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ckcherry23":11,"NicsunXnus":53,"muraddurrani":9,"-":54}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.MeetingBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"public class TypicalMeetings {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"    public static final Meeting MEETING_1 \u003d new MeetingBuilder().withAgenda(\"Paper supply for Greendale College\")","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"            .withPlace(\"David\u0027s Office\").withTime(\"02-04-2022 13:30\").build();","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    private TypicalMeetings() {} // prevents instantiation","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"     * Returns an {@code MeetingBook} with all the typical meetings.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    public static MeetingBook getTypicalMeetingBook() {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"        MeetingBook mb \u003d new MeetingBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"            mb.addMeeting(meeting);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"        return mb;","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING_1));","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"ckcherry23":34}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRONOUN_HIM;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRONOUN_SHE;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRONOUN_THEY;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"NicsunXnus"},"content":"            .withAddresses(\"123, Jurong West Ave 6, #08-111 l/home\").withEmails(\"alice@example.com l/business\")","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"NicsunXnus"},"content":"            .withNumbers(\"94351253\").withCompany(\"Tesla\").withJobTitle(\"CEO\")","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"NicsunXnus"},"content":"            .withPronouns(\"she\")","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"NicsunXnus"},"content":"            .withAddresses(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"johnd@example.com\").withNumbers(\"98765432\")","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"NicsunXnus"},"content":"            .withCompany(\"Apple\").withJobTitle(\"Accountant\")","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"NicsunXnus"},"content":"            .withPronouns(\"him\")","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withNumbers(\"95352563 l/personal\")","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"heinz@example.com l/personal\", \"heinzWork@example.com l/work\")","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"NicsunXnus"},"content":"            .withAddresses(\"wall street\").withCompany(\"Samsung\").withJobTitle(\"Data Analyst\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withNumbers(\"87652533\")","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"NicsunXnus"},"content":"            .withCompany(\"exampleCompany\").withJobTitle(\"exampleJob\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withNumbers(\"9482224\")","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"NicsunXnus"},"content":"            .withCompany(\"exampleCompany\").withJobTitle(\"exampleJob\")","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"werner@example.com\").withAddresses(\"michegan ave\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"NicsunXnus"},"content":"            .withNumbers(\"9482427\").withCompany(\"exampleCompany\").withJobTitle(\"exampleJob\")","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"lydia@example.com\").withAddresses(\"little tokyo\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withNumbers(\"9482442\")","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"NicsunXnus"},"content":"            .withCompany(\"exampleCompany\").withJobTitle(\"exampleJob\")","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"anna@example.com\").withAddresses(\"4th street\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"NicsunXnus"},"content":"            .withNumbers(\"8482424\").withCompany(\"exampleCompany\").withJobTitle(\"exampleJob\")","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"stefan@example.com\").withAddresses(\"little india\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"NicsunXnus"},"content":"            .withNumbers(\"8482131\").withCompany(\"exampleCompany\").withJobTitle(\"exampleJob\")","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(\"hans@example.com\").withAddresses(\"chicago ave\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withNumbers(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"            .withCompany(VALID_COMPANY_AMY).withJobTitle(VALID_JOB_TITLE_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"            .withEmails(VALID_EMAIL_AMY).withAddresses(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"            .withPronouns(VALID_PRONOUN_SHE, VALID_PRONOUN_THEY)","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"NicsunXnus"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"NicsunXnus"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withNumbers(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"NicsunXnus"},"content":"            .withCompany(VALID_COMPANY_BOB).withJobTitle(VALID_JOB_TITLE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"NicsunXnus"},"content":"            .withEmails(VALID_EMAIL_BOB).withAddresses(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"NicsunXnus"},"content":"            .withPronouns(VALID_PRONOUN_THEY, VALID_PRONOUN_HIM)","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ckcherry23":11,"NicsunXnus":32,"-":52}}]
