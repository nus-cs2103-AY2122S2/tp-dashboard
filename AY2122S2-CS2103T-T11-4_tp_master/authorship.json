[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"[![Codecov](https://codecov.io/gh/AY2122S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dZ0PQIQXY29)](https://codecov.io/gh/AY2122S2-CS2103T-T11-4/tp)","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"PeopleSoft is a CLI-based contractor payroll management app. It helps **companies which offer contractor services** with managing how much each contractor is paid. You can:","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"- manage contractors","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"- manage jobs","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"- calculate monthly salary","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"It is written with the OOP paradigm in mind and has ~6 KLoC.","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"* View the User Guide and Developer Guide on our **[Website](https://ay2122s2-cs2103t-t11-4.github.io/tp/)**.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"ian-from-dover":11,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"### Zhong Fu","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"\u003cimg src\u003d\"images/zhongfu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"[[github](https://github.com/zhongfu)]","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"[[portfolio](team/zhongfu.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"### Ian Hong","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"\u003cimg src\u003d\"images/ian-from-dover.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"[[github](http://github.com/ian-from-dover)]","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"[[portfolio](team/ian-from-dover.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"### Wrik Karmakar","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"\u003cimg src\u003d\"images/thewrik.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"[[github](http://github.com/thewrik)] [[portfolio](team/thewrik.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"### Elliot Lim Zhi Yong","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"\u003cimg src\u003d\"images/spyobird.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"[[github](http://github.com/spyobird)]","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"[[portfolio](team/spyobird.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"### Elumalai Oviya Dharshini","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ovidharshini"},"content":"\u003cimg src\u003d\"images/ovidharshini.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ovidharshini"},"content":"[[github](http://github.com/ovidharshini)]","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"thewrik"},"content":"[[portfolio](team/ovidharshini.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ovidharshini":2,"-":26,"thewrik":17}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"ovidharshini"},"content":"* Project adapted from [addressbook-level3](https://se-education.org/addressbook-level3/DeveloperGuide.html#product-scope)","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"ovidharshini"},"content":"HR Managers of companies offering contractor services","lastModifiedDate":"2022-03-06"},{"lineNumber":261,"author":{"gitId":"ovidharshini"},"content":"* have a need to manage a significant number of contacts","lastModifiedDate":"2022-03-06"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"ovidharshini"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2022-03-06"},{"lineNumber":265,"author":{"gitId":"ovidharshini"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-06"},{"lineNumber":266,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":267,"author":{"gitId":"ovidharshini"},"content":"**Value proposition**:","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"ovidharshini"},"content":"* HR-related functions like retrieving contact information, hiring, grouping by user type etc.","lastModifiedDate":"2022-03-06"},{"lineNumber":269,"author":{"gitId":"ovidharshini"},"content":"* Organize many dimensions of information; increase maintainability and simplify the management of data.","lastModifiedDate":"2022-03-06"},{"lineNumber":270,"author":{"gitId":"ovidharshini"},"content":"* Increase the speed and ease of use.","lastModifiedDate":"2022-03-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                                   | I want to …​                                                                   | So that I can…​                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"ovidharshini"},"content":"|-----|-------------------------------------------|--------------------------------------------------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-06"},{"lineNumber":280,"author":{"gitId":"ovidharshini"},"content":"| `* *` | new user                                  | see usage instructions                                                         | refer to instructions when I forget how to use the App                        |","lastModifiedDate":"2022-03-06"},{"lineNumber":281,"author":{"gitId":"ovidharshini"},"content":"| `* *` | potential user                            | see the app populated with sample data                                         | easily see how the app will look like when it is in use                       |","lastModifiedDate":"2022-03-06"},{"lineNumber":282,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | add a new employee                                                             |                                                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":283,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | add tags to employees                                                          | identify their roles                                                          |","lastModifiedDate":"2022-03-06"},{"lineNumber":284,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | view the number of hours an employee has worked                                | compensate them accordingly                                                   |","lastModifiedDate":"2022-03-06"},{"lineNumber":285,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | edit an employee\u0027s information                                                 | rectify mistakes or update their personal information if need be              |","lastModifiedDate":"2022-03-06"},{"lineNumber":286,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | delete an employee                                                             |                                                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":287,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | delete all employees                                                           | mass-remove entries that I no longer need                                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":288,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                             | list all employees                                                             |                                                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":289,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                       | find a person by name or tag                                                   | locate details of persons without having to go through the entire list        |","lastModifiedDate":"2022-03-06"},{"lineNumber":290,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | view the salary owed to a given employee                                       | pay them                                                                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":291,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | pay for a given type of job                                                    |                                                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":292,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                             | load and save data in human-readable data files                                | I can backup the data externally or access it in a different application      |","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"ovidharshini"},"content":"| `* * *` | user                                      | exit the application                                                           |                                                                               |","lastModifiedDate":"2022-03-06"},{"lineNumber":294,"author":{"gitId":"ovidharshini"},"content":"| `* *` | user                                      | log into separate modes for HR-related functions and for job-related functions | easily access relevant data for the type of work I am doing at any given time |","lastModifiedDate":"2022-03-06"},{"lineNumber":295,"author":{"gitId":"ovidharshini"},"content":"| `* *` | user                                      | edit pay multiplier factors (e.g. overtime, experience, emergency on-calls)    | apply changes in payment policies across the organization                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":296,"author":{"gitId":"ovidharshini"},"content":"| `*` | user                                      | view expiring contractor licenses                                              | renew them on time                                                            |","lastModifiedDate":"2022-03-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"ovidharshini"},"content":"(For all use cases below, the **System** is `PeopleSoft` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-06"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"ovidharshini"},"content":"**Use case: Delete an employee**","lastModifiedDate":"2022-03-06"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"ovidharshini"},"content":"1.  User requests to list employees","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"ovidharshini"},"content":"2.  PeopleSoft shows a list of employees","lastModifiedDate":"2022-03-06"},{"lineNumber":308,"author":{"gitId":"ovidharshini"},"content":"3.  User requests to delete a specific employee in the list","lastModifiedDate":"2022-03-06"},{"lineNumber":309,"author":{"gitId":"ovidharshini"},"content":"4.  PeopleSoft deletes the employee","lastModifiedDate":"2022-03-06"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"ovidharshini"},"content":"    * 3a1. PeopleSoft shows an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"ovidharshini"},"content":"**Use case: Update an employee\u0027s data**","lastModifiedDate":"2022-03-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":327,"author":{"gitId":"ovidharshini"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":329,"author":{"gitId":"ovidharshini"},"content":"1.  User requests to list employees","lastModifiedDate":"2022-03-06"},{"lineNumber":330,"author":{"gitId":"ovidharshini"},"content":"2.  PeopleSoft shows a list of employees","lastModifiedDate":"2022-03-06"},{"lineNumber":331,"author":{"gitId":"ovidharshini"},"content":"3.  User requests to edit a specific employee in the list with the updated information","lastModifiedDate":"2022-03-06"},{"lineNumber":332,"author":{"gitId":"ovidharshini"},"content":"4.  PeopleSoft updates the employee to match user input","lastModifiedDate":"2022-03-06"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":334,"author":{"gitId":"ovidharshini"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":335,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":336,"author":{"gitId":"ovidharshini"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":337,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":338,"author":{"gitId":"ovidharshini"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":339,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":340,"author":{"gitId":"ovidharshini"},"content":"  Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":341,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":342,"author":{"gitId":"ovidharshini"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":343,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":344,"author":{"gitId":"ovidharshini"},"content":"    * 3a1. PeopleSoft shows an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":345,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":346,"author":{"gitId":"ovidharshini"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"ovidharshini"},"content":"3. Should not rely on database-management systems to store data.","lastModifiedDate":"2022-03-06"},{"lineNumber":353,"author":{"gitId":"ovidharshini"},"content":"4. Should be compatible with Java 11","lastModifiedDate":"2022-03-06"},{"lineNumber":354,"author":{"gitId":"ovidharshini"},"content":"5. Should not require an installer; should be packaged into a single reasonably-sized (i.e. within 100MB) JAR file.","lastModifiedDate":"2022-03-06"},{"lineNumber":355,"author":{"gitId":"ovidharshini"},"content":"6. Should not be hosted on remote servers","lastModifiedDate":"2022-03-06"},{"lineNumber":356,"author":{"gitId":"ovidharshini"},"content":"7. Should not make use of proprietary third-party frameworks, libraries and services","lastModifiedDate":"2022-03-06"},{"lineNumber":357,"author":{"gitId":"ovidharshini"},"content":"8. Should have a responsive GUI. GUI should function well (i.e., should not cause any resolution-related inconveniences to the user) for standard screen resolutions and higher and for screen scales 100% and 125%. GUI should be usable - even if suboptimal - for resolutions 1280x720 and higher and for screen scales 150%.","lastModifiedDate":"2022-03-06"},{"lineNumber":358,"author":{"gitId":"ovidharshini"},"content":"9. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-06"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"ovidharshini"},"content":"* **Standard screen resolution**: 1920x1080","lastModifiedDate":"2022-03-06"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"ian-from-dover":1,"ovidharshini":62,"-":354}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"PeopleSoft is a desktop app for **calculating the salary for shift-based contractors**, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**. If you can type fast, PeopleSoft can get your payroll tasks done much faster than traditional GUI apps.","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"1. Download the latest `peoplesoft.jar` from [here]().","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003eYou can try out any command from the [Command Summary](#command-summary) below.","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"## Command summary","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"| Command | Format                                                                        | Examples                                                                                               |","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"|---------|-------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"| `help`    | `help`                                                                          | NA                                                                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"|   `help`      | `help c\\COMMAND`                                                                | `help c\\edit`                                                                                              |","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"| `add`     | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS h/HOURS [t/TAG]`                  | `add n/Nicole Tan  p/99338558  e/nicole@stffhub.org  a/1 Tech Drive, S138572  h/32 t/Hardware  t/Senior` |","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"| `edit`    | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [h/HOURS] [t/TAG]` | `edit 2 n/Nicole Lee   t/OS`                                                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"thewrik"},"content":"| `delete`  | `delete INDEX`                                                                  | `delete 3`                                                                                               |","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"thewrik"},"content":"| `find`    | `find [KEYWORD] [MORE_KEYWORDS]`                                                | `find Nicole Hardware`                                                                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"thewrik"},"content":"| `list`    | `list`                                                                          | NA                                                                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"thewrik"},"content":"|  `list`       | `list t\\[TAG]`                                                                    | `list t\\Senior`                                                                                          |","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"thewrik"},"content":"| `clear`   | `clear`                                                                         | NA                                                                                                  |","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"thewrik"},"content":"| `save`    | `save`                                                                          | NA                                                                                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"thewrik"},"content":"### List all the commands: `help`","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"thewrik"},"content":"Provides a list of all the commands (as defined below) with a short description of each of them.","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"thewrik"},"content":"Prompted when the user makes a typo (i.e. tries to use an invalid command) :","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"thewrik"},"content":"Format: `Looks like you used an invalid command. Use the command help to access a list of all available commands.`","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"thewrik"},"content":"Additional Feature:","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"thewrik"},"content":"When given a command as a parameter, it provides a detailed description of it.","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"thewrik"},"content":"Format: `help c/COMMAND`","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"thewrik"},"content":"Example: `help c/edit`","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"thewrik"},"content":"### Add an employee : `add`","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"thewrik"},"content":"Adds a new employee to the system with the given attributes. `HOURS` refers to the number of hours worked by the employee.","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"thewrik"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS h/HOURS [t/TAG] [t/TAG]…`","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"thewrik"},"content":"Example: `add n/Nicole Tan p/99338558 e/nicole@stffhub.org a/1 Tech Drive, S138572 h/32 t/Hardware t/Senior`","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"thewrik"},"content":"### Edit an employee’s information : `edit`","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"thewrik"},"content":"Use command to edit the information of an existing employee. This is in the event that employee details change.","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"thewrik"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]`","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"thewrik"},"content":"### Delete an employee : `delete`","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"thewrik"},"content":"Deletes the employee referred to by the index. This is irreversible.","lastModifiedDate":"2022-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"thewrik"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-03"},{"lineNumber":103,"author":{"gitId":"thewrik"},"content":"Example: `delete 3`","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"thewrik"},"content":"### Search for a person by name or tag : `find`","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"thewrik"},"content":"Finds all people by a certain name and/or tag. If the search is to be conducted by tags alone, a ‘*’ in place of the name parameter. If multiple tags are passed, only entries that match all tags are returned.","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"thewrik"},"content":"Format: `find [*/NAME] [,Tags]`","lastModifiedDate":"2022-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"thewrik"},"content":"`find Nicole Hardware` finds all entries with a person named ‘Nicole’, tagged with ‘Hardware’","lastModifiedDate":"2022-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"thewrik"},"content":"`find Nicole` finds all entries with a person named ‘Nicole’","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"thewrik"},"content":"`find * Hardware` finds all entries tagged with ‘Hardware’","lastModifiedDate":"2022-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"thewrik"},"content":"`find Nicole Hardware Display` finds all entries with a person named ‘Nicole’, tagged with ‘Hardware’ AND ‘Display’ BOTH","lastModifiedDate":"2022-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"thewrik"},"content":"### List all persons : `list`","lastModifiedDate":"2022-03-03"},{"lineNumber":120,"author":{"gitId":"thewrik"},"content":"Lists all the employees in the company","lastModifiedDate":"2022-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"thewrik"},"content":"Format: `list`","lastModifiedDate":"2022-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"thewrik"},"content":"Example: `list` shows all the employees in the company","lastModifiedDate":"2022-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"thewrik"},"content":"### Clear all entries : `clear`","lastModifiedDate":"2022-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"thewrik"},"content":"Removes all the employees’ information in the company from the app. Useful for clearing out sample data. WARNING: You cannot recover the data afterwards.","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"thewrik"},"content":"[coming in v1.2] Requests for confirmation from the user before clearing.","lastModifiedDate":"2022-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"thewrik"},"content":"Example: `clear` removes all the employees from the app.","lastModifiedDate":"2022-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"thewrik"},"content":"### Exit the program : `exit`","lastModifiedDate":"2022-03-03"},{"lineNumber":137,"author":{"gitId":"thewrik"},"content":"Exits the program immediately.","lastModifiedDate":"2022-03-03"},{"lineNumber":138,"author":{"gitId":"thewrik"},"content":"[coming in v1.3] Requests for confirmation from the user before exiting.","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"thewrik"},"content":"### Save the data","lastModifiedDate":"2022-03-03"},{"lineNumber":143,"author":{"gitId":"thewrik"},"content":"PeopleSoft saves the data to the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"thewrik"},"content":"### Edit the data externally","lastModifiedDate":"2022-03-03"},{"lineNumber":146,"author":{"gitId":"thewrik"},"content":"PeopleSoft data is saved as a JSON file [JAR file location]/data/peoplesoft.json. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":148,"author":{"gitId":"thewrik"},"content":"❗️Caution: If your changes to the data file makes its format invalid, PeopleSoft will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"thewrik"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with your existing PeopleSoft data file.","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":102,"thewrik":61}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Spyobird"},"content":"title: PeopleSoft","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Spyobird"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-T11-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"Spyobird"},"content":"[![Codecov](https://codecov.io/gh/AY2122S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dZ0PQIQXY29)](https://codecov.io/gh/AY2122S2-CS2103T-T11-4/tp)","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Spyobird"},"content":"PeopleSoft is a CLI-based contractor payroll management app. It helps **companies which offer contractor services** with managing how much each contractor is paid. You can:","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"Spyobird"},"content":"- manage contractors","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"Spyobird"},"content":"- manage jobs","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Spyobird"},"content":"- calculate monthly salary","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"Spyobird"},"content":"It is written with the OOP paradigm in mind and has ~6 KLoC.","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"Spyobird"},"content":"* View the User Guide and Developer Guide on our **[Website](https://ay2122s2-cs2103t-t11-4.github.io/tp/)**.","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"Spyobird"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Spyobird":12,"-":13}},{"path":"docs/team/ian-from-dover.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ian-from-dover"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"ian-from-dover"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"ian-from-dover"},"content":"title: Ian Hong\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"ian-from-dover"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"ian-from-dover"},"content":"### Project: PeopleSoft","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ian-from-dover"},"content":"PeopleSoft lets HR managers of companies handle their people.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"ian-from-dover"},"content":"Given below are not my contributions to the project. (copied over)","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"ian-from-dover"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"ian-from-dover"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ian-from-dover"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"ian-from-dover"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"ian-from-dover"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"ian-from-dover"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"ian-from-dover"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ian-from-dover"},"content":"* **Project management**:","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ian-from-dover"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"ian-from-dover"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"ian-from-dover"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"ian-from-dover"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"ian-from-dover"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"ian-from-dover"},"content":"  * User Guide:","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"ian-from-dover"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"ian-from-dover"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"ian-from-dover"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"ian-from-dover"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"ian-from-dover"},"content":"* **Community**:","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"ian-from-dover"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"ian-from-dover"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"ian-from-dover"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"ian-from-dover"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"ian-from-dover"},"content":"* **Tools**:","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"ian-from-dover"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"ian-from-dover"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"ian-from-dover"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"ian-from-dover"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"ian-from-dover":47}},{"path":"docs/team/ovidharshini.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"ovidharshini"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"title: Oviya\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"### Project: PeopleSoft","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"Lorem ipsum dolor sit amet.","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"* **New Feature**: tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"    * What it does:","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    * Justification:","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    * Highlights:","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"    * Credits:","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"* **Project management**:","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"    * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"        * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"        * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"* **Community**:","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"* **Tools**:","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"ovidharshini":1,"thewrik":36}},{"path":"docs/team/spyobird.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Spyobird"},"content":"# PPP","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Spyobird"},"content":"## Overview:","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Spyobird"},"content":"A short overview of your product to provide some context to the reader. The opening 1-2 sentences may be reused by all team members. If your product overview extends beyond 1-2 sentences, the remainder should be written by yourself.","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Spyobird"},"content":"## Summary of Contributions --Suggested items to include:","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Spyobird"},"content":"### Code contributed:","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Spyobird"},"content":"Give a link to your code on tP Code Dashboard. The link is available in the Project List Page -- linked to the  icon under your profile picture.","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Spyobird"},"content":"### Enhancements implemented:","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Spyobird"},"content":"A summary of the enhancements you implemented.","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Spyobird"},"content":"### Contributions to the UG:","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Spyobird"},"content":"Which sections did you contribute to the UG?","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Spyobird"},"content":"### Contributions to the DG:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Spyobird"},"content":"Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Spyobird"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Spyobird"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Spyobird"},"content":"Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Spyobird"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Spyobird"},"content":"Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Spyobird"},"content":"Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Spyobird"},"content":"## OPTIONAL Contributions to the Developer Guide (Extracts):","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Spyobird"},"content":"Reproduce the parts in the Developer Guide that you wrote. Alternatively, you can show the various diagrams you contributed.","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Spyobird"},"content":"## OPTIONAL Contributions to the User Guide (Extracts):","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Spyobird"},"content":"Reproduce the parts in the User Guide that you wrote.","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Spyobird":24}},{"path":"docs/team/thewrik.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thewrik"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"thewrik"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"thewrik"},"content":"title: Wrik\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"thewrik"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"thewrik"},"content":"### Project: PeopleSoft","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"thewrik"},"content":"Lorem ipsum dolor sit amet.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"thewrik"},"content":"Given below are (not) my contributions to the project.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"thewrik"},"content":"* **New Feature**: tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"thewrik"},"content":"    * What it does:","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"thewrik"},"content":"    * Justification:","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"thewrik"},"content":"    * Highlights:","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"thewrik"},"content":"    * Credits:","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"thewrik"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"thewrik"},"content":"* **Project management**:","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"thewrik"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"thewrik"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"thewrik"},"content":"    * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"thewrik"},"content":"        * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"thewrik"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"thewrik"},"content":"        * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"thewrik"},"content":"* **Community**:","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"thewrik"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"thewrik"},"content":"* **Tools**:","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"thewrik"},"content":"    * tbd","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"thewrik":36}},{"path":"docs/team/zhongfu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhongfu"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"zhongfu"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"zhongfu"},"content":"title: Zhongfu\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"zhongfu"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"zhongfu"},"content":"### Project: PeopleSoft","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"zhongfu"},"content":"Lorem ipsum dolor sit amet.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"zhongfu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"zhongfu"},"content":"* **New Feature**: tbd","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"zhongfu"},"content":"  * What it does:","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"zhongfu"},"content":"  * Justification:","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"zhongfu"},"content":"  * Highlights:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"zhongfu"},"content":"  * Credits:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"zhongfu"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"zhongfu"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"zhongfu"},"content":"  * tbd","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"zhongfu"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"zhongfu"},"content":"  * tbd","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"zhongfu"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"zhongfu"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"zhongfu"},"content":"    * tbd","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"zhongfu"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"zhongfu"},"content":"    * tbd","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"zhongfu"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"zhongfu"},"content":"  * tbd","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"zhongfu"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"zhongfu"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"zhongfu"},"content":"  * tbd","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"zhongfu":36}},{"path":"src/main/java/seedu/address/model/job/Job.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Spyobird"},"content":"package seedu.address.model.job;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Spyobird"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Spyobird"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Spyobird"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Spyobird"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Spyobird"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Spyobird"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Spyobird"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Spyobird"},"content":" * Represents a job. Immutable.","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Spyobird"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Spyobird"},"content":"public class Job {","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"Spyobird"},"content":"    private final String name;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Spyobird"},"content":"    private final Money rate;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Spyobird"},"content":"    private final float duration;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Spyobird"},"content":"    private final boolean hasPaid;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Spyobird"},"content":"    private final Set\u003cPerson\u003e persons \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Spyobird"},"content":"     * Constructor for an immutable job.","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"Spyobird"},"content":"     * All fields must not be null.","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Spyobird"},"content":"    public Job(String name, Money rate, float duration, boolean hasPaid, Set\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"Spyobird"},"content":"        requireAllNonNull(name, rate, duration, hasPaid, persons);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"Spyobird"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Spyobird"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Spyobird"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Spyobird"},"content":"        this.hasPaid \u003d hasPaid;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"Spyobird"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Spyobird"},"content":"    public String getName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Spyobird"},"content":"        return name;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"Spyobird"},"content":"    public Money getRate() {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"Spyobird"},"content":"        return rate;","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Spyobird"},"content":"    public float getDuration() {","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Spyobird"},"content":"        return duration;","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Spyobird"},"content":"    public boolean hasPaid() {","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Spyobird"},"content":"        return hasPaid;","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Spyobird"},"content":"     * Returns an immutable person set.","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Spyobird"},"content":"     * @return Immutable set of persons.","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Spyobird"},"content":"    public Set\u003cPerson\u003e getPersons() {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Spyobird"},"content":"        return Collections.unmodifiableSet(persons);","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Spyobird"},"content":"     * Returns the pay of the job.","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Spyobird"},"content":"     * Calculated from rate and duration.","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Spyobird"},"content":"     * @return Pay.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Spyobird"},"content":"    public Money calculatePay() {","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Spyobird"},"content":"        return rate.multiply(duration);","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Spyobird"},"content":"     * Returns a new instance of the job with isPaid as true;","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Spyobird"},"content":"     * @return Paid job.","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Spyobird"},"content":"    public Job setAsPaid() {","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Spyobird"},"content":"        return new Job(name, rate, duration, true, persons);","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Spyobird"},"content":"     * Returns a new instance of the job with isPaid as false;","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Spyobird"},"content":"     * @return Unpaid job.","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Spyobird"},"content":"    public Job setAsNotPaid() {","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Spyobird"},"content":"        return new Job(name, rate, duration, false, persons);","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Spyobird"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Spyobird"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Spyobird"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Spyobird"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Spyobird"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Spyobird"},"content":"        if (!(other instanceof Job)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Spyobird"},"content":"            return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Spyobird"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Spyobird"},"content":"        Job otherJob \u003d (Job) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Spyobird"},"content":"        return otherJob.getName().equals(getName())","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Spyobird"},"content":"                \u0026\u0026 otherJob.getRate().equals(getRate())","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Spyobird"},"content":"                \u0026\u0026 otherJob.getDuration() \u003d\u003d getDuration()","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Spyobird"},"content":"                \u0026\u0026 otherJob.hasPaid() \u003d\u003d hasPaid()","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"Spyobird"},"content":"                \u0026\u0026 otherJob.getPersons().equals(getPersons());","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Spyobird"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Spyobird"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Spyobird"},"content":"        return Objects.hash(name, rate, duration, hasPaid, persons);","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Spyobird"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Spyobird"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Spyobird"},"content":"        return super.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"Spyobird"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Spyobird":116}},{"path":"src/main/java/seedu/address/model/job/Money.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Spyobird"},"content":"package seedu.address.model.job;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"Spyobird"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"Spyobird"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"Spyobird"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"Spyobird"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Spyobird"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"Spyobird"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"Spyobird"},"content":" * Represents some value of money. Immutable.","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"Spyobird"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"Spyobird"},"content":"public class Money {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"Spyobird"},"content":"    private static final int VALUE_SCALE \u003d 6;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"Spyobird"},"content":"    private static final NumberFormat CURRENCY_FORMAT \u003d NumberFormat.getCurrencyInstance(Locale.US);","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"Spyobird"},"content":"    public final BigDecimal value;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"Spyobird"},"content":"     * Constructs a {@code Money}.","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"Spyobird"},"content":"     * @param value A value as a double.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"Spyobird"},"content":"    public Money(double value) {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"Spyobird"},"content":"        this(BigDecimal.valueOf(value));","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"Spyobird"},"content":"     * Constructs a {@code Money}.","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Spyobird"},"content":"     * @param value A value as a BigDecimal.","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Spyobird"},"content":"    public Money(BigDecimal value) {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Spyobird"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Spyobird"},"content":"        CURRENCY_FORMAT.setRoundingMode(RoundingMode.HALF_UP);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Spyobird"},"content":"        this.value \u003d value.setScale(VALUE_SCALE, RoundingMode.HALF_UP);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"Spyobird"},"content":"    public BigDecimal getValue() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Spyobird"},"content":"        return value;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"Spyobird"},"content":"     * Returns a {@code Money} with the value equal the sum of both values.","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"Spyobird"},"content":"     * @param augend Value to add.","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"Spyobird"},"content":"     * @return Sum.","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"Spyobird"},"content":"    public Money add(Money augend) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"Spyobird"},"content":"        return new Money(value.add(augend.value).setScale(VALUE_SCALE, RoundingMode.HALF_UP));","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Spyobird"},"content":"     * Returns a {@code Money} with the value equal the difference of the second value from the first.","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Spyobird"},"content":"     * @param augend Value to subtract.","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Spyobird"},"content":"     * @return Difference.","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"Spyobird"},"content":"    public Money subtract(Money augend) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"Spyobird"},"content":"        return new Money(value.add(augend.value.negate()).setScale(VALUE_SCALE, RoundingMode.HALF_UP));","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"Spyobird"},"content":"     * Returns a {@code Money} with the value equal the product of both values.","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"Spyobird"},"content":"     * @param multiplicand Value to multiply.","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"Spyobird"},"content":"     * @return Product.","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"Spyobird"},"content":"    public Money multiply(double multiplicand) {","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"Spyobird"},"content":"        return new Money(value.multiply(BigDecimal.valueOf(multiplicand)).setScale(VALUE_SCALE, RoundingMode.HALF_UP));","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"Spyobird"},"content":"     * Returns a {@code Money} with the value equal the product of both values.","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Spyobird"},"content":"     * @param multiplicand Value to multiply.","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"Spyobird"},"content":"     * @return Product.","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"Spyobird"},"content":"    public Money multiply(Money multiplicand) {","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"Spyobird"},"content":"        return new Money(value.multiply(multiplicand.value).setScale(VALUE_SCALE, RoundingMode.HALF_UP));","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"Spyobird"},"content":"     * Returns a {@code Money} with the value equal the quotient of the first value over the second.","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"Spyobird"},"content":"     * @param divisor Value to divide.","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"Spyobird"},"content":"     * @return Quotient.","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"Spyobird"},"content":"    public Money divide(double divisor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"Spyobird"},"content":"        return new Money(value.divide(BigDecimal.valueOf(divisor), VALUE_SCALE, RoundingMode.HALF_UP));","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"Spyobird"},"content":"     * Returns a {@code Money} with the value equal the quotient of the first value over the second.","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"Spyobird"},"content":"     * @param divisor Value to divide.","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"Spyobird"},"content":"     * @return Quotient.","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"Spyobird"},"content":"    public Money divide(Money divisor) {","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"Spyobird"},"content":"        return new Money(value.divide(divisor.value, VALUE_SCALE, RoundingMode.HALF_UP));","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"Spyobird"},"content":"     * Prints the 6 decimal place representation of the value.","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"Spyobird"},"content":"     * @return Value as a string.","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"Spyobird"},"content":"    public String printFullValue() {","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"Spyobird"},"content":"        return value.toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"Spyobird"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"Spyobird"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"Spyobird"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"Spyobird"},"content":"                || (other instanceof Money // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"Spyobird"},"content":"                \u0026\u0026 value.equals(((Money) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"Spyobird"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"Spyobird"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"Spyobird"},"content":"        // Might change if scale not matching is an issue","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"Spyobird"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"Spyobird"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"Spyobird"},"content":"     * Prints the 2 decimal place currency format of the value.","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"Spyobird"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"Spyobird"},"content":"     * @returns Value in currency format as a string.","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"Spyobird"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"Spyobird"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"Spyobird"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"Spyobird"},"content":"        // Might change if scale not matching is an issue","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"Spyobird"},"content":"        return CURRENCY_FORMAT.format(value);","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"Spyobird"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"Spyobird":136}},{"path":"src/test/java/seedu/address/model/job/JobTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Spyobird"},"content":"package seedu.address.model.job;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"Spyobird"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"Spyobird"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"Spyobird"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"Spyobird"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"Spyobird"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"Spyobird"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"Spyobird"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"Spyobird"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Spyobird"},"content":"class JobTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"Spyobird"},"content":"    private static final Job EATING \u003d new Job(\"Eating\",","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"Spyobird"},"content":"            new Money(5.5), 1, false, Set.of(ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"Spyobird"},"content":"    private static final Job RUNNING \u003d new Job(\"Running\",","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"Spyobird"},"content":"            new Money(6), 2, true, Set.of(BOB));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"Spyobird"},"content":"    public void getPersons_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"Spyobird"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e EATING.getPersons().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"Spyobird"},"content":"    public void calculatePay() {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"Spyobird"},"content":"        assertTrue(EATING.calculatePay().getValue().compareTo(new BigDecimal(5.5)) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"Spyobird"},"content":"        assertTrue(RUNNING.calculatePay().getValue().compareTo(new BigDecimal(12)) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"Spyobird"},"content":"    public void setAsPaid() {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"Spyobird"},"content":"        // paid -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"Spyobird"},"content":"        assertTrue(EATING.setAsPaid().hasPaid());","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"Spyobird"},"content":"        assertTrue(RUNNING.setAsPaid().hasPaid());","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"Spyobird"},"content":"    public void setAsNotPaid() {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Spyobird"},"content":"        // not paid -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.setAsNotPaid().hasPaid());","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"Spyobird"},"content":"        assertFalse(RUNNING.setAsNotPaid().hasPaid());","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"Spyobird"},"content":"    public void testEquals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"Spyobird"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Spyobird"},"content":"        assertTrue(EATING.equals(EATING));","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Spyobird"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"Spyobird"},"content":"        assertTrue(EATING.equals(new Job(\"Eating\",","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"Spyobird"},"content":"                new Money(5.5), 1, false, Set.of(ALICE))));","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"Spyobird"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"Spyobird"},"content":"        // another type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(\"Eating\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"Spyobird"},"content":"        // another value -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(RUNNING));","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(new Job(\"Running\",","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"Spyobird"},"content":"            new Money(5.5), 1, false, Set.of(ALICE))));","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(new Job(\"Eating\",","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"Spyobird"},"content":"            new Money(6), 1, false, Set.of(ALICE))));","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(new Job(\"Eating\",","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"Spyobird"},"content":"            new Money(5.5), 2, false, Set.of(ALICE))));","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(new Job(\"Eating\",","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"Spyobird"},"content":"            new Money(5.5), 1, true, Set.of(ALICE))));","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"Spyobird"},"content":"        assertFalse(EATING.equals(new Job(\"Eating\",","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"Spyobird"},"content":"            new Money(5.5), 1, false, Set.of(BOB))));","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"Spyobird"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"Spyobird":74}},{"path":"src/test/java/seedu/address/model/job/MoneyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Spyobird"},"content":"package seedu.address.model.job;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"Spyobird"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"Spyobird"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"Spyobird"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"Spyobird"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"Spyobird"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"Spyobird"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"Spyobird"},"content":"public class MoneyTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"Spyobird"},"content":"    private static final Money ZERO \u003d new Money(0);","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"Spyobird"},"content":"    private static final Money ONE \u003d new Money(1);","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"Spyobird"},"content":"    private static final Money TWO \u003d new Money(2);","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"Spyobird"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"Spyobird"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new Money(Double.NaN));","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"Spyobird"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new Money(Double.POSITIVE_INFINITY));","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"Spyobird"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Money(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"Spyobird"},"content":"    public void add() {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"Spyobird"},"content":"        // wrong addition -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ZERO.add(ZERO).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.add(ONE).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"Spyobird"},"content":"        // correct addition -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.add(ZERO).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.add(ONE).getValue().compareTo(BigDecimal.valueOf(2)) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Spyobird"},"content":"    public void subtract() {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"Spyobird"},"content":"        // wrong subtraction -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ZERO.subtract(ZERO).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.subtract(ONE).getValue().compareTo(BigDecimal.valueOf(2)) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"Spyobird"},"content":"        // correct subtraction -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.subtract(ZERO).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.subtract(ONE).getValue().compareTo(BigDecimal.ZERO) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"Spyobird"},"content":"    public void multiply() {","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Spyobird"},"content":"        // wrong multiplication -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ZERO.multiply(0).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.multiply(ONE).getValue().compareTo(BigDecimal.ZERO) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"Spyobird"},"content":"        // correct multiplication -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.multiply(0).getValue().compareTo(BigDecimal.ZERO) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.multiply(ONE).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"Spyobird"},"content":"    public void divide() {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Spyobird"},"content":"        // division by zero -\u003e throws error","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"Spyobird"},"content":"        assertThrows(ArithmeticException.class, () -\u003e ONE.divide(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"Spyobird"},"content":"        assertThrows(ArithmeticException.class, () -\u003e ONE.divide(ZERO));","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"Spyobird"},"content":"        // wrong division -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ZERO.divide(1).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.divide(ONE).getValue().compareTo(BigDecimal.ZERO) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"Spyobird"},"content":"        // correct division -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ZERO.divide(1).getValue().compareTo(BigDecimal.ZERO) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"Spyobird"},"content":"        assertTrue(TWO.divide(TWO).getValue().compareTo(BigDecimal.ONE) \u003d\u003d 0);","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"Spyobird"},"content":"    public void printFullValue() {","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"Spyobird"},"content":"        assertEquals(ZERO.printFullValue(), \"0.000000\");","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"Spyobird"},"content":"        assertEquals(ONE.printFullValue(), \"1.000000\");","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"Spyobird"},"content":"        assertEquals(new Money(12.38).printFullValue(), \"12.380000\");","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"Spyobird"},"content":"        assertEquals(new Money(0.2736541).printFullValue(), \"0.273654\");","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"Spyobird"},"content":"        assertEquals(new Money(93.7265328).printFullValue(), \"93.726533\");","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"Spyobird"},"content":"    public void testEquals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"Spyobird"},"content":"        // same value -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"Spyobird"},"content":"        Money otherOne \u003d new Money(1);","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"Spyobird"},"content":"        Money yetAnotherOne \u003d new Money(BigDecimal.ONE);","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"Spyobird"},"content":"        Money theLastOne \u003d new Money(BigDecimal.valueOf(1000, 3));","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.equals(otherOne));","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.equals(yetAnotherOne));","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.equals(theLastOne));","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"Spyobird"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"Spyobird"},"content":"        assertTrue(ONE.equals(ONE));","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"Spyobird"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"Spyobird"},"content":"        // another type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.equals(1));","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"Spyobird"},"content":"        // another value -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"Spyobird"},"content":"        assertFalse(ONE.equals(TWO));","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"Spyobird"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"Spyobird"},"content":"    public void testToString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"Spyobird"},"content":"        assertEquals(ZERO.toString(), \"$0.00\");","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"Spyobird"},"content":"        assertEquals(ONE.toString(), \"$1.00\");","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"Spyobird"},"content":"        assertEquals(new Money(32.50).toString(), \"$32.50\");","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"Spyobird"},"content":"        // rounding","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"Spyobird"},"content":"        assertEquals(new Money(7.472).toString(), \"$7.47\");","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"Spyobird"},"content":"        assertEquals(new Money(19.1294).toString(), \"$19.13\");","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"Spyobird"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"Spyobird"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"Spyobird"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"Spyobird":116}}]
