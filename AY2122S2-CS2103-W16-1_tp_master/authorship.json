[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-W16-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-W16-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"* This is a project created under CS2103 software engineering module in NUS.","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"* This application is written predominantly in Java, with a simple GUI using JavaFX. ","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"* Its purpose is to provide university students with a way to manage university contacts related to their studies in an organised manner.","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"benmurphyy":5,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"mainClassName \u003d \u0027unibook.Main\u0027","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"yokester98"},"content":"    archiveName \u003d \u0027unibook.jar\u0027","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benmurphyy":1,"yokester98":1,"-":72,"geraldneo567":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"### Ben Murphy","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"\u003cimg src\u003d\"images/benmurphyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"[[github](https://github.com/benmurphyy)]","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"[[portfolio](team/benmurphyy.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"* Role: Team Lead","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"* Responsibilities: UI","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"### Loy Yoke Yue","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"\u003cimg src\u003d\"images/yokester98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"[[github](http://github.com/yokester98)]","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"[[portfolio](team/yokester98.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"* Role: Code Quality","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"* Responsibilities: Add contacts to UniBook","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"### Gerald Neo","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"\u003cimg src\u003d\"images/geraldneo567.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"[[github](http://github.com/geraldneo567)] [[portfolio](team/geraldneo567.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"* Role: Documentation","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"* Responsibilities: Parsing command input","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ryanwalterlee"},"content":"### Ryan Walter Lee","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"\u003cimg src\u003d\"images/ryanwalterlee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ryanwalterlee"},"content":"[[github](http://github.com/ryanwalterlee)]","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"[[portfolio](team/ryanwalterlee.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"sophiien"},"content":"### Sophie Ng","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"\u003cimg src\u003d\"images/sophiien.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"sophiien"},"content":"[[github](http://github.com/sophiien)]","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"sophiien"},"content":"[[portfolio](team/sophiien.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"sophiien"},"content":"* Responsibilities: Updating contacts","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benmurphyy":7,"ryanwalterlee":4,"yokester98":6,"sophiien":4,"-":34,"geraldneo567":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"## **User Activity Flow**","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"\u003cimg src\u003d\"images/OverallActivityDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"The image above is an activity diagram of when a User uses the application. After the User opens Unibook, the user can","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"choose what they want to do with the app, whether it be modifying or viewing the data. The command given then executes.","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"If the user has more commands to give, they can keep repeating the process. Otherwise, they can use the Exit command to","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"close the application.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ryanwalterlee"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103-W16-1/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/ui/Ui.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `ModuleListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"The `UI` componnent contains two different listviews `PersonListPanel` and `ModuleListPanel` as inner components, but only displays one of them at a time depending on the view that the user wishes to see - modules or people.","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"* depends on some classes in the `Model` component","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"  * `ModuleListPanel` and `ModuleCard` display the `ModuleList` of the `Model` and `Modules` inside `ModuleList`, respectively.","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"  * `PersonListPanel` displays the filtered `UniquePersonList` of the `Model`.","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"  * `StudentCard` and `Professor` display the `Student` and `Professsor` objects residing in the `Model` respectively.","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/logic/Logic.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"1. When `Logic` is called upon to execute a command, it uses the `UniBookParser` class to parse the user command.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"* When called upon to parse a user command, the `UniBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `UniBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/model/Model.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"* stores the UniBook data","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"  * all `Person` objects (which are contained in a `UniquePersonList` object)","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"    * `Person` class is abstract, a `Person` object must be either of subtype `Student` or a `Professor`","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"  * all `Module` objects (which are contained in a `ModuleList` object)","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"  * all `Group` objects (which are contained in the `Module` objects they belong to)","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"* stores the currently \u0027selected\u0027 `Module` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cModule\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103-W16-1/tp/blob/master/src/main/java/unibook/storage/Storage.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"* can save both UniBook data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"* inherits from both `UniBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"The `JsonAdaptedStudent` and `JsonAdaptedProfessor` classes inherit from the abstract `JsonAdaptedPerson` class, which holds all the common fields that both classes share.","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"Classes used by multiple components are in the `unibook.commons` package.","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"yokester98"},"content":"### Add feature","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"yokester98"},"content":"The add feature enables the user to add a module/student/professor/group/event/meeting to the UniBook depending on the option specified by the user. ","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"yokester98"},"content":"Given below is an example of a sequence diagram that shows the flow using the input `add o/module n/Software Engineering m/CS2103`.","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"yokester98"},"content":"The command is first parsed with `execute(\"add o/module n/Software Engineering m/CS2103\", true, false, false)` where `true`, `false` and `false` are boolean variables which indicate whether the `Person` or `Module` or `Group` view is active. Following that, the `parseCommand` method in `UniBookParser` will be called, which in turn calls `AddCommandParser`. This instantiates a new `AddCommand` object which is returned to `UniBookParser`. After which, the `AddCommand` is passed to `LogicManager` and the `execute` method will run. The `model` object will be accessed to update the current list of modules in the UniBook. Finally, the `CommandResult` will be returned.","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"yokester98"},"content":"The add command can also add a group/student/professor/event/meeting. In these cases, the flow of the program is still largely similar, except that `model` object will be accessed to update the respective fields of students/professors/groups.","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"yokester98"},"content":"![Implementation of adding a module](images/AddSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"### List feature","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"The list feature enables the user to customise which modules/people are currently visible. As an example, the sequence","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"diagram below shows the flow using the input `list o/type ty/professors`.","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"The command is first parsed with `execute(\"list o/type ty/professors\", true, false)` where `true` and `false` are","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"geraldneo567"},"content":"boolean variables indicating whether the `Person` view or `Module` view is currently active. Subsequently, the ","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"geraldneo567"},"content":"`parseCommand` method in `UniBookParser` is called which will call `ListCommandParser`, which creates the ","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"geraldneo567"},"content":"`ListCommand` for `ListCommandParser` to pass to `UniBookParser`. Subsequently the `ListCommand` is returned to ","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"geraldneo567"},"content":"`LogicManager` and the `execute` method is run. In this case the `Model` instance is accessed to update the predicate","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"geraldneo567"},"content":"which changes the view to the appropriate one (in this case showing all professors), ","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"geraldneo567"},"content":"before finally returning the `CommandResult`.","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"geraldneo567"},"content":"Note that the `List` command can also list modules and in this case the flow would be very similar, just that the ","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"geraldneo567"},"content":"appropriate boolean variables will be flipped to represent the correct view.","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"benmurphyy"},"content":"![Interactions Inside the Logic Component for the `list` command](images/ListSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"sophiien"},"content":"* university student taking modules in the curriculum ","lastModifiedDate":"2022-03-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"sophiien"},"content":"* has a need to find relevant contacts pertaining to a specific module","lastModifiedDate":"2022-03-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"sophiien"},"content":"**Value proposition**: allows user to find relevant contacts (eg professors, classmates) from a specific module quickly","lastModifiedDate":"2022-03-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"sophiien"},"content":"| `* * *`  | student                                    | add contacts of other students taking a specific module | I can easily contact other students for help |","lastModifiedDate":"2022-03-04"},{"lineNumber":229,"author":{"gitId":"sophiien"},"content":"| `* * *`  | student                                    | remove contacts of students who have finished the module | I can see only those students who are still in the module |","lastModifiedDate":"2022-03-04"},{"lineNumber":230,"author":{"gitId":"sophiien"},"content":"| `* * *`  | student/professor                          | view all my contacts |","lastModifiedDate":"2022-03-04"},{"lineNumber":231,"author":{"gitId":"sophiien"},"content":"| `* * *`  | student                                    | edit specific details of a contact  | ","lastModifiedDate":"2022-03-04"},{"lineNumber":232,"author":{"gitId":"sophiien"},"content":"| `* * *`  | professor                                  | edit specific details of a contact  | ","lastModifiedDate":"2022-03-04"},{"lineNumber":233,"author":{"gitId":"sophiien"},"content":"| `* * *`  | student                                    | find the relevant contact details (eg office location, email) to reach my TAs/professors | I am able to find the information I need quickly |","lastModifiedDate":"2022-03-04"},{"lineNumber":234,"author":{"gitId":"sophiien"},"content":"| `* * *`  | student                                    | find classmates and their contact details taking the same module |  I can form teams with them for group projects                                                                      |","lastModifiedDate":"2022-03-04"},{"lineNumber":235,"author":{"gitId":"sophiien"},"content":"| `* * `  | student with many modules                   | flag any important contacts to saved contacts | I can easily find the relevant contact in a hassle-free manner in the future |","lastModifiedDate":"2022-03-04"},{"lineNumber":236,"author":{"gitId":"sophiien"},"content":"| `* `  | student with many modules                     | organise any saved contacts into categories | I can easily find the relevant contact in a hassle-free manner |","lastModifiedDate":"2022-03-04"},{"lineNumber":237,"author":{"gitId":"sophiien"},"content":"| `*  `  | professor teaching multiple modules          | organise students into their respective modules | locate details of students in each module without having to go through the entire list |","lastModifiedDate":"2022-03-04"},{"lineNumber":238,"author":{"gitId":"sophiien"},"content":"| `* `    | tech savvy user who is well-versed in using command-line interfaces | use command-lines to carry out a command (eg email cs2103 prof)  | I can easily contact the relevant person with one command |","lastModifiedDate":"2022-03-04"},{"lineNumber":239,"author":{"gitId":"sophiien"},"content":"| `*`      | student/professor with many contacts in the UniBook | sort persons by name | locate a person easily |","lastModifiedDate":"2022-03-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"geraldneo567"},"content":"**Use Case: UC01 - Add a Person**","lastModifiedDate":"2022-03-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"geraldneo567"},"content":"Actor: User","lastModifiedDate":"2022-03-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":249,"author":{"gitId":"geraldneo567"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":251,"author":{"gitId":"yokester98"},"content":"1. User requests to add a person.","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"geraldneo567"},"content":"2. UniBook adds the appropriate person object to the system.","lastModifiedDate":"2022-03-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":254,"author":{"gitId":"geraldneo567"},"content":"Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":256,"author":{"gitId":"geraldneo567"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"* 1a. The UniBook list is currently full.","lastModifiedDate":"2022-03-02"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"  - Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":259,"author":{"gitId":"geraldneo567"},"content":"  ","lastModifiedDate":"2022-03-02"},{"lineNumber":260,"author":{"gitId":"geraldneo567"},"content":"* 1a. The user request is wrongly formatted/incomplete.","lastModifiedDate":"2022-03-02"},{"lineNumber":261,"author":{"gitId":"geraldneo567"},"content":"    - 1a1. User is prompted to enter the format correctly.","lastModifiedDate":"2022-03-02"},{"lineNumber":262,"author":{"gitId":"geraldneo567"},"content":"    - Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":264,"author":{"gitId":"geraldneo567"},"content":"**Use case: UC02 - List Persons**","lastModifiedDate":"2022-03-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":266,"author":{"gitId":"geraldneo567"},"content":"Actor: User","lastModifiedDate":"2022-03-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"geraldneo567"},"content":"2. UniBook displays persons according to listing criteria.","lastModifiedDate":"2022-03-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":273,"author":{"gitId":"geraldneo567"},"content":"Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":275,"author":{"gitId":"geraldneo567"},"content":"**Use Case: UC03 - Edit Person/Module**","lastModifiedDate":"2022-03-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":277,"author":{"gitId":"geraldneo567"},"content":"Actor: User","lastModifiedDate":"2022-03-02"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":279,"author":{"gitId":"geraldneo567"},"content":"**Guarantees**","lastModifiedDate":"2022-03-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":281,"author":{"gitId":"geraldneo567"},"content":"- No changes will be made to any data if the user request is wrongly formatted/incomplete.","lastModifiedDate":"2022-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":283,"author":{"gitId":"geraldneo567"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":285,"author":{"gitId":"geraldneo567"},"content":"1. User requests to edit person/module","lastModifiedDate":"2022-03-02"},{"lineNumber":286,"author":{"gitId":"geraldneo567"},"content":"2. UniBook updates the relevant data according to the user command.","lastModifiedDate":"2022-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"geraldneo567"},"content":"* 1a. The person/module does not exist in UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":292,"author":{"gitId":"geraldneo567"},"content":"    - The user is notified that the person/module does not exist.","lastModifiedDate":"2022-03-02"},{"lineNumber":293,"author":{"gitId":"geraldneo567"},"content":"    - Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":295,"author":{"gitId":"geraldneo567"},"content":"* 1a. The user request is wrongly formatted/incomplete.","lastModifiedDate":"2022-03-02"},{"lineNumber":296,"author":{"gitId":"geraldneo567"},"content":"    - 1a1. User is prompted to enter the format correctly.","lastModifiedDate":"2022-03-02"},{"lineNumber":297,"author":{"gitId":"geraldneo567"},"content":"    - Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":299,"author":{"gitId":"geraldneo567"},"content":"**Use Case: UC04 - Finding specific persons**","lastModifiedDate":"2022-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"geraldneo567"},"content":"Actor: User","lastModifiedDate":"2022-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":303,"author":{"gitId":"geraldneo567"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":305,"author":{"gitId":"geraldneo567"},"content":"1. User requests to find a specific person.","lastModifiedDate":"2022-03-02"},{"lineNumber":306,"author":{"gitId":"geraldneo567"},"content":"2. UniBook displays the people who match the specified search criteria.","lastModifiedDate":"2022-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"geraldneo567"},"content":"**Use Case: UC05 - Deleting**","lastModifiedDate":"2022-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"geraldneo567"},"content":"Actor: User","lastModifiedDate":"2022-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":316,"author":{"gitId":"geraldneo567"},"content":"1. User requests to delete a specified set of data.","lastModifiedDate":"2022-03-02"},{"lineNumber":317,"author":{"gitId":"geraldneo567"},"content":"2. UniBook removes the specified set of data from the system.","lastModifiedDate":"2022-03-02"},{"lineNumber":318,"author":{"gitId":"geraldneo567"},"content":"3. The UI is updated to no longer reflect or display this data.","lastModifiedDate":"2022-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":320,"author":{"gitId":"geraldneo567"},"content":"Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":328,"author":{"gitId":"geraldneo567"},"content":"1.  Should be able to work on any Popular Operating System as long as Java is installed.","lastModifiedDate":"2022-03-02"},{"lineNumber":329,"author":{"gitId":"geraldneo567"},"content":"2.  The program should be able to handle up to 500 students per module.","lastModifiedDate":"2022-03-02"},{"lineNumber":330,"author":{"gitId":"geraldneo567"},"content":"3. System should respond to commands within 2 seconds.","lastModifiedDate":"2022-03-02"},{"lineNumber":331,"author":{"gitId":"geraldneo567"},"content":"4. There should be no memory leaks.","lastModifiedDate":"2022-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"geraldneo567"},"content":"* **User**: A user of UniBook, either a student or a professor.","lastModifiedDate":"2022-03-02"},{"lineNumber":336,"author":{"gitId":"geraldneo567"},"content":"* **Module**: A group of students led by professor(s), representing a university course. ","lastModifiedDate":"2022-03-02"},{"lineNumber":337,"author":{"gitId":"geraldneo567"},"content":"* **Popular Operating System**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2022-03-02"},{"lineNumber":338,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benmurphyy":28,"ryanwalterlee":8,"yokester98":7,"sophiien":15,"-":273,"geraldneo567":60}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"   1. Run the `unibook.Main` and try a few commands.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"benmurphyy":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"   e.g. `unibook.commons.StringUtilTest`","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"   e.g. `unibook.storage.StorageManagerTest`","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"   e.g. `unibook.storage.LogicManagerTest`","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"UniBook is a **desktop app for students to manage their university contacts related to their studies in an organised manner,** optimized for command-line interface (CLI) while still having the benefits of a Graphical User Interface (GUI).  ","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"1. Download the latest `unibook.jar` from [here](https://github.com/AY2122S2-CS2103-W16-1/tp/releases).","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"   * **`list`** : Lists all entries.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"   * **`add`**`o/student n/John Doe p/98765432 e/johnd@example.com` : Adds a student named `John Doe` to UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"sophiien"},"content":"   * **`edit`**`o/person 1 p/91234567 e/prof@email.com` : Edits the 1st contact\u0027s phone number and email shown in the current list.","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"### Core function of UniBook","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"* To serve its purpose as useful desktop app for University students to manage their university contacts for their studies in an organised manner, UniBook supports the following types of entries:","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"  * 2 types of people - Students and Professors","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    * All people contain 3 basic details - name, phone and email. Phone and Email details can be left blank.","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    * Professors can contain one additional detail - office, the office in the University they are located in. This can also be left blank.","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"  * Modules","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"    * A module represents a University module, storing 4 basic details - module name, module code, groups of the module and key events of the module. Key Events represent events such as exams or assignment due dates, storing the associated date.","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"    * A module can have both Professors and Students associated with it. ","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"      * Association with Professor implies that the professor is involved in the teaching of the module.","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"      * Association with student implies student is taking the module.","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"  * Groups","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    * A group can represent any kind of group related to a university module that a student is in - a study group, project grp etc. It stores meeting times for the group.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    * A group can contain multiple students implying they are members of the group.","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"    * A group is also associated with a module, and cannot exist without being associated with a module. The reasoning for this is that UniBook is specially designed for managing contacts associated with a student\u0027s studies - hence only groups related to university modules are allowed. ","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"* UniGroup is thus an app that displays and stores the above entries for easy reference by users, with smart commands that help to manage entries of them.","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"### User Interface","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"* UniBook consists of 3 main pages that a user can navigate through - the _people page_, _modules page_ and _groups page_.","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"  * The _people page_ displays all students and professors stored in UniBook, along with the module codes of each module and group names of each group stored in UniBook. This complements the CLI as a user is able to add a person to a module or group directly on this page using those displayed codes/names. (ref: `add` command)","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"  ![Ui](images/Ui.png) ","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"  * The _module page_ displays all modules stored in UniBook, and all their individual details.","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"  ![ModulesPage](images/modulesPage.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"  * The _groups page_ displays all the groups stored in UniBook, and all their individual details.","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"  ![GroupsPage](images/groupsPage.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"  ","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"* A User can navigate between pages with the `list` command.","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"* Different variations of CLI commands can be run depending on the page user is currently on.","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"* While UniBook is primarily optimized for the command-line interface (CLI), some basic intuitive navigation is available for quick navigation across pages to improve ease-of-use :","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"  * On _people page_, a user can click on a module code to enter the _module page_ displaying all the details of the module with the given module code.","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"  * On _people page_, a user can click on a group name to enter the _group page_ displaying all the details of the group with the given group name.","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"* On _module page_ showing multiple modules, initially only the module code and name of each module is shown, to see the rest of the details of a module, just click the tab corresponding to the detail you wish to see. For example, to see all the students taking a module, just click the \"Students\" tab.","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"* On _group page_, showing multiple groups, initially only the module code of the module associated with each group and the group name will be displayed. To see the rest of the details of a group, just click the panel of the group.","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yokester98"},"content":"### Adding an entry: `add`","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"yokester98"},"content":"Adds a module/group/student/professor/event/meeting to the UniBook depending on the value defined in `o/OPTION`.","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"yokester98"},"content":"Format: `add o/OPTION...`  ","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"yokester98"},"content":"OPTION values:  ","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"yokester98"},"content":"1. **module**  ","lastModifiedDate":"2022-04-02"},{"lineNumber":122,"author":{"gitId":"yokester98"},"content":"Format: `add o/module n/MODULENAME m/MODULECODE [ke/KEYEVENTTYPE dt/DATETIME]…​`  ","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"yokester98"},"content":"This adds a Module to the UniBook. User can also add key events of the module.  ","lastModifiedDate":"2022-04-02"},{"lineNumber":124,"author":{"gitId":"yokester98"},"content":"The event types are as follows:  ","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"yokester98"},"content":"`1` - Exam  ","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"yokester98"},"content":"`2` - Quiz  ","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"yokester98"},"content":"`3` - Assignment Release  ","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"`4` - Assignment Due  ","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"yokester98"},"content":"The accepted format of `dt/DATETIME` is `yyyy-MM-dd HH:mm`.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"yokester98"},"content":"Example: `add o/module n/Discrete Mathematics m/CS1231S ke/1 dt/2022-05-04 13:00`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":131,"author":{"gitId":"yokester98"},"content":"Adds a module \"Discrete Mathematics\" with module code CS1231S to the UniBook. The module will have a key event of type \"Exam\" on the datetime specified.","lastModifiedDate":"2022-04-02"},{"lineNumber":132,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"yokester98"},"content":"2. **group**  ","lastModifiedDate":"2022-04-02"},{"lineNumber":135,"author":{"gitId":"yokester98"},"content":"Format: `add o/group n/GROUPNAME m/MODULECODE [dt/DATETIME]…​`","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"yokester98"},"content":"This adds a Group to the Module specified.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"yokester98"},"content":"The `dt/DATETIME` represents meeting times of the group, it takes in the format `yyyy-MM-dd HH:mm`.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"Example: `add o/group n/W16-1 m/CS2103 dt/2022-05-01 13:00 dt/2022-05-04 13:00`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":139,"author":{"gitId":"yokester98"},"content":"Adds a group named \"W16-1\" to module \"CS2103\". This group will have the specified meeting times.","lastModifiedDate":"2022-04-02"},{"lineNumber":140,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-04-02"},{"lineNumber":141,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"yokester98"},"content":"3. **student**  ","lastModifiedDate":"2022-04-02"},{"lineNumber":144,"author":{"gitId":"yokester98"},"content":"Format: `add o/student n/NAME [p/PHONE_NUMBER] [e/EMAIL] [t/TAG]…​ [m/MODULECODE [g/GROUPNAME]…​]…​`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":145,"author":{"gitId":"yokester98"},"content":"This adds a Student to the UniBook, it also adds the student into the student list of the corresponding Module objects.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"yokester98"},"content":"Note that in order to add a student to a group of the specified module, the format of `m/MODULECODE [g/GROUPNAME]…​` must be strictly followed. This will allow the program to know which group of which module the user wishes to add the student to.  ","lastModifiedDate":"2022-04-02"},{"lineNumber":147,"author":{"gitId":"yokester98"},"content":"Example: `add o/student n/Johnston p/98765432 e/johnston@gmail.com t/friend m/CS1231S g/Project Work m/CS2103`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":148,"author":{"gitId":"yokester98"},"content":"Adds a student named Johnston to the UniBook. The student will be added to the group \"Project Work\" in Module \"CS1231S\".","lastModifiedDate":"2022-04-02"},{"lineNumber":149,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"yokester98"},"content":"4. **professor**  ","lastModifiedDate":"2022-04-02"},{"lineNumber":152,"author":{"gitId":"yokester98"},"content":"Format: `add o/professor n/NAME [p/PHONE_NUMBER] [e/EMAIL] [of/OFFICE] [t/TAG]…​ [m/MODULECODE]…​`  ","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"yokester98"},"content":"This adds a Professor to the UniBook, it also adds the professor into the professor list of the corresponding Module objects.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"yokester98"},"content":"Example: `add o/professor n/Aaron Tan p/98723432 e/aarontan@gmail.com of/COM2 01-15 t/smart m/CS1231S m/CS2100`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":155,"author":{"gitId":"yokester98"},"content":"Adds a professor named Aaron Tan to the UniBook.","lastModifiedDate":"2022-04-02"},{"lineNumber":156,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"yokester98"},"content":"5. **event**  ","lastModifiedDate":"2022-04-02"},{"lineNumber":159,"author":{"gitId":"yokester98"},"content":"Format: `add o/event m/MODULECODE ke/KEYEVENTTYPE dt/DATETIME`  ","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"yokester98"},"content":"This adds a key event of the respective type and datetime to the module specified.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"yokester98"},"content":"The event types are as follows:  ","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"yokester98"},"content":"`1` - Exam  ","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"yokester98"},"content":"`2` - Quiz  ","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"yokester98"},"content":"`3` - Assignment Release  ","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"yokester98"},"content":"`4` - Assignment Due  ","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"yokester98"},"content":"The accepted format of `dt/DATETIME` is `yyyy-MM-dd HH:mm`.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"yokester98"},"content":"Example: `add o/event m/CS2103 ke/1 dt/2022-05-04 13:00`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":168,"author":{"gitId":"yokester98"},"content":"Adds an event of the specified type and datetime to module \"CS2103\".","lastModifiedDate":"2022-04-02"},{"lineNumber":169,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"yokester98"},"content":"6. **meeting**  ","lastModifiedDate":"2022-04-02"},{"lineNumber":172,"author":{"gitId":"yokester98"},"content":"Format: `add o/meeting m/MODULECODE g/GROUPNAME dt/DATETIME…​`  ","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"yokester98"},"content":"This adds meetings of the specified datetime to the specified group belonging to the specified module. Multiple `dt/DATETIME` can be entered to add multiple meetings.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"yokester98"},"content":"The accepted format of `dt/DATETIME` is `yyyy-MM-dd HH:mm`.  ","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"yokester98"},"content":"Example: `add o/meeting m/CS2103 g/W16-1 dt/2022-04-24 13:00 dt/2022-04-30 15:00 dt/2022-05-04 11:00`  ","lastModifiedDate":"2022-04-02"},{"lineNumber":176,"author":{"gitId":"yokester98"},"content":"Add meetings of the specified datetimes to module \"CS2103\".","lastModifiedDate":"2022-04-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"yokester98"},"content":"A student/professor can have any number of tags and modules (including 0)","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"### Listing entries: `list`","lastModifiedDate":"2022-02-25"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":186,"author":{"gitId":"geraldneo567"},"content":"Lists entries in UniBook according to a specified listing criteria. Behaves differently depending","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"geraldneo567"},"content":"on currently active view.","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":189,"author":{"gitId":"geraldneo567"},"content":"**Changing UniBook views**","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":191,"author":{"gitId":"geraldneo567"},"content":"This command applies for all `views`.","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":193,"author":{"gitId":"geraldneo567"},"content":"Format: `list o/view v/VIEWTYPE`","lastModifiedDate":"2022-04-03"},{"lineNumber":194,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":195,"author":{"gitId":"geraldneo567"},"content":"* Changes the view of the `UniBook` to the specified view type. Available arguments for ","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"geraldneo567"},"content":"`VIEWTYPE` are `people`/`groups`/`modules`.","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"geraldneo567"},"content":"* Example: `list o/view v/modules` switches the `UniBook` to the `modules` view.  ","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":199,"author":{"gitId":"geraldneo567"},"content":"**Commands while in the `People` view**","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":201,"author":{"gitId":"geraldneo567"},"content":"These commands apply while in the `People` view.","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"geraldneo567"},"content":"Format: `list`","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":205,"author":{"gitId":"geraldneo567"},"content":"* Lists all people in the UniBook.","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"geraldneo567"},"content":"Format: `list type/PERSONTYPE`","lastModifiedDate":"2022-04-03"},{"lineNumber":208,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"geraldneo567"},"content":"* Lists all people of a specific type. Available arguments for `PERSONTYPE` are `students`/`professors`.","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"geraldneo567"},"content":"* Example: `list type/professors` lists every `Professor` in the `UniBook`.","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"geraldneo567"},"content":"Format: `list o/module m/MODULECODE`","lastModifiedDate":"2022-04-03"},{"lineNumber":213,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"geraldneo567"},"content":"* Lists all people in a given `Module`.","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"geraldneo567"},"content":"* Example: `list o/module m/CS2103` displays all people who are in the module `CS2103`.","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"geraldneo567"},"content":"Format: `list o/module m/MODULECODE type/PERSONTYPE`","lastModifiedDate":"2022-04-03"},{"lineNumber":218,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"geraldneo567"},"content":"* Lists all people in a given `Module` who are of a specific type.","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"geraldneo567"},"content":"* Example: `list o/module m/cs2103 type/students` lists all `students` who are in the module `CS2103`.","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"geraldneo567"},"content":"Format: `list o/group m/MODULECODE g/GROUPNAME`","lastModifiedDate":"2022-04-03"},{"lineNumber":223,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"geraldneo567"},"content":"* Lists all students who are in a given `Group` of a given `Module`.","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"geraldneo567"},"content":"* Example: `list o/group m/CS2103 g/W16-1` lists all students in group `W16-1` of module `CS2103`.","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"geraldneo567"},"content":"**Commands while in the `Modules` view**","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"geraldneo567"},"content":"These commands apply while in the `Modules` view.","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"geraldneo567"},"content":"Format: `list`","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"geraldneo567"},"content":"- Lists all modules.","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"geraldneo567"},"content":"Format: `list m/MODULECODE`","lastModifiedDate":"2022-04-03"},{"lineNumber":236,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"geraldneo567"},"content":"- Lists a module with a given module code.","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"geraldneo567"},"content":"- Example: `list m/CS2103` lists the module `CS2103`.","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"geraldneo567"},"content":"Format: `list n/KEYWORD`","lastModifiedDate":"2022-04-03"},{"lineNumber":241,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"geraldneo567"},"content":"- Lists modules which have module names containing the given keyword.","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"geraldneo567"},"content":"- Example: `list n/Software` will display all modules that contain `Software` in their module name.","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"geraldneo567"},"content":"Format: `list ke/KEYEVENT`","lastModifiedDate":"2022-04-03"},{"lineNumber":246,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"geraldneo567"},"content":"- Lists modules which has a specific type of key event. Acceptable arguments for `KEYEVENT` are ","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"geraldneo567"},"content":"  `EXAM/QUIZ/ASSIGNMENT_DUE/ASSIGNMENT_RELEASE`.","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"geraldneo567"},"content":"- Example: `list ke/EXAM` will display all modules that have key event(s) of type `EXAM`.","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"geraldneo567"},"content":"Format: `list dt/YYYY-MM-DD`","lastModifiedDate":"2022-04-03"},{"lineNumber":252,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"geraldneo567"},"content":"- Lists modules which has any type of key event(s) falling on a given date.","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"geraldneo567"},"content":"- Example: `list dt/2022-05-04` displays all modules with any key event(s) falling on `May 4th 2022`.","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"geraldneo567"},"content":"Format: `list dt/YYYY-MM-DD ke/KEYEVENT`","lastModifiedDate":"2022-04-03"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"- Lists all modules which has a specific type of key event falling on a given date. Acceptable arguments for `KEYEVENT` are","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"geraldneo567"},"content":"  `EXAM/QUIZ/ASSIGNMENT_DUE/ASSIGNMENT_RELEASE`.","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"geraldneo567"},"content":"- Example: `list dt/2022-05-04 ke/QUIZ` displays all modules with key event(s) `Quiz` falling on `May 4th 2022`.","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"geraldneo567"},"content":"Format: `list dt/YYYY-MM-DD n/KEYWORD`","lastModifiedDate":"2022-04-03"},{"lineNumber":263,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"geraldneo567"},"content":"- Lists all modules which have a module name containing a given name and any type of key event(s) ","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"geraldneo567"},"content":"  falling on a given date.","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"geraldneo567"},"content":"- Example: `list dt/2022-05-04 n/Network` displays all modules that have `Network` in their module name and","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"geraldneo567"},"content":"have key events falling on `May 4th 2022`.","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"benmurphyy"},"content":"  ","lastModifiedDate":"2022-02-25"},{"lineNumber":269,"author":{"gitId":"geraldneo567"},"content":"Format: `list n/KEYWORD ke/KEYEVENT`","lastModifiedDate":"2022-04-03"},{"lineNumber":270,"author":{"gitId":"geraldneo567"},"content":"- Lists all modules which has a module containing a given name and a specific type of key event.","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"geraldneo567"},"content":"  Acceptable arguments for `KEYEVENT` are","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"geraldneo567"},"content":"  `EXAM/QUIZ/ASSIGNMENT_DUE/ASSIGNMENT_RELEASE`.","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"geraldneo567"},"content":"- Example: `list n/Software ke/ASSIGNMENT_DUE` displays all modules that have `Software` in their module name and","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"geraldneo567"},"content":"have key event(s) of type `ASSIGNMENT_DUE`.","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"geraldneo567"},"content":"  ","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"geraldneo567"},"content":"Format: `list n/KEYWORD ke/KEYEVENT dt/YYYY-MM-DD`","lastModifiedDate":"2022-04-03"},{"lineNumber":277,"author":{"gitId":"geraldneo567"},"content":"- Lists all modules which has a module containing a given name and a specific type of key event falling","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"geraldneo567"},"content":"on a given date. Acceptable arguments for `KEYEVENT` are `EXAM/QUIZ/ASSIGNMENT_DUE/ASSIGNMENT_RELEASE`.","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"geraldneo567"},"content":"- Example: `list n/Software ke/ASSIGNMENT_DUE dt/2022-05-04` displays all modules that have `Software` ","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"geraldneo567"},"content":"  in their module name and have key event(s) of type `ASSIGNMENT_DUE` which fall on `May 4th 2022`.","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"geraldneo567"},"content":"  ","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"geraldneo567"},"content":"Format: `list o/group g/GROUPNAME`","lastModifiedDate":"2022-04-03"},{"lineNumber":283,"author":{"gitId":"geraldneo567"},"content":"- If the module list currently has `1` module showing, UniBook switches to `Groups` view automatically and displays","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"geraldneo567"},"content":"the specific group with the given group name, from the given module.","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"geraldneo567"},"content":"- Otherwise, UniBook switches to `Groups` view automatically and displays all groups with the given name.","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"geraldneo567"},"content":"- Example: Assume module `CS2103` along with multiple other modules have a group with group name `W16-1`. ","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"geraldneo567"},"content":"  When the command `list o/group g/W16-1` is run, if only `CS2103` was visible then the specific `W16-1` in `CS2103` ","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"geraldneo567"},"content":"  is displayed in the group view. Otherwise all groups with name `W16-1` from all modules are displayed.","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"benmurphyy"},"content":"  ","lastModifiedDate":"2022-02-25"},{"lineNumber":290,"author":{"gitId":"geraldneo567"},"content":"**Commands while in the `Groups` view**","lastModifiedDate":"2022-03-28"},{"lineNumber":291,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":292,"author":{"gitId":"geraldneo567"},"content":"These commands apply while in the `Groups` view.","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"geraldneo567"},"content":"- Lists all groups.","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"geraldneo567"},"content":"Format: `list g/GROUPNAME`","lastModifiedDate":"2022-04-03"},{"lineNumber":298,"author":{"gitId":"geraldneo567"},"content":"- Lists all groups with a given group name.","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"geraldneo567"},"content":"- Example: `list g/W16-1` lists all groups with the name `W16-1`.","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"geraldneo567"},"content":"Format: `list g/GROUPNAME m/MODULECODE`","lastModifiedDate":"2022-04-03"},{"lineNumber":302,"author":{"gitId":"geraldneo567"},"content":"- Lists all groups with a given group name in a specific module.","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"geraldneo567"},"content":"- Example: `list g/W16-1 m/CS2103` lists group `W16-1` of `CS2103`.","lastModifiedDate":"2022-03-29"},{"lineNumber":304,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"geraldneo567"},"content":"Format: `list mt/YYYY-MM-DD`","lastModifiedDate":"2022-04-03"},{"lineNumber":306,"author":{"gitId":"geraldneo567"},"content":"- Lists all groups with a meeting times falling on a given date.","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"geraldneo567"},"content":"- Example: `list mt/2022-05-04` lists all groups that have meetings on `May 4th 2022`.","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"benmurphyy"},"content":"Edits an existing person in UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/OPTION [m/MODULE] [n/NAME] [p/PHONE] [e/EMAIL] [a/OFFICE] [nm/NEWMODULE] [g/GROUP] [mt/INDEX DATETIME]`","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"sophiien"},"content":"* Edits the entity type defined by `o/OPTION`. This is a compulsory field.","lastModifiedDate":"2022-02-28"},{"lineNumber":317,"author":{"gitId":"sophiien"},"content":"  * Options available are person, module, keyevent or group.","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"sophiien"},"content":"* All indexes must be positive integers.","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.    ","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"sophiien"},"content":"* Before choosing to edit module or person, user can see which `INDEX` to edit by changing the UI to show the relevant list. User will not be allowed to edit if not on the correct page. ","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"sophiien"},"content":"  * `list o/view v/modules` : To display list of modules with respective indexes","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"sophiien"},"content":"  * `list o/view v/people` : To display list of persons with respective indexes ","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"sophiien"},"content":"  * `list o/view v/groups` : To display list of groups with respective indexes ","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"sophiien"},"content":"* Only certain options can be edited on each page, otherwise an error will be printed on the console to tell users to change to the correct page. On the","lastModifiedDate":"2022-03-29"},{"lineNumber":325,"author":{"gitId":"sophiien"},"content":"  * `module` page: Able to edit module, keyevent or group fields","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"sophiien"},"content":"  * `group`  page: Able to edit keyevent or group fields","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"sophiien"},"content":"  * `person` page: Able to edit person","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"sophiien"},"content":"**Commands while on `People` view**","lastModifiedDate":"2022-03-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"sophiien"},"content":"At least one optional field must be edited in order for person to be successfully edited.","lastModifiedDate":"2022-03-29"},{"lineNumber":332,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":333,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/person [n/NAME] [p/PHONE] [e/EMAIL] [a/OFFICE]`","lastModifiedDate":"2022-03-29"},{"lineNumber":334,"author":{"gitId":"sophiien"},"content":"* Edits the `name`, `phone` and/or `email` fields of a person at `INDEX`.","lastModifiedDate":"2022-03-29"},{"lineNumber":335,"author":{"gitId":"sophiien"},"content":"* The `office` field can only be edited if the person is a professor.  ","lastModifiedDate":"2022-03-29"},{"lineNumber":336,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/person n/Alexa` changes the name of the first person on the list to Alexa.","lastModifiedDate":"2022-03-29"},{"lineNumber":337,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":338,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/person [m/MODULE] [g/GROUPNAME]`","lastModifiedDate":"2022-03-29"},{"lineNumber":339,"author":{"gitId":"sophiien"},"content":"* Adds person at `INDEX` to the group named `GROUPNAME` in the stated `MODULE`.","lastModifiedDate":"2022-03-29"},{"lineNumber":340,"author":{"gitId":"sophiien"},"content":"* Both `[m/MODULE]` and `[g/GROUPNAME]` fields are compulsory for successful edit.","lastModifiedDate":"2022-03-29"},{"lineNumber":341,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/person m/CS2103 g/T2` adds the first person to the `group` named T2 in the CS2103 `module`.","lastModifiedDate":"2022-03-29"},{"lineNumber":342,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":343,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/person [nm/NEWMOD]`","lastModifiedDate":"2022-03-29"},{"lineNumber":344,"author":{"gitId":"sophiien"},"content":"* Adds person at `INDEX` to the stated `MODULE`.","lastModifiedDate":"2022-03-29"},{"lineNumber":345,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/person nm/CS2103` adds the first person to the CS2103 `module`.","lastModifiedDate":"2022-03-29"},{"lineNumber":346,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":347,"author":{"gitId":"sophiien"},"content":"**Commands while on `Modules` view**","lastModifiedDate":"2022-03-29"},{"lineNumber":348,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":349,"author":{"gitId":"sophiien"},"content":"At least one optional field must be edited in order for module to be successfully edited.","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":351,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/module [n/NAME] [m/MODCODE]`","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"sophiien"},"content":"* Edits the `name` and/or `modcode` fields of a module at `INDEX`.","lastModifiedDate":"2022-03-29"},{"lineNumber":353,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/module n/Software Engineering m/CS2103` changes the name and module code of the first module on the list to Software Engineering and CS2103 respectively.","lastModifiedDate":"2022-03-29"},{"lineNumber":354,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":355,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/group m/MODULE [g/GROUPNAME] [mt/INDEX DATETIME]`","lastModifiedDate":"2022-03-29"},{"lineNumber":356,"author":{"gitId":"sophiien"},"content":"* Edits the `groupname` and/or `meetingtimes` of the group at `INDEX` of the `module`.","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"sophiien"},"content":"* `DATETIME` must be in `YYYY-MM-DD HH:mm` format.  ","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/group m/CS2103 g/T2 mt/2 2020-12-12 16:45` edits the first group\u0027s name and second index of meeting time of the CS2103 `module` to T2 and 12th December 2022 4:45pm respectively.","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/keyevent ke/INDEX [type/TYPE] [dt/DATETIME]`","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"sophiien"},"content":"* Edits  `type` and/or `datetime` of the keyevent at module at `INDEX`.","lastModifiedDate":"2022-03-29"},{"lineNumber":362,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/keyevent ke/2 type/exam dt/2020-12-12 16:45` adds the second key event\u0027s type and date time in the first module in the list to exam and 12th December 2022 4:45pm respectively.","lastModifiedDate":"2022-03-29"},{"lineNumber":363,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"sophiien"},"content":"**Commands while on `Groups` view**","lastModifiedDate":"2022-03-29"},{"lineNumber":365,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":366,"author":{"gitId":"sophiien"},"content":"At least one optional field must be edited in order for module to be successfully edited.","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"sophiien"},"content":"Format: `edit INDEX o/group m/MODULE [g/GROUPNAME] [mt/INDEX DATETIME]`","lastModifiedDate":"2022-03-29"},{"lineNumber":369,"author":{"gitId":"sophiien"},"content":"* Edits the `groupname` and/or `meetingtimes` of the group at `INDEX` of the `module`.","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"sophiien"},"content":"* `DATETIME` must be in `YYYY-MM-DD HH:mm` format.","lastModifiedDate":"2022-03-29"},{"lineNumber":371,"author":{"gitId":"sophiien"},"content":"* Example: `edit 1 o/group m/CS2103 g/T2 mt/2 2020-12-12 16:45` edits the first group\u0027s name and second index of meeting time of the CS2103 `module` to T2 and 12th December 2022 4:45pm respectively.","lastModifiedDate":"2022-03-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"benmurphyy"},"content":"**Only meant to be used on the person page**","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"benmurphyy"},"content":"* `find alex` returns `Alex Yeoh`, `Alex Teo`\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"benmurphyy"},"content":"  ![result for \u0027find alex david\u0027](images/findCommandResult.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"geraldneo567"},"content":"### Deleting specific entries : `delete`","lastModifiedDate":"2022-02-27"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"geraldneo567"},"content":"Removes the specified modules, module subgroup, student or professor profile from the system.","lastModifiedDate":"2022-02-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"geraldneo567"},"content":"Format:","lastModifiedDate":"2022-02-27"},{"lineNumber":398,"author":{"gitId":"ryanwalterlee"},"content":"(Note: Commands under the sub header Person page can only be used on person page, and likewise for other pages)","lastModifiedDate":"2022-03-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"ryanwalterlee"},"content":"On Person Page:","lastModifiedDate":"2022-03-27"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX]`","lastModifiedDate":"2022-03-15"},{"lineNumber":403,"author":{"gitId":"ryanwalterlee"},"content":"* Deletes the person at that index","lastModifiedDate":"2022-03-15"},{"lineNumber":404,"author":{"gitId":"ryanwalterlee"},"content":"* The GUI will display the index before the person","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":406,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] p/ e/ t/[TAG] of/`","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"ryanwalterlee"},"content":"* p/, e/, t/[TAG], of/ can be entered in any combination, for example, to delete only phone and email, the user can put `p/` and `e/`","lastModifiedDate":"2022-04-03"},{"lineNumber":408,"author":{"gitId":"ryanwalterlee"},"content":"* At least 1 of {`p/`, `e/`, `t/[TAG]`, `of/`} must be entered, otherwise the `delete [INDEX]` command will be executed instead","lastModifiedDate":"2022-04-03"},{"lineNumber":409,"author":{"gitId":"ryanwalterlee"},"content":"* Only 0 or 1 of each tag must be provided","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"ryanwalterlee"},"content":"On Module Page:","lastModifiedDate":"2022-03-27"},{"lineNumber":412,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":413,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX]`","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"ryanwalterlee"},"content":"* Deletes the module at that index","lastModifiedDate":"2022-03-27"},{"lineNumber":415,"author":{"gitId":"ryanwalterlee"},"content":"* The GUI will display the index before the module","lastModifiedDate":"2022-03-27"},{"lineNumber":416,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":417,"author":{"gitId":"ryanwalterlee"},"content":"For the following commands, if more than 1 of the following tags are provided, the priority will be in this order. For example, if `prof/1` and `stu/1` is both provided, `delete 1 prof/1` will be prioritised because `prof/` is higher than `stu/` on this list.","lastModifiedDate":"2022-03-29"},{"lineNumber":418,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":419,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] prof/[INDEX]`","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"ryanwalterlee"},"content":"* Delete professor from module (The original person is not deleted, only removed from the module)","lastModifiedDate":"2022-03-27"},{"lineNumber":421,"author":{"gitId":"ryanwalterlee"},"content":"* The first index represents the index for which module to remove a professor from","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"ryanwalterlee"},"content":"* The second index (after prof/) represents the index for which professor to remove","lastModifiedDate":"2022-03-27"},{"lineNumber":423,"author":{"gitId":"ryanwalterlee"},"content":"* For example, `delete 2 prof/1` would delete the professor at index 1 from the module at index 2","lastModifiedDate":"2022-03-27"},{"lineNumber":424,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":425,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] stu/[INDEX]`","lastModifiedDate":"2022-03-27"},{"lineNumber":426,"author":{"gitId":"ryanwalterlee"},"content":"* Same as the above command, but index after stu/ represents the student list index to be deleted","lastModifiedDate":"2022-03-27"},{"lineNumber":427,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":428,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] g/[GROUPNAME]`","lastModifiedDate":"2022-03-27"},{"lineNumber":429,"author":{"gitId":"ryanwalterlee"},"content":"* same as the above command, but group name has to be specified to delete the group with that name","lastModifiedDate":"2022-03-27"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] ke/[INDEX]`","lastModifiedDate":"2022-03-27"},{"lineNumber":432,"author":{"gitId":"ryanwalterlee"},"content":"* same as the above command, but index after ke/ represents the key event index to be deleted","lastModifiedDate":"2022-03-27"},{"lineNumber":433,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":434,"author":{"gitId":"ryanwalterlee"},"content":"On Group page:","lastModifiedDate":"2022-03-27"},{"lineNumber":435,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":436,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX]`","lastModifiedDate":"2022-03-27"},{"lineNumber":437,"author":{"gitId":"ryanwalterlee"},"content":"* Deletes the group at that index","lastModifiedDate":"2022-03-27"},{"lineNumber":438,"author":{"gitId":"ryanwalterlee"},"content":"* The GUI will display the index before the group","lastModifiedDate":"2022-03-27"},{"lineNumber":439,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":440,"author":{"gitId":"ryanwalterlee"},"content":"For the following commands, if more than 1 of the following tags are provided, the priority will be in this order. For example, if `mt/1` and `stu/1` is both provided, `delete 1 stu/1` will be prioritised because `stu/` is higher than `mt/` on this list.","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":442,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] stu/[INDEX]`","lastModifiedDate":"2022-03-29"},{"lineNumber":443,"author":{"gitId":"ryanwalterlee"},"content":"* Delete student from group","lastModifiedDate":"2022-03-29"},{"lineNumber":444,"author":{"gitId":"ryanwalterlee"},"content":"* The first index represents the index for which group to remove the student from","lastModifiedDate":"2022-03-29"},{"lineNumber":445,"author":{"gitId":"ryanwalterlee"},"content":"* The second index (after stu/) represents the index for which student to delete","lastModifiedDate":"2022-03-29"},{"lineNumber":446,"author":{"gitId":"ryanwalterlee"},"content":"* For example, `delete 2 stu/1` would delete the student at index 1 for the group at index 2","lastModifiedDate":"2022-03-29"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"ryanwalterlee"},"content":"`delete [INDEX] mt/[INDEX]`","lastModifiedDate":"2022-04-03"},{"lineNumber":449,"author":{"gitId":"ryanwalterlee"},"content":"* Delete meeting time from group","lastModifiedDate":"2022-03-27"},{"lineNumber":450,"author":{"gitId":"ryanwalterlee"},"content":"* The first index represents the index for which group to remove the meeting time for","lastModifiedDate":"2022-03-27"},{"lineNumber":451,"author":{"gitId":"ryanwalterlee"},"content":"* The second index (after mt/) represents the index for which meeting time to delete","lastModifiedDate":"2022-03-27"},{"lineNumber":452,"author":{"gitId":"ryanwalterlee"},"content":"* For example, `delete 2 mt/1` would delete the meeting time at index 1 for the group at index 2","lastModifiedDate":"2022-03-27"},{"lineNumber":453,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":454,"author":{"gitId":"ryanwalterlee"},"content":"On Any Page:","lastModifiedDate":"2022-03-27"},{"lineNumber":455,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":456,"author":{"gitId":"ryanwalterlee"},"content":"`delete o/module m/[MODULECODE]`","lastModifiedDate":"2022-03-27"},{"lineNumber":457,"author":{"gitId":"ryanwalterlee"},"content":"* Deletes the module with the specified `MODULECODE`.","lastModifiedDate":"2022-03-27"},{"lineNumber":458,"author":{"gitId":"ryanwalterlee"},"content":"* The module must already exist in the system.","lastModifiedDate":"2022-03-27"},{"lineNumber":459,"author":{"gitId":"ryanwalterlee"},"content":"* For example, `delete o/module m/CS2103` removes the module with module code CS2103","lastModifiedDate":"2022-03-27"},{"lineNumber":460,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":461,"author":{"gitId":"ryanwalterlee"},"content":"`delete o/group m/[MODULECODE] g/[GROUPNAME]`","lastModifiedDate":"2022-03-27"},{"lineNumber":462,"author":{"gitId":"ryanwalterlee"},"content":"* Deletes the group specified by `GROUPNAME`, within the module specified by `MODULECODE`.","lastModifiedDate":"2022-03-27"},{"lineNumber":463,"author":{"gitId":"ryanwalterlee"},"content":"* Both the module and the subgroup must already exist in the system.","lastModifiedDate":"2022-03-27"},{"lineNumber":464,"author":{"gitId":"ryanwalterlee"},"content":"* For example, `delete o/group m/CS2107 g/T04` removes the T04 subgroup from the CS2107 module.","lastModifiedDate":"2022-03-27"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":468,"author":{"gitId":"benmurphyy"},"content":"Clears all entries from UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"benmurphyy"},"content":"UniBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-02"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":484,"author":{"gitId":"benmurphyy"},"content":"UniBook data are saved as a JSON file `[JAR file location]/data/unibook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-02"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":487,"author":{"gitId":"benmurphyy"},"content":"If your changes to the data file makes its format invalid, UniBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-02"},{"lineNumber":488,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"benmurphyy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous UniBook home folder.","lastModifiedDate":"2022-03-02"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"yokester98"},"content":"**Add** | `add o/module n/MODULENAME m/MODULECODE [ke/KEYEVENTTYPE dt/DATETIME]…​` \u003cbr\u003e e.g., `add o/module n/Software Engineering m/CS2103 ke/1 dt/2022-05-04 13:00` \u003cbr\u003e`add o/group n/GROUPNAME m/MODULECODE [dt/DATETIME]…​` \u003cbr\u003e e.g., `add o/group n/W16-1 m/CS2103 dt/2022-04-24 13:00` \u003cbr\u003e`add o/student n/NAME [p/PHONE_NUMBER] [e/EMAIL] [t/TAG]…​ [[m/MODULECODE] [g/GROUPNAME]]…​`  \u003cbr\u003e e.g., `add o/student n/Peter Ho p/81234567 e/peterho@u.nus.edu m/cs2103 g/W16-1` \u003cbr\u003e`add o/professor n/NAME [p/PHONE_NUMBER] [e/EMAIL] [of/OFFICE] [t/TAG]…​ [m/MODULECODE]…​`  \u003cbr\u003ee.g., `add o/professor n/James Ho p/22224444 e/jamesho@example.com of/123 Clementi Rd S123466 m/cs2103` \u003cbr\u003e`add o/event m/MODULECODE ke/KEYEVENTTYPE dt/DATETIME`  \u003cbr\u003ee.g., `add o/event m/CS2103 ke/4 dt/2022-04-28 13:00` \u003cbr\u003e `add o/meeting m/MODULECODE g/GROUPNAME dt/DATETIME…​`  \u003cbr\u003ee.g., `add o/meeting m/CS2103 g/W16-1 dt/2022-04-29 13:00`","lastModifiedDate":"2022-03-30"},{"lineNumber":506,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"ryanwalterlee"},"content":"**Delete** | Any Page: \u003cbr\u003e `delete [INDEX]` \u003cbr\u003e\u003cbr\u003e Person Page: \u003cbr\u003e `delete [INDEX] p/ e/ t/[TAG] of/` \u003cbr\u003e eg. `delete 1 p/ e/` \u003cbr\u003e eg. `delete 2 t/friend` \u003cbr\u003e\u003cbr\u003e Module Page: \u003cbr\u003e`delete [INDEX] stu/[INDEX]` \u003cbr\u003e `delete [INDEX] prof/[INDEX]` \u003cbr\u003e `delete [INDEX] g/[GROUPNAME]` \u003cbr\u003e `delete [INDEX] ke/[INDEX]` \u003cbr\u003e\u003cbr\u003e Group Page: \u003cbr\u003e `delete [INDEX] mt/[INDEX]` \u003cbr\u003e `delete o/module m/[MODULECODE]` \u003cbr\u003e eg. `delete o/module m/CS2103` \u003cbr\u003e `delete o/group m/[MODULECODE] g/[GROUPNAME]` \u003cbr\u003e eg. `delete o/group m/CS2103 g/Team Project`","lastModifiedDate":"2022-04-03"},{"lineNumber":508,"author":{"gitId":"sophiien"},"content":"**Edit** | `edit INDEX o/OPTION [m/MODULE] [n/NAME] [p/PHONE] [e/EMAIL] [nm/NEWMODULE] [g/GROUP] [mt/INDEX DATETIME] `\u003cbr\u003e e.g. `edit o/person 1 p/91234567 e/prof@email.com` \u003cbr\u003e e.g. `edit o/module m/CS2103 n/Software Engineering`","lastModifiedDate":"2022-03-29"},{"lineNumber":509,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"geraldneo567"},"content":"**List** | `list CRITERIA` \u003cbr\u003e e.g. `list type/professors` \u003cbr\u003e e.g. `list m/CS2103` \u003cbr\u003e e.g. `list ke/EXAM` \u003cbr\u003e e.g. `list dt/2022-05-04` \u003cbr\u003e e.g. `list n/Software Engineering` \u003cbr\u003e `list o/OPTION [criteria]` \u003cbr\u003e e.g. `list o/group g/W16-1` \u003cbr\u003e e.g. `list o/module m/CS2103 type/students`","lastModifiedDate":"2022-04-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benmurphyy":65,"ryanwalterlee":57,"yokester98":61,"sophiien":57,"-":153,"geraldneo567":118}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"benmurphyy"},"content":"    content: \"UniBook\";","lastModifiedDate":"2022-02-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"benmurphyy":1,"-":294}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yokester98"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"yokester98"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"participant \":UniBookParser\" as UniBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"participant \"ac:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"[-\u003e LogicManager : execute(\"add o/module n/Software Engineering m/CS2103\", true, false)","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"LogicManager -\u003e UniBookParser : parseCommand(\"add o/module n/Software Engineering m/CS2103\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"activate UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"create AddCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"UniBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"activate AddCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"create AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"activate AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"AddCommand --\u003e AddCommandParser : ac","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"deactivate AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"AddCommandParser --\u003e UniBookParser : ac","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"AddCommandParser -[hidden]-\u003e UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"yokester98"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"yokester98"},"content":"UniBookParser --\u003e LogicManager : ac","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"deactivate UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"LogicManager -\u003e AddCommand : execute(m, true, false)","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"activate AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"AddCommand -\u003e Model : m.addModule(Module)","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"yokester98"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"yokester98"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"deactivate AddCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"yokester98"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"yokester98":64}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveUniBook(uniBook)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"benmurphyy":1,"-":37}},{"path":"docs/diagrams/DeleteCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanwalterlee"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"ryanwalterlee"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"ryanwalterlee"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"ryanwalterlee"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"ryanwalterlee"},"content":"[-\u003e DeleteCommand : execute(String)","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"activate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"alt#gold #lightblue Target index exists","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"DeleteCommand -\u003e Model : deletePerson(Person)","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"DeleteCommand -\u003e Model : removePersonFromAllModules(Person)","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"DeleteCommand -\u003e CommandResult **","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"ryanwalterlee"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"ryanwalterlee"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"ryanwalterlee"},"content":"else #pink Module code exists","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"ryanwalterlee"},"content":"DeleteCommand -\u003e Model : deleteByModuleCode(ModuleCode)","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"ryanwalterlee"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"ryanwalterlee"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"ryanwalterlee"},"content":"DeleteCommand -\u003e Model : removeModuleFromAllPerson(ModuleCode)","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"ryanwalterlee"},"content":"activate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"ryanwalterlee"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"ryanwalterlee"},"content":"DeleteCommand -\u003e CommandResult **","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"ryanwalterlee"},"content":"activate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"ryanwalterlee"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"ryanwalterlee"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"ryanwalterlee"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"[\u003c-- DeleteCommand : CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"ryanwalterlee"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"ryanwalterlee"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"ryanwalterlee":49}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"participant \":UniBookParser\" as UniBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"LogicManager -\u003e UniBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"activate UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"UniBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"DeleteCommandParser --\u003e UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"UniBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"DeleteCommandParser --\u003e UniBookParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"DeleteCommandParser -[hidden]-\u003e UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"UniBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"deactivate UniBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"benmurphyy":10,"-":59}},{"path":"docs/diagrams/EditCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sophiien"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"sophiien"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"participant \":EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"participant \":EditModuleDescriptor\" as EditModuleDescriptor LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"sophiien"},"content":"[-\u003e EditCommandParser : parse(String)","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"sophiien"},"content":"activate EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"alt#gold #lightblue Option edit person","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"sophiien"},"content":"EditCommandParser -\u003e EditPersonDescriptor **","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"sophiien"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"sophiien"},"content":"EditPersonDescriptor --\u003e EditCommand **","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"sophiien"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"activate EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"sophiien"},"content":"[-\u003e EditCommand : execute(Model)","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"sophiien"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"sophiien"},"content":"EditCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"sophiien"},"content":"EditCommand -\u003e CommandResult **","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"sophiien"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"sophiien"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"sophiien"},"content":"[\u003c-- EditCommand : CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"deactivate EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"else #pink Option edit module","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"sophiien"},"content":"EditCommandParser -\u003e EditModuleDescriptor **","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"sophiien"},"content":"activate EditModuleDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"sophiien"},"content":"EditModuleDescriptor --\u003e EditCommand **","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"sophiien"},"content":"deactivate EditModuleDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"sophiien"},"content":"activate EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"sophiien"},"content":"[-\u003e EditCommand : execute(Model)","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"sophiien"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"sophiien"},"content":"EditCommand -\u003e Model : setModule(moduleToEdit, editedModule)","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"sophiien"},"content":"EditCommand -\u003e CommandResult **","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"sophiien"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"sophiien"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"sophiien"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"sophiien"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"sophiien"},"content":"[\u003c-- EditCommand : CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"sophiien"},"content":"deactivate EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"sophiien"},"content":"end","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"sophiien"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"sophiien"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"sophiien":60}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sophiien"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"sophiien"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"participant \":UniBookParser\" as UniBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"participant \":EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"sophiien"},"content":"[-\u003e LogicManager : execute(\"edit 1 o/person n/Alex\")","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"sophiien"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"LogicManager -\u003e UniBookParser : parseCommand(\"edit 1 o/person n/Alex\")","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"sophiien"},"content":"activate UniBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"sophiien"},"content":"create EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"sophiien"},"content":"UniBookParser -\u003e EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"activate EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"sophiien"},"content":"EditCommandParser -\u003e EditPersonDescriptor **","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"sophiien"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"sophiien"},"content":"EditPersonDescriptor --\u003e EditCommand **","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"sophiien"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"sophiien"},"content":"activate EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"sophiien"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"EditCommandParser -\u003e EditCommand : execute(Model)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"EditCommand -\u003e CommandResult **","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"sophiien"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"EditCommandParser --\u003e UniBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"sophiien"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"sophiien"},"content":"UniBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"sophiien"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"sophiien"},"content":"EditCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"sophiien"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"sophiien"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"sophiien"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"sophiien"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"sophiien"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"sophiien":51}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"participant \":UniBookParser\" as UniBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"participant \"lc:ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"[-\u003e LogicManager : execute(\"list o/type ty/professors\", true, false)","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"LogicManager -\u003e UniBookParser : parseCommand(\"list o/type ty/professors\")","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"activate UniBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"create ListCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"UniBookParser -\u003e ListCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"activate ListCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"create ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"ListCommandParser -\u003e ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"activate ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"ListCommand --\u003e ListCommandParser : lc","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"deactivate ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"ListCommandParser --\u003e UniBookParser : lc","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"deactivate ListCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"ListCommandParser -[hidden]-\u003e UniBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"destroy ListCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"UniBookParser --\u003e LogicManager : lc","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"deactivate UniBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"LogicManager -\u003e ListCommand : execute(m, true, false)","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"activate ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"ListCommand -\u003e Model : m.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PROFESSORS)","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"create CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"ListCommand -\u003e CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"activate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"CommandResult --\u003e ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"ListCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"deactivate ListCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"geraldneo567":64}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"Class UniBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"LogicManager -right-\u003e\"1\" UniBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"UniBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"benmurphyy":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"skinparam ClassAttributeFontColor #FFFFFF","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUniBook\" as ReadOnlyUniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"Class UniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"Class ModuleList","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"Class Module","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"Class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"Class Student","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"Class Professor","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"Class Module","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"Class Group","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"Class Module","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"UniBook .up.|\u003e ReadOnlyUniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"Model .left.\u003e ReadOnlyUniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"ModelManager -left-\u003e \"1\" UniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"Student -up-|\u003e Person","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"Professor -up-|\u003e Person","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"Module \"*\"\u003c--\u003e\"*\" Person","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"Group \"*\"\u003c--\u003e\"*\" Student","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"Group \"*\"\u003c-right-\u003e\"1\" Module","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"UniBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"UniBook *--\u003e \"1\" ModuleList","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"ModuleList --\u003e \"~* all\" Module","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"ModelManager --\u003e\"~* filtered\" Module","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"benmurphyy":26,"-":27}},{"path":"docs/diagrams/OverallActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanwalterlee"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ryanwalterlee"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":": User opens Unibook;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"repeat : User wants to \\n modify / view data","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ryanwalterlee"},"content":"switch ()","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ryanwalterlee"},"content":"case ( Add )","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"  :Type add command \\n with options;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"case ( Delete )","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ryanwalterlee"},"content":"  :Type delete command \\n with options;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ryanwalterlee"},"content":"case ( Edit )","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ryanwalterlee"},"content":"  :Type edit command \\n with options;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"case ( List )","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"  :Type list command \\n with options;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"case ( Find )","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"  :Type find command \\n with options;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"endswitch","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"repeat while () is (More Actions)","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"-\u003eNo more actions;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":":Type Exit Command;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ryanwalterlee":26}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"Class UniBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"HiddenOutside ..\u003e UniBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"UniBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"UniBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"benmurphyy":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"package \"UniBook Storage\" #F4F6F6{","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUniBookStorage\" as UniBookStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"Class JsonUniBookStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"Class JsonSerializableUniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"Class \"{abstract}\\nJsonAdaptedPerson\" as JsonAdaptedPerson","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"Class JsonAdaptedProfessor","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"Class JsonAdaptedModule","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"Class JsonAdaptedGroup","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"StorageManager -up-\u003e \"1\" UniBookStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"Storage -right-|\u003e UniBookStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"JsonUniBookStorage .up.|\u003e UniBookStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"JsonUniBookStorage ..\u003e JsonSerializableUniBook","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"JsonSerializableUniBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"JsonSerializableUniBook --\u003e \"*\" JsonAdaptedModule","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"JsonAdaptedStudent -up-|\u003e JsonAdaptedPerson","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"JsonAdaptedProfessor -up-|\u003e JsonAdaptedPerson","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"JsonAdaptedModule --\u003e \"*\" JsonAdaptedGroup","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"benmurphyy":18,"-":30}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"Class ModuleListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"Class ModuleCard","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"Class StudentCard","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"Class ProfessorCard","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"MainWindow *-down-\u003e \"1\" ModuleListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"PersonListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"PersonListPanel -down-\u003e \"*\" ProfessorCard","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"ModuleListPanel -down-\u003e \"*\" ModuleCard","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"ModuleCard -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"ModuleCard -down-\u003e \"*\" ProfessorCard","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"ModuleListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"ModuleCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"ProfessorCard -r-|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"StudentCard -d-|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"ModuleListPanel ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"PersonListPanel ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"ProfessorCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"ModuleCard ..\u003eModel","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"benmurphyy":21,"-":56}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: UniBook Level-3","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-W16-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-W16-1/tp/actions)","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-W16-1/tp/branch/master/graph/badge.svg?token\u003dMPNBOLRALJ)](https://codecov.io/gh/AY2122S2-CS2103-W16-1/tp)","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"**UniBook is a desktop application for students that provides them with a way to manage university contacts related to their studies in an organised manner.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"While it has a graphical user interface (GUI) with basic navigation functionality, it is primarily optimized for command line interface (CLI)** ","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using UniBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing UniBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"benmurphyy":4,"-":15}},{"path":"docs/team/benmurphyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"title: Ben Murphy\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"### Project: UniBook","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"UniBook is a desktop app for students to manage their university contacts in smart organized manner, optimized for command-line interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"benmurphyy":23,"yokester98":1}},{"path":"docs/team/geraldneo567.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"title: Gerald Neo\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"### Project: UniBook","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"UniBook is a desktop app for students to manage their university contacts in smart organized manner, optimized for command-line interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"yokester98":1,"geraldneo567":23}},{"path":"docs/team/ryanwalterlee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanwalterlee"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"ryanwalterlee"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"ryanwalterlee"},"content":"title: Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"### Project: UniBook","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"ryanwalterlee"},"content":"UniBook is a desktop app for students to manage their university contacts in smart organized manner, optimized for command-line interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"ryanwalterlee"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"ryanwalterlee"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"   ","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"ryanwalterlee":26}},{"path":"docs/team/sophiien.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sophiien"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"sophiien"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"sophiien"},"content":"title: Sophie Ng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"### Project: UniBook","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"UniBook is a desktop app for students to manage their university contacts in smart organized manner, optimized for command-line interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"* **Project management**:","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"sophiien"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"sophiien"},"content":"* **Community**:","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"sophiien"},"content":"* **Tools**:","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"sophiien":24}},{"path":"docs/team/yokester98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yokester98"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"yokester98"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"title: Yoke Yue\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"### Project: UniBook","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"UniBook is a desktop app for students to manage their university contacts in smart organized manner, optimized for command-line interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"* **Code contributed**:","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"   ","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"yokester98":26}},{"path":"src/main/java/unibook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.FileUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        return configPath;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"benmurphyy":11,"-":53}},{"path":"src/main/java/unibook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"benmurphyy":5,"-":20}},{"path":"src/main/java/unibook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Config;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Version;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.ConfigUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.StringUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.Logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.LogicManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.JsonUniBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.Storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.StorageManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.UniBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.Ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 2, true);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing UniBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"        UniBookStorage uniBookStorage \u003d new JsonUniBookStorage(userPrefs.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"        storage \u003d new StorageManager(uniBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        modelManager.setUi(ui);","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"yokester98"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s unibook and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"     * The data from the sample unibook will be used instead if {@code storage}\u0027s unibook is not found,","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"     * or an empty unibook will be used instead if errors occur when reading {@code storage}\u0027s unibook.","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"yokester98"},"content":"        Optional\u003cReadOnlyUniBook\u003e uniBookOptional;","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"        ReadOnlyUniBook initialData;","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"            uniBookOptional \u003d storage.readUniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"            if (!uniBookOptional.isPresent()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"yokester98"},"content":"                logger.info(\"Data file not found. Will be starting with a sample UniBook\");","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"yokester98"},"content":"            initialData \u003d uniBookOptional.orElseGet(SampleDataUtil::getSampleUniBook);","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"yokester98"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty UniBook\");","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"            initialData \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"yokester98"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty UniBook\");","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"yokester98"},"content":"            initialData \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"yokester98"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty UniBook\");","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"yokester98"},"content":"        logger.info(\"Starting UniBook \" + MainApp.VERSION);","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"yokester98"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping UniBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":25,"yokester98":19,"-":139,"geraldneo567":3}},{"path":"src/main/java/unibook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":1,"-":62}},{"path":"src/main/java/unibook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":1,"-":78}},{"path":"src/main/java/unibook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"    private static final String LOG_FILE \u003d \"unibook.log\";","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":3,"yokester98":1,"-":109}},{"path":"src/main/java/unibook/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT_1 \u003d \"Invalid command format! \\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_INVALID_MODULE_DISPLAYED_INDEX \u003d \"The module index provided is invalid\";","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_INVALID_KEYEVENT_DISPLAYED_INDEX \u003d \"The key event index provided is invalid\";","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_INVALID_MEETINGTIME_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"            \"The meeting time index provided is invalid\";","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_INDEX \u003d \"The group index provided is invalid\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting time index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_INVALID_PROF_DISPLAYED_INDEX \u003d \"The professor index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_INVALID_STU_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_INVALID_KEY_EVENT_DISPLAYED_INDEX \u003d \"The key event index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_CHANGE_TO_MODULE_PAGE \u003d \"Change page to Module Page!\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"            + \"Command to change to module page: list o/view v/modules\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_CHANGE_TO_PERSON_PAGE \u003d \"Change page to Person Page!\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"            + \"Command to change to person page: list o/view v/people\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_CHANGE_TO_GROUP_PAGE \u003d \"Change page to Group Page!\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"ryanwalterlee"},"content":"            + \"Command to change to group page: list o/view v/groups\";","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_CHANGE_TO_MODULE_OR_GROUP_PAGE \u003d \"Change page to Module Page or Group Page!\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"ryanwalterlee"},"content":"            + \"Command to change to module page: list o/view v/modules\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"ryanwalterlee"},"content":"            + \"Command to change to group page: list o/view v/groups\";","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_MODULE_CODE_NOT_EXIST \u003d \"Module Code does not exist: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_GROUP_NOT_EXIST \u003d \"Group does not exist: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_INVALID_MODULE_CODE \u003d \"Invalid Module Code! Module Codes must contain 1-10 \"","lastModifiedDate":"2022-04-04"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"            + \"alphanumeric characters.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_INVALID_MODULE_NAME \u003d \"Invalid Module Name! Module Names must contain 1-50 \"","lastModifiedDate":"2022-04-04"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            + \"alphanumeric characters.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    //ListCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_FIELD_EMPTY \u003d \"%s field cannot be empty!\";","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_CHANGED_TO_MODULE_PAGE \u003d \"Changed page to Module Page!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_CHANGED_TO_PERSON_PAGE \u003d \"Changed page to Person Page!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_CHANGED_TO_GROUP_PAGE \u003d \"Changed page to Group Page!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_ALREADY_ON_PEOPLE_PAGE \u003d \"You are already on the People view!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_ALREADY_ON_MODULE_PAGE \u003d \"You are already on the Modules view!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_ALREADY_ON_GROUP_PAGE \u003d \"You are already on the Groups view!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_PEOPLE_WITH_MODULE \u003d \"Listed all people in module %s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_MODULE \u003d \"Listed module %s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_ALL_STUDENTS \u003d \"Listed all students!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_ALL_PROFESSORS \u003d \"Listed all professors!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_ALL_TYPE_IN_MODULE \u003d \"Listed all %s in module %s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_MODULE_GROUP \u003d \"Listed group %s in module %s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_LISTED_GROUP_WITH_NAME \u003d \"Listed groups with name %s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_WRONG_VIEW \u003d \"The command requires you to switch to the %s view.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_WRONG_TYPE \u003d \"The type field must be professors or students.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_INVALID_VIEW \u003d \"The view field must be modules or people.\\n\";","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_INVALID_LIST_OPTION \u003d \"The option field must be view, module, or group.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_MODULE_FIELD_MISSING \u003d \"The m/\u003cMODULECODE\u003e field is missing!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_TYPE_FIELD_MISSING \u003d \"The ty/\u003cTYPE\u003e field is missing!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_GROUP_FIELD_MISSING \u003d \"The g/\u003cGROUPNAME\u003e field is missing!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_VIEW_FIELD_MISSING \u003d \"The v/\u003cVIEW\u003e field is missing!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_GROUP_NOT_IN_MODULE \u003d \"The group %s does not exist in the module!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_GROUP_NOT_IN_UNIBOOK \u003d \"The group %s does not exist in Unibook!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_GROUPS_WITH_NAME \u003d \"Displayed group(s) with name %s!\";","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_PEOPLE_IN_GROUP \u003d \"Displayed people in %s %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_GROUP_WITH_MEETING_DATE \u003d \"No groups have meetings on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_GROUPS_WITH_MEETING_DATE \u003d \"Displayed groups with meeting(s) on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_MODULES_WITH_NAME \u003d \"Displayed modules with %s in their name!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_MODULES_WITH_KEY_EVENT \u003d \"Displayed modules with key event(s) %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_MODULES_WITH_DATE \u003d \"Displayed modules with key event(s) on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_MODULES_WITH_DATE \u003d \"No modules have key events on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_MODULES_WITH_NAME \u003d \"No modules have names containing %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_GROUP_FIELD_REQUIRED \u003d \"You are on group page! No need to specify o/group!\";","lastModifiedDate":"2022-04-04"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_INVALID_KEY_EVENT \u003d \"Invalid Key Event: %s. Acceptable arguments are \"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        + \"EXAM, ASSIGNMENT_DUE, ASSIGNMENT_RELEASE or QUIZ.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_MODULES_WITH_EVENT_AND_DATE \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"        \"Displayed modules with key event %s on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_MODULE_WITH_EVENT_AND_DATE \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        \"No modules have key event(s) %s on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_MODULE_WITH_NAME_AND_DATE \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"        \"No modules have module names containing %s with key event(s) on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_MODULE_WITH_EVENT_AND_NAME \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"        \"No modules have key event(s) %s and contain %s in their module name!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DISPLAYED_MODULES_WITH_NAME_AND_DATE \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"        \"Displayed modules with module name containing %s and key event(s) on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGES_DISPLAYED_MODULES_WITH_EVENT_AND_NAME \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"        \"Displayed modules with key event(s) %s that contain %s in the module name!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGES_DISPLAYED_MODULES_WITH_EVENT_AND_NAME_AND_DATE \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        \"Displayed modules with module names containing %s and with key event(s) of type %s \"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"            + \"falling on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_NO_MODULES_WITH_EVENT_AND_NAME_AND_DATE \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"        \"No modules have module names containing %s, with key event(s) of type %s falling on %s!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":1,"ryanwalterlee":16,"sophiien":7,"-":11,"geraldneo567":61}},{"path":"src/main/java/unibook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    public int getMajor() {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        return major;","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    public int getMinor() {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        return minor;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    public int getPatch() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        return patch;","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        return isEarlyAccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":16,"-":101}},{"path":"src/main/java/unibook/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core.index;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    public int getZeroBased() {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    public int getOneBased() {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"benmurphyy":10,"-":44}},{"path":"src/main/java/unibook/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":1,"-":10}},{"path":"src/main/java/unibook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":1,"-":20}},{"path":"src/main/java/unibook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.MainApp;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":2,"-":40}},{"path":"src/main/java/unibook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":4,"-":33}},{"path":"src/main/java/unibook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Config;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benmurphyy":3,"-":20}},{"path":"src/main/java/unibook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":3,"-":82}},{"path":"src/main/java/unibook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"            .addDeserializer(Level.class, new LevelDeserializer(Level.class)))","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        .registerModule(new JavaTimeModule());","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":10,"-":138}},{"path":"src/main/java/unibook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":4,"-":66}},{"path":"src/main/java/unibook/commons/util/TriFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Simple function interface for functions that take in 3 parameters to give 1 output.","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"@FunctionalInterface","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"public interface TriFunction\u003cA, B, C, R\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"     * Function to apply to given arguments that returns an object of type R","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    R apply(A a, B b, C c);","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"benmurphyy":13}},{"path":"src/main/java/unibook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText         The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"     * @param isPersonListShowing boolean value of whether person list is showing.","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"     * @param isModuleListShowing boolean value of whether module list is showing.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"ryanwalterlee"},"content":"    CommandResult execute(String commandText,","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ryanwalterlee"},"content":"                          Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"                          Boolean isModuleListShowing,","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"                          Boolean isGroupListShowing) throws CommandException, ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"     * Returns the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * @see Model#getUniBook()","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"    ReadOnlyUniBook getUniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"     * Returns the user prefs\u0027 UniBook file path.","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"    Path getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     * Returns nan unmodifiable view of the filtered list of modules.","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"benmurphyy":19,"ryanwalterlee":4,"yokester98":6,"-":34,"geraldneo567":2}},{"path":"src/main/java/unibook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.UniBookParser;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.Storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"    private final UniBookParser uniBookParser;","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        uniBookParser \u003d new UniBookParser();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(String commandText,","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"ryanwalterlee"},"content":"                                 Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing,","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isGroupListShowing) throws CommandException, ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"        Command command \u003d uniBookParser.parseCommand(commandText);","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"ryanwalterlee"},"content":"        commandResult \u003d command.execute(model,","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"ryanwalterlee"},"content":"            isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"            isModuleListShowing,","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"            isGroupListShowing);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"            storage.saveUniBook(model.getUniBook());","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"    public ReadOnlyUniBook getUniBook() {","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"        return model.getUniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"    public Path getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"yokester98"},"content":"        return model.getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"benmurphyy":18,"ryanwalterlee":4,"yokester98":13,"-":55,"geraldneo567":4}},{"path":"src/main/java/unibook/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.CliSyntax;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":" * Adds a person or module to the UniBook.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"        + \": Adds a student/professor/module/group/event/meeting to the UniBook, depending on the option specified.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"        + \"To add a student: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"student \"","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"yokester98"},"content":"        + \"[[\" + CliSyntax.PREFIX_MODULE + \"MODULE] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_GROUP + \"GROUP]]... \"","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"yokester98"},"content":"        + \"[[\" + CliSyntax.PREFIX_KEYEVENT + \"TYPE] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_DATETIME + \"DATETIME]]...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"        + \"To add a professor: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"professor \"","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_OFFICE + \"OFFICE] \"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"        + \"To add a module: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"module \"","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"MODULE NAME \"","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE CODE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_KEYEVENT + \"TYPE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"DATETIME]...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"yokester98"},"content":"        + \"To add a group: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"group \"","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"GROUP NAME \"","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE CODE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_DATETIME + \"DATETIME]...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"        + \"To add an event: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"event \"","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE CODE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_KEYEVENT + \"TYPE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"DATETIME\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"        + \"To add a meeting: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"meeting \"","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE CODE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_GROUP + \"GROUP NAME \"","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"DATETIME...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"student \"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        + CliSyntax.PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        + CliSyntax.PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        + CliSyntax.PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        + CliSyntax.PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2103 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2105\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"professor \"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"Mary Jane \"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_PHONE + \"98765412 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_EMAIL + \"maryj@example.com \"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OFFICE + \"COM2 01-02 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"strict \"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"dean \"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2103 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2105\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"module \"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"Computer Organisation \"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"group \"","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"Study Group \"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"event \"","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_KEYEVENT + \"1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"2022-05-04 13:00\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"meeting \"","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_GROUP + \"Project Work \"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"2022-05-04 13:00\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE_MODULE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"yokester98"},"content":"        + \": To add a module to the UniBook, use the following format.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"yokester98"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"module \"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_KEYEVENT + \"TYPE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"DATETIME\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"module \"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"Computer Organisation \"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_KEYEVENT + \"1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"2022-05-04 13:00\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE_GROUP \u003d COMMAND_WORD","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"yokester98"},"content":"        + \": To add a group to the UniBook, use the following format.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"yokester98"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"group \"","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"group \"","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"Study Group \"","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100\\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE_STUDENT \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"yokester98"},"content":"        + \": To add a student to the UniBook, use the following format.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"yokester98"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"student \"","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"student \"","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2103 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2105\\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE_PROFESSOR \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"yokester98"},"content":"        + \": To add a professor to the UniBook, use the following format.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"yokester98"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"professor \"","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OFFICE + \"OFFICE \"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"yokester98"},"content":"        + \"[\" + CliSyntax.PREFIX_MODULE + \"MODULE]...\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"professor \"","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"Mary Jane \"","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_PHONE + \"98765412 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_EMAIL + \"maryj@example.com \"","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OFFICE + \"COM2 01-02 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"strict \"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"dean \"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2103 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2105\\n\";","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_MISSING_MODULES \u003d \"You cannot add a student to a group\"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"yokester98"},"content":"        + \"without the student being in any modules first.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"student \"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2103 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2105 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_GROUP + \"CS2103 G16\\n\";","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE_EVENT \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"yokester98"},"content":"        + \": To add a key event to a module, use the following format.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"yokester98"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"event \"","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_KEYEVENT + \"TYPE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"DATETIME\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"event \"","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_KEYEVENT + \"1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"2022-05-04 13:00\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_USAGE_MEETING \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"yokester98"},"content":"        + \": To add a meeting to a group, use the following format.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"yokester98"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"meeting \"","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_GROUP + \"GROUPNAME \"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"DATETIME\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"yokester98"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"meeting \"","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_MODULE + \"CS2100 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_GROUP + \"Project Work \"","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_DATETIME + \"2022-05-04 13:00\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_SUCCESS_PERSON \u003d \"New person added: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the UniBook\";","lastModifiedDate":"2022-03-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":210,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_SUCCESS_MODULE \u003d \"New module added: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":211,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the UniBook\";","lastModifiedDate":"2022-03-13"},{"lineNumber":212,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_SUCCESS_GROUP \u003d \"New group added: %1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the specified \"","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"yokester98"},"content":"        + \"module in the UniBook\";","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_SUCCESS_MEETING \u003d \"New meeting time added.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting time already exists in the specified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"yokester98"},"content":"        + \"group in the UniBook\";","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_SUCCESS_EVENT \u003d \"New event added: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the module specified.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_MODULE_DOES_NOT_EXIST \u003d \"One or more of the modules entered\"","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"yokester98"},"content":"        + \" does not exist in the UniBook\";","lastModifiedDate":"2022-03-13"},{"lineNumber":226,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_GROUP_DOES_NOT_EXIST \u003d \"One or more of the groups entered\"","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"yokester98"},"content":"        + \" does not exist in the UniBook\";","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":229,"author":{"gitId":"benmurphyy"},"content":"    private Person personToAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"yokester98"},"content":"    private Module moduleToAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"yokester98"},"content":"    private Group groupToAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"yokester98"},"content":"    private String groupName;","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"yokester98"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"yokester98"},"content":"    private Set\u003cModuleCode\u003e moduleCodeSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"yokester98"},"content":"    private ArrayList\u003cLinkedHashSet\u003cString\u003e\u003e groupNamesList;","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"yokester98"},"content":"    private ModuleKeyEvent.KeyEventType keyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":237,"author":{"gitId":"yokester98"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":238,"author":{"gitId":"yokester98"},"content":"    private ArrayList\u003cLocalDateTime\u003e dateTimeList;","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"yokester98"},"content":"    private Boolean isAddMeetingTime \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":246,"author":{"gitId":"yokester98"},"content":"        personToAdd \u003d person;","lastModifiedDate":"2022-03-13"},{"lineNumber":247,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":248,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":249,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add the specified {@code Person} with {@code moduleCodes}","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"yokester98"},"content":"    public AddCommand(Person person, Set\u003cModuleCode\u003e moduleCodes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"yokester98"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"yokester98"},"content":"        personToAdd \u003d person;","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"yokester98"},"content":"        moduleCodeSet \u003d moduleCodes;","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add the specified {@code Person} with {@code moduleCodes} into {@code groups}","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"yokester98"},"content":"    public AddCommand(Person person, Set\u003cModuleCode\u003e moduleCodes, ArrayList\u003cLinkedHashSet\u003cString\u003e\u003e groups) {","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"yokester98"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"yokester98"},"content":"        personToAdd \u003d person;","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"yokester98"},"content":"        moduleCodeSet \u003d moduleCodes;","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"yokester98"},"content":"        groupNamesList \u003d groups;","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":269,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add the specified {@code Module}","lastModifiedDate":"2022-03-13"},{"lineNumber":270,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":271,"author":{"gitId":"yokester98"},"content":"    public AddCommand(Module module) {","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"yokester98"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"yokester98"},"content":"        moduleToAdd \u003d module;","lastModifiedDate":"2022-03-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":276,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add the {@code ModuleKeyEvent} into the specified {@code Module}","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"yokester98"},"content":"    public AddCommand(ModuleCode moduleCode, ModuleKeyEvent.KeyEventType keyEvent, LocalDateTime dateTime) {","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"yokester98"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"yokester98"},"content":"        this.keyEvent \u003d keyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"yokester98"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add {@code LocalDateTime meetings} into the specified {@code Group}","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"yokester98"},"content":"    public AddCommand(ModuleCode moduleCode, String groupName, ArrayList\u003cLocalDateTime\u003e dateTimes) {","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"yokester98"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"yokester98"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"yokester98"},"content":"        dateTimeList \u003d dateTimes;","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"yokester98"},"content":"        isAddMeetingTime \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":297,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add a Group to UniBook with {@code groupName} to {@code moduleCode}","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"yokester98"},"content":"    public AddCommand(String groupNameToAdd, ModuleCode moduleCodeOfGroup) {","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"yokester98"},"content":"        requireNonNull(groupNameToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCodeOfGroup);","lastModifiedDate":"2022-03-24"},{"lineNumber":303,"author":{"gitId":"yokester98"},"content":"        groupName \u003d groupNameToAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"yokester98"},"content":"        moduleCode \u003d moduleCodeOfGroup;","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":308,"author":{"gitId":"yokester98"},"content":"     * Creates an AddCommand to add a Group to UniBook with {@code String groupName}","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"yokester98"},"content":"     * and meetings {@code ArrayList\u003cLocalDateTime\u003e dateTimes} to {@code moduleCode}","lastModifiedDate":"2022-03-27"},{"lineNumber":310,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":311,"author":{"gitId":"yokester98"},"content":"    public AddCommand(String groupNameToAdd, ModuleCode moduleCodeOfGroup, ArrayList\u003cLocalDateTime\u003e dateTimes) {","lastModifiedDate":"2022-03-27"},{"lineNumber":312,"author":{"gitId":"yokester98"},"content":"        requireNonNull(groupNameToAdd);","lastModifiedDate":"2022-03-27"},{"lineNumber":313,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCodeOfGroup);","lastModifiedDate":"2022-03-27"},{"lineNumber":314,"author":{"gitId":"yokester98"},"content":"        groupName \u003d groupNameToAdd;","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"yokester98"},"content":"        moduleCode \u003d moduleCodeOfGroup;","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"yokester98"},"content":"        dateTimeList \u003d dateTimes;","lastModifiedDate":"2022-03-27"},{"lineNumber":317,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":318,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":320,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":321,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":324,"author":{"gitId":"yokester98"},"content":"        if (moduleToAdd !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"yokester98"},"content":"            if (model.hasModule(moduleToAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":326,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-03-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":328,"author":{"gitId":"yokester98"},"content":"            model.addModule(moduleToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":329,"author":{"gitId":"yokester98"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_MODULE, moduleToAdd));","lastModifiedDate":"2022-03-13"},{"lineNumber":330,"author":{"gitId":"yokester98"},"content":"        } else if (personToAdd !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"yokester98"},"content":"            if (model.hasPerson(personToAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":333,"author":{"gitId":"yokester98"},"content":"            } else if (!model.isModuleExist(moduleCodeSet)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2022-03-13"},{"lineNumber":335,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"yokester98"},"content":"            Set\u003cModule\u003e personModules \u003d personToAdd.getModulesModifiable();","lastModifiedDate":"2022-03-13"},{"lineNumber":337,"author":{"gitId":"yokester98"},"content":"            if (groupNamesList !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"yokester98"},"content":"                Set\u003cGroup\u003e studentGroups \u003d ((Student) personToAdd).getGroups();","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"yokester98"},"content":"                Iterator\u003cLinkedHashSet\u003cString\u003e\u003e groupNamesListItr \u003d groupNamesList.iterator();","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"yokester98"},"content":"                for (ModuleCode moduleCode : moduleCodeSet) {","lastModifiedDate":"2022-03-23"},{"lineNumber":341,"author":{"gitId":"yokester98"},"content":"                    Module moduleToAdd \u003d model.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"yokester98"},"content":"                    personModules.add(moduleToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"yokester98"},"content":"                    LinkedHashSet\u003cString\u003e groupSet \u003d groupNamesListItr.next();","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"yokester98"},"content":"                    if (groupSet.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"yokester98"},"content":"                        continue;","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"yokester98"},"content":"                    }","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"yokester98"},"content":"                    for (String groupName : groupSet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"yokester98"},"content":"                        if (!moduleToAdd.hasGroupName(groupName)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"yokester98"},"content":"                            throw new CommandException(MESSAGE_GROUP_DOES_NOT_EXIST);","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"yokester98"},"content":"                        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":351,"author":{"gitId":"yokester98"},"content":"                            Group currGroup \u003d moduleToAdd.getGroupByName(groupName);","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"yokester98"},"content":"                            studentGroups.add(currGroup);","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"yokester98"},"content":"                        }","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"yokester98"},"content":"                    }","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"yokester98"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"yokester98"},"content":"                for (ModuleCode moduleCode : moduleCodeSet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":358,"author":{"gitId":"yokester98"},"content":"                    Module moduleToAdd \u003d model.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-24"},{"lineNumber":359,"author":{"gitId":"yokester98"},"content":"                    personModules.add(moduleToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":362,"author":{"gitId":"yokester98"},"content":"            model.addPersonToTheirModules(personToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":363,"author":{"gitId":"yokester98"},"content":"            if (personToAdd instanceof Student) {","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"yokester98"},"content":"                model.addPersonToTheirGroups(personToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"yokester98"},"content":"            model.addPerson(personToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"yokester98"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_PERSON, personToAdd));","lastModifiedDate":"2022-03-13"},{"lineNumber":368,"author":{"gitId":"yokester98"},"content":"        } else if (keyEvent !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"yokester98"},"content":"            if (!model.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":370,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2022-03-27"},{"lineNumber":371,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":372,"author":{"gitId":"yokester98"},"content":"            Module moduleToAddEventTo \u003d model.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":373,"author":{"gitId":"yokester98"},"content":"            if (moduleToAddEventTo.hasEvent(keyEvent, dateTime)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":374,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-27"},{"lineNumber":375,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":376,"author":{"gitId":"yokester98"},"content":"            ModuleKeyEvent moduleKeyEvent \u003d new ModuleKeyEvent(keyEvent, dateTime, moduleToAddEventTo);","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"yokester98"},"content":"            moduleToAddEventTo.addKeyEvent(moduleKeyEvent);","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"yokester98"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_EVENT, moduleKeyEvent));","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"yokester98"},"content":"        } else if (isAddMeetingTime) {","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"yokester98"},"content":"            if (!model.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"yokester98"},"content":"            Module moduleGroupIsIn \u003d model.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"yokester98"},"content":"            Group groupToUpdate \u003d moduleGroupIsIn.getGroupByName(groupName);","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"yokester98"},"content":"            if (groupToUpdate \u003d\u003d null) {","lastModifiedDate":"2022-04-03"},{"lineNumber":386,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_GROUP_DOES_NOT_EXIST);","lastModifiedDate":"2022-04-03"},{"lineNumber":387,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":388,"author":{"gitId":"yokester98"},"content":"            for (LocalDateTime dateTime : dateTimeList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"yokester98"},"content":"                try {","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"yokester98"},"content":"                    groupToUpdate.addMeetingTime(dateTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":391,"author":{"gitId":"yokester98"},"content":"                } catch (Exception e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":392,"author":{"gitId":"yokester98"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-03-27"},{"lineNumber":393,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"yokester98"},"content":"            return new CommandResult(MESSAGE_SUCCESS_MEETING);","lastModifiedDate":"2022-03-27"},{"lineNumber":396,"author":{"gitId":"yokester98"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":397,"author":{"gitId":"yokester98"},"content":"            if (!model.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":398,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":400,"author":{"gitId":"yokester98"},"content":"            Module moduleToAddGroupTo \u003d model.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"yokester98"},"content":"            if (moduleToAddGroupTo.hasGroupName(groupName)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":402,"author":{"gitId":"yokester98"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":404,"author":{"gitId":"yokester98"},"content":"            if (dateTimeList !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"yokester98"},"content":"                groupToAdd \u003d new Group(groupName, moduleToAddGroupTo,","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"yokester98"},"content":"                    FXCollections.observableArrayList(dateTimeList));","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"yokester98"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":408,"author":{"gitId":"yokester98"},"content":"                groupToAdd \u003d new Group(groupName, moduleToAddGroupTo);","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"yokester98"},"content":"            model.addGroup(groupToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"yokester98"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_GROUP, groupToAdd));","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":419,"author":{"gitId":"yokester98"},"content":"            \u0026\u0026 personToAdd.equals(((AddCommand) other).personToAdd));","lastModifiedDate":"2022-03-13"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":422,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":13,"ryanwalterlee":1,"yokester98":372,"-":35,"geraldneo567":1}},{"path":"src/main/java/unibook/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":" * Clears the unibook.","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"UniBook has been cleared!\";","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"        model.setUniBook(new UniBook());","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":3,"ryanwalterlee":1,"yokester98":6,"-":13,"geraldneo567":1}},{"path":"src/main/java/unibook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model               {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"     * @param isPersonListShowing boolean value of whether person list is showing.","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"     * @param isModuleListShowing boolean value of whether module list is showing.","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"    // execute will delete the specified index of person or module depending on what is currently showing","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"    public abstract CommandResult execute(Model model,","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"                                          Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"                                          Boolean isModuleListShowing,","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"                                          Boolean isGroupListShowing) throws CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":3,"ryanwalterlee":5,"-":16,"geraldneo567":2}},{"path":"src/main/java/unibook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     * The application should exit.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":7,"-":68}},{"path":"src/main/java/unibook/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.logic.parser.CliSyntax;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":" * Deletes a person identified using it\u0027s displayed index from the unibook.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ryanwalterlee"},"content":"        + \":\\n\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"ryanwalterlee"},"content":"        + \"All Pages: \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index] (Delete person or module or group at that index)\\n\")","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" %smodule %s[modulecode] (Delete module that matches the code)\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_MODULE)","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" %sgroup %s[modulecode] %s[groupname] \"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"ryanwalterlee"},"content":"        + \"(Delete the group that is associated with this module code)\\n\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_MODULE, CliSyntax.PREFIX_GROUP)","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"ryanwalterlee"},"content":"        + \"Person Page: \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index] %s %s %s[tag] %s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"ryanwalterlee"},"content":"        + \"(Delete attributes from person on person page only)\\n\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_TAG, CliSyntax.PREFIX_OFFICE)","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"        + \"Module Page: \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index1] %s[index2] (Delete professor at index2 from module at index1)\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_PROF_INDEX)","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index1] %s[index2] (Delete student at index2 from module at index1)\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_STU_INDEX)","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index] %s[groupname] (Delete group from module at index)\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_GROUP)","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index1] %s[index2] (Delete key event at index2 from module at index1)\\n\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_KEYEVENT)","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"ryanwalterlee"},"content":"        + \"Group page: \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index1] %s[index2] (Delete student at index2 from group at index1)\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_STU_INDEX)","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"ryanwalterlee"},"content":"        + COMMAND_WORD + String.format(\" [index1] %s[index2] (Delete meeting time at index2 from group at index1)\\n\",","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"ryanwalterlee"},"content":"            CliSyntax.PREFIX_MEETING_TIME);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Successfully deleted Person: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Successfully deleted Module: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_MODULE_AND_PERSON_SUCCESS \u003d \"Deleted Module: %1$s, and all Persons\";","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_UNSUCCESSFUL \u003d \"Delete Unsuccessful\";","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Successfully deleted Group: %1$s from Module: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_TRAITS_SUCCESS \u003d \"Successfully deleted the following traits:\\n\";","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String PHONE \u003d \"Phone: \";","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String EMAIL \u003d \"Email: \";","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String TAG \u003d \"Tag: \";","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String OFFICE \u003d \"Office: \";","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_PROF_FROM_MODULE_SUCCESS \u003d \"Successfully deleted Prof: %1$s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"            + \"from Module: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_STUDENT_FROM_MODULE_SUCCESS \u003d \"Successfully deleted Student: %1$s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"ryanwalterlee"},"content":"            + \"from Module: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_STUDENT_FROM_GROUP_SUCCESS \u003d \"Successfully deleted Student: %1$s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"            + \"from Group: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_GROUP_FROM_MODULE_SUCCESS \u003d \"Successfully deleted Group: %1$s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"ryanwalterlee"},"content":"            + \"from Module: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_MEETING_FROM_GROUP_SUCCESS \u003d \"Successfully deleted Meeting: %1$s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"ryanwalterlee"},"content":"            + \"from Group: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"ryanwalterlee"},"content":"    public static final String MESSAGE_DELETE_KEY_EVENT_FROM_MODULE_SUCCESS \u003d \"Successfully deleted Key Event: %1$s \"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"ryanwalterlee"},"content":"            + \"from Module: %2$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"ryanwalterlee"},"content":"    private Index targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"ryanwalterlee"},"content":"    private boolean indexOnly \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"ryanwalterlee"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"ryanwalterlee"},"content":"    private Group group;","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"ryanwalterlee"},"content":"    private boolean phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"ryanwalterlee"},"content":"    private boolean email;","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ryanwalterlee"},"content":"    private String tag;","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"ryanwalterlee"},"content":"    private boolean office;","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"ryanwalterlee"},"content":"    private Index profIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"ryanwalterlee"},"content":"    private Index stuIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"ryanwalterlee"},"content":"    private Index meetingTimeIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"ryanwalterlee"},"content":"    private Index keyEventIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"     * Creates a Delete Command Object that will delete a person at targetIndex.","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"ryanwalterlee"},"content":"     * @param targetIndex Index object that describes the person at that index to delete","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":101,"author":{"gitId":"ryanwalterlee"},"content":"        this.indexOnly \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"     * Creates a Delete Command Object that will delete a module that has moduleCode","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"    public DeleteCommand(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"     * Creates a Delete Command Object that will delete a group in the module that","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"     * matches module code provided","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"    public DeleteCommand(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"ryanwalterlee"},"content":"        this.group \u003d group;","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"ryanwalterlee"},"content":"     * Creates a Delete Command Object that will delete person attributes such as phone, email, tag, office","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"ryanwalterlee"},"content":"     * @param targetIndex","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"ryanwalterlee"},"content":"     * @param phone","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"ryanwalterlee"},"content":"     * @param email","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"ryanwalterlee"},"content":"     * @param tag","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"ryanwalterlee"},"content":"     * @param office","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"ryanwalterlee"},"content":"    public DeleteCommand(Index targetIndex, boolean phone, boolean email, String tag, boolean office) {","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"ryanwalterlee"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"ryanwalterlee"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"ryanwalterlee"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"ryanwalterlee"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"ryanwalterlee"},"content":"        this.office \u003d office;","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"ryanwalterlee"},"content":"     * Creates a Delete Command that involves 2 Index","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"ryanwalterlee"},"content":"     * @param index","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"ryanwalterlee"},"content":"     * @param stuIndex","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"ryanwalterlee"},"content":"     * @param profIndex","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"ryanwalterlee"},"content":"     * @param meetingTimeIndex","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"ryanwalterlee"},"content":"     * @param keyEventIndex","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"ryanwalterlee"},"content":"    public DeleteCommand(Index index, Index stuIndex, Index profIndex, Index meetingTimeIndex, Index keyEventIndex) {","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"ryanwalterlee"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"ryanwalterlee"},"content":"        this.stuIndex \u003d stuIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"ryanwalterlee"},"content":"        this.profIndex \u003d profIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"ryanwalterlee"},"content":"        this.meetingTimeIndex \u003d meetingTimeIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"ryanwalterlee"},"content":"        this.keyEventIndex \u003d keyEventIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"     * Creates a Delete Command that deletes a group","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"     * @param index","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"     * @param group","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"ryanwalterlee"},"content":"    public DeleteCommand(Index index, Group group) {","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"ryanwalterlee"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"ryanwalterlee"},"content":"        this.group \u003d group;","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model,","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"ryanwalterlee"},"content":"                                 Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"ryanwalterlee"},"content":"        // delete person by index case","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"ryanwalterlee"},"content":"        if (indexOnly) {","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"ryanwalterlee"},"content":"            // if not on person page, throw exception telling user to change pages","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"ryanwalterlee"},"content":"            if (isPersonListShowing) {","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"ryanwalterlee"},"content":"                if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"ryanwalterlee"},"content":"                Person personToDelete \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"ryanwalterlee"},"content":"                // Bi-directionality","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"ryanwalterlee"},"content":"                model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"ryanwalterlee"},"content":"                // delete person from UniquePersonList","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"ryanwalterlee"},"content":"                // delete person from each module in module list if exists","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"ryanwalterlee"},"content":"                // delete person from each group they are in","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"ryanwalterlee"},"content":"                if (personToDelete instanceof Student) {","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"ryanwalterlee"},"content":"                    Set\u003cGroup\u003e groupToLeave \u003d ((Student) personToDelete).getGroups();","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"ryanwalterlee"},"content":"                    for (Group g : groupToLeave) {","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"ryanwalterlee"},"content":"                        g.removeMember((Student) personToDelete);","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"ryanwalterlee"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":204,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (isModuleListShowing) {","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cModule\u003e lastShownModuleList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"ryanwalterlee"},"content":"                if (targetIndex.getZeroBased() \u003e\u003d lastShownModuleList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"ryanwalterlee"},"content":"                Module moduleToDelete \u003d lastShownModuleList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"ryanwalterlee"},"content":"                // Bi-directionality","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"ryanwalterlee"},"content":"                model.deleteModule(moduleToDelete); // delete person from UniquePersonList","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"ryanwalterlee"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (isGroupListShowing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"ryanwalterlee"},"content":"                System.out.println(isGroupListShowing);","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cGroup\u003e lastShownGroupList \u003d model.getShowingGroupList();","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"ryanwalterlee"},"content":"                // list o/view v/groups","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"ryanwalterlee"},"content":"                if (targetIndex.getZeroBased() \u003e\u003d lastShownGroupList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"ryanwalterlee"},"content":"                Group groupToDelete \u003d lastShownGroupList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"ryanwalterlee"},"content":"                Module moduleThatHasThisGroup \u003d groupToDelete.getModule();","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"ryanwalterlee"},"content":"                model.removeGroup(moduleThatHasThisGroup.getModuleCode(), groupToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"ryanwalterlee"},"content":"                lastShownGroupList.remove(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"ryanwalterlee"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"ryanwalterlee"},"content":"                        groupToDelete.getGroupName(), groupToDelete.getModule().getModuleCode()));","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"ryanwalterlee"},"content":"            // delete module by code case","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (moduleCode !\u003d null \u0026\u0026 group \u003d\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":248,"author":{"gitId":"ryanwalterlee"},"content":"            // check if module code is valid","lastModifiedDate":"2022-03-13"},{"lineNumber":249,"author":{"gitId":"ryanwalterlee"},"content":"            if (!model.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":250,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, moduleCode));","lastModifiedDate":"2022-03-13"},{"lineNumber":251,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":252,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":253,"author":{"gitId":"ryanwalterlee"},"content":"            // Bi-directionality","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"ryanwalterlee"},"content":"            model.deleteByModuleCode(moduleCode); // delete module from ModuleList and remove module from all persons","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":256,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, moduleCode));","lastModifiedDate":"2022-03-12"},{"lineNumber":257,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":258,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"ryanwalterlee"},"content":"            // delete group case","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (moduleCode !\u003d null \u0026\u0026 group !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"ryanwalterlee"},"content":"            // check if module code is valid","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"ryanwalterlee"},"content":"            if (!model.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, moduleCode));","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"ryanwalterlee"},"content":"            // check if group exist","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"ryanwalterlee"},"content":"            if (!model.hasModuleAndGroup(moduleCode, group)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_GROUP_NOT_EXIST, group.getGroupName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"ryanwalterlee"},"content":"            // module and group exists","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"ryanwalterlee"},"content":"            Group removedGroup \u003d model.removeGroup(moduleCode, group);","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"ryanwalterlee"},"content":"            if (isGroupListShowing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cGroup\u003e lastShownGroupList \u003d model.getShowingGroupList();","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"ryanwalterlee"},"content":"                lastShownGroupList.remove(removedGroup);","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"ryanwalterlee"},"content":"                    removedGroup, removedGroup.getModule().getModuleCode()));","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (phone || email || tag !\u003d null || office) { // delete person attributes","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"ryanwalterlee"},"content":"            if (!isPersonListShowing) {","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_PERSON_PAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"ryanwalterlee"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"ryanwalterlee"},"content":"            Person personToDeleteTrait \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"ryanwalterlee"},"content":"            Person newPerson \u003d personToDeleteTrait;","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"ryanwalterlee"},"content":"            String phoneDeleted \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"ryanwalterlee"},"content":"            String emailDeleted \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"ryanwalterlee"},"content":"            String tagDeleted \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"ryanwalterlee"},"content":"            String officeDeleted \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":300,"author":{"gitId":"ryanwalterlee"},"content":"            if (phone) {","lastModifiedDate":"2022-03-27"},{"lineNumber":301,"author":{"gitId":"ryanwalterlee"},"content":"                String oldPhone \u003d newPerson.getPhone().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"ryanwalterlee"},"content":"                phoneDeleted \u003d oldPhone.equals(\"\") ? \"None\" : oldPhone;","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"ryanwalterlee"},"content":"                newPerson \u003d newPerson.deletePhone();","lastModifiedDate":"2022-03-27"},{"lineNumber":304,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":305,"author":{"gitId":"ryanwalterlee"},"content":"            if (email) {","lastModifiedDate":"2022-03-27"},{"lineNumber":306,"author":{"gitId":"ryanwalterlee"},"content":"                String oldEmail \u003d newPerson.getEmail().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"ryanwalterlee"},"content":"                emailDeleted \u003d oldEmail.equals(\"\") ? \"None\" : oldEmail;","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"ryanwalterlee"},"content":"                newPerson \u003d newPerson.deleteEmail();","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":310,"author":{"gitId":"ryanwalterlee"},"content":"            if (tag !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":311,"author":{"gitId":"ryanwalterlee"},"content":"                Tag oldTag \u003d newPerson.getTag(tag);","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"ryanwalterlee"},"content":"                tagDeleted \u003d oldTag \u003d\u003d null ? \"Tag not found\" : newPerson.getTag(tag).tagName;","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"ryanwalterlee"},"content":"                newPerson \u003d newPerson.deleteTag(tag);","lastModifiedDate":"2022-03-27"},{"lineNumber":314,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"ryanwalterlee"},"content":"            if (personToDeleteTrait instanceof Professor \u0026\u0026 office) {","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"ryanwalterlee"},"content":"                String oldOffice \u003d ((Professor) newPerson).getOffice().toString();","lastModifiedDate":"2022-03-29"},{"lineNumber":317,"author":{"gitId":"ryanwalterlee"},"content":"                officeDeleted \u003d oldOffice.equals(\"\") ? \"None\" : oldOffice;","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"ryanwalterlee"},"content":"                newPerson \u003d ((Professor) newPerson).deleteOffice();","lastModifiedDate":"2022-03-27"},{"lineNumber":319,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":320,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":321,"author":{"gitId":"ryanwalterlee"},"content":"            personToDeleteTrait.removePersonFromAllTheirModules();","lastModifiedDate":"2022-03-27"},{"lineNumber":322,"author":{"gitId":"ryanwalterlee"},"content":"            model.deletePerson(personToDeleteTrait);","lastModifiedDate":"2022-03-27"},{"lineNumber":323,"author":{"gitId":"ryanwalterlee"},"content":"            newPerson.addPersonToAllTheirModules();","lastModifiedDate":"2022-03-27"},{"lineNumber":324,"author":{"gitId":"ryanwalterlee"},"content":"            if (personToDeleteTrait instanceof Student) {","lastModifiedDate":"2022-03-27"},{"lineNumber":325,"author":{"gitId":"ryanwalterlee"},"content":"                Student studentToDeleteTrait \u003d (Student) personToDeleteTrait;","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"ryanwalterlee"},"content":"                studentToDeleteTrait.removeStudentFromAllTheirGroups();","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"ryanwalterlee"},"content":"                Student newStudent \u003d (Student) newPerson;","lastModifiedDate":"2022-03-29"},{"lineNumber":328,"author":{"gitId":"ryanwalterlee"},"content":"                newStudent.addStudentToAllTheirGroups();","lastModifiedDate":"2022-03-29"},{"lineNumber":329,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":330,"author":{"gitId":"ryanwalterlee"},"content":"            model.addPerson(newPerson);","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"ryanwalterlee"},"content":"            // message can be improved if have time","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"ryanwalterlee"},"content":"            String phoneString \u003d phoneDeleted !\u003d null ? PHONE + phoneDeleted + \"\\n\" : \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":334,"author":{"gitId":"ryanwalterlee"},"content":"            String emailString \u003d emailDeleted !\u003d null ? EMAIL + emailDeleted + \"\\n\" : \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"ryanwalterlee"},"content":"            String tagString \u003d tagDeleted !\u003d null ? TAG + tagDeleted + \"\\n\" : \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":336,"author":{"gitId":"ryanwalterlee"},"content":"            String officeString \u003d officeDeleted !\u003d null ? OFFICE + officeDeleted + \"\\n\" : \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(MESSAGE_DELETE_TRAITS_SUCCESS + phoneString","lastModifiedDate":"2022-03-29"},{"lineNumber":338,"author":{"gitId":"ryanwalterlee"},"content":"                    + emailString + tagString + officeString + \"from \" + personToDeleteTrait.getName());","lastModifiedDate":"2022-03-29"},{"lineNumber":339,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":340,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (targetIndex !\u003d null \u0026\u0026 profIndex !\u003d null) { // delete prof from module","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"ryanwalterlee"},"content":"            if (!isModuleListShowing) {","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_MODULE_PAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cModule\u003e lastShownModuleList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"ryanwalterlee"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownModuleList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"ryanwalterlee"},"content":"            Module moduleToDeleteProf \u003d lastShownModuleList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cProfessor\u003e lastShownProfList \u003d moduleToDeleteProf.getProfessors();","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"ryanwalterlee"},"content":"            if (profIndex.getZeroBased() \u003e\u003d lastShownProfList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":356,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PROF_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":357,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"ryanwalterlee"},"content":"            Professor professorToDelete \u003d lastShownProfList.get(profIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":361,"author":{"gitId":"ryanwalterlee"},"content":"            professorToDelete.removeModule(moduleToDeleteProf.getModuleCode()); // remove module from prof","lastModifiedDate":"2022-03-27"},{"lineNumber":362,"author":{"gitId":"ryanwalterlee"},"content":"            moduleToDeleteProf.removePerson(professorToDelete);","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":364,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PROF_FROM_MODULE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"ryanwalterlee"},"content":"                    professorToDelete.getName(), moduleToDeleteProf.getModuleCode()));","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (targetIndex !\u003d null \u0026\u0026 stuIndex !\u003d null) { // delete student from module","lastModifiedDate":"2022-03-27"},{"lineNumber":368,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"ryanwalterlee"},"content":"            if (isModuleListShowing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":370,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":371,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cModule\u003e lastShownModuleList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-03-27"},{"lineNumber":372,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":373,"author":{"gitId":"ryanwalterlee"},"content":"                if (targetIndex.getZeroBased() \u003e\u003d lastShownModuleList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":374,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":375,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":376,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"ryanwalterlee"},"content":"                Module moduleToDeleteStudent \u003d lastShownModuleList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cStudent\u003e lastShownStuList \u003d moduleToDeleteStudent.getStudents();","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"ryanwalterlee"},"content":"                if (stuIndex.getZeroBased() \u003e\u003d lastShownStuList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_STU_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"ryanwalterlee"},"content":"                Student studentToDelete \u003d lastShownStuList.get(stuIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":385,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"ryanwalterlee"},"content":"                studentToDelete.removeModule(moduleToDeleteStudent.getModuleCode()); // remove module from student","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"ryanwalterlee"},"content":"                moduleToDeleteStudent.removePerson(studentToDelete);","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"ryanwalterlee"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_FROM_MODULE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"ryanwalterlee"},"content":"                        studentToDelete.getName(), moduleToDeleteStudent.getModuleCode()));","lastModifiedDate":"2022-03-27"},{"lineNumber":391,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":392,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (isGroupListShowing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":393,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":394,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cGroup\u003e lastShownGroupList \u003d model.getShowingGroupList();","lastModifiedDate":"2022-03-29"},{"lineNumber":395,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":396,"author":{"gitId":"ryanwalterlee"},"content":"                if (targetIndex.getZeroBased() \u003e\u003d lastShownGroupList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":397,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":398,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":399,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":400,"author":{"gitId":"ryanwalterlee"},"content":"                Group groupToDeleteStudent \u003d lastShownGroupList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":401,"author":{"gitId":"ryanwalterlee"},"content":"                List\u003cStudent\u003e listOfStudentsInGroup \u003d groupToDeleteStudent.getMembers();","lastModifiedDate":"2022-03-29"},{"lineNumber":402,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":403,"author":{"gitId":"ryanwalterlee"},"content":"                if (stuIndex.getZeroBased() \u003e\u003d listOfStudentsInGroup.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":404,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_STU_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":405,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":406,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":407,"author":{"gitId":"ryanwalterlee"},"content":"                Student studentToDelete \u003d listOfStudentsInGroup.get(stuIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":408,"author":{"gitId":"ryanwalterlee"},"content":"                groupToDeleteStudent.removeMember(studentToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":409,"author":{"gitId":"ryanwalterlee"},"content":"                studentToDelete.removeGroup(groupToDeleteStudent.getModule().getModuleCode(), groupToDeleteStudent);","lastModifiedDate":"2022-03-29"},{"lineNumber":410,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":411,"author":{"gitId":"ryanwalterlee"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_FROM_GROUP_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":412,"author":{"gitId":"ryanwalterlee"},"content":"                        studentToDelete.getName(), groupToDeleteStudent.getGroupName()));","lastModifiedDate":"2022-03-29"},{"lineNumber":413,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":414,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":415,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":416,"author":{"gitId":"ryanwalterlee"},"content":"            throw new CommandException(Messages.MESSAGE_CHANGE_TO_MODULE_OR_GROUP_PAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":417,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":418,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (targetIndex !\u003d null \u0026\u0026 group !\u003d null) { // delete group from module","lastModifiedDate":"2022-03-27"},{"lineNumber":419,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":420,"author":{"gitId":"ryanwalterlee"},"content":"            if (!isModuleListShowing) {","lastModifiedDate":"2022-03-27"},{"lineNumber":421,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_MODULE_PAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":422,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":423,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":424,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cModule\u003e lastShownModuleList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":426,"author":{"gitId":"ryanwalterlee"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownModuleList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":427,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":428,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":429,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":430,"author":{"gitId":"ryanwalterlee"},"content":"            Module moduleToDeleteGroup \u003d lastShownModuleList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":431,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":432,"author":{"gitId":"ryanwalterlee"},"content":"            if (!moduleToDeleteGroup.hasGroup(group)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":433,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_GROUP_NOT_EXIST, group.getGroupName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":434,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":435,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":436,"author":{"gitId":"ryanwalterlee"},"content":"            Group groupToDelete \u003d moduleToDeleteGroup.getGroupByName(group.getGroupName());","lastModifiedDate":"2022-03-27"},{"lineNumber":437,"author":{"gitId":"ryanwalterlee"},"content":"            moduleToDeleteGroup.removeGroupByName(group);","lastModifiedDate":"2022-03-27"},{"lineNumber":438,"author":{"gitId":"ryanwalterlee"},"content":"            groupToDelete.removeStudentsFromThisGroup();","lastModifiedDate":"2022-03-27"},{"lineNumber":439,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":440,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_GROUP_FROM_MODULE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":441,"author":{"gitId":"ryanwalterlee"},"content":"                    groupToDelete.getGroupName(), moduleToDeleteGroup.getModuleCode()));","lastModifiedDate":"2022-03-27"},{"lineNumber":442,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":443,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (targetIndex !\u003d null \u0026\u0026 meetingTimeIndex !\u003d null) { // delete meeting time from group page","lastModifiedDate":"2022-03-29"},{"lineNumber":444,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":445,"author":{"gitId":"ryanwalterlee"},"content":"            if (!isGroupListShowing) {","lastModifiedDate":"2022-03-29"},{"lineNumber":446,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_GROUP_PAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":447,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":448,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":449,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cGroup\u003e lastShownGroupList \u003d model.getShowingGroupList();","lastModifiedDate":"2022-03-29"},{"lineNumber":450,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":451,"author":{"gitId":"ryanwalterlee"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownGroupList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":452,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":453,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":454,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":455,"author":{"gitId":"ryanwalterlee"},"content":"            Group groupToDeleteMeetingTime \u003d lastShownGroupList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":456,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cLocalDateTime\u003e meetingTimes \u003d groupToDeleteMeetingTime.getMeetingTimes();","lastModifiedDate":"2022-03-29"},{"lineNumber":457,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":458,"author":{"gitId":"ryanwalterlee"},"content":"            if (meetingTimeIndex.getZeroBased() \u003e\u003d meetingTimes.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":459,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":460,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":461,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":462,"author":{"gitId":"ryanwalterlee"},"content":"            LocalDateTime meetingToDelete \u003d meetingTimes.get(meetingTimeIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":463,"author":{"gitId":"ryanwalterlee"},"content":"            groupToDeleteMeetingTime.removeMeetingTime(meetingTimeIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":464,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":465,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_MEETING_FROM_GROUP_SUCCESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":466,"author":{"gitId":"ryanwalterlee"},"content":"                    meetingToDelete,","lastModifiedDate":"2022-03-29"},{"lineNumber":467,"author":{"gitId":"ryanwalterlee"},"content":"                    groupToDeleteMeetingTime.getGroupName()));","lastModifiedDate":"2022-03-29"},{"lineNumber":468,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":469,"author":{"gitId":"ryanwalterlee"},"content":"        } else if (targetIndex !\u003d null \u0026\u0026 keyEventIndex !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":470,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":471,"author":{"gitId":"ryanwalterlee"},"content":"            if (!isModuleListShowing) {","lastModifiedDate":"2022-03-27"},{"lineNumber":472,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_MODULE_PAGE);","lastModifiedDate":"2022-03-27"},{"lineNumber":473,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":474,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":475,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cModule\u003e lastShownModuleList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-03-27"},{"lineNumber":476,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":477,"author":{"gitId":"ryanwalterlee"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownModuleList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":478,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":479,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":480,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":481,"author":{"gitId":"ryanwalterlee"},"content":"            Module moduleToDeleteKeyEvent \u003d lastShownModuleList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":482,"author":{"gitId":"ryanwalterlee"},"content":"            List\u003cModuleKeyEvent\u003e lastShownKeyEventList \u003d moduleToDeleteKeyEvent.getKeyEvents();","lastModifiedDate":"2022-03-27"},{"lineNumber":483,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":484,"author":{"gitId":"ryanwalterlee"},"content":"            if (keyEventIndex.getZeroBased() \u003e\u003d lastShownKeyEventList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":485,"author":{"gitId":"ryanwalterlee"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_KEY_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":486,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":487,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":488,"author":{"gitId":"ryanwalterlee"},"content":"            ModuleKeyEvent keyToBeDeleted \u003d lastShownKeyEventList.get(keyEventIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":489,"author":{"gitId":"ryanwalterlee"},"content":"            lastShownKeyEventList.remove(keyEventIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":490,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":491,"author":{"gitId":"ryanwalterlee"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_KEY_EVENT_FROM_MODULE_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":492,"author":{"gitId":"ryanwalterlee"},"content":"                    keyToBeDeleted,","lastModifiedDate":"2022-03-28"},{"lineNumber":493,"author":{"gitId":"ryanwalterlee"},"content":"                    moduleToDeleteKeyEvent.getModuleCode()));","lastModifiedDate":"2022-03-27"},{"lineNumber":494,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":495,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":496,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":497,"author":{"gitId":"ryanwalterlee"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_UNSUCCESSFUL, moduleCode));","lastModifiedDate":"2022-03-12"},{"lineNumber":498,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":499,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":506,"author":{"gitId":"-"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":508,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":8,"ryanwalterlee":462,"yokester98":5,"-":32,"geraldneo567":1}},{"path":"src/main/java/unibook/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_KEYEVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_MEETINGTIME;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_NEWMOD;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"import static unibook.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"sophiien"},"content":"import static unibook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sophiien"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"sophiien"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":" * Edits the details of an existing person in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the UniBook.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the module.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON_IN_GROUP \u003d \"This person already exists in the group.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_EDIT_MODULE_SUCCESS \u003d \"Edited Module: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_EDIT_GROUP_SUCCESS \u003d \"Edit Group success!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_OPTION_NOT_FOUND \u003d \"O/OPTION must either be person, module, group or keyevent. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"sophiien"},"content":"            + \"\\n\";","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_PERSON_NO_SUBTYPE \u003d \"Person must be a professor or student\";","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_PERSON_NOT_STUDENT \u003d \"Person added to a group must only be a student\";","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_NOT_PROFESSOR \u003d \"Only can edit office field of professor\";","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_STUDENT_NOT_IN_MOD \u003d \"Student not in module %1$s. Add student to \"","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"sophiien"},"content":"            + \"module first (e.g. edit 1 nm/NEW_MOD_TO_ADD).\";","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_EDIT_PERSON_GROUP_SUCCESS \u003d \"Student %1$s added to group %2$s.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_EDIT_MISSING \u003d \"Must include m/MODULECODE when editing a group\";","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_GROUP_NOT_EXIST \u003d \"Group name %1$s does not exist!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_WRONG_DATE_FORMAT \u003d \"Date time must be in YYYY-MM-DD HH:mm format\";","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_ADDTOGROUP_WRONG_FORMAT \u003d \"To add a person to a group, \"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"sophiien"},"content":"            + \"must state m/MODULECODE and g/GROUPNAME \"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"sophiien"},"content":"            + \"E.g. edit 1 o/person m/cs2103 g/T2 adds the first person on the index list to group T2 of module CS2103\";","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_KEYEVENT_INDEX_MISSING \u003d \"Index of key event to be changed must be included. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"sophiien"},"content":"            + \"E.g. ke/1 edits the fields of 1st key event\";","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"sophiien"},"content":"    public static final String PERSON_MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"sophiien"},"content":"            + \": Edits the details of the person identified \"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"OPTION (person or module) \"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"sophiien"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":93,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"person \"","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"sophiien"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"sophiien"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"sophiien"},"content":"    public static final String MODULE_MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the module identified \"","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"sophiien"},"content":"            + \"by the index number used in the displayed module list. \"","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"sophiien"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"sophiien"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"OPTION \"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"sophiien"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULECODE] \"","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_NEWMOD + \"NEWMODULECODE] \\n \"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"sophiien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"module \"","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"sophiien"},"content":"            + PREFIX_NAME + \"Software Engineering \"","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"sophiien"},"content":"            + PREFIX_MODULE + \"CS2103T\";","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"sophiien"},"content":"    public static final String GROUP_MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the group identified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"sophiien"},"content":"            + \"by the index number used in the displayed group list. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"sophiien"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"sophiien"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"OPTION \"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"sophiien"},"content":"            + PREFIX_MODULE + \"MODULECODE \"","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUPNAME] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_MEETINGTIME + \"MEETINGTIME] \\n \"","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"sophiien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"group \"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"sophiien"},"content":"            + PREFIX_NAME + \"CS2103 Team1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"sophiien"},"content":"            + PREFIX_MEETINGTIME + \"12-12-2022 1645\";","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"sophiien"},"content":"    public static final String KEYEVENT_MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the key event identified\"","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"sophiien"},"content":"            + \" by the index number used in the displayed module list. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"sophiien"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"sophiien"},"content":"            + \"Parameters: INDEX (of the module must be a positive integer) \"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"OPTION \"","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_KEYEVENT + \"KEYEVENT] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"sophiien"},"content":"            + \"[\" + PREFIX_DATETIME + \"DATETIME] \\n \"","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"sophiien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"sophiien"},"content":"            + PREFIX_OPTION + \"keyevent \"","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"sophiien"},"content":"            + PREFIX_KEYEVENT + \"1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"sophiien"},"content":"            + PREFIX_TYPE + \"exam \"","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"sophiien"},"content":"            + PREFIX_MEETINGTIME + \"12-12-2022 1645\";","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"sophiien"},"content":"    private ModuleCode modCode;","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"sophiien"},"content":"    private EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"sophiien"},"content":"    private EditModuleDescriptor editModuleDescriptor;","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"sophiien"},"content":"        this.editModuleDescriptor \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":152,"author":{"gitId":"sophiien"},"content":"        this.modCode \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"sophiien"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"sophiien"},"content":"     * @param editModuleDescriptor details to edit the person with","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"sophiien"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"sophiien"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"sophiien"},"content":"                       EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"sophiien"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"sophiien"},"content":"        requireNonNull(editModuleDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"sophiien"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"sophiien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"sophiien"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"sophiien"},"content":"        this.editModuleDescriptor \u003d editModuleDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"sophiien"},"content":"        this.modCode \u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"sophiien"},"content":"     * @param index                of the module in the filtered module list to edit","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"sophiien"},"content":"     * @param editModuleDescriptor details to edit the module with","lastModifiedDate":"2022-03-07"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"sophiien"},"content":"    public EditCommand(Index index, EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2022-03-07"},{"lineNumber":177,"author":{"gitId":"sophiien"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-07"},{"lineNumber":178,"author":{"gitId":"sophiien"},"content":"        requireNonNull(editModuleDescriptor);","lastModifiedDate":"2022-03-07"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"sophiien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-07"},{"lineNumber":181,"author":{"gitId":"sophiien"},"content":"        this.editModuleDescriptor \u003d new EditModuleDescriptor(editModuleDescriptor);","lastModifiedDate":"2022-03-07"},{"lineNumber":182,"author":{"gitId":"sophiien"},"content":"        this.editPersonDescriptor \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":183,"author":{"gitId":"sophiien"},"content":"        this.modCode \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"sophiien"},"content":"     * @param index                of the module in the filtered module list to edit","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"sophiien"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"sophiien"},"content":"     * @param modCode              module code to be edited","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"sophiien"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor, ModuleCode modCode) {","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"sophiien"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"sophiien"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"sophiien"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"sophiien"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"sophiien"},"content":"        this.editModuleDescriptor \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"sophiien"},"content":"        this.modCode \u003d modCode;","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"benmurphyy"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"benmurphyy"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"benmurphyy"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"benmurphyy"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"benmurphyy"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"benmurphyy"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e updatedModules \u003d editPersonDescriptor.getModulesModifiable().orElse(personToEdit.getModules());","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"benmurphyy"},"content":"        if (!updatedModules.equals(personToEdit.getModulesModifiable())) {","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"benmurphyy"},"content":"            updatedModules.addAll(personToEdit.getModulesModifiable());","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"benmurphyy"},"content":"        if (personToEdit instanceof Professor) {","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"sophiien"},"content":"            Office updatedOffice \u003d editPersonDescriptor.getOffice().orElse(((Professor) personToEdit).getOffice());","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"benmurphyy"},"content":"            return new Professor(updatedName, updatedPhone, updatedEmail, updatedTags, updatedOffice, updatedModules);","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"sophiien"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"sophiien"},"content":"            Set\u003cGroup\u003e groups \u003d ((Student) personToEdit).getGroups();","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"sophiien"},"content":"            return new Student(updatedName, updatedPhone, updatedEmail, updatedTags, updatedModules, groups);","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"benmurphyy"},"content":"     * Creates and returns a {@code Module} with the details of {@code moduleToEdit}","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"benmurphyy"},"content":"     * edited with {@code editModuleDescriptor}.","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"sophiien"},"content":"    private static Module createEditedModule(int idx, Module moduleToEdit, EditModuleDescriptor editModuleDescriptor)","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"sophiien"},"content":"            throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"benmurphyy"},"content":"        assert moduleToEdit !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"benmurphyy"},"content":"        ModuleName updatedModuleName \u003d editModuleDescriptor.getModuleName().orElse(moduleToEdit.getModuleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"benmurphyy"},"content":"        ModuleCode updatedModuleCode \u003d editModuleDescriptor.getModuleCode().orElse(moduleToEdit.getModuleCode());","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"benmurphyy"},"content":"        ObservableList\u003cProfessor\u003e profs \u003d moduleToEdit.getProfessors();","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"benmurphyy"},"content":"        ObservableList\u003cStudent\u003e students \u003d moduleToEdit.getStudents();","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"sophiien"},"content":"        // TODO ASSUME THAT UPDATEFILTEREDMODULELIST WORKS","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"benmurphyy"},"content":"        ObservableList\u003cGroup\u003e groups \u003d moduleToEdit.getGroups();","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"sophiien"},"content":"        // TODO changed for editing of key events","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"sophiien"},"content":"        ObservableList\u003cModuleKeyEvent\u003e keyEvents;","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"sophiien"},"content":"        if (editModuleDescriptor.getKeyEvents().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"sophiien"},"content":"            int i \u003d editModuleDescriptor.getIdx();","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"sophiien"},"content":"            if (i \u003e\u003d moduleToEdit.getKeyEvents().size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_KEYEVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"sophiien"},"content":"            ModuleKeyEvent ke \u003d moduleToEdit.getKeyEvents().get(i);","lastModifiedDate":"2022-03-28"},{"lineNumber":253,"author":{"gitId":"sophiien"},"content":"            if (editModuleDescriptor.getKeyEvents().get().getKeyEventTiming() \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.getKeyEvents().get().setDateTime(ke.getKeyEventTiming());","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"sophiien"},"content":"            } else if (editModuleDescriptor.getKeyEvents().get().getKeyEventType() \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.getKeyEvents().get().setKeyDateType(ke.getKeyEventType());","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"sophiien"},"content":"            } else { }","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"sophiien"},"content":"            moduleToEdit.getKeyEvents().set(i, editModuleDescriptor.getKeyEvents().get());","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"sophiien"},"content":"            keyEvents \u003d moduleToEdit.getKeyEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"sophiien"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"sophiien"},"content":"            keyEvents \u003d moduleToEdit.getKeyEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"sophiien"},"content":"        return new Module(updatedModuleName, updatedModuleCode, profs, students, groups, keyEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"sophiien"},"content":"     * Creates and returns a {@code Group} with the details of {@code groupToEdit}","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"sophiien"},"content":"     * edited with {@code editGroupDescriptor}.","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"sophiien"},"content":"    public static Group createEditedGroup(Group groupToEdit, EditGroupDescriptor editGroupDescriptor)","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"sophiien"},"content":"            throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"sophiien"},"content":"        assert groupToEdit !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"sophiien"},"content":"        // should only be able to edit group name and meeting times","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"sophiien"},"content":"        String updatedGroupName \u003d editGroupDescriptor.getGroupName().orElse(groupToEdit.getGroupName());","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"sophiien"},"content":"        // Edits it at the respective index, only 1 meeting time can be edited at a time","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"sophiien"},"content":"        ObservableList\u003cLocalDateTime\u003e updatedMeetingTimes;","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"sophiien"},"content":"        if (editGroupDescriptor.getMeetingTimes().isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"sophiien"},"content":"            int idxOfMeetingTime \u003d editGroupDescriptor.getIdxOfMeetingTimes().get();","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"sophiien"},"content":"            if (idxOfMeetingTime - 1 \u003e\u003d groupToEdit.getMeetingTimes().size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEETINGTIME_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"sophiien"},"content":"            groupToEdit.getMeetingTimes().set(idxOfMeetingTime - 1, editGroupDescriptor.getMeetingTimes().get());","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"sophiien"},"content":"            updatedMeetingTimes \u003d groupToEdit.getMeetingTimes();","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"sophiien"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"sophiien"},"content":"            updatedMeetingTimes \u003d groupToEdit.getMeetingTimes();","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"sophiien"},"content":"        ObservableList\u003cStudent\u003e students \u003d groupToEdit.getMembers();","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"sophiien"},"content":"        Module module \u003d groupToEdit.getModule();","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"sophiien"},"content":"        return new Group(updatedGroupName, module, students, updatedMeetingTimes);","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":297,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing)","lastModifiedDate":"2022-03-26"},{"lineNumber":298,"author":{"gitId":"geraldneo567"},"content":"        throws CommandException, ModuleNotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":300,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":301,"author":{"gitId":"sophiien"},"content":"        if (this.modCode !\u003d null \u0026\u0026 !model.hasModule(this.modCode)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"sophiien"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, modCode.toString()));","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"sophiien"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":306,"author":{"gitId":"sophiien"},"content":"        List\u003cModule\u003e latestModList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-03-27"},{"lineNumber":307,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":308,"author":{"gitId":"sophiien"},"content":"        // TODO MAIN LOGIC FOR EDIT GROUP CROSS FINGER UPDATE...LIST WORKS","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"sophiien"},"content":"        if (this.editModuleDescriptor !\u003d null \u0026\u0026 this.editPersonDescriptor !\u003d null) {","lastModifiedDate":"2022-03-27"},{"lineNumber":310,"author":{"gitId":"sophiien"},"content":"            System.out.println(\"entered correct logic\");","lastModifiedDate":"2022-03-27"},{"lineNumber":311,"author":{"gitId":"sophiien"},"content":"            if (!isGroupListShowing \u0026\u0026 !isModuleListShowing) {","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_MODULE_OR_GROUP_PAGE);","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"sophiien"},"content":"            EditGroupDescriptor editGroupDescriptor \u003d this.editModuleDescriptor.getGroups().get();","lastModifiedDate":"2022-03-27"},{"lineNumber":315,"author":{"gitId":"sophiien"},"content":"            editGroupDescriptor.setModel(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":316,"author":{"gitId":"sophiien"},"content":"            ModuleCode modcode \u003d editGroupDescriptor.getModuleCode();","lastModifiedDate":"2022-03-27"},{"lineNumber":317,"author":{"gitId":"sophiien"},"content":"            Module mod;","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"sophiien"},"content":"            try {","lastModifiedDate":"2022-03-30"},{"lineNumber":319,"author":{"gitId":"sophiien"},"content":"                mod \u003d model.getModuleByCode(modcode);","lastModifiedDate":"2022-03-30"},{"lineNumber":320,"author":{"gitId":"sophiien"},"content":"            } catch (ModuleNotFoundException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":321,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(\"Module: \" + modcode.toString() + \" not found!\");","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":324,"author":{"gitId":"sophiien"},"content":"            ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();;","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"sophiien"},"content":"            // Update groups in person and modules","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"sophiien"},"content":"            for (Person p : lastShownList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":327,"author":{"gitId":"sophiien"},"content":"                if (p instanceof Student) {","lastModifiedDate":"2022-03-27"},{"lineNumber":328,"author":{"gitId":"geraldneo567"},"content":"                    if (p.getModules().contains(mod)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":329,"author":{"gitId":"geraldneo567"},"content":"                        Student ps \u003d (Student) p;","lastModifiedDate":"2022-04-03"},{"lineNumber":330,"author":{"gitId":"geraldneo567"},"content":"                        ps.editGroupByMod(mod, editGroupDescriptor);","lastModifiedDate":"2022-04-03"},{"lineNumber":331,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-04-03"},{"lineNumber":332,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":334,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":335,"author":{"gitId":"sophiien"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"sophiien"},"content":"            System.out.println(\"updated person list\");","lastModifiedDate":"2022-03-27"},{"lineNumber":337,"author":{"gitId":"sophiien"},"content":"            for (Module m : latestModList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":338,"author":{"gitId":"sophiien"},"content":"                if (m.equals(mod)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"sophiien"},"content":"                    System.out.println(\"true\");","lastModifiedDate":"2022-03-30"},{"lineNumber":340,"author":{"gitId":"sophiien"},"content":"                    if (this.index.getZeroBased() \u003e\u003d m.getGroups().size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"sophiien"},"content":"                        throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"sophiien"},"content":"                    m.editGroupByIndex(this.index.getZeroBased(), editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"sophiien"},"content":"                    System.out.println(m.getModuleName().toString());","lastModifiedDate":"2022-03-30"},{"lineNumber":345,"author":{"gitId":"sophiien"},"content":"                    groups \u003d m.getGroups();","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"sophiien"},"content":"            ModelManager mm \u003d (ModelManager) model;","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"sophiien"},"content":"            mm.getUi().setGroupListPanel(groups);","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"sophiien"},"content":"            model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"sophiien"},"content":"            System.out.println(\"updated module list\");","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"sophiien"},"content":"            // TODO make the command result for editing success more elaborate","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"sophiien"},"content":"            return new CommandResult(MESSAGE_EDIT_GROUP_SUCCESS);","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":355,"author":{"gitId":"sophiien"},"content":"        // Edit person","lastModifiedDate":"2022-03-15"},{"lineNumber":356,"author":{"gitId":"sophiien"},"content":"        if (this.editModuleDescriptor \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":357,"author":{"gitId":"sophiien"},"content":"            if (!isPersonListShowing) {","lastModifiedDate":"2022-03-15"},{"lineNumber":358,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_PERSON_PAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":359,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":366,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"sophiien"},"content":"            if (this.modCode !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":368,"author":{"gitId":"sophiien"},"content":"                Module mod \u003d model.getModuleByCode(modCode);","lastModifiedDate":"2022-03-15"},{"lineNumber":369,"author":{"gitId":"sophiien"},"content":"                Set\u003cModule\u003e modSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":370,"author":{"gitId":"sophiien"},"content":"                modSet.add(mod);","lastModifiedDate":"2022-03-15"},{"lineNumber":371,"author":{"gitId":"sophiien"},"content":"                this.editPersonDescriptor.setModules(modSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":372,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":373,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":375,"author":{"gitId":"sophiien"},"content":"            Module checkMod \u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":376,"author":{"gitId":"sophiien"},"content":"            if (this.editPersonDescriptor.getOffice().isPresent() \u0026\u0026 personToEdit instanceof Student) {","lastModifiedDate":"2022-03-29"},{"lineNumber":377,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(MESSAGE_NOT_PROFESSOR);","lastModifiedDate":"2022-03-29"},{"lineNumber":378,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":379,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":380,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":381,"author":{"gitId":"sophiien"},"content":"            // Checks if module that want to add to person is valid","lastModifiedDate":"2022-03-15"},{"lineNumber":382,"author":{"gitId":"sophiien"},"content":"            if (!editPersonDescriptor.getModules().equals(Optional.empty()) \u0026\u0026 latestModList.size() !\u003d 0) {","lastModifiedDate":"2022-03-08"},{"lineNumber":383,"author":{"gitId":"sophiien"},"content":"                checkMod \u003d editPersonDescriptor.getModules().get().iterator().next();","lastModifiedDate":"2022-03-10"},{"lineNumber":384,"author":{"gitId":"sophiien"},"content":"                if (!latestModList.contains(checkMod)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":385,"author":{"gitId":"sophiien"},"content":"                    throw new ModuleNotFoundException(checkMod.toString());","lastModifiedDate":"2022-03-11"},{"lineNumber":386,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-08"},{"lineNumber":387,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":388,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":389,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":391,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":392,"author":{"gitId":"sophiien"},"content":"            // TODO checks if person alr in module","lastModifiedDate":"2022-03-28"},{"lineNumber":393,"author":{"gitId":"sophiien"},"content":"            if (!personToEdit.equals(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":394,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":395,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":397,"author":{"gitId":"sophiien"},"content":"            // When adding new module with nm/, adds prof/student to person list in each mod","lastModifiedDate":"2022-03-10"},{"lineNumber":398,"author":{"gitId":"sophiien"},"content":"            if (checkMod !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":399,"author":{"gitId":"sophiien"},"content":"                int modIdx \u003d latestModList.indexOf(checkMod);","lastModifiedDate":"2022-03-10"},{"lineNumber":400,"author":{"gitId":"sophiien"},"content":"                if (editedPerson instanceof Professor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":401,"author":{"gitId":"sophiien"},"content":"                    try {","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"sophiien"},"content":"                        latestModList.get(modIdx).addProfessor((Professor) editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":403,"author":{"gitId":"sophiien"},"content":"                    } catch (DuplicatePersonException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"sophiien"},"content":"                        throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":406,"author":{"gitId":"sophiien"},"content":"                } else if (editedPerson instanceof Student) {","lastModifiedDate":"2022-03-15"},{"lineNumber":407,"author":{"gitId":"sophiien"},"content":"                    try {","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"sophiien"},"content":"                        latestModList.get(modIdx).addStudent((Student) editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":409,"author":{"gitId":"sophiien"},"content":"                    } catch (DuplicatePersonException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":410,"author":{"gitId":"sophiien"},"content":"                        throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":411,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":412,"author":{"gitId":"sophiien"},"content":"                } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":413,"author":{"gitId":"sophiien"},"content":"                    throw new CommandException(MESSAGE_PERSON_NO_SUBTYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":414,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":415,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":416,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":417,"author":{"gitId":"sophiien"},"content":"            // Change person in every module that has this person","lastModifiedDate":"2022-03-10"},{"lineNumber":418,"author":{"gitId":"sophiien"},"content":"            for (Module mod : latestModList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":419,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":420,"author":{"gitId":"sophiien"},"content":"                if (editedPerson instanceof Professor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":421,"author":{"gitId":"sophiien"},"content":"                    ObservableList\u003cProfessor\u003e profList \u003d mod.getProfessors();","lastModifiedDate":"2022-03-10"},{"lineNumber":422,"author":{"gitId":"sophiien"},"content":"                    if (profList.contains(personToEdit)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":423,"author":{"gitId":"sophiien"},"content":"                        int profIdx \u003d profList.indexOf(personToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":424,"author":{"gitId":"sophiien"},"content":"                        profList.set(profIdx, (Professor) editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":425,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-10"},{"lineNumber":426,"author":{"gitId":"sophiien"},"content":"                } else if (editedPerson instanceof Student) {","lastModifiedDate":"2022-03-15"},{"lineNumber":427,"author":{"gitId":"sophiien"},"content":"                    ObservableList\u003cStudent\u003e studentList \u003d mod.getStudents();","lastModifiedDate":"2022-03-10"},{"lineNumber":428,"author":{"gitId":"sophiien"},"content":"                    if (studentList.contains(personToEdit)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":429,"author":{"gitId":"sophiien"},"content":"                        int studentIdx \u003d studentList.indexOf(personToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":430,"author":{"gitId":"sophiien"},"content":"                        studentList.set(studentIdx, (Student) editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":431,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-10"},{"lineNumber":432,"author":{"gitId":"sophiien"},"content":"                } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":433,"author":{"gitId":"sophiien"},"content":"                    throw new CommandException(MESSAGE_PERSON_NO_SUBTYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":434,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":435,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":436,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":437,"author":{"gitId":"sophiien"},"content":"            System.out.println(editPersonDescriptor.getModCode().isPresent() + \"there\");","lastModifiedDate":"2022-03-28"},{"lineNumber":438,"author":{"gitId":"sophiien"},"content":"            System.out.println(editPersonDescriptor.getGroupName().isPresent() + \"there\");","lastModifiedDate":"2022-03-28"},{"lineNumber":439,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":440,"author":{"gitId":"sophiien"},"content":"            // If adding existing person to an existing group","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"sophiien"},"content":"            if (editPersonDescriptor.getModCode().isPresent() \u0026\u0026 editPersonDescriptor.getGroupName().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":442,"author":{"gitId":"sophiien"},"content":"                ModuleCode moduleCode \u003d editPersonDescriptor.getModCode().get();","lastModifiedDate":"2022-03-28"},{"lineNumber":443,"author":{"gitId":"sophiien"},"content":"                String groupName \u003d editPersonDescriptor.getGroupName().get();","lastModifiedDate":"2022-03-28"},{"lineNumber":444,"author":{"gitId":"sophiien"},"content":"                System.out.println(\"entered\");","lastModifiedDate":"2022-03-28"},{"lineNumber":445,"author":{"gitId":"sophiien"},"content":"                Module modToEdit;","lastModifiedDate":"2022-03-28"},{"lineNumber":446,"author":{"gitId":"sophiien"},"content":"                try {","lastModifiedDate":"2022-03-28"},{"lineNumber":447,"author":{"gitId":"sophiien"},"content":"                    modToEdit \u003d model.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-28"},{"lineNumber":448,"author":{"gitId":"sophiien"},"content":"                } catch (ModuleNotFoundException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":449,"author":{"gitId":"sophiien"},"content":"                    throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST,","lastModifiedDate":"2022-03-29"},{"lineNumber":450,"author":{"gitId":"sophiien"},"content":"                            moduleCode.toString()));","lastModifiedDate":"2022-03-29"},{"lineNumber":451,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":452,"author":{"gitId":"sophiien"},"content":"                if (!modToEdit.hasGroupName(groupName)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":453,"author":{"gitId":"sophiien"},"content":"                    throw new CommandException(String.format(MESSAGE_GROUP_NOT_EXIST, groupName));","lastModifiedDate":"2022-03-28"},{"lineNumber":454,"author":{"gitId":"sophiien"},"content":"                } else if (editedPerson instanceof Professor) {","lastModifiedDate":"2022-03-29"},{"lineNumber":455,"author":{"gitId":"sophiien"},"content":"                    throw new CommandException(MESSAGE_PERSON_NOT_STUDENT);","lastModifiedDate":"2022-03-29"},{"lineNumber":456,"author":{"gitId":"sophiien"},"content":"                } else if (!modToEdit.hasStudent((Student) editedPerson)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":457,"author":{"gitId":"sophiien"},"content":"                    throw new CommandException(String.format(MESSAGE_STUDENT_NOT_IN_MOD, moduleCode));","lastModifiedDate":"2022-03-29"},{"lineNumber":458,"author":{"gitId":"sophiien"},"content":"                } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":459,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":460,"author":{"gitId":"sophiien"},"content":"                    Group group \u003d modToEdit.getGroupByName(groupName);","lastModifiedDate":"2022-03-28"},{"lineNumber":461,"author":{"gitId":"sophiien"},"content":"                    if (group.hasMember((Student) editedPerson)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":462,"author":{"gitId":"sophiien"},"content":"                        throw new CommandException(MESSAGE_DUPLICATE_PERSON_IN_GROUP);","lastModifiedDate":"2022-03-28"},{"lineNumber":463,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":464,"author":{"gitId":"sophiien"},"content":"                    modToEdit.addToGroupByName(groupName, (Student) editedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":465,"author":{"gitId":"sophiien"},"content":"                    for (Person p : lastShownList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":466,"author":{"gitId":"sophiien"},"content":"                        if (p instanceof Student) {","lastModifiedDate":"2022-03-28"},{"lineNumber":467,"author":{"gitId":"sophiien"},"content":"                            if (((Student) p).getGroups().contains(group)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":468,"author":{"gitId":"sophiien"},"content":"                                Group group1 \u003d ((Student) p).getGroupByName(group);","lastModifiedDate":"2022-03-28"},{"lineNumber":469,"author":{"gitId":"sophiien"},"content":"                                group1.addMember((Student) editedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":470,"author":{"gitId":"sophiien"},"content":"                            }","lastModifiedDate":"2022-03-28"},{"lineNumber":471,"author":{"gitId":"sophiien"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":472,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":473,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":474,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":475,"author":{"gitId":"sophiien"},"content":"                // Updates all the groups is in","lastModifiedDate":"2022-03-29"},{"lineNumber":476,"author":{"gitId":"sophiien"},"content":"                if (personToEdit instanceof Student \u0026\u0026 editedPerson instanceof Student) {","lastModifiedDate":"2022-03-29"},{"lineNumber":477,"author":{"gitId":"sophiien"},"content":"                    for (Group g : ((Student) personToEdit).getGroups()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":478,"author":{"gitId":"sophiien"},"content":"                        Student s \u003d (Student) personToEdit;","lastModifiedDate":"2022-03-29"},{"lineNumber":479,"author":{"gitId":"sophiien"},"content":"                        int i \u003d g.getMembers().indexOf(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":480,"author":{"gitId":"sophiien"},"content":"                        g.getMembers().set(i, (Student) editedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":481,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-29"},{"lineNumber":482,"author":{"gitId":"sophiien"},"content":"                } else { }","lastModifiedDate":"2022-03-29"},{"lineNumber":483,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":484,"author":{"gitId":"sophiien"},"content":"                model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":485,"author":{"gitId":"sophiien"},"content":"                model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":486,"author":{"gitId":"sophiien"},"content":"                return new CommandResult(String.format(MESSAGE_EDIT_PERSON_GROUP_SUCCESS, editedPerson, groupName));","lastModifiedDate":"2022-03-29"},{"lineNumber":487,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":488,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":489,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":490,"author":{"gitId":"sophiien"},"content":"            // Updates all the groups is in","lastModifiedDate":"2022-03-29"},{"lineNumber":491,"author":{"gitId":"sophiien"},"content":"            if (personToEdit instanceof Student \u0026\u0026 editedPerson instanceof Student) {","lastModifiedDate":"2022-03-29"},{"lineNumber":492,"author":{"gitId":"sophiien"},"content":"                for (Group g : ((Student) personToEdit).getGroups()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":493,"author":{"gitId":"sophiien"},"content":"                    Student s \u003d (Student) personToEdit;","lastModifiedDate":"2022-03-29"},{"lineNumber":494,"author":{"gitId":"sophiien"},"content":"                    int i \u003d g.getMembers().indexOf(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":495,"author":{"gitId":"sophiien"},"content":"                    g.getMembers().set(i, (Student) editedPerson);","lastModifiedDate":"2022-03-29"},{"lineNumber":496,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":497,"author":{"gitId":"sophiien"},"content":"            } else { }","lastModifiedDate":"2022-03-29"},{"lineNumber":498,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":499,"author":{"gitId":"-"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":500,"author":{"gitId":"sophiien"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":502,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":503,"author":{"gitId":"sophiien"},"content":"        } else {","lastModifiedDate":"2022-03-07"},{"lineNumber":504,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":505,"author":{"gitId":"sophiien"},"content":"            // Edit module","lastModifiedDate":"2022-03-15"},{"lineNumber":506,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":507,"author":{"gitId":"sophiien"},"content":"            if (!isModuleListShowing) {","lastModifiedDate":"2022-03-15"},{"lineNumber":508,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(Messages.MESSAGE_CHANGE_TO_MODULE_PAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":509,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":510,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":511,"author":{"gitId":"sophiien"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":512,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-07"},{"lineNumber":513,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":514,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":515,"author":{"gitId":"sophiien"},"content":"            Module moduleToEdit \u003d latestModList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":516,"author":{"gitId":"sophiien"},"content":"            Module editedModule \u003d createEditedModule(index.getZeroBased(), moduleToEdit, editModuleDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":517,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":518,"author":{"gitId":"sophiien"},"content":"            if (!moduleToEdit.isSameModule(editedModule) \u0026\u0026 model.hasModule(editedModule)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":519,"author":{"gitId":"sophiien"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-03-07"},{"lineNumber":520,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":521,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":522,"author":{"gitId":"sophiien"},"content":"            // Find all profs and students with this module and will be edited","lastModifiedDate":"2022-03-10"},{"lineNumber":523,"author":{"gitId":"sophiien"},"content":"            for (Person person : lastShownList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":524,"author":{"gitId":"sophiien"},"content":"                Set\u003cModule\u003e moduleSet \u003d person.getModulesModifiable();","lastModifiedDate":"2022-03-15"},{"lineNumber":525,"author":{"gitId":"sophiien"},"content":"                if (moduleSet.contains(moduleToEdit)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":526,"author":{"gitId":"sophiien"},"content":"                    moduleSet.remove(moduleToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":527,"author":{"gitId":"sophiien"},"content":"                    moduleSet.add(editedModule);","lastModifiedDate":"2022-03-10"},{"lineNumber":528,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":529,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":530,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":531,"author":{"gitId":"sophiien"},"content":"            for (Group g : editedModule.getGroups()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":532,"author":{"gitId":"sophiien"},"content":"                g.editModule(editedModule);","lastModifiedDate":"2022-03-30"},{"lineNumber":533,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":534,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":535,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":536,"author":{"gitId":"sophiien"},"content":"            model.setModule(moduleToEdit, editedModule);","lastModifiedDate":"2022-03-07"},{"lineNumber":537,"author":{"gitId":"sophiien"},"content":"            model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-07"},{"lineNumber":538,"author":{"gitId":"sophiien"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_MODULE_SUCCESS, editedModule));","lastModifiedDate":"2022-03-07"},{"lineNumber":539,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":540,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":541,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":542,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":562,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":563,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":564,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":569,"author":{"gitId":"sophiien"},"content":"        private Office office;","lastModifiedDate":"2022-03-29"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":571,"author":{"gitId":"sophiien"},"content":"        private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-03-08"},{"lineNumber":572,"author":{"gitId":"sophiien"},"content":"        private EditGroupDescriptor editGroupDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":573,"author":{"gitId":"sophiien"},"content":"        private Optional\u003cString\u003e groupName \u003d Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":574,"author":{"gitId":"sophiien"},"content":"        private Optional\u003cModuleCode\u003e modCode \u003d Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":576,"author":{"gitId":"benmurphyy"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-03-24"},{"lineNumber":577,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":580,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":581,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":582,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":584,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":586,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":587,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":588,"author":{"gitId":"sophiien"},"content":"            setModules(toCopy.modules);","lastModifiedDate":"2022-03-08"},{"lineNumber":589,"author":{"gitId":"sophiien"},"content":"            setOffice(toCopy.office);","lastModifiedDate":"2022-03-29"},{"lineNumber":590,"author":{"gitId":"sophiien"},"content":"            setGroups(toCopy.editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":591,"author":{"gitId":"sophiien"},"content":"            setModCode(toCopy.getModCode());","lastModifiedDate":"2022-03-28"},{"lineNumber":592,"author":{"gitId":"sophiien"},"content":"            setGroupName(toCopy.getGroupName());","lastModifiedDate":"2022-03-28"},{"lineNumber":593,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":597,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":598,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":600,"author":{"gitId":"sophiien"},"content":"            System.out.println(groupName.isPresent());","lastModifiedDate":"2022-03-28"},{"lineNumber":601,"author":{"gitId":"sophiien"},"content":"            System.out.println(modCode.isPresent());","lastModifiedDate":"2022-03-28"},{"lineNumber":602,"author":{"gitId":"sophiien"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags, modules, office)","lastModifiedDate":"2022-03-29"},{"lineNumber":603,"author":{"gitId":"sophiien"},"content":"                    || (groupName.isPresent() \u0026\u0026 modCode.isPresent());","lastModifiedDate":"2022-03-28"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":606,"author":{"gitId":"benmurphyy"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-24"},{"lineNumber":607,"author":{"gitId":"benmurphyy"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-24"},{"lineNumber":608,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":609,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":610,"author":{"gitId":"sophiien"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-07"},{"lineNumber":611,"author":{"gitId":"sophiien"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-07"},{"lineNumber":612,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":613,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":614,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cEditGroupDescriptor\u003e getGroups() {","lastModifiedDate":"2022-03-27"},{"lineNumber":615,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":616,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":617,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":618,"author":{"gitId":"sophiien"},"content":"        public void setGroups(EditGroupDescriptor editGroupDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":619,"author":{"gitId":"sophiien"},"content":"            this.editGroupDescriptor \u003d editGroupDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":620,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":621,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":622,"author":{"gitId":"sophiien"},"content":"        public void setGroupName(Optional\u003cString\u003e name) {","lastModifiedDate":"2022-03-28"},{"lineNumber":623,"author":{"gitId":"sophiien"},"content":"            this.groupName \u003d name;","lastModifiedDate":"2022-03-28"},{"lineNumber":624,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":625,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":626,"author":{"gitId":"sophiien"},"content":"        public void setModCode(Optional\u003cModuleCode\u003e name) {","lastModifiedDate":"2022-03-28"},{"lineNumber":627,"author":{"gitId":"sophiien"},"content":"            this.modCode \u003d name;","lastModifiedDate":"2022-03-28"},{"lineNumber":628,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":629,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":630,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cString\u003e getGroupName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":631,"author":{"gitId":"sophiien"},"content":"            return this.groupName;","lastModifiedDate":"2022-03-28"},{"lineNumber":632,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":633,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":634,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cModuleCode\u003e getModCode() {","lastModifiedDate":"2022-03-28"},{"lineNumber":635,"author":{"gitId":"sophiien"},"content":"            return this.modCode;","lastModifiedDate":"2022-03-28"},{"lineNumber":636,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":637,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":638,"author":{"gitId":"benmurphyy"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-24"},{"lineNumber":639,"author":{"gitId":"benmurphyy"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-24"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":642,"author":{"gitId":"sophiien"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-07"},{"lineNumber":643,"author":{"gitId":"sophiien"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-07"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":646,"author":{"gitId":"benmurphyy"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-03-24"},{"lineNumber":647,"author":{"gitId":"benmurphyy"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-03-24"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":650,"author":{"gitId":"sophiien"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-07"},{"lineNumber":651,"author":{"gitId":"sophiien"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-07"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":654,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cOffice\u003e getOffice() {","lastModifiedDate":"2022-03-29"},{"lineNumber":655,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(office);","lastModifiedDate":"2022-03-29"},{"lineNumber":656,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":657,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":658,"author":{"gitId":"sophiien"},"content":"        public void setOffice(Office office) {","lastModifiedDate":"2022-03-29"},{"lineNumber":659,"author":{"gitId":"sophiien"},"content":"            this.office \u003d office;","lastModifiedDate":"2022-03-29"},{"lineNumber":660,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":661,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":662,"author":{"gitId":"benmurphyy"},"content":"        /**","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"benmurphyy"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-24"},{"lineNumber":664,"author":{"gitId":"benmurphyy"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-24"},{"lineNumber":665,"author":{"gitId":"benmurphyy"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-24"},{"lineNumber":666,"author":{"gitId":"benmurphyy"},"content":"         */","lastModifiedDate":"2022-03-24"},{"lineNumber":667,"author":{"gitId":"benmurphyy"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-24"},{"lineNumber":668,"author":{"gitId":"benmurphyy"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-24"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":671,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-07"},{"lineNumber":672,"author":{"gitId":"sophiien"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-07"},{"lineNumber":673,"author":{"gitId":"sophiien"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-07"},{"lineNumber":674,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-07"},{"lineNumber":675,"author":{"gitId":"sophiien"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-07"},{"lineNumber":676,"author":{"gitId":"sophiien"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-07"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":680,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":681,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":682,"author":{"gitId":"benmurphyy"},"content":"         * Returns {@code Optional#empty()} if {@code modules} is null.","lastModifiedDate":"2022-03-24"},{"lineNumber":683,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":684,"author":{"gitId":"benmurphyy"},"content":"        public Optional\u003cSet\u003cModule\u003e\u003e getModules() {","lastModifiedDate":"2022-03-24"},{"lineNumber":685,"author":{"gitId":"benmurphyy"},"content":"            return (modules !\u003d null) ? Optional.of(Collections.unmodifiableSet(modules)) : Optional.empty();","lastModifiedDate":"2022-03-24"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":688,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-08"},{"lineNumber":689,"author":{"gitId":"sophiien"},"content":"         * Sets {@code modules} to this object\u0027s {@code modules}.","lastModifiedDate":"2022-03-08"},{"lineNumber":690,"author":{"gitId":"sophiien"},"content":"         * A defensive copy of {@code modules} is used internally.","lastModifiedDate":"2022-03-08"},{"lineNumber":691,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-08"},{"lineNumber":692,"author":{"gitId":"sophiien"},"content":"        public void setModules(Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-08"},{"lineNumber":693,"author":{"gitId":"sophiien"},"content":"            if (modules \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":694,"author":{"gitId":"sophiien"},"content":"                this.modules \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":695,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":696,"author":{"gitId":"sophiien"},"content":"                Set\u003cModule\u003e modulesCopy \u003d new HashSet\u003c\u003e(modules);","lastModifiedDate":"2022-03-08"},{"lineNumber":697,"author":{"gitId":"sophiien"},"content":"                modulesCopy.addAll(modules);","lastModifiedDate":"2022-03-08"},{"lineNumber":698,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":699,"author":{"gitId":"sophiien"},"content":"                this.modules \u003d modulesCopy;","lastModifiedDate":"2022-03-08"},{"lineNumber":700,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":701,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":702,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":703,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-15"},{"lineNumber":704,"author":{"gitId":"sophiien"},"content":"         * Returns a mutable module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-15"},{"lineNumber":705,"author":{"gitId":"sophiien"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-15"},{"lineNumber":706,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-15"},{"lineNumber":707,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cSet\u003cModule\u003e\u003e getModulesModifiable() {","lastModifiedDate":"2022-03-15"},{"lineNumber":708,"author":{"gitId":"sophiien"},"content":"            return (modules !\u003d null) ? Optional.of(modules) : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":709,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":710,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":711,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":715,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":716,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":717,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":719,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":720,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":724,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":730,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-08"},{"lineNumber":731,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getGroups().equals(e.getGroups())","lastModifiedDate":"2022-03-27"},{"lineNumber":732,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getModules().equals(e.getModules());","lastModifiedDate":"2022-03-08"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":734,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":735,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":736,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":737,"author":{"gitId":"sophiien"},"content":"     * Stores the details to edit the module with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-07"},{"lineNumber":738,"author":{"gitId":"sophiien"},"content":"     * corresponding field value of the module.","lastModifiedDate":"2022-03-07"},{"lineNumber":739,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":740,"author":{"gitId":"sophiien"},"content":"    public static class EditModuleDescriptor {","lastModifiedDate":"2022-03-07"},{"lineNumber":741,"author":{"gitId":"sophiien"},"content":"        private ModuleName moduleName;","lastModifiedDate":"2022-03-07"},{"lineNumber":742,"author":{"gitId":"sophiien"},"content":"        private ModuleCode moduleCode;","lastModifiedDate":"2022-03-07"},{"lineNumber":743,"author":{"gitId":"sophiien"},"content":"        private EditGroupDescriptor editGroupDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":744,"author":{"gitId":"sophiien"},"content":"        private ModuleKeyEvent keyEvents;","lastModifiedDate":"2022-03-28"},{"lineNumber":745,"author":{"gitId":"sophiien"},"content":"        private int idxOfKeyEvent \u003d -2;","lastModifiedDate":"2022-03-28"},{"lineNumber":746,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":747,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":748,"author":{"gitId":"benmurphyy"},"content":"        public EditModuleDescriptor() {","lastModifiedDate":"2022-03-24"},{"lineNumber":749,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":750,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":751,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-07"},{"lineNumber":752,"author":{"gitId":"sophiien"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-07"},{"lineNumber":753,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-07"},{"lineNumber":754,"author":{"gitId":"sophiien"},"content":"        public EditModuleDescriptor(EditModuleDescriptor toCopy) {","lastModifiedDate":"2022-03-07"},{"lineNumber":755,"author":{"gitId":"sophiien"},"content":"            setModuleName(toCopy.moduleName);","lastModifiedDate":"2022-03-07"},{"lineNumber":756,"author":{"gitId":"sophiien"},"content":"            setModuleCode(toCopy.moduleCode);","lastModifiedDate":"2022-03-07"},{"lineNumber":757,"author":{"gitId":"sophiien"},"content":"            setGroups(toCopy.editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":758,"author":{"gitId":"sophiien"},"content":"            this.keyEvents \u003d toCopy.keyEvents;","lastModifiedDate":"2022-03-28"},{"lineNumber":759,"author":{"gitId":"sophiien"},"content":"            this.idxOfKeyEvent \u003d toCopy.idxOfKeyEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":760,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":761,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":762,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-07"},{"lineNumber":763,"author":{"gitId":"sophiien"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-07"},{"lineNumber":764,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-07"},{"lineNumber":765,"author":{"gitId":"sophiien"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-07"},{"lineNumber":766,"author":{"gitId":"sophiien"},"content":"            return CollectionUtil.isAnyNonNull(moduleName, moduleCode);","lastModifiedDate":"2022-03-07"},{"lineNumber":767,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":768,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":769,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cModuleName\u003e getModuleName() {","lastModifiedDate":"2022-03-07"},{"lineNumber":770,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(moduleName);","lastModifiedDate":"2022-03-07"},{"lineNumber":771,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":772,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":773,"author":{"gitId":"benmurphyy"},"content":"        public void setModuleName(ModuleName moduleName) {","lastModifiedDate":"2022-03-24"},{"lineNumber":774,"author":{"gitId":"benmurphyy"},"content":"            this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-24"},{"lineNumber":775,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":776,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":777,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cModuleCode\u003e getModuleCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":778,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(moduleCode);","lastModifiedDate":"2022-03-07"},{"lineNumber":779,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":780,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":781,"author":{"gitId":"benmurphyy"},"content":"        public void setModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-24"},{"lineNumber":782,"author":{"gitId":"benmurphyy"},"content":"            this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":783,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":784,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":785,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cEditGroupDescriptor\u003e getGroups() {","lastModifiedDate":"2022-03-27"},{"lineNumber":786,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":787,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":788,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":789,"author":{"gitId":"sophiien"},"content":"        public void setGroups(EditGroupDescriptor groups) {","lastModifiedDate":"2022-03-27"},{"lineNumber":790,"author":{"gitId":"sophiien"},"content":"            this.editGroupDescriptor \u003d groups;","lastModifiedDate":"2022-03-27"},{"lineNumber":791,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":792,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":793,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cModuleKeyEvent\u003e getKeyEvents() {","lastModifiedDate":"2022-03-28"},{"lineNumber":794,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(keyEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":795,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":796,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":797,"author":{"gitId":"sophiien"},"content":"        public void setKeyEvents(ModuleKeyEvent e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":798,"author":{"gitId":"sophiien"},"content":"            this.keyEvents \u003d e;","lastModifiedDate":"2022-03-28"},{"lineNumber":799,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":800,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":801,"author":{"gitId":"sophiien"},"content":"        public void setIdx(int i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":802,"author":{"gitId":"sophiien"},"content":"            this.idxOfKeyEvent \u003d i;","lastModifiedDate":"2022-03-28"},{"lineNumber":803,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":804,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":805,"author":{"gitId":"sophiien"},"content":"        public int getIdx() {","lastModifiedDate":"2022-03-28"},{"lineNumber":806,"author":{"gitId":"sophiien"},"content":"            return this.idxOfKeyEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":807,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":808,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":809,"author":{"gitId":"sophiien"},"content":"        @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":810,"author":{"gitId":"sophiien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":811,"author":{"gitId":"sophiien"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":812,"author":{"gitId":"sophiien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":813,"author":{"gitId":"sophiien"},"content":"                return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":814,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":815,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":816,"author":{"gitId":"sophiien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":817,"author":{"gitId":"sophiien"},"content":"            if (!(other instanceof EditModuleDescriptor)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":818,"author":{"gitId":"sophiien"},"content":"                return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":819,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":820,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":821,"author":{"gitId":"sophiien"},"content":"            // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":822,"author":{"gitId":"sophiien"},"content":"            EditModuleDescriptor e \u003d (EditModuleDescriptor) other;","lastModifiedDate":"2022-03-07"},{"lineNumber":823,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":824,"author":{"gitId":"sophiien"},"content":"            return getModuleName().equals(e.getModuleName())","lastModifiedDate":"2022-03-07"},{"lineNumber":825,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getModuleCode().equals(e.getModuleCode());","lastModifiedDate":"2022-03-07"},{"lineNumber":826,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":827,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":828,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":829,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":830,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":831,"author":{"gitId":"sophiien"},"content":"     * Stores the details to edit the Group with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-27"},{"lineNumber":832,"author":{"gitId":"sophiien"},"content":"     * corresponding field value of the group.","lastModifiedDate":"2022-03-27"},{"lineNumber":833,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":834,"author":{"gitId":"sophiien"},"content":"    public static class EditGroupDescriptor {","lastModifiedDate":"2022-03-27"},{"lineNumber":835,"author":{"gitId":"sophiien"},"content":"        private String name;","lastModifiedDate":"2022-03-27"},{"lineNumber":836,"author":{"gitId":"sophiien"},"content":"        private Module module;","lastModifiedDate":"2022-03-27"},{"lineNumber":837,"author":{"gitId":"sophiien"},"content":"        private ModuleCode modcode;","lastModifiedDate":"2022-03-27"},{"lineNumber":838,"author":{"gitId":"sophiien"},"content":"        private ObservableList\u003cStudent\u003e members;","lastModifiedDate":"2022-03-27"},{"lineNumber":839,"author":{"gitId":"sophiien"},"content":"        private LocalDateTime meetingTimes;","lastModifiedDate":"2022-03-27"},{"lineNumber":840,"author":{"gitId":"sophiien"},"content":"        private Model model \u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":841,"author":{"gitId":"sophiien"},"content":"        private int idxOfMeetingTime \u003d -1;","lastModifiedDate":"2022-03-27"},{"lineNumber":842,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":843,"author":{"gitId":"sophiien"},"content":"        public EditGroupDescriptor() {","lastModifiedDate":"2022-03-27"},{"lineNumber":844,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":845,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":846,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":847,"author":{"gitId":"sophiien"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":848,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":849,"author":{"gitId":"sophiien"},"content":"        public EditGroupDescriptor(EditGroupDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":850,"author":{"gitId":"sophiien"},"content":"            setGroupName(toCopy.name);","lastModifiedDate":"2022-03-27"},{"lineNumber":851,"author":{"gitId":"sophiien"},"content":"            this.meetingTimes \u003d toCopy.meetingTimes;","lastModifiedDate":"2022-03-27"},{"lineNumber":852,"author":{"gitId":"sophiien"},"content":"            setStudents(toCopy.members);","lastModifiedDate":"2022-03-27"},{"lineNumber":853,"author":{"gitId":"sophiien"},"content":"            this.module \u003d toCopy.module;","lastModifiedDate":"2022-03-27"},{"lineNumber":854,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":855,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":856,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":857,"author":{"gitId":"sophiien"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":858,"author":{"gitId":"sophiien"},"content":"         * Returns true if at least one field is edited. Only name and meeting times can be edited","lastModifiedDate":"2022-03-27"},{"lineNumber":859,"author":{"gitId":"sophiien"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":860,"author":{"gitId":"sophiien"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-27"},{"lineNumber":861,"author":{"gitId":"sophiien"},"content":"            return CollectionUtil.isAnyNonNull(name, meetingTimes);","lastModifiedDate":"2022-03-27"},{"lineNumber":862,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":863,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":864,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":865,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":866,"author":{"gitId":"sophiien"},"content":"        public void setModule(ModuleCode modcode) {","lastModifiedDate":"2022-03-27"},{"lineNumber":867,"author":{"gitId":"sophiien"},"content":"            System.out.println(modcode.toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":868,"author":{"gitId":"sophiien"},"content":"            Module module \u003d model.getModuleByCode(modcode);","lastModifiedDate":"2022-03-27"},{"lineNumber":869,"author":{"gitId":"sophiien"},"content":"            System.out.println(module + \"here\");","lastModifiedDate":"2022-03-27"},{"lineNumber":870,"author":{"gitId":"sophiien"},"content":"            this.module \u003d module;","lastModifiedDate":"2022-03-27"},{"lineNumber":871,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":872,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":873,"author":{"gitId":"sophiien"},"content":"        public void setModel(Model model) {","lastModifiedDate":"2022-03-27"},{"lineNumber":874,"author":{"gitId":"sophiien"},"content":"            this.model \u003d model;","lastModifiedDate":"2022-03-27"},{"lineNumber":875,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":876,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":877,"author":{"gitId":"sophiien"},"content":"        public void setModuleCode(ModuleCode modcod) {","lastModifiedDate":"2022-03-27"},{"lineNumber":878,"author":{"gitId":"sophiien"},"content":"            this.modcode \u003d modcod;","lastModifiedDate":"2022-03-27"},{"lineNumber":879,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":880,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":881,"author":{"gitId":"sophiien"},"content":"        public ModuleCode getModuleCode() {","lastModifiedDate":"2022-03-27"},{"lineNumber":882,"author":{"gitId":"sophiien"},"content":"            return this.modcode;","lastModifiedDate":"2022-03-27"},{"lineNumber":883,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":884,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":885,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cObservableList\u003cStudent\u003e\u003e getMembers() {","lastModifiedDate":"2022-03-27"},{"lineNumber":886,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(members);","lastModifiedDate":"2022-03-27"},{"lineNumber":887,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":888,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":889,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cModule\u003e getModule() {","lastModifiedDate":"2022-03-27"},{"lineNumber":890,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2022-03-27"},{"lineNumber":891,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":892,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":893,"author":{"gitId":"sophiien"},"content":"        public void setStudents(ObservableList\u003cStudent\u003e members) {","lastModifiedDate":"2022-03-27"},{"lineNumber":894,"author":{"gitId":"sophiien"},"content":"            this.members \u003d members;","lastModifiedDate":"2022-03-27"},{"lineNumber":895,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":896,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":897,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cString\u003e getGroupName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":898,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":899,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":900,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":901,"author":{"gitId":"sophiien"},"content":"        public void setGroupName(String name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":902,"author":{"gitId":"sophiien"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":903,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":904,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":905,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cLocalDateTime\u003e getMeetingTimes() {","lastModifiedDate":"2022-03-27"},{"lineNumber":906,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(meetingTimes);","lastModifiedDate":"2022-03-27"},{"lineNumber":907,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":908,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":909,"author":{"gitId":"sophiien"},"content":"        public Optional\u003cInteger\u003e getIdxOfMeetingTimes() {","lastModifiedDate":"2022-03-27"},{"lineNumber":910,"author":{"gitId":"sophiien"},"content":"            return Optional.ofNullable(idxOfMeetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":911,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":912,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":913,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":914,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":915,"author":{"gitId":"sophiien"},"content":"        // TODO CHANGED HERE","lastModifiedDate":"2022-03-27"},{"lineNumber":916,"author":{"gitId":"sophiien"},"content":"        public void setMeetingTimes(List\u003cObject\u003e ls) {","lastModifiedDate":"2022-03-27"},{"lineNumber":917,"author":{"gitId":"sophiien"},"content":"            System.out.println(ls);","lastModifiedDate":"2022-03-27"},{"lineNumber":918,"author":{"gitId":"sophiien"},"content":"            LocalDateTime meetingTime \u003d (LocalDateTime) ls.get(1);","lastModifiedDate":"2022-03-27"},{"lineNumber":919,"author":{"gitId":"sophiien"},"content":"            System.out.println(meetingTime.getClass().getSimpleName());","lastModifiedDate":"2022-03-27"},{"lineNumber":920,"author":{"gitId":"sophiien"},"content":"            int idxOfMeetingTime \u003d (int) ls.get(0);","lastModifiedDate":"2022-03-27"},{"lineNumber":921,"author":{"gitId":"sophiien"},"content":"            this.idxOfMeetingTime \u003d idxOfMeetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":922,"author":{"gitId":"sophiien"},"content":"            this.meetingTimes \u003d meetingTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":923,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":924,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":925,"author":{"gitId":"sophiien"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":926,"author":{"gitId":"sophiien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":927,"author":{"gitId":"sophiien"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":928,"author":{"gitId":"sophiien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":929,"author":{"gitId":"sophiien"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":930,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":931,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":932,"author":{"gitId":"sophiien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":933,"author":{"gitId":"sophiien"},"content":"            if (!(other instanceof EditGroupDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":934,"author":{"gitId":"sophiien"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":935,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":936,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":937,"author":{"gitId":"sophiien"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":938,"author":{"gitId":"sophiien"},"content":"            EditGroupDescriptor e \u003d (EditGroupDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":939,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":940,"author":{"gitId":"sophiien"},"content":"            return getGroupName().equals(e.getGroupName())","lastModifiedDate":"2022-03-27"},{"lineNumber":941,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getMeetingTimes().equals(e.getMeetingTimes())","lastModifiedDate":"2022-03-27"},{"lineNumber":942,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getModule().equals(e.getModule())","lastModifiedDate":"2022-03-27"},{"lineNumber":943,"author":{"gitId":"sophiien"},"content":"                \u0026\u0026 getMembers().equals(e.getMembers());","lastModifiedDate":"2022-03-27"},{"lineNumber":944,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":945,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":946,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"benmurphyy":78,"ryanwalterlee":1,"yokester98":1,"sophiien":730,"-":130,"geraldneo567":6}},{"path":"src/main/java/unibook/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting UniBook as requested ...\";","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"benmurphyy":2,"ryanwalterlee":1,"yokester98":1,"-":15,"geraldneo567":1}},{"path":"src/main/java/unibook/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_CHANGE_TO_PERSON_PAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":" * Finds and lists all persons in UniBook whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        //disallow use of this commmand on any other page other than person page","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        if (!isPersonListShowing) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"            throw new CommandException(MESSAGE_CHANGE_TO_PERSON_PAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"benmurphyy":11,"ryanwalterlee":1,"yokester98":3,"-":34}},{"path":"src/main/java/unibook/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":2,"ryanwalterlee":1,"-":18,"geraldneo567":1}},{"path":"src/main/java/unibook/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.exceptions.GroupNotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":" * Lists all persons in the UniBook according to the user specified criteria.","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"     * Enum type that determines which variant/permutation of a command is executed.","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    public enum ListCommandType {","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        ALL, MODULE, TYPE, MODULEANDTYPE, VIEW, GROUPFROMMODULEVIEW, PEOPLEINGROUP, GROUPFROMGROUPVIEW,","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        GROUPWITHMEETINGDATE, MODULEWITHNAMEMATCH, MODULESWITHKEYEVENT, MODULESWITHEVENTDATE,","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        MODULESWITHDATEANDKEYEVENT, MODULESWITHDATEANDNAME, MODULESWITHNAMEANDKEYEVENT,","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        MODULESWITHDATEANDKEYEVENTANDNAME, SPECIFICGROUPFROMGROUPVIEW","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     * Enum type that determines which view to switch to.","lastModifiedDate":"2022-04-03"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    public enum ListView {","lastModifiedDate":"2022-04-03"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        PEOPLE, MODULES, GROUPS","lastModifiedDate":"2022-04-03"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed everything.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        + \": Lists entries based on specified conditions. \\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        + \"Please refer to user guide in docs folder for command syntax.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    private String type;","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    private ListCommandType commandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"    private ListView viewType;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"    private String group;","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"    private String date;","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    private String moduleNameFragment;","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    private String keyEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a ListCommand to list everything.","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"    public ListCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        this.commandType \u003d ListCommandType.ALL;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a ListCommand to change the view.","lastModifiedDate":"2022-04-03"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"    public ListCommand(ListView viewType, ListCommandType commandType) {","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"        assert commandType \u003d\u003d ListCommandType.VIEW;","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        this.commandType \u003d ListCommandType.VIEW;","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"        this.viewType \u003d viewType;","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a ListCommand with 1 field.","lastModifiedDate":"2022-04-03"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"    public ListCommand(String field, ListCommandType commandType) {","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"        switch (commandType) {","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        case MODULE:","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULE;","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"            this.moduleCode \u003d new ModuleCode(field);","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"        case TYPE:","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.TYPE;","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"            this.type \u003d field;","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"        case GROUPFROMMODULEVIEW:","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.GROUPFROMMODULEVIEW;","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"            this.group \u003d field;","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"        case GROUPFROMGROUPVIEW:","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.GROUPFROMGROUPVIEW;","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"            this.group \u003d field;","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"        case GROUPWITHMEETINGDATE:","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.GROUPWITHMEETINGDATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"            this.date \u003d field;","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"        case MODULEWITHNAMEMATCH:","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULEWITHNAMEMATCH;","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"            this.moduleNameFragment \u003d field;","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHKEYEVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULESWITHKEYEVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"            this.keyEvent \u003d field;","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHEVENTDATE:","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULESWITHEVENTDATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"            this.date \u003d field;","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"        default:","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a ListCommand with 2 fields.","lastModifiedDate":"2022-04-03"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"    public ListCommand(String field1, String field2, ListCommandType commandType) {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"        switch (commandType) {","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"        case MODULEANDTYPE:","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULEANDTYPE;","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"            this.moduleCode \u003d new ModuleCode(field1);","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"geraldneo567"},"content":"            this.type \u003d field2;","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"geraldneo567"},"content":"        case PEOPLEINGROUP:","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.PEOPLEINGROUP;","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"            this.moduleCode \u003d new ModuleCode(field2);","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"            this.group \u003d field1;","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHDATEANDKEYEVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULESWITHDATEANDKEYEVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"geraldneo567"},"content":"            this.date \u003d field1;","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"geraldneo567"},"content":"            this.keyEvent \u003d field2;","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHDATEANDNAME:","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULESWITHDATEANDNAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"geraldneo567"},"content":"            this.date \u003d field1;","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"            this.moduleNameFragment \u003d field2;","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHNAMEANDKEYEVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.MODULESWITHNAMEANDKEYEVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"geraldneo567"},"content":"            this.moduleNameFragment \u003d field1;","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"geraldneo567"},"content":"            this.keyEvent \u003d field2;","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"geraldneo567"},"content":"        case SPECIFICGROUPFROMGROUPVIEW:","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"geraldneo567"},"content":"            this.commandType \u003d ListCommandType.SPECIFICGROUPFROMGROUPVIEW;","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"geraldneo567"},"content":"            this.group \u003d field1;","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"geraldneo567"},"content":"            this.moduleCode \u003d new ModuleCode(field2);","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"geraldneo567"},"content":"        default:","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"geraldneo567"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a ListCommand with 3 fields.","lastModifiedDate":"2022-04-03"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"geraldneo567"},"content":"    public ListCommand(String field1, String field2, String field3, ListCommandType commandType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"geraldneo567"},"content":"        //Currently only 1 possible type that takes in 3 fields. Add switch case upon expansion","lastModifiedDate":"2022-04-03"},{"lineNumber":171,"author":{"gitId":"geraldneo567"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-04-03"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"        this.moduleNameFragment \u003d field1;","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"        this.date \u003d field2;","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvent \u003d field3;","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"geraldneo567"},"content":"     * Utility method used to show every entry in a given page when the relevant command is executed.","lastModifiedDate":"2022-04-03"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"    private void showAll(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"        ModelManager mm \u003d (ModelManager) model;","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"geraldneo567"},"content":"        model.updateFilteredModuleList(Model.PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"geraldneo567"},"content":"        if (!(mm.getUi() \u003d\u003d null) \u0026\u0026 mm.getUi().isGroupListShowing()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":188,"author":{"gitId":"geraldneo567"},"content":"            ObservableList\u003cGroup\u003e allGroups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"geraldneo567"},"content":"            for (Module m : model.getUniBook().getModuleList()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cGroup\u003e moduleGroups \u003d m.getGroups();","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"geraldneo567"},"content":"                allGroups.addAll(moduleGroups);","lastModifiedDate":"2022-04-03"},{"lineNumber":192,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":193,"author":{"gitId":"geraldneo567"},"content":"            mm.getUi().setGroupListPanel(allGroups);","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":198,"author":{"gitId":"geraldneo567"},"content":"     * Utility method to check if the instance module code exists in a given list of modules.","lastModifiedDate":"2022-04-03"},{"lineNumber":199,"author":{"gitId":"geraldneo567"},"content":"     * @return true if module code was found, false otherwise","lastModifiedDate":"2022-04-03"},{"lineNumber":200,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":201,"author":{"gitId":"geraldneo567"},"content":"    private boolean moduleCodeExists(ObservableList\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"geraldneo567"},"content":"        for (Module m : modules) {","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"geraldneo567"},"content":"            if (m.hasModuleCode(this.moduleCode)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"geraldneo567"},"content":"                return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"geraldneo567"},"content":"        return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":211,"author":{"gitId":"geraldneo567"},"content":"     * Utility method to check if the instance key date exists in a given list of modules.","lastModifiedDate":"2022-04-03"},{"lineNumber":212,"author":{"gitId":"geraldneo567"},"content":"     * @return true if key date was found, false otherwise","lastModifiedDate":"2022-04-03"},{"lineNumber":213,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":214,"author":{"gitId":"geraldneo567"},"content":"    private boolean keyDateExists(ObservableList\u003cModule\u003e modules, LocalDate date) {","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"geraldneo567"},"content":"        for (Module m : modules) {","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"geraldneo567"},"content":"            ObservableList\u003cLocalDate\u003e dates \u003d m.getKeyEventDates();","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"geraldneo567"},"content":"            if (dates.contains(date)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"geraldneo567"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"geraldneo567"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-04-03"},{"lineNumber":225,"author":{"gitId":"geraldneo567"},"content":"     * Checks if a module name has the instance keyword contained within it in a given model.","lastModifiedDate":"2022-04-03"},{"lineNumber":226,"author":{"gitId":"geraldneo567"},"content":"     * If it does not exist, a CommandException is thrown.","lastModifiedDate":"2022-04-03"},{"lineNumber":227,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-04-03"},{"lineNumber":228,"author":{"gitId":"geraldneo567"},"content":"    private void checkIfKeywordExists(ModelManager modelManager) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":229,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cModule\u003e allModules \u003d modelManager.getUniBook().getModuleList();","lastModifiedDate":"2022-04-03"},{"lineNumber":230,"author":{"gitId":"geraldneo567"},"content":"        boolean found \u003d false;","lastModifiedDate":"2022-04-03"},{"lineNumber":231,"author":{"gitId":"geraldneo567"},"content":"        for (Module k : allModules) {","lastModifiedDate":"2022-04-03"},{"lineNumber":232,"author":{"gitId":"geraldneo567"},"content":"            if (k.getModuleName().toString().toLowerCase().contains(this.moduleNameFragment.toLowerCase())) {","lastModifiedDate":"2022-04-03"},{"lineNumber":233,"author":{"gitId":"geraldneo567"},"content":"                found \u003d true;","lastModifiedDate":"2022-04-03"},{"lineNumber":234,"author":{"gitId":"geraldneo567"},"content":"                break;","lastModifiedDate":"2022-04-03"},{"lineNumber":235,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":236,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":237,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":238,"author":{"gitId":"geraldneo567"},"content":"        if (!found) {","lastModifiedDate":"2022-04-03"},{"lineNumber":239,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_MODULES_WITH_NAME,","lastModifiedDate":"2022-04-03"},{"lineNumber":240,"author":{"gitId":"geraldneo567"},"content":"                    moduleNameFragment));","lastModifiedDate":"2022-04-03"},{"lineNumber":241,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":242,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":243,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"ryanwalterlee"},"content":"    public CommandResult execute(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"geraldneo567"},"content":"                                 Boolean isModuleListShowing, Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":248,"author":{"gitId":"geraldneo567"},"content":"        switch (this.commandType) {","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"geraldneo567"},"content":"        case ALL:","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"geraldneo567"},"content":"            return allCommand(model);","lastModifiedDate":"2022-04-03"},{"lineNumber":251,"author":{"gitId":"geraldneo567"},"content":"        case MODULE:","lastModifiedDate":"2022-04-03"},{"lineNumber":252,"author":{"gitId":"geraldneo567"},"content":"            return moduleCommand(model, isPersonListShowing, isModuleListShowing, isGroupListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":253,"author":{"gitId":"geraldneo567"},"content":"        case TYPE:","lastModifiedDate":"2022-04-03"},{"lineNumber":254,"author":{"gitId":"geraldneo567"},"content":"            return typeCommand(model, isPersonListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":255,"author":{"gitId":"geraldneo567"},"content":"        case MODULEANDTYPE:","lastModifiedDate":"2022-04-03"},{"lineNumber":256,"author":{"gitId":"geraldneo567"},"content":"            return moduleAndTypeCommand(model, isPersonListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"        case VIEW:","lastModifiedDate":"2022-04-03"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"            return viewCommand(model, isPersonListShowing, isModuleListShowing, isGroupListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":259,"author":{"gitId":"geraldneo567"},"content":"        case PEOPLEINGROUP:","lastModifiedDate":"2022-04-03"},{"lineNumber":260,"author":{"gitId":"geraldneo567"},"content":"            return peopleInGroupCommand(model, isPersonListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":261,"author":{"gitId":"geraldneo567"},"content":"        case GROUPFROMMODULEVIEW:","lastModifiedDate":"2022-04-03"},{"lineNumber":262,"author":{"gitId":"geraldneo567"},"content":"            return groupFromModulesCommand(model, isPersonListShowing, isGroupListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":263,"author":{"gitId":"geraldneo567"},"content":"        case GROUPFROMGROUPVIEW:","lastModifiedDate":"2022-04-03"},{"lineNumber":264,"author":{"gitId":"geraldneo567"},"content":"            return groupFromGroupsCommand(model, isGroupListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":265,"author":{"gitId":"geraldneo567"},"content":"        case GROUPWITHMEETINGDATE:","lastModifiedDate":"2022-04-03"},{"lineNumber":266,"author":{"gitId":"geraldneo567"},"content":"            return groupMeetingDateCommand(model, isGroupListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":267,"author":{"gitId":"geraldneo567"},"content":"        case MODULEWITHNAMEMATCH:","lastModifiedDate":"2022-04-03"},{"lineNumber":268,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithNameCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":269,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHKEYEVENT:","lastModifiedDate":"2022-04-03"},{"lineNumber":270,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithKeyEventCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":271,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHEVENTDATE:","lastModifiedDate":"2022-04-03"},{"lineNumber":272,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithDateCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":273,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHDATEANDKEYEVENT:","lastModifiedDate":"2022-04-03"},{"lineNumber":274,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithDateAndEventCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":275,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHDATEANDNAME:","lastModifiedDate":"2022-04-03"},{"lineNumber":276,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithDateAndNameCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":277,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHNAMEANDKEYEVENT:","lastModifiedDate":"2022-04-03"},{"lineNumber":278,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithNameAndEventCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":279,"author":{"gitId":"geraldneo567"},"content":"        case MODULESWITHDATEANDKEYEVENTANDNAME:","lastModifiedDate":"2022-04-03"},{"lineNumber":280,"author":{"gitId":"geraldneo567"},"content":"            return moduleWithNameAndEventAndDateCommand(model, isModuleListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":281,"author":{"gitId":"geraldneo567"},"content":"        case SPECIFICGROUPFROMGROUPVIEW:","lastModifiedDate":"2022-04-03"},{"lineNumber":282,"author":{"gitId":"geraldneo567"},"content":"            return specificGroupCommand(model, isGroupListShowing);","lastModifiedDate":"2022-04-03"},{"lineNumber":283,"author":{"gitId":"geraldneo567"},"content":"        default:","lastModifiedDate":"2022-04-03"},{"lineNumber":284,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(\"\");","lastModifiedDate":"2022-04-03"},{"lineNumber":285,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":286,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":287,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":288,"author":{"gitId":"geraldneo567"},"content":"    //Utiity method for equals method","lastModifiedDate":"2022-04-03"},{"lineNumber":289,"author":{"gitId":"geraldneo567"},"content":"    private static \u003cT\u003e boolean equalsIfNotNull(T attr1, T attr2) {","lastModifiedDate":"2022-04-03"},{"lineNumber":290,"author":{"gitId":"geraldneo567"},"content":"        return attr1 \u003d\u003d null || attr2 \u003d\u003d null || attr1.equals(attr2);","lastModifiedDate":"2022-04-03"},{"lineNumber":291,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":292,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":293,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-04-03"},{"lineNumber":294,"author":{"gitId":"geraldneo567"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-04-03"},{"lineNumber":295,"author":{"gitId":"geraldneo567"},"content":"        if (!(o instanceof ListCommand)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":296,"author":{"gitId":"geraldneo567"},"content":"            return false;","lastModifiedDate":"2022-04-03"},{"lineNumber":297,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":298,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":299,"author":{"gitId":"geraldneo567"},"content":"        ListCommand lc \u003d (ListCommand) o;","lastModifiedDate":"2022-04-03"},{"lineNumber":300,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":301,"author":{"gitId":"geraldneo567"},"content":"        return equalsIfNotNull(lc.moduleCode, moduleCode)","lastModifiedDate":"2022-04-03"},{"lineNumber":302,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.type, type)","lastModifiedDate":"2022-04-03"},{"lineNumber":303,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.commandType.toString(), commandType.toString())","lastModifiedDate":"2022-04-03"},{"lineNumber":304,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.viewType, viewType)","lastModifiedDate":"2022-04-03"},{"lineNumber":305,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.group, group)","lastModifiedDate":"2022-04-03"},{"lineNumber":306,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.date, date)","lastModifiedDate":"2022-04-03"},{"lineNumber":307,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.moduleNameFragment, moduleNameFragment)","lastModifiedDate":"2022-04-03"},{"lineNumber":308,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 equalsIfNotNull(lc.keyEvent, keyEvent);","lastModifiedDate":"2022-04-03"},{"lineNumber":309,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":310,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":311,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":312,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-04-03"},{"lineNumber":313,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-04-03"},{"lineNumber":314,"author":{"gitId":"geraldneo567"},"content":"        return this.type;","lastModifiedDate":"2022-04-03"},{"lineNumber":315,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":316,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":317,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult allCommand(Model model) {","lastModifiedDate":"2022-04-03"},{"lineNumber":318,"author":{"gitId":"geraldneo567"},"content":"        //List everything. Example: `list`","lastModifiedDate":"2022-04-03"},{"lineNumber":319,"author":{"gitId":"geraldneo567"},"content":"        showAll(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":321,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":322,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":323,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleCommand(Model model, Boolean isPersonListShowing, Boolean isModuleListShowing,","lastModifiedDate":"2022-04-03"},{"lineNumber":324,"author":{"gitId":"geraldneo567"},"content":"                                        Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":325,"author":{"gitId":"geraldneo567"},"content":"        //Module command given in People or Module page.","lastModifiedDate":"2022-04-03"},{"lineNumber":326,"author":{"gitId":"geraldneo567"},"content":"        if (!moduleCodeExists(model.getUniBook().getModuleList())) {","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"geraldneo567"},"content":"            //The module code given does not exist in the UniBook.","lastModifiedDate":"2022-04-03"},{"lineNumber":328,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, moduleCode));","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":331,"author":{"gitId":"geraldneo567"},"content":"        if (isGroupListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":332,"author":{"gitId":"geraldneo567"},"content":"            //Module command given in groups page (Invalid)","lastModifiedDate":"2022-04-03"},{"lineNumber":333,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules or People\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":334,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":335,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":336,"author":{"gitId":"geraldneo567"},"content":"        if (isPersonListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":337,"author":{"gitId":"geraldneo567"},"content":"            //Module command given in person page. Displays all people with the given module.","lastModifiedDate":"2022-04-03"},{"lineNumber":338,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cPerson\u003e showSpecificPeoplePredicate \u003d p -\u003e p.hasModule(this.moduleCode);","lastModifiedDate":"2022-03-14"},{"lineNumber":339,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredPersonList(showSpecificPeoplePredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":340,"author":{"gitId":"geraldneo567"},"content":"            return new","lastModifiedDate":"2022-03-26"},{"lineNumber":341,"author":{"gitId":"geraldneo567"},"content":"                    CommandResult(String.format(Messages.MESSAGE_LISTED_PEOPLE_WITH_MODULE, moduleCode.toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":342,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":343,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":344,"author":{"gitId":"geraldneo567"},"content":"        if (isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":345,"author":{"gitId":"geraldneo567"},"content":"            //Module command given in modules page. Displays the specified module.","lastModifiedDate":"2022-04-03"},{"lineNumber":346,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e m.hasModuleCode(this.moduleCode);","lastModifiedDate":"2022-03-14"},{"lineNumber":347,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":348,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_LISTED_MODULE, moduleCode.toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":349,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":350,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":351,"author":{"gitId":"geraldneo567"},"content":"        return new CommandResult(\"\");","lastModifiedDate":"2022-04-03"},{"lineNumber":352,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":353,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":354,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult typeCommand(Model model, Boolean isPersonListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":355,"author":{"gitId":"geraldneo567"},"content":"        if (!isPersonListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":356,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"People\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":357,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":358,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":359,"author":{"gitId":"geraldneo567"},"content":"        //Type command given in People page.","lastModifiedDate":"2022-04-03"},{"lineNumber":360,"author":{"gitId":"geraldneo567"},"content":"        if (type.equals(\"professors\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":361,"author":{"gitId":"geraldneo567"},"content":"            //Displays all professors.","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PROFESSORS);","lastModifiedDate":"2022-03-14"},{"lineNumber":363,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(Messages.MESSAGE_LISTED_ALL_PROFESSORS);","lastModifiedDate":"2022-03-26"},{"lineNumber":364,"author":{"gitId":"geraldneo567"},"content":"        } else if (type.equals(\"students\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":365,"author":{"gitId":"geraldneo567"},"content":"            //Displays all students.","lastModifiedDate":"2022-03-26"},{"lineNumber":366,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":367,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(Messages.MESSAGE_LISTED_ALL_STUDENTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":368,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":369,"author":{"gitId":"geraldneo567"},"content":"            //Invalid type argument.","lastModifiedDate":"2022-03-26"},{"lineNumber":370,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(Messages.MESSAGE_WRONG_TYPE);","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":372,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":373,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":374,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleAndTypeCommand(Model model, Boolean isPersonListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":375,"author":{"gitId":"geraldneo567"},"content":"        if (!isPersonListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":376,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"People\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":377,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":379,"author":{"gitId":"geraldneo567"},"content":"        if (!moduleCodeExists(model.getUniBook().getModuleList())) {","lastModifiedDate":"2022-03-14"},{"lineNumber":380,"author":{"gitId":"geraldneo567"},"content":"            //The given module does not exist in UniBook.","lastModifiedDate":"2022-03-26"},{"lineNumber":381,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, moduleCode));","lastModifiedDate":"2022-03-14"},{"lineNumber":382,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":383,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":384,"author":{"gitId":"geraldneo567"},"content":"        if (type.equals(\"professors\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":385,"author":{"gitId":"geraldneo567"},"content":"            //Displays all professors in the given module.","lastModifiedDate":"2022-03-26"},{"lineNumber":386,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cPerson\u003e showSpecificProfessorPredicate \u003d p -\u003e p.hasModule(this.moduleCode)","lastModifiedDate":"2022-03-14"},{"lineNumber":387,"author":{"gitId":"geraldneo567"},"content":"                    \u0026\u0026 (p instanceof Professor);","lastModifiedDate":"2022-03-14"},{"lineNumber":388,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredPersonList(showSpecificProfessorPredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":389,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-26"},{"lineNumber":390,"author":{"gitId":"geraldneo567"},"content":"                    String.format(Messages.MESSAGE_LISTED_ALL_TYPE_IN_MODULE,","lastModifiedDate":"2022-03-26"},{"lineNumber":391,"author":{"gitId":"geraldneo567"},"content":"                            \"professors\", moduleCode.toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":392,"author":{"gitId":"geraldneo567"},"content":"        } else if (type.equals(\"students\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":393,"author":{"gitId":"geraldneo567"},"content":"            //Displays all students in the given module.","lastModifiedDate":"2022-03-26"},{"lineNumber":394,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cPerson\u003e showSpecificStudentPredicate \u003d p -\u003e p.hasModule(this.moduleCode)","lastModifiedDate":"2022-03-14"},{"lineNumber":395,"author":{"gitId":"geraldneo567"},"content":"                    \u0026\u0026 (p instanceof Student);","lastModifiedDate":"2022-03-14"},{"lineNumber":396,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredPersonList(showSpecificStudentPredicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":397,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-26"},{"lineNumber":398,"author":{"gitId":"geraldneo567"},"content":"                    String.format(Messages.MESSAGE_LISTED_ALL_TYPE_IN_MODULE,","lastModifiedDate":"2022-03-26"},{"lineNumber":399,"author":{"gitId":"geraldneo567"},"content":"                            \"students\", moduleCode.toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":400,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":401,"author":{"gitId":"geraldneo567"},"content":"            //Invalid type argument.","lastModifiedDate":"2022-03-26"},{"lineNumber":402,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(Messages.MESSAGE_WRONG_TYPE);","lastModifiedDate":"2022-03-26"},{"lineNumber":403,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":404,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":405,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":406,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult viewCommand(Model model, Boolean isPersonListShowing, Boolean isModuleListShowing,","lastModifiedDate":"2022-04-03"},{"lineNumber":407,"author":{"gitId":"geraldneo567"},"content":"                                      Boolean isGroupListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":408,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":409,"author":{"gitId":"geraldneo567"},"content":"        showAll(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":410,"author":{"gitId":"geraldneo567"},"content":"        if (this.viewType \u003d\u003d ListView.MODULES) {","lastModifiedDate":"2022-03-14"},{"lineNumber":411,"author":{"gitId":"geraldneo567"},"content":"            //Switch view to modules","lastModifiedDate":"2022-03-26"},{"lineNumber":412,"author":{"gitId":"geraldneo567"},"content":"            if (isModuleListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":413,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(Messages.MESSAGE_ALREADY_ON_MODULE_PAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":414,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":415,"author":{"gitId":"geraldneo567"},"content":"                modelManager.getUi().setModuleListPanel();","lastModifiedDate":"2022-03-14"},{"lineNumber":416,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(Messages.MESSAGE_CHANGED_TO_MODULE_PAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":417,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":418,"author":{"gitId":"geraldneo567"},"content":"        } else if (this.viewType \u003d\u003d ListView.PEOPLE) {","lastModifiedDate":"2022-03-26"},{"lineNumber":419,"author":{"gitId":"geraldneo567"},"content":"            //Switch view to people","lastModifiedDate":"2022-03-26"},{"lineNumber":420,"author":{"gitId":"geraldneo567"},"content":"            if (isPersonListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":421,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(Messages.MESSAGE_ALREADY_ON_PEOPLE_PAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":422,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":423,"author":{"gitId":"geraldneo567"},"content":"                modelManager.getUi().setPersonListPanel();","lastModifiedDate":"2022-03-14"},{"lineNumber":424,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(Messages.MESSAGE_CHANGED_TO_PERSON_PAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":425,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":426,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":427,"author":{"gitId":"geraldneo567"},"content":"            //Switch view to groups","lastModifiedDate":"2022-03-26"},{"lineNumber":428,"author":{"gitId":"geraldneo567"},"content":"            assert this.viewType \u003d\u003d ListView.GROUPS;","lastModifiedDate":"2022-03-26"},{"lineNumber":429,"author":{"gitId":"geraldneo567"},"content":"            if (isGroupListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":430,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(Messages.MESSAGE_ALREADY_ON_GROUP_PAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":431,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":432,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cModule\u003e modules \u003d modelManager.getUniBook()","lastModifiedDate":"2022-04-03"},{"lineNumber":433,"author":{"gitId":"geraldneo567"},"content":"                        .getModuleList();","lastModifiedDate":"2022-03-26"},{"lineNumber":434,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-26"},{"lineNumber":435,"author":{"gitId":"geraldneo567"},"content":"                for (Module m : modules) {","lastModifiedDate":"2022-03-26"},{"lineNumber":436,"author":{"gitId":"geraldneo567"},"content":"                    ObservableList\u003cGroup\u003e moduleGroups \u003d m.getGroups();","lastModifiedDate":"2022-03-26"},{"lineNumber":437,"author":{"gitId":"geraldneo567"},"content":"                    groups.addAll(moduleGroups);","lastModifiedDate":"2022-04-03"},{"lineNumber":438,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":439,"author":{"gitId":"geraldneo567"},"content":"                modelManager.getUi().setGroupListPanel(groups);","lastModifiedDate":"2022-03-26"},{"lineNumber":440,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(Messages.MESSAGE_CHANGED_TO_GROUP_PAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":442,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":443,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":444,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":445,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult peopleInGroupCommand(Model model, Boolean isPersonListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":446,"author":{"gitId":"geraldneo567"},"content":"        if (!isPersonListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":447,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"People\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":448,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":449,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":450,"author":{"gitId":"geraldneo567"},"content":"        if (!model.hasModule(this.moduleCode)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":451,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, this.moduleCode));","lastModifiedDate":"2022-03-28"},{"lineNumber":452,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":453,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":454,"author":{"gitId":"geraldneo567"},"content":"        Module m \u003d model.getModuleByCode(this.moduleCode);","lastModifiedDate":"2022-03-28"},{"lineNumber":455,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":456,"author":{"gitId":"geraldneo567"},"content":"        if (!m.hasGroupName(this.group)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":457,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_GROUP_NOT_IN_MODULE, this.group));","lastModifiedDate":"2022-04-03"},{"lineNumber":458,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":459,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":460,"author":{"gitId":"geraldneo567"},"content":"        Group g \u003d m.getGroupByName(this.group);","lastModifiedDate":"2022-03-28"},{"lineNumber":461,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cStudent\u003e peopleInGroup \u003d g.getMembers();","lastModifiedDate":"2022-03-28"},{"lineNumber":462,"author":{"gitId":"geraldneo567"},"content":"        Predicate\u003cPerson\u003e pred \u003d p -\u003e peopleInGroup.contains(p);","lastModifiedDate":"2022-03-28"},{"lineNumber":463,"author":{"gitId":"geraldneo567"},"content":"        model.updateFilteredPersonList(pred);","lastModifiedDate":"2022-03-28"},{"lineNumber":464,"author":{"gitId":"geraldneo567"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_PEOPLE_IN_GROUP,","lastModifiedDate":"2022-03-28"},{"lineNumber":465,"author":{"gitId":"geraldneo567"},"content":"                this.moduleCode.toString(), g.getGroupName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":466,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":467,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":468,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":469,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult groupFromModulesCommand(Model model, Boolean isPersonListShowing,","lastModifiedDate":"2022-04-03"},{"lineNumber":470,"author":{"gitId":"geraldneo567"},"content":"                                                  Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":471,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":472,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":473,"author":{"gitId":"geraldneo567"},"content":"        if (isPersonListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":474,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(Messages.MESSAGE_MODULE_FIELD_MISSING);","lastModifiedDate":"2022-04-03"},{"lineNumber":475,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":476,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":477,"author":{"gitId":"geraldneo567"},"content":"        if (isGroupListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":478,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(Messages.MESSAGE_NO_GROUP_FIELD_REQUIRED);","lastModifiedDate":"2022-04-04"},{"lineNumber":479,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":480,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":481,"author":{"gitId":"geraldneo567"},"content":"        if (modelManager.getFilteredModuleList().size() \u003d\u003d 1) {","lastModifiedDate":"2022-04-03"},{"lineNumber":482,"author":{"gitId":"geraldneo567"},"content":"            //The case where 1 module is showing, allow to focus into 1 group","lastModifiedDate":"2022-03-26"},{"lineNumber":483,"author":{"gitId":"geraldneo567"},"content":"            //Shows all groups that match given name in aforementioned module.","lastModifiedDate":"2022-03-26"},{"lineNumber":484,"author":{"gitId":"geraldneo567"},"content":"            ObservableList\u003cGroup\u003e groups \u003d modelManager.getFilteredModuleList().get(0).getGroups();","lastModifiedDate":"2022-03-26"},{"lineNumber":485,"author":{"gitId":"geraldneo567"},"content":"            for (Group g : groups) {","lastModifiedDate":"2022-03-26"},{"lineNumber":486,"author":{"gitId":"geraldneo567"},"content":"                if (g.getGroupName().toLowerCase().equals(this.group)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":487,"author":{"gitId":"geraldneo567"},"content":"                    if (groups.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":488,"author":{"gitId":"geraldneo567"},"content":"                        throw new CommandException(","lastModifiedDate":"2022-03-26"},{"lineNumber":489,"author":{"gitId":"geraldneo567"},"content":"                                String.format(Messages.MESSAGE_GROUP_NOT_IN_MODULE, this.group.toUpperCase()));","lastModifiedDate":"2022-03-26"},{"lineNumber":490,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-03-26"},{"lineNumber":491,"author":{"gitId":"geraldneo567"},"content":"                    modelManager.getUi().setGroupListPanel(FXCollections.observableArrayList(g));","lastModifiedDate":"2022-03-26"},{"lineNumber":492,"author":{"gitId":"geraldneo567"},"content":"                    return new CommandResult(String.format(Messages.MESSAGE_LISTED_MODULE_GROUP,","lastModifiedDate":"2022-03-26"},{"lineNumber":493,"author":{"gitId":"geraldneo567"},"content":"                            g.getGroupName(), g.getModule().getModuleCode().toString()));","lastModifiedDate":"2022-03-26"},{"lineNumber":494,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":495,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":496,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_GROUP_NOT_IN_MODULE, this.group));","lastModifiedDate":"2022-04-03"},{"lineNumber":497,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-04-03"},{"lineNumber":498,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-03-28"},{"lineNumber":499,"author":{"gitId":"geraldneo567"},"content":"                //The case where the user is in modules list with \u003e1 module showing","lastModifiedDate":"2022-03-28"},{"lineNumber":500,"author":{"gitId":"geraldneo567"},"content":"                //Shows all groups that match given name.","lastModifiedDate":"2022-03-28"},{"lineNumber":501,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cGroup\u003e groups \u003d ((UniBook) modelManager.getUniBook())","lastModifiedDate":"2022-03-28"},{"lineNumber":502,"author":{"gitId":"geraldneo567"},"content":"                        .getGroupsWithGroupName(this.group);","lastModifiedDate":"2022-03-28"},{"lineNumber":503,"author":{"gitId":"geraldneo567"},"content":"                if (groups.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":504,"author":{"gitId":"geraldneo567"},"content":"                    throw new CommandException(","lastModifiedDate":"2022-03-28"},{"lineNumber":505,"author":{"gitId":"geraldneo567"},"content":"                            String.format(Messages.MESSAGE_GROUP_NOT_IN_UNIBOOK, this.group.toUpperCase()));","lastModifiedDate":"2022-03-28"},{"lineNumber":506,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":507,"author":{"gitId":"geraldneo567"},"content":"                modelManager.getUi().setGroupListPanel(groups);","lastModifiedDate":"2022-03-28"},{"lineNumber":508,"author":{"gitId":"geraldneo567"},"content":"                return new CommandResult(String.format(Messages.MESSAGE_LISTED_GROUP_WITH_NAME,","lastModifiedDate":"2022-03-28"},{"lineNumber":509,"author":{"gitId":"geraldneo567"},"content":"                        groups.get(0).getGroupName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":510,"author":{"gitId":"geraldneo567"},"content":"            } catch (GroupNotFoundException g) {","lastModifiedDate":"2022-03-28"},{"lineNumber":511,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(Messages.MESSAGE_GROUP_NOT_IN_UNIBOOK);","lastModifiedDate":"2022-03-28"},{"lineNumber":512,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":513,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":514,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":515,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":516,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult groupFromGroupsCommand(Model model,","lastModifiedDate":"2022-04-03"},{"lineNumber":517,"author":{"gitId":"geraldneo567"},"content":"                                                 Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":518,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":519,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":520,"author":{"gitId":"geraldneo567"},"content":"        if (!isGroupListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":521,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Groups\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":522,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":523,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":524,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-26"},{"lineNumber":525,"author":{"gitId":"geraldneo567"},"content":"        for (Module m : model.getUniBook().getModuleList()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":526,"author":{"gitId":"geraldneo567"},"content":"            ObservableList\u003cGroup\u003e moduleGroups \u003d m.getGroups();","lastModifiedDate":"2022-03-26"},{"lineNumber":527,"author":{"gitId":"geraldneo567"},"content":"            for (Group mg : moduleGroups) {","lastModifiedDate":"2022-03-26"},{"lineNumber":528,"author":{"gitId":"geraldneo567"},"content":"                if (mg.getGroupName().toLowerCase().equals(this.group)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":529,"author":{"gitId":"geraldneo567"},"content":"                    groups.add(mg);","lastModifiedDate":"2022-03-26"},{"lineNumber":530,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":531,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":532,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":533,"author":{"gitId":"geraldneo567"},"content":"        if (groups.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":534,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(","lastModifiedDate":"2022-03-26"},{"lineNumber":535,"author":{"gitId":"geraldneo567"},"content":"                    String.format(Messages.MESSAGE_GROUP_NOT_IN_UNIBOOK, this.group.toUpperCase()));","lastModifiedDate":"2022-03-26"},{"lineNumber":536,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":537,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":538,"author":{"gitId":"geraldneo567"},"content":"        modelManager.getUi().setGroupListPanel(groups);","lastModifiedDate":"2022-04-03"},{"lineNumber":539,"author":{"gitId":"geraldneo567"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_GROUPS_WITH_NAME,","lastModifiedDate":"2022-03-26"},{"lineNumber":540,"author":{"gitId":"geraldneo567"},"content":"                this.group.toUpperCase()));","lastModifiedDate":"2022-03-26"},{"lineNumber":541,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":542,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":543,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult groupMeetingDateCommand(Model model,","lastModifiedDate":"2022-04-03"},{"lineNumber":544,"author":{"gitId":"geraldneo567"},"content":"                                                  Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":545,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":546,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":547,"author":{"gitId":"geraldneo567"},"content":"        if (!isGroupListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":548,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Groups\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":549,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":550,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":551,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":552,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":553,"author":{"gitId":"geraldneo567"},"content":"            LocalDate localDate \u003d ParserUtil.parseDate(this.date);","lastModifiedDate":"2022-03-28"},{"lineNumber":554,"author":{"gitId":"geraldneo567"},"content":"            ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-28"},{"lineNumber":555,"author":{"gitId":"geraldneo567"},"content":"            for (Module m : model.getUniBook().getModuleList()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":556,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cGroup\u003e moduleGroups \u003d m.getGroups();","lastModifiedDate":"2022-03-28"},{"lineNumber":557,"author":{"gitId":"geraldneo567"},"content":"                for (Group mg : moduleGroups) {","lastModifiedDate":"2022-03-28"},{"lineNumber":558,"author":{"gitId":"geraldneo567"},"content":"                    ObservableList\u003cLocalDate\u003e dates \u003d mg.getMeetingDates();","lastModifiedDate":"2022-03-28"},{"lineNumber":559,"author":{"gitId":"geraldneo567"},"content":"                    if (dates.contains(localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":560,"author":{"gitId":"geraldneo567"},"content":"                        groups.add(mg);","lastModifiedDate":"2022-03-28"},{"lineNumber":561,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":562,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":563,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":564,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":565,"author":{"gitId":"geraldneo567"},"content":"            if (groups.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":566,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(","lastModifiedDate":"2022-03-26"},{"lineNumber":567,"author":{"gitId":"geraldneo567"},"content":"                        String.format(Messages.MESSAGE_NO_GROUP_WITH_MEETING_DATE, this.date));","lastModifiedDate":"2022-04-03"},{"lineNumber":568,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":569,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":570,"author":{"gitId":"geraldneo567"},"content":"            modelManager.getUi().setGroupListPanel(groups);","lastModifiedDate":"2022-04-03"},{"lineNumber":571,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_GROUPS_WITH_MEETING_DATE, this.date));","lastModifiedDate":"2022-04-03"},{"lineNumber":572,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":573,"author":{"gitId":"geraldneo567"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":574,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-28"},{"lineNumber":575,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":576,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":577,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":578,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithNameCommand(Model model, Boolean isModuleListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":579,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":580,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":581,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":582,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":583,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":584,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":585,"author":{"gitId":"geraldneo567"},"content":"        //Module command given in modules page. Displays specified module.","lastModifiedDate":"2022-03-28"},{"lineNumber":586,"author":{"gitId":"geraldneo567"},"content":"        checkIfKeywordExists(modelManager);","lastModifiedDate":"2022-03-28"},{"lineNumber":587,"author":{"gitId":"geraldneo567"},"content":"        Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":588,"author":{"gitId":"geraldneo567"},"content":"                m.getModuleName().toString().toLowerCase().contains(this.moduleNameFragment.toLowerCase());","lastModifiedDate":"2022-03-28"},{"lineNumber":589,"author":{"gitId":"geraldneo567"},"content":"        model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":590,"author":{"gitId":"geraldneo567"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_MODULES_WITH_NAME,","lastModifiedDate":"2022-03-28"},{"lineNumber":591,"author":{"gitId":"geraldneo567"},"content":"                this.moduleNameFragment));","lastModifiedDate":"2022-03-28"},{"lineNumber":592,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":593,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":594,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithKeyEventCommand(Model model, Boolean isModuleListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":595,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":596,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":597,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":598,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":599,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":600,"author":{"gitId":"geraldneo567"},"content":"            ModuleKeyEvent.KeyEventType ke \u003d ModuleKeyEvent.KeyEventType.valueOf(this.keyEvent.toUpperCase());","lastModifiedDate":"2022-03-28"},{"lineNumber":601,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":602,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cModuleKeyEvent\u003e allKeyEvents \u003d m.getKeyEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":603,"author":{"gitId":"geraldneo567"},"content":"                for (ModuleKeyEvent k : allKeyEvents) {","lastModifiedDate":"2022-03-28"},{"lineNumber":604,"author":{"gitId":"geraldneo567"},"content":"                    if (k.getKeyEventType() \u003d\u003d ke) {","lastModifiedDate":"2022-03-28"},{"lineNumber":605,"author":{"gitId":"geraldneo567"},"content":"                        return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":606,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":607,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":608,"author":{"gitId":"geraldneo567"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":609,"author":{"gitId":"geraldneo567"},"content":"            };","lastModifiedDate":"2022-03-28"},{"lineNumber":610,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":611,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_MODULES_WITH_KEY_EVENT,","lastModifiedDate":"2022-03-28"},{"lineNumber":612,"author":{"gitId":"geraldneo567"},"content":"                    this.keyEvent));","lastModifiedDate":"2022-03-28"},{"lineNumber":613,"author":{"gitId":"geraldneo567"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":614,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_KEY_EVENT, this.keyEvent));","lastModifiedDate":"2022-03-28"},{"lineNumber":615,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":616,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":617,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":618,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":619,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithDateCommand(Model model, Boolean isModuleListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":620,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":621,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":622,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":623,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":624,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":625,"author":{"gitId":"geraldneo567"},"content":"            LocalDate localDate \u003d ParserUtil.parseDate(this.date);","lastModifiedDate":"2022-03-28"},{"lineNumber":626,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":627,"author":{"gitId":"geraldneo567"},"content":"            if (!keyDateExists(model.getUniBook().getModuleList(), localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":628,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_NO_MODULES_WITH_DATE, localDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":629,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":630,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":631,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e m.getKeyEventDates().contains(localDate);","lastModifiedDate":"2022-03-28"},{"lineNumber":632,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":633,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_MODULES_WITH_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":634,"author":{"gitId":"geraldneo567"},"content":"                    localDate.toString()));","lastModifiedDate":"2022-03-28"},{"lineNumber":635,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":636,"author":{"gitId":"geraldneo567"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":637,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-28"},{"lineNumber":638,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":639,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":640,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":641,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithDateAndEventCommand(Model model, Boolean isModuleListShowing)","lastModifiedDate":"2022-04-03"},{"lineNumber":642,"author":{"gitId":"geraldneo567"},"content":"            throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":643,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":644,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":645,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":646,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":647,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":648,"author":{"gitId":"geraldneo567"},"content":"            LocalDate localDate \u003d ParserUtil.parseDate(this.date);","lastModifiedDate":"2022-03-28"},{"lineNumber":649,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":650,"author":{"gitId":"geraldneo567"},"content":"            if (!keyDateExists(model.getUniBook().getModuleList(), localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":651,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_NO_MODULES_WITH_DATE, localDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":652,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":653,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":654,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-03-28"},{"lineNumber":655,"author":{"gitId":"geraldneo567"},"content":"                ModuleKeyEvent.KeyEventType ke \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":656,"author":{"gitId":"geraldneo567"},"content":"                        ModuleKeyEvent.KeyEventType.valueOf(this.keyEvent.toUpperCase());","lastModifiedDate":"2022-03-28"},{"lineNumber":657,"author":{"gitId":"geraldneo567"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":658,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_KEY_EVENT, this.keyEvent));","lastModifiedDate":"2022-03-28"},{"lineNumber":659,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":660,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":661,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":662,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cModuleKeyEvent\u003e keyEvents \u003d m.getKeyEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":663,"author":{"gitId":"geraldneo567"},"content":"                for (ModuleKeyEvent k : keyEvents) {","lastModifiedDate":"2022-03-28"},{"lineNumber":664,"author":{"gitId":"geraldneo567"},"content":"                    if (k.getKeyEventType().toString().equals(this.keyEvent.toUpperCase())","lastModifiedDate":"2022-03-28"},{"lineNumber":665,"author":{"gitId":"geraldneo567"},"content":"                            \u0026\u0026 k.getKeyEventDate().equals(localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":666,"author":{"gitId":"geraldneo567"},"content":"                        return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":667,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":668,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":669,"author":{"gitId":"geraldneo567"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":670,"author":{"gitId":"geraldneo567"},"content":"            };","lastModifiedDate":"2022-03-28"},{"lineNumber":671,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":672,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":673,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":674,"author":{"gitId":"geraldneo567"},"content":"            if (model.getFilteredModuleList().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":675,"author":{"gitId":"geraldneo567"},"content":"                model.updateFilteredModuleList(Model.PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-28"},{"lineNumber":676,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_NO_MODULE_WITH_EVENT_AND_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":677,"author":{"gitId":"geraldneo567"},"content":"                        this.keyEvent, localDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":678,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":679,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":680,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_MODULES_WITH_EVENT_AND_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":681,"author":{"gitId":"geraldneo567"},"content":"                    this.keyEvent, localDate.toString()));","lastModifiedDate":"2022-03-28"},{"lineNumber":682,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":683,"author":{"gitId":"geraldneo567"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":684,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-28"},{"lineNumber":685,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":686,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":687,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":688,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":689,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithDateAndNameCommand(Model model, Boolean isModuleListShowing)","lastModifiedDate":"2022-04-03"},{"lineNumber":690,"author":{"gitId":"geraldneo567"},"content":"            throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":691,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":692,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":693,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":694,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":695,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":696,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":697,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":698,"author":{"gitId":"geraldneo567"},"content":"            checkIfKeywordExists(modelManager);","lastModifiedDate":"2022-03-28"},{"lineNumber":699,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":700,"author":{"gitId":"geraldneo567"},"content":"            LocalDate localDate \u003d ParserUtil.parseDate(this.date);","lastModifiedDate":"2022-03-28"},{"lineNumber":701,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":702,"author":{"gitId":"geraldneo567"},"content":"            if (!keyDateExists(model.getUniBook().getModuleList(), localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":703,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_NO_MODULES_WITH_DATE, localDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":704,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":705,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":706,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":707,"author":{"gitId":"geraldneo567"},"content":"                return m.getModuleName().toString().toLowerCase().contains(this.moduleNameFragment","lastModifiedDate":"2022-03-28"},{"lineNumber":708,"author":{"gitId":"geraldneo567"},"content":"                        .toLowerCase())","lastModifiedDate":"2022-03-28"},{"lineNumber":709,"author":{"gitId":"geraldneo567"},"content":"                        \u0026\u0026 m.getKeyEvents().stream().map(ke -\u003e ke.getKeyEventDate().equals(localDate))","lastModifiedDate":"2022-03-28"},{"lineNumber":710,"author":{"gitId":"geraldneo567"},"content":"                        .collect(Collectors.toList()).contains(true);","lastModifiedDate":"2022-03-28"},{"lineNumber":711,"author":{"gitId":"geraldneo567"},"content":"            };","lastModifiedDate":"2022-03-28"},{"lineNumber":712,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":713,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":714,"author":{"gitId":"geraldneo567"},"content":"            if (model.getFilteredModuleList().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":715,"author":{"gitId":"geraldneo567"},"content":"                model.updateFilteredModuleList(Model.PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-28"},{"lineNumber":716,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_NO_MODULE_WITH_NAME_AND_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":717,"author":{"gitId":"geraldneo567"},"content":"                        this.moduleNameFragment, localDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":718,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":719,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":720,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_MODULES_WITH_NAME_AND_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":721,"author":{"gitId":"geraldneo567"},"content":"                    this.moduleNameFragment, localDate.toString()));","lastModifiedDate":"2022-03-28"},{"lineNumber":722,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":723,"author":{"gitId":"geraldneo567"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":724,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-28"},{"lineNumber":725,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":726,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":727,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":728,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithNameAndEventCommand(Model model, Boolean isModuleListShowing)","lastModifiedDate":"2022-04-03"},{"lineNumber":729,"author":{"gitId":"geraldneo567"},"content":"            throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":730,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":731,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":732,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":733,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":734,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":735,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":736,"author":{"gitId":"geraldneo567"},"content":"        checkIfKeywordExists(modelManager);","lastModifiedDate":"2022-03-28"},{"lineNumber":737,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":738,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":739,"author":{"gitId":"geraldneo567"},"content":"            ModuleKeyEvent.KeyEventType.valueOf(this.keyEvent.toUpperCase());","lastModifiedDate":"2022-04-03"},{"lineNumber":740,"author":{"gitId":"geraldneo567"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":741,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_KEY_EVENT, this.keyEvent));","lastModifiedDate":"2022-03-28"},{"lineNumber":742,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":743,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":744,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":745,"author":{"gitId":"geraldneo567"},"content":"        Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":746,"author":{"gitId":"geraldneo567"},"content":"            if (!m.getModuleName().toString().toLowerCase()","lastModifiedDate":"2022-03-28"},{"lineNumber":747,"author":{"gitId":"geraldneo567"},"content":"                    .contains(this.moduleNameFragment.toLowerCase())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":748,"author":{"gitId":"geraldneo567"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":749,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":750,"author":{"gitId":"geraldneo567"},"content":"            ObservableList\u003cModuleKeyEvent\u003e keyEvents \u003d m.getKeyEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":751,"author":{"gitId":"geraldneo567"},"content":"            for (ModuleKeyEvent k : keyEvents) {","lastModifiedDate":"2022-03-28"},{"lineNumber":752,"author":{"gitId":"geraldneo567"},"content":"                if (k.getKeyEventType().toString().equals(this.keyEvent.toUpperCase())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":753,"author":{"gitId":"geraldneo567"},"content":"                    return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":754,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":755,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":756,"author":{"gitId":"geraldneo567"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":757,"author":{"gitId":"geraldneo567"},"content":"        };","lastModifiedDate":"2022-03-28"},{"lineNumber":758,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":759,"author":{"gitId":"geraldneo567"},"content":"        model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":760,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":761,"author":{"gitId":"geraldneo567"},"content":"        if (model.getFilteredModuleList().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":762,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(Model.PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-28"},{"lineNumber":763,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_MODULE_WITH_EVENT_AND_NAME,","lastModifiedDate":"2022-03-28"},{"lineNumber":764,"author":{"gitId":"geraldneo567"},"content":"                    this.keyEvent, this.moduleNameFragment));","lastModifiedDate":"2022-03-28"},{"lineNumber":765,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":766,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":767,"author":{"gitId":"geraldneo567"},"content":"        return new CommandResult(String.format(Messages.MESSAGES_DISPLAYED_MODULES_WITH_EVENT_AND_NAME,","lastModifiedDate":"2022-03-28"},{"lineNumber":768,"author":{"gitId":"geraldneo567"},"content":"                this.keyEvent, this.moduleNameFragment));","lastModifiedDate":"2022-03-28"},{"lineNumber":769,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":770,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":771,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":772,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult moduleWithNameAndEventAndDateCommand(Model model, Boolean isModuleListShowing)","lastModifiedDate":"2022-04-03"},{"lineNumber":773,"author":{"gitId":"geraldneo567"},"content":"            throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":774,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":775,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":776,"author":{"gitId":"geraldneo567"},"content":"        if (!isModuleListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":777,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":778,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":779,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":780,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":781,"author":{"gitId":"geraldneo567"},"content":"            LocalDate localDate \u003d ParserUtil.parseDate(this.date);","lastModifiedDate":"2022-03-28"},{"lineNumber":782,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":783,"author":{"gitId":"geraldneo567"},"content":"            if (!keyDateExists(model.getUniBook().getModuleList(), localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":784,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_NO_MODULES_WITH_DATE, \"Modules\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":785,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":786,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":787,"author":{"gitId":"geraldneo567"},"content":"            checkIfKeywordExists(modelManager);","lastModifiedDate":"2022-03-28"},{"lineNumber":788,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":789,"author":{"gitId":"geraldneo567"},"content":"            try {","lastModifiedDate":"2022-03-28"},{"lineNumber":790,"author":{"gitId":"geraldneo567"},"content":"                ModuleKeyEvent.KeyEventType ke \u003d ModuleKeyEvent.KeyEventType","lastModifiedDate":"2022-03-28"},{"lineNumber":791,"author":{"gitId":"geraldneo567"},"content":"                        .valueOf(this.keyEvent.toUpperCase());","lastModifiedDate":"2022-03-28"},{"lineNumber":792,"author":{"gitId":"geraldneo567"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":793,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_KEY_EVENT, this.keyEvent));","lastModifiedDate":"2022-03-28"},{"lineNumber":794,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":795,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":796,"author":{"gitId":"geraldneo567"},"content":"            Predicate\u003cModule\u003e showSpecificModulePredicate \u003d m -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":797,"author":{"gitId":"geraldneo567"},"content":"                if (!m.getModuleName().toString().toLowerCase().contains(moduleNameFragment.toLowerCase())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":798,"author":{"gitId":"geraldneo567"},"content":"                    return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":799,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":800,"author":{"gitId":"geraldneo567"},"content":"                ObservableList\u003cModuleKeyEvent\u003e keyEvents \u003d m.getKeyEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":801,"author":{"gitId":"geraldneo567"},"content":"                for (ModuleKeyEvent k : keyEvents) {","lastModifiedDate":"2022-03-28"},{"lineNumber":802,"author":{"gitId":"geraldneo567"},"content":"                    if (k.getKeyEventType().toString().equals(this.keyEvent.toUpperCase())","lastModifiedDate":"2022-03-28"},{"lineNumber":803,"author":{"gitId":"geraldneo567"},"content":"                            \u0026\u0026 k.getKeyEventDate().equals(localDate)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":804,"author":{"gitId":"geraldneo567"},"content":"                        return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":805,"author":{"gitId":"geraldneo567"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":806,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":807,"author":{"gitId":"geraldneo567"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":808,"author":{"gitId":"geraldneo567"},"content":"            };","lastModifiedDate":"2022-03-28"},{"lineNumber":809,"author":{"gitId":"geraldneo567"},"content":"            model.updateFilteredModuleList(showSpecificModulePredicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":810,"author":{"gitId":"geraldneo567"},"content":"            if (model.getFilteredModuleList().isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":811,"author":{"gitId":"geraldneo567"},"content":"                model.updateFilteredModuleList(Model.PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-28"},{"lineNumber":812,"author":{"gitId":"geraldneo567"},"content":"                throw new CommandException(String.format(","lastModifiedDate":"2022-03-28"},{"lineNumber":813,"author":{"gitId":"geraldneo567"},"content":"                        Messages.MESSAGE_NO_MODULES_WITH_EVENT_AND_NAME_AND_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":814,"author":{"gitId":"geraldneo567"},"content":"                        moduleNameFragment, this.keyEvent, localDate));","lastModifiedDate":"2022-03-28"},{"lineNumber":815,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":816,"author":{"gitId":"geraldneo567"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2022-03-28"},{"lineNumber":817,"author":{"gitId":"geraldneo567"},"content":"                    Messages.MESSAGES_DISPLAYED_MODULES_WITH_EVENT_AND_NAME_AND_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":818,"author":{"gitId":"geraldneo567"},"content":"                    this.moduleNameFragment, this.keyEvent, localDate.toString()));","lastModifiedDate":"2022-03-28"},{"lineNumber":819,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":820,"author":{"gitId":"geraldneo567"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":821,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-28"},{"lineNumber":822,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":823,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":824,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":825,"author":{"gitId":"geraldneo567"},"content":"    private CommandResult specificGroupCommand(Model model,","lastModifiedDate":"2022-04-03"},{"lineNumber":826,"author":{"gitId":"geraldneo567"},"content":"                                               Boolean isGroupListShowing) throws CommandException {","lastModifiedDate":"2022-04-03"},{"lineNumber":827,"author":{"gitId":"geraldneo567"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2022-04-03"},{"lineNumber":828,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":829,"author":{"gitId":"geraldneo567"},"content":"        if (!isGroupListShowing) {","lastModifiedDate":"2022-04-03"},{"lineNumber":830,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_WRONG_VIEW, \"Groups\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":831,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":832,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":833,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-29"},{"lineNumber":834,"author":{"gitId":"geraldneo567"},"content":"        if (!model.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":835,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_MODULE_CODE_NOT_EXIST, moduleCode));","lastModifiedDate":"2022-03-29"},{"lineNumber":836,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":837,"author":{"gitId":"geraldneo567"},"content":"        Module module \u003d model.getModuleByCode(this.moduleCode);","lastModifiedDate":"2022-03-29"},{"lineNumber":838,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":839,"author":{"gitId":"geraldneo567"},"content":"        if (!module.hasGroupName(this.group)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":840,"author":{"gitId":"geraldneo567"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_GROUP_NOT_IN_MODULE, this.group));","lastModifiedDate":"2022-03-29"},{"lineNumber":841,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":842,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":843,"author":{"gitId":"geraldneo567"},"content":"        groups.add(module.getGroupByName(this.group));","lastModifiedDate":"2022-03-29"},{"lineNumber":844,"author":{"gitId":"geraldneo567"},"content":"        modelManager.getUi().setGroupListPanel(groups);","lastModifiedDate":"2022-04-03"},{"lineNumber":845,"author":{"gitId":"geraldneo567"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DISPLAYED_GROUPS_WITH_NAME,","lastModifiedDate":"2022-03-29"},{"lineNumber":846,"author":{"gitId":"geraldneo567"},"content":"                this.group.toUpperCase()));","lastModifiedDate":"2022-03-29"},{"lineNumber":847,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":848,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":2,"ryanwalterlee":1,"yokester98":1,"-":15,"geraldneo567":829}},{"path":"src/main/java/unibook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"benmurphyy":1,"-":16}},{"path":"src/main/java/unibook/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_CONSTRAINTS_OPTION \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"        \"Options can take only 6 values, module/student/professor/group/meeting/event.\";","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"            ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_OFFICE, CliSyntax.PREFIX_TAG,","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_MODULE, CliSyntax.PREFIX_KEYEVENT);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_OPTION)","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"        String option \u003d argMultimap.getValue(CliSyntax.PREFIX_OPTION).get().trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"yokester98"},"content":"        ModuleName moduleName;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"        ModuleCode moduleCode;","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"        Module module;","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"        ArrayList\u003cModuleKeyEvent\u003e keyEventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"        ModuleKeyEvent.KeyEventType keyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"yokester98"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"        ArrayList\u003cLocalDateTime\u003e dateTimeList;","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"yokester98"},"content":"        Name name;","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"        Phone phone \u003d new Phone();","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"        Email email \u003d new Email();","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"        Office office \u003d new Office();","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"yokester98"},"content":"        Set\u003cTag\u003e tagList;","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"yokester98"},"content":"        Set\u003cModule\u003e moduleList \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"yokester98"},"content":"        Set\u003cGroup\u003e groups \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"        Set\u003cModuleCode\u003e moduleCodes;","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"yokester98"},"content":"        ArrayList\u003cLinkedHashSet\u003cString\u003e\u003e groupNamesList;","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"yokester98"},"content":"        Set\u003cString\u003e groupNamesSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"yokester98"},"content":"        String groupName;","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"        switch (option) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"yokester98"},"content":"        case \"group\":","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"yokester98"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_MODULE, CliSyntax.PREFIX_DATETIME);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"            if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_GROUP));","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"yokester98"},"content":"            groupName \u003d argMultimap.getValue(CliSyntax.PREFIX_NAME).get();","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"yokester98"},"content":"            moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DATETIME)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"yokester98"},"content":"                dateTimeList \u003d ParserUtil.parseAllDateTimes(argMultimap.getAllValues(CliSyntax.PREFIX_DATETIME));","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(groupName, moduleCode, dateTimeList);","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"yokester98"},"content":"            return new AddCommand(groupName, moduleCode);","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"yokester98"},"content":"        case \"module\":","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"yokester98"},"content":"            if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_MODULE));","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"yokester98"},"content":"            moduleName \u003d ParserUtil.parseModuleName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"yokester98"},"content":"            moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"yokester98"},"content":"            module \u003d new Module(moduleName, moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_KEYEVENT)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"yokester98"},"content":"                keyEventsList \u003d ParserUtil.parseModuleKeyEvent(argMultimap.getAllValues(CliSyntax.PREFIX_KEYEVENT),","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"yokester98"},"content":"                    module);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"yokester98"},"content":"                module.addKeyEventList(keyEventsList);","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(module);","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"yokester98"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(module);","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"yokester98"},"content":"        case \"meeting\":","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"yokester98"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_MODULE,","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_GROUP, CliSyntax.PREFIX_DATETIME);","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"            if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE,","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_GROUP, CliSyntax.PREFIX_DATETIME)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_MEETING));","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"yokester98"},"content":"            moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"yokester98"},"content":"            groupName \u003d argMultimap.getValue(CliSyntax.PREFIX_GROUP).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"yokester98"},"content":"            dateTimeList \u003d ParserUtil.parseAllDateTimes(argMultimap.getAllValues(CliSyntax.PREFIX_DATETIME));","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"yokester98"},"content":"            return new AddCommand(moduleCode, groupName, dateTimeList);","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"yokester98"},"content":"        case \"event\":","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"yokester98"},"content":"            argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_MODULE,","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_KEYEVENT, CliSyntax.PREFIX_DATETIME);","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"yokester98"},"content":"            if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE,","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"yokester98"},"content":"                CliSyntax.PREFIX_KEYEVENT, CliSyntax.PREFIX_DATETIME)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_EVENT));","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"yokester98"},"content":"            moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"yokester98"},"content":"            keyEvent \u003d ParserUtil.parseKeyEventType(argMultimap.getValue(CliSyntax.PREFIX_KEYEVENT).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"yokester98"},"content":"            dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(CliSyntax.PREFIX_DATETIME).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"yokester98"},"content":"            return new AddCommand(moduleCode, keyEvent, dateTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"yokester98"},"content":"        case \"student\":","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"yokester98"},"content":"            if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":135,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(\"Missing n/NAME field!\\nE.g.,\",","lastModifiedDate":"2022-04-01"},{"lineNumber":136,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_STUDENT));","lastModifiedDate":"2022-04-01"},{"lineNumber":137,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_OFFICE)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":139,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(\"Student should not have an of/OFFICE field!\\nE.g.,\",","lastModifiedDate":"2022-04-01"},{"lineNumber":140,"author":{"gitId":"yokester98"},"content":"                        AddCommand.MESSAGE_USAGE_STUDENT));","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_GROUP)","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"yokester98"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_STUDENT));","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"yokester98"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_PHONE)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"yokester98"},"content":"                phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"yokester98"},"content":"                email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"yokester98"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"yokester98"},"content":"            moduleCodes \u003d ParserUtil.parseMultipleModulesAndGroups(argMultimap.getAllValues(CliSyntax.PREFIX_MODULE));","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"yokester98"},"content":"            groupNamesList \u003d ParserUtil.parseMultipleGroups(argMultimap.getAllValues(CliSyntax.PREFIX_MODULE));","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"yokester98"},"content":"            Student student \u003d new Student(name, phone, email, tagList, moduleList, groups);","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"yokester98"},"content":"            boolean hasGroups \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"yokester98"},"content":"            for (LinkedHashSet\u003cString\u003e set : groupNamesList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"yokester98"},"content":"                if (!set.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"yokester98"},"content":"                    hasGroups \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"yokester98"},"content":"                    break;","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"yokester98"},"content":"            if (moduleCodes.isEmpty() \u0026\u0026 !hasGroups) {","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(student);","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"yokester98"},"content":"            } else if (moduleCodes.isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_MISSING_MODULES));","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"yokester98"},"content":"            } else if (!hasGroups) {","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(student, moduleCodes);","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"yokester98"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(student, moduleCodes, groupNamesList);","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"yokester98"},"content":"        case \"professor\":","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_GROUP)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"yokester98"},"content":"                    AddCommand.MESSAGE_USAGE_PROFESSOR));","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"yokester98"},"content":"            if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":181,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(String.format(\"Missing n/NAME field!\\nE.g.,\",","lastModifiedDate":"2022-04-01"},{"lineNumber":182,"author":{"gitId":"yokester98"},"content":"                        AddCommand.MESSAGE_USAGE_PROFESSOR));","lastModifiedDate":"2022-04-01"},{"lineNumber":183,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":184,"author":{"gitId":"yokester98"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_PHONE)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"yokester98"},"content":"                phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_EMAIL)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"yokester98"},"content":"                email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"yokester98"},"content":"            if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_OFFICE)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"yokester98"},"content":"                office \u003d ParserUtil.parseOffice(argMultimap.getValue(CliSyntax.PREFIX_OFFICE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"yokester98"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"yokester98"},"content":"            moduleCodes \u003d ParserUtil.parseMultipleModules(argMultimap.getAllValues(CliSyntax.PREFIX_MODULE));","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"            Professor professor \u003d new Professor(name, phone, email, tagList, office, moduleList);","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"yokester98"},"content":"            if (moduleCodes.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(professor);","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"yokester98"},"content":"            } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"yokester98"},"content":"                return new AddCommand(professor, moduleCodes);","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"yokester98"},"content":"        default:","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"yokester98"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS_OPTION);","lastModifiedDate":"2022-03-13"},{"lineNumber":204,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"benmurphyy":19,"yokester98":163,"-":24}},{"path":"src/main/java/unibook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     **/","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"benmurphyy":4,"-":58}},{"path":"src/main/java/unibook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"        private int startPosition;","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"benmurphyy":3,"-":145}},{"path":"src/main/java/unibook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"    public static final Prefix PREFIX_OPTION \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Prefix PREFIX_MEETING_TIME \u003d new Prefix(\"mt/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Prefix PREFIX_PROF_INDEX \u003d new Prefix(\"prof/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Prefix PREFIX_STU_INDEX \u003d new Prefix(\"stu/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Prefix PREFIX_KE_INDEX \u003d new Prefix(\"ke/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"    public static final Prefix PREFIX_NEWMOD \u003d new Prefix(\"nm/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"    public static final Prefix PREFIX_MEETINGTIME \u003d new Prefix(\"mt/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Prefix PREFIX_OFFICE \u003d new Prefix(\"of/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    public static final Prefix PREFIX_TYPE \u003d new Prefix(\"type/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    public static final Prefix PREFIX_VIEW \u003d new Prefix(\"v/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"    public static final Prefix PREFIX_KEYEVENT \u003d new Prefix(\"ke/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"benmurphyy":1,"ryanwalterlee":5,"yokester98":2,"sophiien":5,"-":12,"geraldneo567":2}},{"path":"src/main/java/unibook/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"    private static final String MODULE_MISSING \u003d \"Module code is missing! Example: m/modulecode\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    private static final String MODULE_AND_GROUP_MISSING \u003d \"Group name and Module code is missing! \"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"            + \"Example: m/modulecode g/groupname\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"    private static final String WRONG_OPTION \u003d \"Only o/module or o/group is allowed\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":"    private static final String GROUP_MISSING \u003d \"Group name is missing! Example: g/groupname\";","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"ryanwalterlee"},"content":"            // if no params provided case","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"ryanwalterlee"},"content":"            if (args.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"ryanwalterlee"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"ryanwalterlee"},"content":"                        DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"            boolean indexPresent \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"ryanwalterlee"},"content":"            boolean moduleCodePresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"ryanwalterlee"},"content":"            boolean optionPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"            boolean groupPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"ryanwalterlee"},"content":"            boolean meetingTimePresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"ryanwalterlee"},"content":"            boolean phonePresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"ryanwalterlee"},"content":"            boolean emailPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"ryanwalterlee"},"content":"            boolean tagPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"ryanwalterlee"},"content":"            boolean officePresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ryanwalterlee"},"content":"            boolean profIndexPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ryanwalterlee"},"content":"            boolean stuIndexPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"            boolean onlyIndexPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"ryanwalterlee"},"content":"            boolean keyEventPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"ryanwalterlee"},"content":"            if (Character.isDigit(args.trim().charAt(0))) {","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"ryanwalterlee"},"content":"                indexPresent \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ryanwalterlee"},"content":"            // delete m/MODULECODE case","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"ryanwalterlee"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"ryanwalterlee"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_MODULE,","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"ryanwalterlee"},"content":"                        CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_GROUP,","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"ryanwalterlee"},"content":"                        CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_TAG,","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"                        CliSyntax.PREFIX_OFFICE, CliSyntax.PREFIX_MEETING_TIME, CliSyntax.PREFIX_PROF_INDEX,","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"                        CliSyntax.PREFIX_STU_INDEX, CliSyntax.PREFIX_KE_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"ryanwalterlee"},"content":"            moduleCodePresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"ryanwalterlee"},"content":"            optionPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_OPTION);","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"ryanwalterlee"},"content":"            groupPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_GROUP);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"            meetingTimePresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MEETING_TIME);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"ryanwalterlee"},"content":"            phonePresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_PHONE);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"ryanwalterlee"},"content":"            emailPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_EMAIL);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"ryanwalterlee"},"content":"            tagPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"ryanwalterlee"},"content":"            officePresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_OFFICE);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"ryanwalterlee"},"content":"            profIndexPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_PROF_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"ryanwalterlee"},"content":"            stuIndexPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_STU_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"ryanwalterlee"},"content":"            keyEventPresent \u003d arePrefixesPresent(argMultimap, CliSyntax.PREFIX_KE_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"ryanwalterlee"},"content":"            onlyIndexPresent \u003d !moduleCodePresent \u0026\u0026 !optionPresent \u0026\u0026 !groupPresent \u0026\u0026 !meetingTimePresent","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"ryanwalterlee"},"content":"                    \u0026\u0026 !phonePresent \u0026\u0026 !emailPresent \u0026\u0026 !tagPresent \u0026\u0026 !officePresent \u0026\u0026 !profIndexPresent","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"ryanwalterlee"},"content":"                    \u0026\u0026 !stuIndexPresent \u0026\u0026 !keyEventPresent \u0026\u0026 indexPresent;","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"ryanwalterlee"},"content":"            // delete index case","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"ryanwalterlee"},"content":"            if (onlyIndexPresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (optionPresent) { // delete module code or group","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"ryanwalterlee"},"content":"                String option \u003d argMultimap.getValue(CliSyntax.PREFIX_OPTION).get().toLowerCase();","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"ryanwalterlee"},"content":"                if (option.equals(\"module\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"ryanwalterlee"},"content":"                    if (!moduleCodePresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"ryanwalterlee"},"content":"                        throw new ParseException(MODULE_MISSING);","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"                    }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"ryanwalterlee"},"content":"                    ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"ryanwalterlee"},"content":"                            argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"                    return new DeleteCommand(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"ryanwalterlee"},"content":"                } else if (option.equals(\"group\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"ryanwalterlee"},"content":"                    if (!moduleCodePresent \u0026\u0026 !groupPresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"ryanwalterlee"},"content":"                        throw new ParseException(MODULE_AND_GROUP_MISSING);","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"ryanwalterlee"},"content":"                    }","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"                    if (!moduleCodePresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"ryanwalterlee"},"content":"                        throw new ParseException(MODULE_MISSING);","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"                    }","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"                    if (!groupPresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"                        throw new ParseException(GROUP_MISSING);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"                    }","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"                    ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"                            argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"                    Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(CliSyntax.PREFIX_GROUP).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"ryanwalterlee"},"content":"                    return new DeleteCommand(moduleCode, group);","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"                } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"                    throw new ParseException(WRONG_OPTION);","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"ryanwalterlee"},"content":"                // delete person traits case","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"            } else if ((phonePresent || emailPresent || tagPresent || officePresent) \u0026\u0026 indexPresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"                String tag \u003d tagPresent ? argMultimap.getValue(CliSyntax.PREFIX_TAG).get() : null;","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index, phonePresent, emailPresent, tag, officePresent);","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (indexPresent \u0026\u0026 profIndexPresent) { // delete student from module on module page","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"ryanwalterlee"},"content":"                String profIndexString \u003d argMultimap.getValue(CliSyntax.PREFIX_PROF_INDEX).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"ryanwalterlee"},"content":"                Index profIndex \u003d ParserUtil.parseIndex(profIndexString);","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index, null, profIndex, null, null);","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (indexPresent \u0026\u0026 stuIndexPresent) { // delete prof from module on module page","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"ryanwalterlee"},"content":"                String stuIndexString \u003d argMultimap.getValue(CliSyntax.PREFIX_STU_INDEX).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"ryanwalterlee"},"content":"                Index stuIndex \u003d ParserUtil.parseIndex(stuIndexString);","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index, stuIndex, null, null, null);","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (indexPresent \u0026\u0026 groupPresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"ryanwalterlee"},"content":"                String groupName \u003d argMultimap.getValue(CliSyntax.PREFIX_GROUP).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"ryanwalterlee"},"content":"                System.out.println(groupName);","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"ryanwalterlee"},"content":"                Group group \u003d ParserUtil.parseGroup(groupName);","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index, group);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (indexPresent \u0026\u0026 meetingTimePresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"ryanwalterlee"},"content":"                String meetingIndexString \u003d argMultimap.getValue(CliSyntax.PREFIX_MEETING_TIME).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"ryanwalterlee"},"content":"                Index meetingIndex \u003d ParserUtil.parseIndex(meetingIndexString);","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index, null, null, meetingIndex, null);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"ryanwalterlee"},"content":"            } else if (indexPresent \u0026\u0026 keyEventPresent) {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"ryanwalterlee"},"content":"                Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"ryanwalterlee"},"content":"                String keyEventIndexString \u003d argMultimap.getValue(CliSyntax.PREFIX_KE_INDEX).get();","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"                Index keyEventIndex \u003d ParserUtil.parseIndex(keyEventIndexString);","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"                return new DeleteCommand(index, null, null, null, keyEventIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"ryanwalterlee"},"content":"            throw pe;","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"benmurphyy":7,"ryanwalterlee":143,"-":19}},{"path":"src/main/java/unibook/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_1;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_KEYEVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_MEETINGTIME;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_NEWMOD;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_OFFICE;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"sophiien"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sophiien"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sophiien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sophiien"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sophiien"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"sophiien"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"sophiien"},"content":"import unibook.logic.LogicManager;","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.EditCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand.EditGroupDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand.EditModuleDescriptor;","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"sophiien"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"sophiien"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":55,"author":{"gitId":"sophiien"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_OPTION,","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"sophiien"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"sophiien"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"sophiien"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"sophiien"},"content":"                        PREFIX_TAG,","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"sophiien"},"content":"                        PREFIX_MODULE,","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"sophiien"},"content":"                        PREFIX_NEWMOD,","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"sophiien"},"content":"                        PREFIX_GROUP,","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"sophiien"},"content":"                        PREFIX_MEETINGTIME,","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"sophiien"},"content":"                        PREFIX_TYPE,","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"sophiien"},"content":"                        PREFIX_DATETIME,","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"sophiien"},"content":"                        PREFIX_KEYEVENT,","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"sophiien"},"content":"                        PREFIX_OFFICE);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"sophiien"},"content":"        // Checks if there is proper indexing + proper option","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"sophiien"},"content":"            logger.info(index.toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_OPTION).equals(Optional.empty())) {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"sophiien"},"content":"                throw new ParseException((MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.MESSAGE_OPTION_NOT_FOUND));","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"sophiien"},"content":"                if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"person\")) {","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"sophiien"},"content":"                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.PERSON_MESSAGE_USAGE, pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"sophiien"},"content":"                } else if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"module\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"sophiien"},"content":"                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.MODULE_MESSAGE_USAGE, pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"sophiien"},"content":"                } else if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"group\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"sophiien"},"content":"                    // TODO CHANGED HERE","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"sophiien"},"content":"                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.GROUP_MESSAGE_USAGE, pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"sophiien"},"content":"                } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"sophiien"},"content":"                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.KEYEVENT_MESSAGE_USAGE, pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"sophiien"},"content":"        // Checks if index provided \u003c\u003d 0","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"sophiien"},"content":"        if (index.getOneBased() \u003c\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"sophiien"},"content":"            throw new ParseException((MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.PERSON_MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"sophiien"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"sophiien"},"content":"        EditModuleDescriptor editModuleDescriptor \u003d new EditModuleDescriptor();","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"sophiien"},"content":"        EditGroupDescriptor editGroupDescriptor \u003d new EditGroupDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"sophiien"},"content":"        if (argMultimap.getValue(PREFIX_OPTION).equals(Optional.empty())) {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"sophiien"},"content":"            throw new ParseException((MESSAGE_INVALID_COMMAND_FORMAT_1 + EditCommand.PERSON_MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"sophiien"},"content":"        if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"person\")) {","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_OFFICE).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setOffice(ParserUtil.parseOffice(argMultimap.getValue(PREFIX_OFFICE).get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"sophiien"},"content":"            Optional\u003cModuleCode\u003e moduleCodeToAdd;","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"sophiien"},"content":"            Optional\u003cString\u003e groupName;","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_MODULE).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_GROUP).isEmpty()","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"sophiien"},"content":"                || argMultimap.getValue(PREFIX_GROUP).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_MODULE).isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"sophiien"},"content":"                // TODO add error command to show that need both module and group","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"sophiien"},"content":"                throw new ParseException(EditCommand.MESSAGE_ADDTOGROUP_WRONG_FORMAT);","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"sophiien"},"content":"            } else if (argMultimap.getValue(PREFIX_MODULE).isPresent()","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"sophiien"},"content":"                    \u0026\u0026 argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"sophiien"},"content":"                moduleCodeToAdd \u003d Optional.of(ParserUtil.parseModuleCode(argMultimap","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"sophiien"},"content":"                        .getValue(PREFIX_MODULE)","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"sophiien"},"content":"                        .get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"sophiien"},"content":"                groupName \u003d Optional.of(ParserUtil.parseGroupString(argMultimap.getValue(PREFIX_GROUP).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setModCode(moduleCodeToAdd);","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setGroupName(groupName);","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"sophiien"},"content":"            } else { }","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"sophiien"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"sophiien"},"content":"            Optional\u003cSet\u003cModuleCode\u003e\u003e module \u003d argMultimap.getValue(PREFIX_NEWMOD).isPresent()","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"sophiien"},"content":"                    ? parseModulesForEdit(argMultimap.getValue(PREFIX_NEWMOD).get().toUpperCase())","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"sophiien"},"content":"                    : Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"sophiien"},"content":"            if (module.isEmpty() \u0026\u0026 !editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":148,"author":{"gitId":"sophiien"},"content":"            if (module.isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"sophiien"},"content":"                System.out.println(module.get().iterator().next().getClass().getName());","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"sophiien"},"content":"                return new EditCommand(index, editPersonDescriptor, module.get().iterator().next());","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":153,"author":{"gitId":"sophiien"},"content":"        } else if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"module\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setModuleName(ParserUtil.parseModuleName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-07"},{"lineNumber":156,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":157,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":158,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setModuleCode(ParserUtil.parseModuleCode(argMultimap","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"sophiien"},"content":"                        .getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":161,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"sophiien"},"content":"            if (!editModuleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":163,"author":{"gitId":"sophiien"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-07"},{"lineNumber":164,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":165,"author":{"gitId":"sophiien"},"content":"            return new EditCommand(index, editModuleDescriptor);","lastModifiedDate":"2022-03-07"},{"lineNumber":166,"author":{"gitId":"sophiien"},"content":"        } else if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"group\")) { // TODO CHANGED HERE","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"sophiien"},"content":"            if (!argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"sophiien"},"content":"                throw new ParseException(EditCommand.MESSAGE_EDIT_MISSING);","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"sophiien"},"content":"                ModuleCode modCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"sophiien"},"content":"                System.out.println(modCode.toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"sophiien"},"content":"                editGroupDescriptor.setModuleCode(modCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"sophiien"},"content":"                if (argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"sophiien"},"content":"                    editGroupDescriptor.setGroupName(ParserUtil.parseGroupString(argMultimap","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"sophiien"},"content":"                            .getValue(PREFIX_GROUP).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"sophiien"},"content":"                if (argMultimap.getValue(PREFIX_MEETINGTIME).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"sophiien"},"content":"                    try {","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"sophiien"},"content":"                        editGroupDescriptor.setMeetingTimes(ParserUtil.parseMeetingTime(argMultimap","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"sophiien"},"content":"                                .getValue(PREFIX_MEETINGTIME).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"sophiien"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"sophiien"},"content":"                        throw new ParseException(EditCommand.MESSAGE_WRONG_DATE_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"sophiien"},"content":"                    }","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"sophiien"},"content":"                if (!editGroupDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"sophiien"},"content":"                    throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"sophiien"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"sophiien"},"content":"                // TODO CHANGED HERE","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setGroups(editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"sophiien"},"content":"                editPersonDescriptor.setGroups(editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"sophiien"},"content":"                // this index is for the index of the group within the module","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"sophiien"},"content":"                System.out.println(\"created edit command\");","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"sophiien"},"content":"                return new EditCommand(index, editPersonDescriptor, editModuleDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"sophiien"},"content":"        } else if (argMultimap.getValue(PREFIX_OPTION).get().equals(\"keyevent\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"sophiien"},"content":"            ModuleKeyEvent mod \u003d new ModuleKeyEvent();","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"sophiien"},"content":"            Optional\u003cModuleKeyEvent.KeyEventType\u003e eventType \u003d Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"sophiien"},"content":"            Optional\u003cLocalDateTime\u003e dt \u003d Optional.empty();","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"sophiien"},"content":"            if (!argMultimap.getValue(PREFIX_KEYEVENT).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"sophiien"},"content":"                throw new ParseException(EditCommand.MESSAGE_KEYEVENT_INDEX_MISSING);","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"sophiien"},"content":"                logger.info(\"hello\");","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"sophiien"},"content":"                logger.info(argMultimap.getValue(PREFIX_KEYEVENT).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"sophiien"},"content":"                Index i \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_KEYEVENT).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"sophiien"},"content":"                logger.info(\"bye\");","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"sophiien"},"content":"                int integer \u003d i.getZeroBased();","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"sophiien"},"content":"                System.out.println(integer);","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setIdx(integer);","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"sophiien"},"content":"                System.out.println(editModuleDescriptor.getIdx());","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_TYPE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"sophiien"},"content":"                eventType \u003d Optional.of(ParserUtil.parseKeyEventTypeString(argMultimap.getValue(PREFIX_TYPE).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"sophiien"},"content":"            if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"sophiien"},"content":"                dt \u003d Optional.of(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"sophiien"},"content":"            if (eventType.isEmpty() \u0026\u0026 dt.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"sophiien"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"sophiien"},"content":"            } else if (eventType.isPresent() \u0026\u0026 dt.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"sophiien"},"content":"                mod.setKeyDateType(eventType.get());","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setKeyEvents(mod);","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"sophiien"},"content":"            } else if (dt.isPresent() \u0026\u0026 eventType.isEmpty()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"sophiien"},"content":"                mod.setDateTime(dt.get());","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setKeyEvents(mod);","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"sophiien"},"content":"                mod.setDateTime(dt.get());","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"sophiien"},"content":"                mod.setKeyDateType(eventType.get());","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"sophiien"},"content":"                editModuleDescriptor.setKeyEvents(mod);","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"sophiien"},"content":"            System.out.println(editModuleDescriptor.getIdx() + \"help\");","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"sophiien"},"content":"            return new EditCommand(index, editModuleDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"sophiien"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"sophiien"},"content":"            System.out.println(argMultimap.getValue(PREFIX_OPTION).get());","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"sophiien"},"content":"            throw new ParseException(EditCommand.MESSAGE_OPTION_NOT_FOUND);","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":260,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":261,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":262,"author":{"gitId":"sophiien"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModule\u003e} if {@code modules} is non-empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":263,"author":{"gitId":"sophiien"},"content":"     * If {@code modules} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-08"},{"lineNumber":264,"author":{"gitId":"sophiien"},"content":"     * {@code Set\u003cModule\u003e} containing zero modules.","lastModifiedDate":"2022-03-08"},{"lineNumber":265,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":266,"author":{"gitId":"sophiien"},"content":"    private Optional\u003cSet\u003cModuleCode\u003e\u003e parseModulesForEdit(String modules) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"sophiien"},"content":"        if (modules \u003d\u003d \" \") {","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"sophiien"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"sophiien"},"content":"        Set\u003cModuleCode\u003e moduleSet \u003d new HashSet\u003cModuleCode\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"sophiien"},"content":"        ModuleCode modCode \u003d ParserUtil.parseModuleCode(modules);","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"sophiien"},"content":"        moduleSet.add(modCode);","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"sophiien"},"content":"        return Optional.of(moduleSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"benmurphyy":6,"sophiien":220,"-":49}},{"path":"src/main/java/unibook/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.FindCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"benmurphyy":6,"sophiien":1,"-":27}},{"path":"src/main/java/unibook/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import unibook.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.commands.ListCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-04-04"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"            ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_OPTION, CliSyntax.PREFIX_TYPE,","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"                CliSyntax.PREFIX_MODULE, CliSyntax.PREFIX_VIEW, CliSyntax.PREFIX_GROUP,","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"                CliSyntax.PREFIX_MEETINGTIME, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_KEYEVENT,","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"                CliSyntax.PREFIX_DATETIME);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        //List all (empty list command)","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        if (args.strip().equals(\"\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        //List command that does not have o/OPTION","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_OPTION)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"            return parseNoOption(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        String option \u003d argMultimap.getValue(CliSyntax.PREFIX_OPTION).get();","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        if (option.strip().isEmpty()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"            //The o/OPTION field cannot be blank.","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Option\"));","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        //List command that has o/OPTION","lastModifiedDate":"2022-04-04"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        switch (option) {","lastModifiedDate":"2022-04-04"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        case \"view\":","lastModifiedDate":"2022-04-04"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"            return viewOption(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        case \"module\":","lastModifiedDate":"2022-04-04"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"            return moduleOption(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        case \"group\":","lastModifiedDate":"2022-04-04"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"            return groupOption(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        default:","lastModifiedDate":"2022-04-04"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"            //The o/OPTION field is invalid.","lastModifiedDate":"2022-04-04"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-04-04"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"                Messages.MESSAGE_INVALID_LIST_OPTION));","lastModifiedDate":"2022-04-04"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"    //Helper methods for commands without o/OPTION","lastModifiedDate":"2022-04-04"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand dateTimeAndEventAndNamePresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        //On module page, checking for modules that contain a specific name with specific date, key event","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list n/software dt/2022-05-04 ke/exam","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        String dateString \u003d argMultimap.getValue(CliSyntax.PREFIX_DATETIME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        String keyEvent \u003d argMultimap.getValue(CliSyntax.PREFIX_KEYEVENT).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"        String name \u003d argMultimap.getValue(CliSyntax.PREFIX_NAME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"        if (dateString.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Date\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"        if (keyEvent.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Key Event\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"        if (name.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Name\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"        if (!ModuleName.isValidModuleName(name)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_MODULE_NAME));","lastModifiedDate":"2022-04-04"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(name, dateString, keyEvent.toUpperCase(),","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"                ListCommand.ListCommandType.MODULESWITHDATEANDKEYEVENTANDNAME);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand dateTimeAndEventPresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"        //On module page, checking for modules with specific date and key event","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list dt/2022-05-04 ke/exam","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"        String dateString \u003d argMultimap.getValue(CliSyntax.PREFIX_DATETIME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"        String keyEvent \u003d argMultimap.getValue(CliSyntax.PREFIX_KEYEVENT).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"        if (dateString.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Date\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"        if (keyEvent.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Key Event\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(dateString, keyEvent.toUpperCase(),","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"                ListCommand.ListCommandType.MODULESWITHDATEANDKEYEVENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand nameAndDateTimePresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"        //On module page, checking for modules with specific name match and date time","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"        String dateString \u003d argMultimap.getValue(CliSyntax.PREFIX_DATETIME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"        String name \u003d argMultimap.getValue(CliSyntax.PREFIX_NAME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"        if (dateString.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Date\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"        if (name.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Name\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":125,"author":{"gitId":"geraldneo567"},"content":"        if (!ModuleName.isValidModuleName(name)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_MODULE_NAME));","lastModifiedDate":"2022-04-04"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(dateString, name,","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"                ListCommand.ListCommandType.MODULESWITHDATEANDNAME);","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand nameAndEventPresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":134,"author":{"gitId":"geraldneo567"},"content":"        //On module page, checking for modules with specific name match and key event","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"geraldneo567"},"content":"        String name \u003d argMultimap.getValue(CliSyntax.PREFIX_NAME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"geraldneo567"},"content":"        String keyEvent \u003d argMultimap.getValue(CliSyntax.PREFIX_KEYEVENT).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"        if (name.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Name\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":140,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":141,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":142,"author":{"gitId":"geraldneo567"},"content":"        if (keyEvent.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":143,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Key Event\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":144,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":145,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":146,"author":{"gitId":"geraldneo567"},"content":"        if (!ModuleName.isValidModuleName(name)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_MODULE_NAME));","lastModifiedDate":"2022-04-04"},{"lineNumber":148,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(name, keyEvent,","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"geraldneo567"},"content":"                ListCommand.ListCommandType.MODULESWITHNAMEANDKEYEVENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":154,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand typePresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":155,"author":{"gitId":"geraldneo567"},"content":"        //Listing types of people on people page","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list type/professors","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"geraldneo567"},"content":"        String type \u003d argMultimap.getValue(CliSyntax.PREFIX_TYPE).get().toLowerCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":159,"author":{"gitId":"geraldneo567"},"content":"        if (type.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":160,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Type\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":161,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":162,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":163,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":164,"author":{"gitId":"geraldneo567"},"content":"        if (!(type.equals(\"professors\") || type.equals(\"students\"))) {","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"geraldneo567"},"content":"            //invalid type argument","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"geraldneo567"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, Messages.MESSAGE_WRONG_TYPE));","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":170,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(type, ListCommand.ListCommandType.TYPE);","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand groupPresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"        //Group prefix present without option field (Listing groups from group page)","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"geraldneo567"},"content":"        String group \u003d argMultimap.getValue(CliSyntax.PREFIX_GROUP).get().toLowerCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"        if (group.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Group\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":179,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"            //list g/W16-1 m/module","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"geraldneo567"},"content":"            String module \u003d argMultimap.getValue(CliSyntax.PREFIX_MODULE).get().toLowerCase();","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":185,"author":{"gitId":"geraldneo567"},"content":"            if (!ModuleCode.isValidModuleCode(module)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":186,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(Messages.MESSAGE_INVALID_MODULE_CODE);","lastModifiedDate":"2022-04-04"},{"lineNumber":187,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":188,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":189,"author":{"gitId":"geraldneo567"},"content":"            if (module.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":190,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Module\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":191,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":192,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":193,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":194,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommand(group, module, ListCommand.ListCommandType.SPECIFICGROUPFROMGROUPVIEW);","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list g/W16-1","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(group, ListCommand.ListCommandType.GROUPFROMGROUPVIEW);","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":200,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":201,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand meetingPresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":202,"author":{"gitId":"geraldneo567"},"content":"        //Find all groups with given meeting time on group page","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list mt/\u003cYYYY-MM-DD\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"geraldneo567"},"content":"        String dateString \u003d argMultimap.getValue(CliSyntax.PREFIX_MEETINGTIME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":207,"author":{"gitId":"geraldneo567"},"content":"        if (dateString.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":208,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Meeting\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":209,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":210,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":211,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(dateString, ListCommand.ListCommandType.GROUPWITHMEETINGDATE);","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":213,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":214,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand datePresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":215,"author":{"gitId":"geraldneo567"},"content":"        String dateString \u003d argMultimap.getValue(CliSyntax.PREFIX_DATETIME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":217,"author":{"gitId":"geraldneo567"},"content":"        if (dateString.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":218,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Date\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":219,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":220,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":221,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(dateString, ListCommand.ListCommandType.MODULESWITHEVENTDATE);","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":223,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":224,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand eventPresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":225,"author":{"gitId":"geraldneo567"},"content":"        //Listing modules that contain the given key event","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list ke/exam, list ke/quiz","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"geraldneo567"},"content":"        String keyEvent \u003d argMultimap.getValue(CliSyntax.PREFIX_KEYEVENT).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":229,"author":{"gitId":"geraldneo567"},"content":"        if (keyEvent.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":230,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Key Event\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":231,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":232,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":233,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(keyEvent, ListCommand.ListCommandType.MODULESWITHKEYEVENT);","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":235,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":236,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand namePresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":237,"author":{"gitId":"geraldneo567"},"content":"        //Listing modules that contain the given name on module page","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"geraldneo567"},"content":"        // e.g. list n/software, list n/operating systems","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"geraldneo567"},"content":"        // Name only","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"geraldneo567"},"content":"        String name \u003d argMultimap.getValue(CliSyntax.PREFIX_NAME).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":242,"author":{"gitId":"geraldneo567"},"content":"        if (name.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":243,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Name\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":244,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":245,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":246,"author":{"gitId":"geraldneo567"},"content":"        if (!ModuleName.isValidModuleName(name)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":247,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_MODULE_NAME));","lastModifiedDate":"2022-04-04"},{"lineNumber":248,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":249,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":250,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(name, ListCommand.ListCommandType.MODULEWITHNAMEMATCH);","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":252,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":253,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand modulePresent(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":254,"author":{"gitId":"geraldneo567"},"content":"        //listing module code in module view","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"geraldneo567"},"content":"        String moduleCode \u003d argMultimap.getValue(CliSyntax.PREFIX_MODULE).get().toUpperCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"        if (moduleCode.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Module\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":259,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":260,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":261,"author":{"gitId":"geraldneo567"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":262,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_MODULE_CODE);","lastModifiedDate":"2022-04-04"},{"lineNumber":263,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":264,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":265,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(moduleCode, ListCommand.ListCommandType.MODULE);","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":267,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":268,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":269,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":270,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand parseNoOption(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":271,"author":{"gitId":"geraldneo567"},"content":"        //Commands that have no option field","lastModifiedDate":"2022-04-04"},{"lineNumber":272,"author":{"gitId":"geraldneo567"},"content":"        //Very specific command chain with 2-3 arguments","lastModifiedDate":"2022-04-04"},{"lineNumber":273,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DATETIME, CliSyntax.PREFIX_KEYEVENT,","lastModifiedDate":"2022-04-04"},{"lineNumber":274,"author":{"gitId":"geraldneo567"},"content":"                CliSyntax.PREFIX_NAME)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":275,"author":{"gitId":"geraldneo567"},"content":"            return dateTimeAndEventAndNamePresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":276,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":277,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":278,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DATETIME, CliSyntax.PREFIX_KEYEVENT)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":279,"author":{"gitId":"geraldneo567"},"content":"            return dateTimeAndEventPresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":280,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":281,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":282,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_DATETIME)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":283,"author":{"gitId":"geraldneo567"},"content":"            return nameAndDateTimePresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":284,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":285,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":286,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_KEYEVENT)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":287,"author":{"gitId":"geraldneo567"},"content":"            return nameAndEventPresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":288,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":289,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":290,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_TYPE)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":291,"author":{"gitId":"geraldneo567"},"content":"            return typePresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":292,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":293,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":294,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_GROUP)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":295,"author":{"gitId":"geraldneo567"},"content":"            return groupPresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":296,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":297,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":298,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MEETINGTIME)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":299,"author":{"gitId":"geraldneo567"},"content":"            return meetingPresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":300,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":301,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":302,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DATETIME)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":303,"author":{"gitId":"geraldneo567"},"content":"            return datePresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":304,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":305,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":306,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_KEYEVENT)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":307,"author":{"gitId":"geraldneo567"},"content":"            return eventPresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":308,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":309,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":310,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":311,"author":{"gitId":"geraldneo567"},"content":"            return namePresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":312,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":313,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":314,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":315,"author":{"gitId":"geraldneo567"},"content":"            return modulePresent(argMultimap);","lastModifiedDate":"2022-04-04"},{"lineNumber":316,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":317,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":318,"author":{"gitId":"geraldneo567"},"content":"        throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":319,"author":{"gitId":"geraldneo567"},"content":"                ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":320,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":321,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":322,"author":{"gitId":"geraldneo567"},"content":"    //Helper methods for commands with o/OPTION field","lastModifiedDate":"2022-04-04"},{"lineNumber":323,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand viewOption(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":324,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_VIEW)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"geraldneo567"},"content":"            String view \u003d argMultimap.getValue(CliSyntax.PREFIX_VIEW).get().toLowerCase();","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":327,"author":{"gitId":"geraldneo567"},"content":"            if (view.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":328,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"View\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":329,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":330,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":331,"author":{"gitId":"geraldneo567"},"content":"            if (view.equals(\"modules\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":332,"author":{"gitId":"geraldneo567"},"content":"                //Change to module view","lastModifiedDate":"2022-03-26"},{"lineNumber":333,"author":{"gitId":"geraldneo567"},"content":"                return new ListCommand(ListCommand.ListView.MODULES, ListCommand.ListCommandType.VIEW);","lastModifiedDate":"2022-03-26"},{"lineNumber":334,"author":{"gitId":"geraldneo567"},"content":"            } else if (view.equals(\"people\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"geraldneo567"},"content":"                //Change to people view","lastModifiedDate":"2022-03-26"},{"lineNumber":336,"author":{"gitId":"geraldneo567"},"content":"                return new ListCommand(ListCommand.ListView.PEOPLE, ListCommand.ListCommandType.VIEW);","lastModifiedDate":"2022-03-26"},{"lineNumber":337,"author":{"gitId":"geraldneo567"},"content":"            } else if (view.equals(\"groups\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":338,"author":{"gitId":"geraldneo567"},"content":"                //Change to group view","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"geraldneo567"},"content":"                return new ListCommand(ListCommand.ListView.GROUPS, ListCommand.ListCommandType.VIEW);","lastModifiedDate":"2022-03-26"},{"lineNumber":340,"author":{"gitId":"geraldneo567"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":341,"author":{"gitId":"geraldneo567"},"content":"                //Invalid view argument given","lastModifiedDate":"2022-03-26"},{"lineNumber":342,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":343,"author":{"gitId":"geraldneo567"},"content":"                        Messages.MESSAGE_INVALID_VIEW));","lastModifiedDate":"2022-03-26"},{"lineNumber":344,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":345,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":346,"author":{"gitId":"geraldneo567"},"content":"            //View type argument not present","lastModifiedDate":"2022-03-26"},{"lineNumber":347,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-26"},{"lineNumber":348,"author":{"gitId":"geraldneo567"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":349,"author":{"gitId":"geraldneo567"},"content":"                            Messages.MESSAGE_VIEW_FIELD_MISSING));","lastModifiedDate":"2022-03-26"},{"lineNumber":350,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":351,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":352,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":353,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand moduleOption(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":354,"author":{"gitId":"geraldneo567"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":355,"author":{"gitId":"geraldneo567"},"content":"            //module argument not present","lastModifiedDate":"2022-03-26"},{"lineNumber":356,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":357,"author":{"gitId":"geraldneo567"},"content":"                    Messages.MESSAGE_MODULE_FIELD_MISSING));","lastModifiedDate":"2022-03-26"},{"lineNumber":358,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":359,"author":{"gitId":"geraldneo567"},"content":"        String moduleCode \u003d argMultimap.getValue(CliSyntax.PREFIX_MODULE).get().toUpperCase();","lastModifiedDate":"2022-03-26"},{"lineNumber":360,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":361,"author":{"gitId":"geraldneo567"},"content":"        if (moduleCode.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":362,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Module\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":363,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":364,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":365,"author":{"gitId":"geraldneo567"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":366,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_MODULE_CODE);","lastModifiedDate":"2022-04-04"},{"lineNumber":367,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":368,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":369,"author":{"gitId":"geraldneo567"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_TYPE)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":370,"author":{"gitId":"geraldneo567"},"content":"            //list module with specific type, e.g. list o/module m/cs2103 ty/professors","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"geraldneo567"},"content":"            String type \u003d argMultimap.getValue(CliSyntax.PREFIX_TYPE).get().toLowerCase();","lastModifiedDate":"2022-03-14"},{"lineNumber":372,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":373,"author":{"gitId":"geraldneo567"},"content":"            if (type.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":374,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Type\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":375,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":376,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":377,"author":{"gitId":"geraldneo567"},"content":"            if (!(type.equals(\"professors\") || type.equals(\"students\"))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":378,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":379,"author":{"gitId":"geraldneo567"},"content":"                        String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":380,"author":{"gitId":"geraldneo567"},"content":"                                Messages.MESSAGE_WRONG_TYPE));","lastModifiedDate":"2022-03-26"},{"lineNumber":381,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":382,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommand(moduleCode, type, ListCommand.ListCommandType.MODULEANDTYPE);","lastModifiedDate":"2022-03-26"},{"lineNumber":383,"author":{"gitId":"geraldneo567"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":384,"author":{"gitId":"geraldneo567"},"content":"            //list module with no specific type e.g. list o/module m/cs2103 (in people page)","lastModifiedDate":"2022-03-28"},{"lineNumber":385,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":386,"author":{"gitId":"geraldneo567"},"content":"            if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":387,"author":{"gitId":"geraldneo567"},"content":"                throw new ParseException(Messages.MESSAGE_INVALID_MODULE_CODE);","lastModifiedDate":"2022-04-04"},{"lineNumber":388,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":389,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":390,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommand(moduleCode, ListCommand.ListCommandType.MODULE);","lastModifiedDate":"2022-03-26"},{"lineNumber":391,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":392,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":393,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":394,"author":{"gitId":"geraldneo567"},"content":"    private static ListCommand groupOption(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-04-04"},{"lineNumber":395,"author":{"gitId":"geraldneo567"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_GROUP)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":396,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-14"},{"lineNumber":397,"author":{"gitId":"geraldneo567"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":398,"author":{"gitId":"geraldneo567"},"content":"                            Messages.MESSAGE_GROUP_FIELD_MISSING));","lastModifiedDate":"2022-03-26"},{"lineNumber":399,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":400,"author":{"gitId":"geraldneo567"},"content":"        String group \u003d argMultimap.getValue(CliSyntax.PREFIX_GROUP).get().toLowerCase();","lastModifiedDate":"2022-03-26"},{"lineNumber":401,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"geraldneo567"},"content":"        if (group.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":403,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Group\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":404,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":405,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":406,"author":{"gitId":"geraldneo567"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":407,"author":{"gitId":"geraldneo567"},"content":"            //Module page listing group","lastModifiedDate":"2022-03-28"},{"lineNumber":408,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommand(group, ListCommand.ListCommandType.GROUPFROMMODULEVIEW);","lastModifiedDate":"2022-03-28"},{"lineNumber":409,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":410,"author":{"gitId":"geraldneo567"},"content":"        //People page listing group in a specific module","lastModifiedDate":"2022-03-28"},{"lineNumber":411,"author":{"gitId":"geraldneo567"},"content":"        //e.g. list o/group m/cs2103 g/w16-1","lastModifiedDate":"2022-03-28"},{"lineNumber":412,"author":{"gitId":"geraldneo567"},"content":"        String module \u003d argMultimap.getValue(CliSyntax.PREFIX_MODULE).get().toUpperCase();","lastModifiedDate":"2022-03-28"},{"lineNumber":413,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":414,"author":{"gitId":"geraldneo567"},"content":"        if (module.strip().isEmpty()) {","lastModifiedDate":"2022-04-03"},{"lineNumber":415,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_FIELD_EMPTY, \"Module\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":416,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":417,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":418,"author":{"gitId":"geraldneo567"},"content":"        return new ListCommand(group, module, ListCommand.ListCommandType.PEOPLEINGROUP);","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":420,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":421,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"benmurphyy":1,"geraldneo567":420}},{"path":"src/main/java/unibook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"benmurphyy":4,"-":13}},{"path":"src/main/java/unibook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.StringUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleKeyEvent.KeyEventType;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"    public static final String MESSAGE_WRONG_MT_FORMAT \u003d \"To edit meeting times, must include index of meeting time. \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"sophiien"},"content":"            + \"For example, to edit the first index of meeting times to 12th December 2022 4.45pm: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"sophiien"},"content":"            + \"mt/1 2020-12-12 16:45\";","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"sophiien"},"content":"    // find a way to find the module code inside the storage database then update","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"sophiien"},"content":"     * Parses a {@code String moduleName} into an {@code moduleName}.","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"sophiien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"sophiien"},"content":"     * @throws ParseException if the given {@code moduleName} is invalid.","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"sophiien"},"content":"    public static ModuleName parseModuleName(String moduleName) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"sophiien"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"sophiien"},"content":"        String trimmedModule \u003d moduleName.trim();","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"sophiien"},"content":"        if (!ModuleName.isValidModuleName(trimmedModule)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"sophiien"},"content":"            throw new ParseException(ModuleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"sophiien"},"content":"        return new ModuleName(trimmedModule);","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"sophiien"},"content":"     * Parses a {@code String moduleCode} into an {@code moduleCode}.","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"sophiien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":124,"author":{"gitId":"sophiien"},"content":"     * @throws ParseException if the given {@code moduleCode} is invalid.","lastModifiedDate":"2022-03-07"},{"lineNumber":125,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":126,"author":{"gitId":"sophiien"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"sophiien"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-07"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"        String trimmedCode \u003d moduleCode.trim().toUpperCase(Locale.ROOT);","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"sophiien"},"content":"        System.out.println(\"parseModuleCode\");","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"sophiien"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedCode)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"sophiien"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":133,"author":{"gitId":"sophiien"},"content":"        return new ModuleCode(trimmedCode);","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":135,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"yokester98"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a single {@code Set\u003cModule\u003e}.","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"sophiien"},"content":"    public static Set\u003cModule\u003e parseModules(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"sophiien"},"content":"        requireNonNull(modules);","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"sophiien"},"content":"        final Set\u003cModule\u003e moduleSet \u003d new HashSet\u003cModule\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"sophiien"},"content":"        if (modules.toArray().length \u003d\u003d 0) {","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"sophiien"},"content":"            return moduleSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"sophiien"},"content":"        String moduleName \u003d (String) modules.toArray()[0];","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"sophiien"},"content":"        ModuleName modName \u003d new ModuleName(moduleName);","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"sophiien"},"content":"        String moduleCode \u003d (String) modules.toArray()[1];","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"sophiien"},"content":"        ModuleCode modCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"sophiien"},"content":"        Module newmod \u003d new Module(modName, modCode);","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"sophiien"},"content":"        moduleSet.add(newmod);","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"sophiien"},"content":"        return moduleSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"yokester98"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModuleCode\u003e}.","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"yokester98"},"content":"    public static Set\u003cModuleCode\u003e parseMultipleModules(Collection\u003cString\u003e moduleCodes) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCodes);","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"yokester98"},"content":"        final Set\u003cModuleCode\u003e moduleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"yokester98"},"content":"        if (moduleCodes.toArray().length \u003d\u003d 0) {","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"yokester98"},"content":"            return moduleSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"yokester98"},"content":"        for (String moduleCode : moduleCodes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"yokester98"},"content":"            ModuleCode mc \u003d new ModuleCode(moduleCode.toUpperCase());","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"yokester98"},"content":"            moduleSet.add(mc);","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"yokester98"},"content":"        return moduleSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"yokester98"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModuleCode\u003e}.","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"yokester98"},"content":"    public static Set\u003cModuleCode\u003e parseMultipleModulesAndGroups(Collection\u003cString\u003e moduleCodesAndGroups)","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"yokester98"},"content":"        throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCodesAndGroups);","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"yokester98"},"content":"        final Set\u003cModuleCode\u003e moduleSet \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"yokester98"},"content":"        ModuleCode mc;","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"yokester98"},"content":"        if (moduleCodesAndGroups.toArray().length \u003d\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"yokester98"},"content":"            return moduleSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"yokester98"},"content":"        for (String moduleCode : moduleCodesAndGroups) {","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"yokester98"},"content":"            if (moduleCode.contains(\" g/\")) {","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"yokester98"},"content":"                String[] strArr \u003d moduleCode.split(\" g/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"yokester98"},"content":"                if (strArr[0].contains(\" \")) {","lastModifiedDate":"2022-04-01"},{"lineNumber":213,"author":{"gitId":"yokester98"},"content":"                    throw new ParseException(\"Module codes should only contain alphanumeric \"","lastModifiedDate":"2022-04-01"},{"lineNumber":214,"author":{"gitId":"yokester98"},"content":"                        + \"characters and cannot contain spaces.\");","lastModifiedDate":"2022-04-01"},{"lineNumber":215,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-04-01"},{"lineNumber":216,"author":{"gitId":"yokester98"},"content":"                mc \u003d new ModuleCode(strArr[0].toUpperCase());","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"yokester98"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"yokester98"},"content":"                if (moduleCode.contains(\" \")) {","lastModifiedDate":"2022-04-01"},{"lineNumber":219,"author":{"gitId":"yokester98"},"content":"                    throw new ParseException(\"Module codes should only contain alphanumeric \"","lastModifiedDate":"2022-04-01"},{"lineNumber":220,"author":{"gitId":"yokester98"},"content":"                        + \"characters and cannot contain spaces.\");","lastModifiedDate":"2022-04-01"},{"lineNumber":221,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-04-01"},{"lineNumber":222,"author":{"gitId":"yokester98"},"content":"                mc \u003d new ModuleCode(moduleCode.toUpperCase());","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"yokester98"},"content":"            moduleSet.add(mc);","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"yokester98"},"content":"        return moduleSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":230,"author":{"gitId":"yokester98"},"content":"     * Parses {@code String office} into an {@code Office}.","lastModifiedDate":"2022-03-13"},{"lineNumber":231,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":232,"author":{"gitId":"yokester98"},"content":"    public static Office parseOffice(String office) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"yokester98"},"content":"        requireNonNull(office);","lastModifiedDate":"2022-03-13"},{"lineNumber":234,"author":{"gitId":"yokester98"},"content":"        String trimmedOffice \u003d office.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":235,"author":{"gitId":"yokester98"},"content":"        if (!Office.isValidOffice(trimmedOffice)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":236,"author":{"gitId":"yokester98"},"content":"            throw new ParseException(Office.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":237,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":238,"author":{"gitId":"yokester98"},"content":"        return new Office(trimmedOffice);","lastModifiedDate":"2022-03-13"},{"lineNumber":239,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":240,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"yokester98"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModuleCode\u003e}.","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"yokester98"},"content":"    public static ArrayList\u003cLinkedHashSet\u003cString\u003e\u003e parseMultipleGroups(Collection\u003cString\u003e moduleCodesAndGroups)","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"yokester98"},"content":"        throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"yokester98"},"content":"        requireNonNull(moduleCodesAndGroups);","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"yokester98"},"content":"        final ArrayList\u003cLinkedHashSet\u003cString\u003e\u003e groupList \u003d new ArrayList\u003cLinkedHashSet\u003cString\u003e\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"yokester98"},"content":"        if (moduleCodesAndGroups.toArray().length \u003d\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"yokester98"},"content":"            return groupList;","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"yokester98"},"content":"        for (String moduleCodeAndGroup : moduleCodesAndGroups) {","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"yokester98"},"content":"            LinkedHashSet\u003cString\u003e groupNamesSet \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"yokester98"},"content":"            if (moduleCodeAndGroup.contains(\"g/\")) {","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"yokester98"},"content":"                String[] strArr \u003d moduleCodeAndGroup.split(\" g/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"yokester98"},"content":"                for (int i \u003d 1; i \u003c strArr.length; i++) {","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"yokester98"},"content":"                    groupNamesSet.add(strArr[i]);","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"yokester98"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"yokester98"},"content":"            groupList.add(groupNamesSet);","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"yokester98"},"content":"        return groupList;","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":265,"author":{"gitId":"sophiien"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"sophiien"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"sophiien"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"sophiien"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"sophiien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"sophiien"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"sophiien"},"content":"    public static List\u003cObject\u003e parseMeetingTime(String meetingTime) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":274,"author":{"gitId":"sophiien"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"sophiien"},"content":"        System.out.println(meetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"sophiien"},"content":"        String trimmedTag \u003d meetingTime.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"sophiien"},"content":"        List\u003cObject\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":278,"author":{"gitId":"sophiien"},"content":"        String[] arr \u003d meetingTime.split(\" \");","lastModifiedDate":"2022-03-27"},{"lineNumber":279,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":280,"author":{"gitId":"sophiien"},"content":"        //TODO create the parse exception to validate meetingTime to","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"sophiien"},"content":"        if (arr.length !\u003d 3) {","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"sophiien"},"content":"            throw new ParseException(MESSAGE_WRONG_MT_FORMAT);","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"sophiien"},"content":"        // TODO parse the index and the meeting time of the input","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"sophiien"},"content":"        int idxOfMeetingTime \u003d Integer.parseInt(meetingTime.substring(0 , 1));","lastModifiedDate":"2022-03-27"},{"lineNumber":288,"author":{"gitId":"sophiien"},"content":"        String actualMeetingTime \u003d meetingTime.substring(2);","lastModifiedDate":"2022-03-27"},{"lineNumber":289,"author":{"gitId":"sophiien"},"content":"        LocalDateTime ldt \u003d parseDateTime(actualMeetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":290,"author":{"gitId":"sophiien"},"content":"        list.add(idxOfMeetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":291,"author":{"gitId":"sophiien"},"content":"        list.add(ldt);","lastModifiedDate":"2022-03-27"},{"lineNumber":292,"author":{"gitId":"sophiien"},"content":"        System.out.println(list);","lastModifiedDate":"2022-03-27"},{"lineNumber":293,"author":{"gitId":"sophiien"},"content":"        return list;","lastModifiedDate":"2022-03-27"},{"lineNumber":294,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":295,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"sophiien"},"content":"     * Parses a {@code String tag} into a {@code dateTime}.","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"sophiien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"sophiien"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":301,"author":{"gitId":"ryanwalterlee"},"content":"     * * Parses {@code String groupName} into a {@code Group}.","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"ryanwalterlee"},"content":"    public static Group parseGroup(String groupName)","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"ryanwalterlee"},"content":"            throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"ryanwalterlee"},"content":"        return new Group(groupName);","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":309,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":310,"author":{"gitId":"sophiien"},"content":"     * Parses a {@code String tag} into a {@code dateTime}.","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"sophiien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-30"},{"lineNumber":312,"author":{"gitId":"sophiien"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":313,"author":{"gitId":"sophiien"},"content":"     * * Parses {@code String groupName} into a {@code Group}.","lastModifiedDate":"2022-03-30"},{"lineNumber":314,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":315,"author":{"gitId":"sophiien"},"content":"    public static String parseGroupString(String groupName) {","lastModifiedDate":"2022-03-30"},{"lineNumber":316,"author":{"gitId":"sophiien"},"content":"        return groupName.trim();","lastModifiedDate":"2022-03-30"},{"lineNumber":317,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":318,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":319,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":320,"author":{"gitId":"sophiien"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e d66aca91cd59f82ab2db82fcd6d4231d99288ae6","lastModifiedDate":"2022-03-30"},{"lineNumber":321,"author":{"gitId":"geraldneo567"},"content":"     * Parses a date string with YYYY-MM-DD into LocalDate object","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"geraldneo567"},"content":"     * @param date","lastModifiedDate":"2022-03-28"},{"lineNumber":324,"author":{"gitId":"geraldneo567"},"content":"     * @return LocalDate object representing the given string.","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"geraldneo567"},"content":"     * @throws ParseException","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":327,"author":{"gitId":"geraldneo567"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-28"},{"lineNumber":329,"author":{"gitId":"geraldneo567"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"geraldneo567"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\")","lastModifiedDate":"2022-04-04"},{"lineNumber":331,"author":{"gitId":"geraldneo567"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-04"},{"lineNumber":332,"author":{"gitId":"geraldneo567"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"geraldneo567"},"content":"            return LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2022-03-28"},{"lineNumber":334,"author":{"gitId":"geraldneo567"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"geraldneo567"},"content":"            System.out.println(e);","lastModifiedDate":"2022-03-28"},{"lineNumber":336,"author":{"gitId":"geraldneo567"},"content":"            throw new ParseException(\"Date format accepts the following:\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"geraldneo567"},"content":"                + \"yyyy-MM-dd\");","lastModifiedDate":"2022-03-28"},{"lineNumber":338,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":340,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"sophiien"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 98d7be2fb745656e469996e1f9555d56584a0fb3","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"yokester98"},"content":"     * Parses {@code Collection\u003cString\u003e keyEventAndDate} and","lastModifiedDate":"2022-03-27"},{"lineNumber":344,"author":{"gitId":"yokester98"},"content":"     * {@code Module module}into a {@code ArrayList\u003cModuleKeyEvent\u003e}.","lastModifiedDate":"2022-03-27"},{"lineNumber":345,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":346,"author":{"gitId":"yokester98"},"content":"    public static ArrayList\u003cModuleKeyEvent\u003e parseModuleKeyEvent(Collection\u003cString\u003e keyEventAndDate, Module module)","lastModifiedDate":"2022-03-27"},{"lineNumber":347,"author":{"gitId":"yokester98"},"content":"        throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":348,"author":{"gitId":"yokester98"},"content":"        requireNonNull(keyEventAndDate);","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"yokester98"},"content":"        final ArrayList\u003cModuleKeyEvent\u003e moduleKeyEventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":350,"author":{"gitId":"yokester98"},"content":"        if (keyEventAndDate.toArray().length \u003d\u003d 0) {","lastModifiedDate":"2022-03-27"},{"lineNumber":351,"author":{"gitId":"yokester98"},"content":"            return moduleKeyEventList;","lastModifiedDate":"2022-03-27"},{"lineNumber":352,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"yokester98"},"content":"        for (String eventAndDate : keyEventAndDate) {","lastModifiedDate":"2022-03-27"},{"lineNumber":354,"author":{"gitId":"yokester98"},"content":"            if (!eventAndDate.contains(\" dt/\")) {","lastModifiedDate":"2022-04-03"},{"lineNumber":355,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(ModuleKeyEvent.MESSAGE_CONSTRAINTS_MISSINGDT);","lastModifiedDate":"2022-04-03"},{"lineNumber":356,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-04-03"},{"lineNumber":357,"author":{"gitId":"yokester98"},"content":"            String[] strArr \u003d eventAndDate.split(\" dt/\");","lastModifiedDate":"2022-03-27"},{"lineNumber":358,"author":{"gitId":"yokester98"},"content":"            LocalDateTime dateTime \u003d parseDateTime(strArr[1]);","lastModifiedDate":"2022-03-27"},{"lineNumber":359,"author":{"gitId":"yokester98"},"content":"            ModuleKeyEvent.KeyEventType keyEventType \u003d parseKeyEventType(strArr[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":360,"author":{"gitId":"yokester98"},"content":"            ModuleKeyEvent moduleKeyEvent \u003d new ModuleKeyEvent(keyEventType, dateTime, module);","lastModifiedDate":"2022-03-27"},{"lineNumber":361,"author":{"gitId":"yokester98"},"content":"            moduleKeyEventList.add(moduleKeyEvent);","lastModifiedDate":"2022-03-27"},{"lineNumber":362,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"yokester98"},"content":"        return moduleKeyEventList;","lastModifiedDate":"2022-03-27"},{"lineNumber":364,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"ryanwalterlee"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 69f9bda5ca8dfb47b3a4168a9dba4176c85f29f7","lastModifiedDate":"2022-03-29"},{"lineNumber":368,"author":{"gitId":"yokester98"},"content":"     * Parses {@code String dateTime} into a {@code LocalDateTime}.","lastModifiedDate":"2022-03-27"},{"lineNumber":369,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"yokester98"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":371,"author":{"gitId":"yokester98"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":372,"author":{"gitId":"yokester98"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":373,"author":{"gitId":"yokester98"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm\")","lastModifiedDate":"2022-04-03"},{"lineNumber":374,"author":{"gitId":"yokester98"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-03"},{"lineNumber":375,"author":{"gitId":"yokester98"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":376,"author":{"gitId":"yokester98"},"content":"            return LocalDateTime.parse(trimmedDateTime, formatter);","lastModifiedDate":"2022-03-26"},{"lineNumber":377,"author":{"gitId":"yokester98"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":378,"author":{"gitId":"yokester98"},"content":"            throw new ParseException(\"DateTime format accepts the following:\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"yokester98"},"content":"                + \"yyyy-MM-dd HH:mm. Please ensure you have entered a valid date and time!\");","lastModifiedDate":"2022-04-03"},{"lineNumber":380,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":381,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":382,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"yokester98"},"content":"     * Parses {@code String keyEventType} into a {@code KeyEventType}.","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"yokester98"},"content":"    public static ModuleKeyEvent.KeyEventType parseKeyEventType(String keyEventType) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"yokester98"},"content":"        requireNonNull(keyEventType);","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"yokester98"},"content":"        String keyEventTypeTrimmed \u003d keyEventType.trim();","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"yokester98"},"content":"        switch (keyEventTypeTrimmed) {","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"yokester98"},"content":"        case \"1\":","lastModifiedDate":"2022-03-27"},{"lineNumber":391,"author":{"gitId":"yokester98"},"content":"            return ModuleKeyEvent.KeyEventType.EXAM;","lastModifiedDate":"2022-03-27"},{"lineNumber":392,"author":{"gitId":"yokester98"},"content":"        case \"2\":","lastModifiedDate":"2022-03-27"},{"lineNumber":393,"author":{"gitId":"yokester98"},"content":"            return ModuleKeyEvent.KeyEventType.QUIZ;","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"yokester98"},"content":"        case \"3\":","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"yokester98"},"content":"            return ModuleKeyEvent.KeyEventType.ASSIGNMENT_RELEASE;","lastModifiedDate":"2022-03-27"},{"lineNumber":396,"author":{"gitId":"yokester98"},"content":"        case \"4\":","lastModifiedDate":"2022-03-27"},{"lineNumber":397,"author":{"gitId":"yokester98"},"content":"            return ModuleKeyEvent.KeyEventType.ASSIGNMENT_DUE;","lastModifiedDate":"2022-03-27"},{"lineNumber":398,"author":{"gitId":"yokester98"},"content":"        default:","lastModifiedDate":"2022-03-27"},{"lineNumber":399,"author":{"gitId":"yokester98"},"content":"            throw new ParseException(ModuleKeyEvent.MESSAGE_CONSTRAINTS_TYPE);","lastModifiedDate":"2022-03-27"},{"lineNumber":400,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":401,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":402,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":403,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":404,"author":{"gitId":"yokester98"},"content":"     * Parses {@code List\u003cString\u003e allDateTimes} into an {@code ArrayList\u003cLocalDateTime\u003e}.","lastModifiedDate":"2022-03-27"},{"lineNumber":405,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":406,"author":{"gitId":"yokester98"},"content":"    public static ArrayList\u003cLocalDateTime\u003e parseAllDateTimes(List\u003cString\u003e allDateTimes) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":407,"author":{"gitId":"yokester98"},"content":"        ArrayList\u003cLocalDateTime\u003e dateTimeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":408,"author":{"gitId":"yokester98"},"content":"        for (String dateTimeStr : allDateTimes) {","lastModifiedDate":"2022-03-27"},{"lineNumber":409,"author":{"gitId":"yokester98"},"content":"            LocalDateTime dateTime \u003d parseDateTime(dateTimeStr);","lastModifiedDate":"2022-03-27"},{"lineNumber":410,"author":{"gitId":"yokester98"},"content":"            if (dateTimeList.contains(dateTime)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":411,"author":{"gitId":"yokester98"},"content":"                throw new ParseException(\"You cannot add duplicate meeting times to the group!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":412,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":413,"author":{"gitId":"yokester98"},"content":"            dateTimeList.add(dateTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":415,"author":{"gitId":"yokester98"},"content":"        return dateTimeList;","lastModifiedDate":"2022-03-27"},{"lineNumber":416,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":417,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":418,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"sophiien"},"content":"     * Parses a {@code String } into a {@code keyeventtype}.","lastModifiedDate":"2022-03-28"},{"lineNumber":420,"author":{"gitId":"sophiien"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-28"},{"lineNumber":421,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":422,"author":{"gitId":"sophiien"},"content":"     * @throws ParseException if the given {@code LocalDateTime} is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":424,"author":{"gitId":"sophiien"},"content":"    public static KeyEventType parseKeyEventTypeString(String type) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":425,"author":{"gitId":"sophiien"},"content":"        requireNonNull(type);","lastModifiedDate":"2022-03-28"},{"lineNumber":426,"author":{"gitId":"sophiien"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":427,"author":{"gitId":"sophiien"},"content":"        return KeyEventType.valueOf(trimmedType.toUpperCase());","lastModifiedDate":"2022-03-28"},{"lineNumber":428,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":429,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"benmurphyy":10,"ryanwalterlee":11,"yokester98":163,"sophiien":123,"-":101,"geraldneo567":21}},{"path":"src/main/java/unibook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"benmurphyy":1,"-":38}},{"path":"src/main/java/unibook/logic/parser/UniBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"import unibook.logic.LogicManager;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.EditCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.FindCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ListCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"public class UniBookParser {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":13,"yokester98":1,"sophiien":5,"-":60,"geraldneo567":1}},{"path":"src/main/java/unibook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"benmurphyy":2,"-":15}},{"path":"src/main/java/unibook/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PROFESSORS \u003d p -\u003e p instanceof Professor;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d p -\u003e p instanceof Student;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"     * Returns the user prefs\u0027 UniBook file path.","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"    Path getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"     * Sets the user prefs\u0027 UniBook file path.","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"    void setUniBookFilePath(Path uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     * Returns the UniBook","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    ReadOnlyUniBook getUniBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"     * Replaces UniBook data with the data in {@code uniBook}.","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"yokester98"},"content":"    void setUniBook(ReadOnlyUniBook uniBook);","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"yokester98"},"content":"     * The person must exist in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"     * {@code person} must not already exist in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"     * {@code target} must exist in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"yokester98"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"yokester98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Groups \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"yokester98"},"content":"    void addGroup(Group group);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"    Group removeGroup(ModuleCode moduleCode, Group group);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"ryanwalterlee"},"content":"    List\u003cGroup\u003e getShowingGroupList();","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"yokester98"},"content":"    void addPersonToTheirGroups(Person person);","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"    boolean hasModule(ModuleCode moduleCode);","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"    boolean hasModuleAndGroup(ModuleCode moduleCode, Group group);","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"ryanwalterlee"},"content":"    void deleteByModuleCode(ModuleCode moduleCode);","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"ryanwalterlee"},"content":"    void deleteModule(Module module);","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"yokester98"},"content":"    void addPersonToTheirModules(Person person);","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"yokester98"},"content":"     * Adds the given module.","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"yokester98"},"content":"     * {@code module} must not already exist in the UniBook.","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"    void addModule(Module module);","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"geraldneo567"},"content":"    void setModule(Module target, Module editedModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"yokester98"},"content":"    boolean isModuleExist(Set\u003cModuleCode\u003e moduleCodeSet);","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"ryanwalterlee"},"content":"    void deleteModuleAndPersons(ModuleCode moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"ryanwalterlee"},"content":"    void deleteProfModule(ModuleCode moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"yokester98"},"content":"     * Finds the corresponding module to the module code.","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"yokester98"},"content":"     * @return Module belonging to the ModuleCode","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"yokester98"},"content":"    Module getModuleByCode(ModuleCode moduleCode);","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"geraldneo567"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"benmurphyy":21,"ryanwalterlee":17,"yokester98":35,"-":61,"geraldneo567":19}},{"path":"src/main/java/unibook/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"import unibook.model.person.exceptions.PersonNoSubtypeException;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"import unibook.ui.Ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"import unibook.ui.UiManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":" * Represents the in-memory model of the unibook data.","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"    private final UniBook uniBook;","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"    private final FilteredList\u003cModule\u003e filteredModules;","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    private Ui ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"     * Initializes a ModelManager with the given uniBook and userPrefs.","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"    public ModelManager(ReadOnlyUniBook uniBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        CollectionUtil.requireAllNonNull(uniBook, userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"        logger.fine(\"Initializing with UniBook: \" + uniBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"        this.uniBook \u003d new UniBook(uniBook);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.uniBook.getPersonList());","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.uniBook.getModuleList());","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"yokester98"},"content":"        this(new UniBook(), new UserPrefs());","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        return userPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"    public Path getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"yokester98"},"content":"        return userPrefs.getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"yokester98"},"content":"    public void setUniBookFilePath(Path uniBookFilePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"yokester98"},"content":"        requireNonNull(uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"yokester98"},"content":"        userPrefs.setUniBookFilePath(uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    public ReadOnlyUniBook getUniBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"        return uniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UniBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"    public void setUniBook(ReadOnlyUniBook uniBook) {","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        this.uniBook.resetData(uniBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Persons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"yokester98"},"content":"        return uniBook.hasPerson(person);","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"        uniBook.removePerson(target);","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"yokester98"},"content":"        uniBook.addPerson(person);","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"yokester98"},"content":"        uniBook.setPerson(target, editedPerson);","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"yokester98"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"yokester98"},"content":"    public void addPersonToTheirModules(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"yokester98"},"content":"            uniBook.addPersonToAllTheirModules(person);","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"yokester98"},"content":"        } catch (PersonNoSubtypeException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"yokester98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"yokester98"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"yokester98"},"content":"    public void addPersonToTheirGroups(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"yokester98"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"            uniBook.addStudentToAllTheirGroups((Student) person);","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"yokester98"},"content":"        } catch (PersonNoSubtypeException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"yokester98"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"geraldneo567"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Modules \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":146,"author":{"gitId":"geraldneo567"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-03-05"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-03-05"},{"lineNumber":148,"author":{"gitId":"geraldneo567"},"content":"        return uniBook.hasModule(module);","lastModifiedDate":"2022-03-05"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean hasModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"ryanwalterlee"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"ryanwalterlee"},"content":"        return uniBook.hasModule(moduleCode);","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean hasModuleAndGroup(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"        return uniBook.hasModuleAndGroup(moduleCode, group);","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteByModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"ryanwalterlee"},"content":"        uniBook.removeByModuleCode(moduleCode);","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteModule(Module module) {","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"ryanwalterlee"},"content":"        uniBook.removeModule(module);","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"geraldneo567"},"content":"        uniBook.addModule(module);","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"        CollectionUtil.requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"geraldneo567"},"content":"        uniBook.setModule(target, editedModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"yokester98"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"yokester98"},"content":"    public boolean isModuleExist(Set\u003cModuleCode\u003e moduleCodeSet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"yokester98"},"content":"        for (ModuleCode moduleCode : moduleCodeSet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"yokester98"},"content":"            if (!uniBook.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"yokester98"},"content":"                return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"yokester98"},"content":"        return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteModuleAndPersons(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"ryanwalterlee"},"content":"        uniBook.deleteModuleAndPersons(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteProfModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"ryanwalterlee"},"content":"        uniBook.deleteProfModule(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"yokester98"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"yokester98"},"content":"    public Module getModuleByCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"yokester98"},"content":"        return uniBook.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-13"},{"lineNumber":209,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":211,"author":{"gitId":"yokester98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Groups \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"yokester98"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"yokester98"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"yokester98"},"content":"        uniBook.addGroupToModule(group);","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"ryanwalterlee"},"content":"    public Group removeGroup(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"ryanwalterlee"},"content":"        Module module \u003d uniBook.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"ryanwalterlee"},"content":"        uniBook.deleteGroupFromAllPersons(moduleCode, group);","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"ryanwalterlee"},"content":"        return module.removeGroupByName(group);","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"ryanwalterlee"},"content":"    public List\u003cGroup\u003e getShowingGroupList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"ryanwalterlee"},"content":"        return ui.getShowingGroupList();","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"yokester98"},"content":"     * {@code versionedUniBook}","lastModifiedDate":"2022-03-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"ryanwalterlee"},"content":"        logger.info(\"Retrieving filtered person list...\");","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":247,"author":{"gitId":"geraldneo567"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Module List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":248,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":249,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":250,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":251,"author":{"gitId":"geraldneo567"},"content":"        logger.info(\"Retrieving filtered module list...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":252,"author":{"gitId":"geraldneo567"},"content":"        return filteredModules;","lastModifiedDate":"2022-03-05"},{"lineNumber":253,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":254,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":255,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":256,"author":{"gitId":"geraldneo567"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-03-05"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"        logger.info(\"Updating filtered module list...\");","lastModifiedDate":"2022-03-06"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":259,"author":{"gitId":"geraldneo567"},"content":"        filteredModules.setPredicate(predicate);","lastModifiedDate":"2022-03-05"},{"lineNumber":260,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":261,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":262,"author":{"gitId":"geraldneo567"},"content":"    public UiManager getUi() {","lastModifiedDate":"2022-03-14"},{"lineNumber":263,"author":{"gitId":"geraldneo567"},"content":"        return (UiManager) this.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":264,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":265,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":266,"author":{"gitId":"benmurphyy"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"benmurphyy"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"yokester98"},"content":"        return uniBook.equals(other.uniBook)","lastModifiedDate":"2022-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":286,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-05"},{"lineNumber":287,"author":{"gitId":"geraldneo567"},"content":"                \u0026\u0026 filteredModules.equals(other.filteredModules);","lastModifiedDate":"2022-03-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":23,"ryanwalterlee":44,"yokester98":70,"-":102,"geraldneo567":50}},{"path":"src/main/java/unibook/model/ReadOnlyUniBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":" * Unmodifiable view of an UniBook","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"public interface ReadOnlyUniBook {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"     * Returns an unmodifiable view of the modules list.","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"     * This list will not contain any duplicate modules.","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":3,"yokester98":2,"-":13,"geraldneo567":7}},{"path":"src/main/java/unibook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"    Path getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"benmurphyy":2,"yokester98":1,"-":13}},{"path":"src/main/java/unibook/model/UniBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleList;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.UniquePersonList;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNoSubtypeException;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":" * Wraps all data at the uni-book level","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"public class UniBook implements ReadOnlyUniBook {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    private final ModuleList modules;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        modules \u003d new ModuleList();","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    public UniBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     * Creates a UniBook using the data in {@code toBeCopied}","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"    public UniBook(ReadOnlyUniBook toBeCopied) {","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"     * Replaces the contents of the person list with {@code modules}.","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"     * Resets the existing data of this {@code UniBook} with {@code newData}.","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"yokester98"},"content":"    public void resetData(ReadOnlyUniBook newData) {","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"yokester98"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if unibook contains a person with given phone number.","lastModifiedDate":"2022-04-04"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"    public boolean phoneNumberBeingUsed(Phone phone) {","lastModifiedDate":"2022-04-04"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-04-04"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"        return persons.phoneNumberBeingUsed(phone);","lastModifiedDate":"2022-04-04"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if unibook contains a person with given email.","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"    public boolean emailBeingUsed(Email email) {","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"        return persons.emailBeingUsed(email);","lastModifiedDate":"2022-04-04"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"     * Adds a person to UniBook.","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"     * The person must not already exist in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"     * Adds this person to all the modules that they are associated with, into the","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"     * correct personnel list (professor/student) in module depending on the runtime type","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"     * of this person.","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"     * @param p person whos modules to add them to","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"    public void addPersonToAllTheirModules(Person p) {","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(p);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        for (Module personsModule : p.getModules()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"            Module module \u003d modules.getModule(personsModule);","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"            if (p instanceof Student) {","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"                module.addStudent((Student) p);","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"            } else if (p instanceof Professor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"                module.addProfessor((Professor) p);","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"            } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"                throw new PersonNoSubtypeException();","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"     * Adds a student to all their module groups.","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"     * Adds a student to all of the groups they are associated with.","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"geraldneo567"},"content":"     * @param s","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"    public void addStudentToAllTheirGroups(Student s) {","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        for (Group group : s.getGroups()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"            group.addMember(s);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"yokester98"},"content":"     * {@code target} must exist in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"yokester98"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"geraldneo567"},"content":"    //// module-level operations","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if an equivalent module to the one given exists in unibook.","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"geraldneo567"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"geraldneo567"},"content":"        return modules.contains(module);","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if a module with the given moduleCode exists in unibook.","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode moduleCode to check for","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean variable indicating presence of module with given moduleCode","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"    public boolean hasModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"        return modules.contains(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns true is the group exists in the module associated with the module code provided","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"ryanwalterlee"},"content":"     * @param group","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"ryanwalterlee"},"content":"     * @return","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean hasModuleAndGroup(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"ryanwalterlee"},"content":"        Module module \u003d modules.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"ryanwalterlee"},"content":"        return module.hasGroup(group);","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":"     * Returns module with given code that is in unibook.","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"     * @return module with given code.","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":203,"author":{"gitId":"benmurphyy"},"content":"    public Module getModuleByCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-11"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":205,"author":{"gitId":"benmurphyy"},"content":"        return modules.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":206,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":207,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":208,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":209,"author":{"gitId":"benmurphyy"},"content":"     * Adds a Module to UniBook.","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"geraldneo567"},"content":"     * The Module must not already exist in the UniBook.","lastModifiedDate":"2022-03-05"},{"lineNumber":211,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":212,"author":{"gitId":"geraldneo567"},"content":"    public void addModule(Module m) {","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"geraldneo567"},"content":"        modules.add(m);","lastModifiedDate":"2022-03-05"},{"lineNumber":214,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":215,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":216,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"benmurphyy"},"content":"     * Adds a group to a module of UniBook. Assumes that the module associated with the","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"benmurphyy"},"content":"     * group is already inside the group object.","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"benmurphyy"},"content":"     * @param g","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"benmurphyy"},"content":"    public void addGroupToModule(Group g) {","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"benmurphyy"},"content":"        Module moduleOfGroup \u003d g.getModule();","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(moduleOfGroup);","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"benmurphyy"},"content":"        moduleOfGroup.addGroup(g);","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"geraldneo567"},"content":"     * Adds a key event to a module of UniBook.","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"geraldneo567"},"content":"     * @param k","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"geraldneo567"},"content":"    public void addKeyEventToModule(ModuleKeyEvent k) {","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"geraldneo567"},"content":"        Module moduleOfEvent \u003d k.getModule();","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(moduleOfEvent);","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"geraldneo567"},"content":"        moduleOfEvent.addKeyEvent(k);","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":240,"author":{"gitId":"geraldneo567"},"content":"     * Replaces the given module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2022-03-05"},{"lineNumber":241,"author":{"gitId":"geraldneo567"},"content":"     * {@code target} must exist in the UniBook.","lastModifiedDate":"2022-03-05"},{"lineNumber":242,"author":{"gitId":"geraldneo567"},"content":"     * The module code and name of {@code editedModule} must not be the same as another existing module in the UniBook.","lastModifiedDate":"2022-03-05"},{"lineNumber":243,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":244,"author":{"gitId":"geraldneo567"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-03-05"},{"lineNumber":245,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":246,"author":{"gitId":"geraldneo567"},"content":"        modules.setModule(target, editedModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":247,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":248,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":249,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":250,"author":{"gitId":"geraldneo567"},"content":"     * Removes module {@code key} from this {@code UniBook}.","lastModifiedDate":"2022-03-05"},{"lineNumber":251,"author":{"gitId":"geraldneo567"},"content":"     * {@code key} must exist in the UniBook.","lastModifiedDate":"2022-03-05"},{"lineNumber":252,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":253,"author":{"gitId":"geraldneo567"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2022-03-05"},{"lineNumber":254,"author":{"gitId":"geraldneo567"},"content":"        modules.remove(key);","lastModifiedDate":"2022-03-05"},{"lineNumber":255,"author":{"gitId":"ryanwalterlee"},"content":"        removeModuleFromAllPersons(key.getModuleCode());","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"ryanwalterlee"},"content":"        removeGroupFromAllStudents(key.getModuleCode());","lastModifiedDate":"2022-03-27"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":259,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove module by matching the module code, also removes modules from all students and all groups from students","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"ryanwalterlee"},"content":"     * relating to that module","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"ryanwalterlee"},"content":"     * @param key","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeByModuleCode(ModuleCode key) {","lastModifiedDate":"2022-03-12"},{"lineNumber":266,"author":{"gitId":"ryanwalterlee"},"content":"        modules.removeByModuleCode(key);","lastModifiedDate":"2022-03-12"},{"lineNumber":267,"author":{"gitId":"ryanwalterlee"},"content":"        removeModuleFromAllPersons(key);","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"ryanwalterlee"},"content":"        removeGroupFromAllStudents(key);","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeGroupFromAllStudents(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-27"},{"lineNumber":272,"author":{"gitId":"ryanwalterlee"},"content":"        persons.removeGroupFromAllStudents(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":274,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":275,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"benmurphyy"},"content":"     * Removes person {@code key} from this {@code UniBook}.","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"benmurphyy"},"content":"     * {@code key} must exist in the UniBook.","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"benmurphyy"},"content":"     * Removes all references to the person from associated modules.","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"benmurphyy"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"benmurphyy"},"content":"        persons.remove(key);","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"benmurphyy"},"content":"        removePersonFromModules(key);","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"benmurphyy"},"content":"     * Removes Student {@code key} from this {@code UniBook}.","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"benmurphyy"},"content":"     * {@code key} must exist in the UniBook.","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"benmurphyy"},"content":"     * Removes all references to the student from associated modules and groups.","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"benmurphyy"},"content":"    public void removePerson(Student key) {","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"benmurphyy"},"content":"        persons.remove(key);","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"benmurphyy"},"content":"        removePersonFromModules(key);","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"benmurphyy"},"content":"        removeStudentFromGroups(key);","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"benmurphyy"},"content":"     * Gets a Group in Unibook with given modulecode (indicating module it is in) and groupName.","lastModifiedDate":"2022-03-25"},{"lineNumber":298,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"benmurphyy"},"content":"    public Group getGroupByModuleCodeAndGroupName(ModuleCode moduleCode, String groupName) {","lastModifiedDate":"2022-03-25"},{"lineNumber":300,"author":{"gitId":"benmurphyy"},"content":"        requireAllNonNull(moduleCode, groupName);","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"benmurphyy"},"content":"        Module moduleOfGroup \u003d getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"benmurphyy"},"content":"        Group group \u003d moduleOfGroup.getGroupByName(groupName);","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"benmurphyy"},"content":"        return group;","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"ryanwalterlee"},"content":"     * Deletes the module associated with the module code provided, as well as all persons","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"ryanwalterlee"},"content":"     * that are associated with the module, only if the only this module is the only module","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"ryanwalterlee"},"content":"     * that they are associated with","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteModuleAndPersons(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"ryanwalterlee"},"content":"        Module moduleToBeDeleted \u003d modules.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":314,"author":{"gitId":"ryanwalterlee"},"content":"        List\u003cStudent\u003e studentsAssociatedToModule \u003d moduleToBeDeleted.getStudents();","lastModifiedDate":"2022-03-25"},{"lineNumber":315,"author":{"gitId":"ryanwalterlee"},"content":"        List\u003cProfessor\u003e profsAssociatedToModule \u003d moduleToBeDeleted.getProfessors();","lastModifiedDate":"2022-03-25"},{"lineNumber":316,"author":{"gitId":"ryanwalterlee"},"content":"        List\u003cStudent\u003e studentsToBeDeleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"ryanwalterlee"},"content":"        List\u003cProfessor\u003e profsToBeDeleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"ryanwalterlee"},"content":"        for (Student student : studentsAssociatedToModule) {","lastModifiedDate":"2022-03-25"},{"lineNumber":319,"author":{"gitId":"ryanwalterlee"},"content":"            if (student.onlyHasModule(moduleCode)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":320,"author":{"gitId":"ryanwalterlee"},"content":"                studentsToBeDeleted.add(student);","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":322,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":323,"author":{"gitId":"ryanwalterlee"},"content":"        for (Professor professor : profsAssociatedToModule) {","lastModifiedDate":"2022-03-25"},{"lineNumber":324,"author":{"gitId":"ryanwalterlee"},"content":"            if (professor.onlyHasModule(moduleCode)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":325,"author":{"gitId":"ryanwalterlee"},"content":"                profsToBeDeleted.add(professor);","lastModifiedDate":"2022-03-25"},{"lineNumber":326,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":327,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":328,"author":{"gitId":"ryanwalterlee"},"content":"        persons.deleteStudentsAndProfs(studentsToBeDeleted, profsToBeDeleted);","lastModifiedDate":"2022-03-25"},{"lineNumber":329,"author":{"gitId":"ryanwalterlee"},"content":"        modules.removeByModuleCode(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":331,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":332,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":333,"author":{"gitId":"ryanwalterlee"},"content":"     * Delete all professors associated to the module that matches with the module code provided","lastModifiedDate":"2022-03-25"},{"lineNumber":334,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteProfModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-25"},{"lineNumber":337,"author":{"gitId":"ryanwalterlee"},"content":"        Module moduleToBeDeleted \u003d modules.getModuleByCode(moduleCode);","lastModifiedDate":"2022-03-25"},{"lineNumber":338,"author":{"gitId":"ryanwalterlee"},"content":"        List\u003cProfessor\u003e profsToBeDeleted \u003d moduleToBeDeleted.getProfessors();","lastModifiedDate":"2022-03-25"},{"lineNumber":339,"author":{"gitId":"ryanwalterlee"},"content":"        persons.deleteProfs(profsToBeDeleted);","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteGroupFromAllPersons(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-29"},{"lineNumber":343,"author":{"gitId":"ryanwalterlee"},"content":"        persons.deleteGroupFromAllPersons(moduleCode, group);","lastModifiedDate":"2022-03-29"},{"lineNumber":344,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":345,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":346,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"ryanwalterlee"},"content":"     * Delete all groups that match the group name provided from all persons","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"ryanwalterlee"},"content":"     * @param groupName","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cGroup\u003e getGroupsWithGroupName(String groupName) {","lastModifiedDate":"2022-03-26"},{"lineNumber":352,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2022-03-26"},{"lineNumber":353,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-26"},{"lineNumber":354,"author":{"gitId":"geraldneo567"},"content":"        for (Module m : modules) {","lastModifiedDate":"2022-03-26"},{"lineNumber":355,"author":{"gitId":"geraldneo567"},"content":"            Group g \u003d m.getGroupByName(groupName);","lastModifiedDate":"2022-03-26"},{"lineNumber":356,"author":{"gitId":"geraldneo567"},"content":"            if (g !\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":357,"author":{"gitId":"geraldneo567"},"content":"                groups.add(m.getGroupByName(groupName));","lastModifiedDate":"2022-03-26"},{"lineNumber":358,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":359,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":360,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":361,"author":{"gitId":"geraldneo567"},"content":"        return groups;","lastModifiedDate":"2022-03-26"},{"lineNumber":362,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"benmurphyy"},"content":"     * Removes module from all persons that are associated with the module.","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeModuleFromAllPersons(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-12"},{"lineNumber":370,"author":{"gitId":"ryanwalterlee"},"content":"        persons.removeModuleFromAllPersons(moduleCode);","lastModifiedDate":"2022-03-12"},{"lineNumber":371,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":372,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":373,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"benmurphyy"},"content":"     * Removes person from all moduels that are associated with the module.","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":376,"author":{"gitId":"benmurphyy"},"content":"     * @param person","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"ryanwalterlee"},"content":"    public void removePersonFromModules(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":379,"author":{"gitId":"ryanwalterlee"},"content":"        modules.removePersonFromModule(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":380,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":381,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":382,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"benmurphyy"},"content":"     * Removes the student from all the groups they are in.","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":385,"author":{"gitId":"benmurphyy"},"content":"     * @param student","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"benmurphyy"},"content":"    public void removeStudentFromGroups(Student student) {","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"benmurphyy"},"content":"        for (Group group : student.getGroups()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"benmurphyy"},"content":"            group.removeMember(student);","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"geraldneo567"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\" + \"||\"","lastModifiedDate":"2022-03-05"},{"lineNumber":398,"author":{"gitId":"geraldneo567"},"content":"            + modules.asUnmodifiableObservableList().size() + \" modules\";","lastModifiedDate":"2022-03-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":407,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":408,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":409,"author":{"gitId":"geraldneo567"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-05"},{"lineNumber":410,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":411,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":412,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":416,"author":{"gitId":"yokester98"},"content":"            || (other instanceof UniBook // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":417,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 persons.equals(((UniBook) other).persons)","lastModifiedDate":"2022-03-05"},{"lineNumber":418,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 modules.equals(((UniBook) other).modules));","lastModifiedDate":"2022-03-05"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":423,"author":{"gitId":"geraldneo567"},"content":"        return persons.hashCode() + modules.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":154,"ryanwalterlee":84,"yokester98":17,"-":87,"geraldneo567":83}},{"path":"src/main/java/unibook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"    private Path uniBookFilePath \u003d Paths.get(\"data\", \"unibook.json\");","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    public UserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        setUniBookFilePath(newUserPrefs.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"    public Path getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"        return uniBookFilePath;","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"    public void setUniBookFilePath(Path uniBookFilePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"yokester98"},"content":"        requireNonNull(uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"        this.uniBookFilePath \u003d uniBookFilePath;","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"            \u0026\u0026 uniBookFilePath.equals(o.uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"        return Objects.hash(guiSettings, uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"        sb.append(\"\\nLocal data file location : \" + uniBookFilePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":4,"yokester98":10,"-":74}},{"path":"src/main/java/unibook/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand.EditGroupDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.DuplicateGroupException;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.exceptions.DuplicateKeyEventException;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.GroupNotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":" * Represents a Module in the UniBook.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"public class Module {","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    // Identity fields","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    private final ModuleName moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    // Data fields","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    private final ObservableList\u003cProfessor\u003e professors;","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    private final ObservableList\u003cStudent\u003e students;","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    private final ObservableList\u003cGroup\u003e groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    private final ObservableList\u003cModuleKeyEvent\u003e keyEvents;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"     * Constructor for a Module, assuming no students and no professor initially.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleName","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    public Module(ModuleName moduleName, ModuleCode moduleCode) {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"        requireAllNonNull(moduleName, moduleCode);","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        this.professors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        this.students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * Contstructor for a Module, with a given name, code and groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleName","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"     * @param groups","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"    public Module(ModuleName moduleName, ModuleCode moduleCode, ObservableList\u003cGroup\u003e groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        requireAllNonNull(moduleName, moduleCode, groups);","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        this.students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        this.professors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"     * Constructor for a Module, using a pre-existing list of key dates.","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"yokester98"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"yokester98"},"content":"     * @param moduleName","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"yokester98"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"     * @param keyEvents","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"    public Module(ObservableList\u003cModuleKeyEvent\u003e keyEvents, ModuleName moduleName, ModuleCode moduleCode) {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"        requireAllNonNull(moduleName, moduleCode, keyEvents);","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"yokester98"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"yokester98"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"yokester98"},"content":"        this.groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"yokester98"},"content":"        this.students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"yokester98"},"content":"        this.professors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"        this.keyEvents \u003d keyEvents;","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"     * Constructor for a Module, using a pre-existing list of students, professors and groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleName","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"     * @param professors","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"     * @param students","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"    public Module(ModuleName moduleName, ModuleCode moduleCode,","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"                  ObservableList\u003cProfessor\u003e professors, ObservableList\u003cStudent\u003e students,","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"                  ObservableList\u003cGroup\u003e groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"        requireAllNonNull(moduleName, moduleCode, professors, students, groups);","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"        this.professors \u003d professors;","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"        this.students \u003d students;","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a Module, using a pre-existing list of students, professors and groups and key dates.","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleName","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"     * @param professors","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"     * @param students","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"     * @param keyEvents","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"    public Module(ModuleName moduleName, ModuleCode moduleCode,","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"                  ObservableList\u003cProfessor\u003e professors, ObservableList\u003cStudent\u003e students,","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"                  ObservableList\u003cGroup\u003e groups, ObservableList\u003cModuleKeyEvent\u003e keyEvents) {","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"geraldneo567"},"content":"        requireAllNonNull(moduleName, moduleCode, professors, students, groups);","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"        this.professors \u003d professors;","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"        this.students \u003d students;","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d keyEvents;","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"yokester98"},"content":"     * Empty constructor for a null module.","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"yokester98"},"content":"    public Module() {","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"        this.moduleName \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"yokester98"},"content":"        this.moduleCode \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"yokester98"},"content":"        this.professors \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"yokester98"},"content":"        this.students \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"     * Returns the module name.","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"geraldneo567"},"content":"     * @return the name of the module.","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"geraldneo567"},"content":"    public ModuleName getModuleName() {","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"        return moduleName;","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":154,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":155,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"geraldneo567"},"content":"     * Returns the module code.","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"geraldneo567"},"content":"     * @return the code of the module.","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"geraldneo567"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"        return moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":164,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"geraldneo567"},"content":"     * Returns the current list of professors.","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"geraldneo567"},"content":"     * @return The observable list containing all professor objects.","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cProfessor\u003e getProfessors() {","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":"        return professors;","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"     * Returns the current list of students.","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"     * @return The observable list containing all student objects.","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cStudent\u003e getStudents() {","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"        return students;","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"     * Returns the current list of groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"     * @return The observable list containing all the group objects.","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cGroup\u003e getGroups() {","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"        return groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns true if group has same name as one of the groups in this module","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"ryanwalterlee"},"content":"     * @param group","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"ryanwalterlee"},"content":"     * @return","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group g : groups) {","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"ryanwalterlee"},"content":"            if (group.sameGroupName(g)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"ryanwalterlee"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"ryanwalterlee"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove provided group from the list of groups","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"ryanwalterlee"},"content":"     * @param group","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"ryanwalterlee"},"content":"     * @return","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"ryanwalterlee"},"content":"    public Group removeGroupByName(Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"ryanwalterlee"},"content":"        Group tobeDeleted \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group g : groups) {","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"ryanwalterlee"},"content":"            if (group.sameGroupName(g)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"ryanwalterlee"},"content":"                tobeDeleted \u003d g;","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"ryanwalterlee"},"content":"        groups.remove(tobeDeleted);","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"ryanwalterlee"},"content":"        return tobeDeleted;","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"benmurphyy"},"content":"     * Returns the group in the group list of this module that has the given unique name.","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"benmurphyy"},"content":"     * @param grpName of the group to get.","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"benmurphyy"},"content":"     * @return group that has the exact given grpname.","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"benmurphyy"},"content":"    public Group getGroupByName(String grpName) {","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(grpName);","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"benmurphyy"},"content":"        for (Group grp : groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"geraldneo567"},"content":"            if ((grp.getGroupName().toLowerCase()).equals(grpName.toLowerCase())) {","lastModifiedDate":"2022-03-26"},{"lineNumber":233,"author":{"gitId":"benmurphyy"},"content":"                return grp;","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"geraldneo567"},"content":"        return null;","lastModifiedDate":"2022-03-26"},{"lineNumber":237,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":238,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":239,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":240,"author":{"gitId":"sophiien"},"content":"     * Edits the information of the group in the respective index","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"sophiien"},"content":"    public void editGroupByIndex(int idx, EditGroupDescriptor editGroupDescriptor) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"sophiien"},"content":"        Group group \u003d groups.get(idx);","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"sophiien"},"content":"        Group newGroup \u003d EditCommand.createEditedGroup(group, editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"sophiien"},"content":"        groups.set(idx, newGroup);","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"sophiien"},"content":"     * Returns boolean if student exists in module","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"sophiien"},"content":"    public boolean hasStudent(Student s) {","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"sophiien"},"content":"        return students.contains(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"sophiien"},"content":"     * Edits the information of the group in the respective index","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"sophiien"},"content":"    public void addToGroupByName(String name, Student s) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"sophiien"},"content":"        Group group \u003d getGroupByName(name);","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"sophiien"},"content":"        int idx \u003d groups.indexOf(group);","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"sophiien"},"content":"        group.addMember(s);","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"sophiien"},"content":"        groups.set(idx, group);","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":267,"author":{"gitId":"geraldneo567"},"content":"     * Adds a student {@code s} to the list of the students.","lastModifiedDate":"2022-03-06"},{"lineNumber":268,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"geraldneo567"},"content":"     * @param s","lastModifiedDate":"2022-03-06"},{"lineNumber":270,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":271,"author":{"gitId":"geraldneo567"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2022-03-05"},{"lineNumber":272,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"benmurphyy"},"content":"        if (students.contains(s)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"benmurphyy"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"benmurphyy"},"content":"        students.add(s);","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":278,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":279,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":280,"author":{"gitId":"geraldneo567"},"content":"     * Adds a professor {@code p} to the list of the professors.","lastModifiedDate":"2022-03-06"},{"lineNumber":281,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"geraldneo567"},"content":"     * @param p","lastModifiedDate":"2022-03-06"},{"lineNumber":283,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":284,"author":{"gitId":"geraldneo567"},"content":"    public void addProfessor(Professor p) {","lastModifiedDate":"2022-03-05"},{"lineNumber":285,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(p);","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"benmurphyy"},"content":"        if (professors.contains(p)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"benmurphyy"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"benmurphyy"},"content":"        professors.add(p);","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"benmurphyy"},"content":"     * Adds a group {@code g} to the list of groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"benmurphyy"},"content":"     * @param g","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"benmurphyy"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(g);","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"benmurphyy"},"content":"        if (groups.contains(g)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"benmurphyy"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"benmurphyy"},"content":"        groups.add(g);","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":305,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":306,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"geraldneo567"},"content":"     * Adds key event to the correct module.","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"yokester98"},"content":"     * @param k ModuleKeyEvent","lastModifiedDate":"2022-03-27"},{"lineNumber":310,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"geraldneo567"},"content":"    public void addKeyEvent(ModuleKeyEvent k) {","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(k);","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"geraldneo567"},"content":"        if (keyEvents.contains(k)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateKeyEventException();","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"geraldneo567"},"content":"        keyEvents.add(k);","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":320,"author":{"gitId":"ryanwalterlee"},"content":"     * Delete key event at that index","lastModifiedDate":"2022-03-27"},{"lineNumber":321,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":322,"author":{"gitId":"ryanwalterlee"},"content":"     * @param index","lastModifiedDate":"2022-03-27"},{"lineNumber":323,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":324,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteKeyEvent(int index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":325,"author":{"gitId":"ryanwalterlee"},"content":"        keyEvents.remove(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":326,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":327,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":328,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":329,"author":{"gitId":"yokester98"},"content":"     * Adds a list of key events to the correct module.","lastModifiedDate":"2022-03-27"},{"lineNumber":330,"author":{"gitId":"yokester98"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":331,"author":{"gitId":"yokester98"},"content":"     * @param keyEventsList ArrayList of ModuleKeyEvent","lastModifiedDate":"2022-03-27"},{"lineNumber":332,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":333,"author":{"gitId":"yokester98"},"content":"    public void addKeyEventList(ArrayList\u003cModuleKeyEvent\u003e keyEventsList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":334,"author":{"gitId":"yokester98"},"content":"        requireNonNull(keyEventsList);","lastModifiedDate":"2022-03-27"},{"lineNumber":335,"author":{"gitId":"yokester98"},"content":"        for (ModuleKeyEvent moduleKeyEvent : keyEventsList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":336,"author":{"gitId":"yokester98"},"content":"            if (keyEvents.contains(moduleKeyEvent)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":337,"author":{"gitId":"yokester98"},"content":"                throw new DuplicateKeyEventException();","lastModifiedDate":"2022-03-27"},{"lineNumber":338,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":339,"author":{"gitId":"yokester98"},"content":"            keyEvents.add(moduleKeyEvent);","lastModifiedDate":"2022-03-27"},{"lineNumber":340,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":341,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":342,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":343,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":344,"author":{"gitId":"geraldneo567"},"content":"     * Returns true if both modules have the same name and code.","lastModifiedDate":"2022-03-05"},{"lineNumber":345,"author":{"gitId":"geraldneo567"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2022-03-05"},{"lineNumber":346,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":347,"author":{"gitId":"geraldneo567"},"content":"    public boolean isSameModule(Module otherModule) {","lastModifiedDate":"2022-03-05"},{"lineNumber":348,"author":{"gitId":"geraldneo567"},"content":"        if (otherModule \u003d\u003d this) {","lastModifiedDate":"2022-03-05"},{"lineNumber":349,"author":{"gitId":"geraldneo567"},"content":"            return true;","lastModifiedDate":"2022-03-05"},{"lineNumber":350,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":351,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":352,"author":{"gitId":"geraldneo567"},"content":"        return otherModule !\u003d null","lastModifiedDate":"2022-03-05"},{"lineNumber":353,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 otherModule.getModuleCode().equals(getModuleCode());","lastModifiedDate":"2022-04-03"},{"lineNumber":354,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":355,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":356,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":357,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if the module code this module has is equal to the given module code.","lastModifiedDate":"2022-03-11"},{"lineNumber":358,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":359,"author":{"gitId":"benmurphyy"},"content":"     * @param otherCode other module code to check equality to","lastModifiedDate":"2022-03-11"},{"lineNumber":360,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean variable indicating if the module codes are equal","lastModifiedDate":"2022-03-11"},{"lineNumber":361,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":362,"author":{"gitId":"benmurphyy"},"content":"    public boolean hasModuleCode(ModuleCode otherCode) {","lastModifiedDate":"2022-03-11"},{"lineNumber":363,"author":{"gitId":"benmurphyy"},"content":"        return otherCode !\u003d null","lastModifiedDate":"2022-03-11"},{"lineNumber":364,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 otherCode.equals(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":365,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":366,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":367,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"yokester98"},"content":"     * Returns true if this module has contains the group with the given group name.","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"yokester98"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"yokester98"},"content":"     * @param groupName group name to check if in this module","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"yokester98"},"content":"     * @return boolean variable indicating if the group name exists in this module","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":373,"author":{"gitId":"yokester98"},"content":"    public boolean hasGroupName(String groupName) {","lastModifiedDate":"2022-03-24"},{"lineNumber":374,"author":{"gitId":"yokester98"},"content":"        for (Group group : groups) {","lastModifiedDate":"2022-03-24"},{"lineNumber":375,"author":{"gitId":"geraldneo567"},"content":"            if (group.getGroupName().equalsIgnoreCase(groupName)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"yokester98"},"content":"                return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"yokester98"},"content":"        return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":383,"author":{"gitId":"yokester98"},"content":"     * Returns rue if this module contains the key event with the given event name and datetime.","lastModifiedDate":"2022-03-27"},{"lineNumber":384,"author":{"gitId":"yokester98"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":385,"author":{"gitId":"yokester98"},"content":"     * @param keyEvent key event name to check","lastModifiedDate":"2022-03-27"},{"lineNumber":386,"author":{"gitId":"yokester98"},"content":"     * @param dateTime datetime of key event to check","lastModifiedDate":"2022-03-27"},{"lineNumber":387,"author":{"gitId":"yokester98"},"content":"     * @return boolean variable indicating if the key event exists in this module","lastModifiedDate":"2022-03-27"},{"lineNumber":388,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":389,"author":{"gitId":"yokester98"},"content":"    public boolean hasEvent(ModuleKeyEvent.KeyEventType keyEvent, LocalDateTime dateTime) {","lastModifiedDate":"2022-03-27"},{"lineNumber":390,"author":{"gitId":"yokester98"},"content":"        for (ModuleKeyEvent moduleKeyEvent : keyEvents) {","lastModifiedDate":"2022-03-27"},{"lineNumber":391,"author":{"gitId":"yokester98"},"content":"            if (moduleKeyEvent.getKeyEventType().equals(keyEvent)","lastModifiedDate":"2022-03-27"},{"lineNumber":392,"author":{"gitId":"yokester98"},"content":"                \u0026\u0026 moduleKeyEvent.getKeyEventTiming().equals(dateTime)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":393,"author":{"gitId":"yokester98"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":394,"author":{"gitId":"yokester98"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":395,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":396,"author":{"gitId":"yokester98"},"content":"        return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":397,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":398,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":399,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":400,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove a person from students or professors list depending on whether person is a student or professor","lastModifiedDate":"2022-03-12"},{"lineNumber":401,"author":{"gitId":"ryanwalterlee"},"content":"     * and if present","lastModifiedDate":"2022-03-12"},{"lineNumber":402,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"ryanwalterlee"},"content":"     * @param person","lastModifiedDate":"2022-03-12"},{"lineNumber":404,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":405,"author":{"gitId":"ryanwalterlee"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":406,"author":{"gitId":"ryanwalterlee"},"content":"        if (person instanceof Student) {","lastModifiedDate":"2022-03-12"},{"lineNumber":407,"author":{"gitId":"ryanwalterlee"},"content":"            students.remove(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":408,"author":{"gitId":"ryanwalterlee"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":409,"author":{"gitId":"ryanwalterlee"},"content":"            professors.remove(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":410,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":411,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":412,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":413,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":415,"author":{"gitId":"benmurphyy"},"content":"     * Remove a group from the list of groups under this module.","lastModifiedDate":"2022-03-23"},{"lineNumber":416,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"benmurphyy"},"content":"    public void removeGroup(Group group) {","lastModifiedDate":"2022-03-23"},{"lineNumber":418,"author":{"gitId":"benmurphyy"},"content":"        if (!groups.contains(group)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":419,"author":{"gitId":"benmurphyy"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":420,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":421,"author":{"gitId":"benmurphyy"},"content":"        groups.remove(group);","lastModifiedDate":"2022-03-23"},{"lineNumber":422,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":423,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":424,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cModuleKeyEvent\u003e getKeyEvents() {","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"geraldneo567"},"content":"        return this.keyEvents;","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cLocalDate\u003e getKeyEventDates() {","lastModifiedDate":"2022-03-28"},{"lineNumber":429,"author":{"gitId":"geraldneo567"},"content":"        ObservableList\u003cLocalDate\u003e keyEventDates \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-28"},{"lineNumber":430,"author":{"gitId":"geraldneo567"},"content":"        for (ModuleKeyEvent k : keyEvents) {","lastModifiedDate":"2022-03-28"},{"lineNumber":431,"author":{"gitId":"geraldneo567"},"content":"            keyEventDates.add(k.getKeyEventDate());","lastModifiedDate":"2022-03-28"},{"lineNumber":432,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":433,"author":{"gitId":"geraldneo567"},"content":"        return keyEventDates;","lastModifiedDate":"2022-03-28"},{"lineNumber":434,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":435,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":436,"author":{"gitId":"geraldneo567"},"content":"    public boolean hasKeyEventDate(LocalDate date) {","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"geraldneo567"},"content":"        return getKeyEventDates().contains(date);","lastModifiedDate":"2022-03-28"},{"lineNumber":438,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":439,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":440,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":441,"author":{"gitId":"geraldneo567"},"content":"     * Returns true if both modules have the same identity and data fields.","lastModifiedDate":"2022-03-06"},{"lineNumber":442,"author":{"gitId":"geraldneo567"},"content":"     * This defines a stronger notion of equality between two modules.","lastModifiedDate":"2022-03-06"},{"lineNumber":443,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":444,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":445,"author":{"gitId":"geraldneo567"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":446,"author":{"gitId":"geraldneo567"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-05"},{"lineNumber":447,"author":{"gitId":"geraldneo567"},"content":"            return true;","lastModifiedDate":"2022-03-05"},{"lineNumber":448,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":449,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":450,"author":{"gitId":"geraldneo567"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":451,"author":{"gitId":"geraldneo567"},"content":"            return false;","lastModifiedDate":"2022-03-05"},{"lineNumber":452,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":453,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":454,"author":{"gitId":"geraldneo567"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2022-03-05"},{"lineNumber":455,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":456,"author":{"gitId":"geraldneo567"},"content":"        return otherModule.getModuleName().equals(getModuleName())","lastModifiedDate":"2022-03-05"},{"lineNumber":457,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 otherModule.getModuleCode().equals(getModuleCode())","lastModifiedDate":"2022-03-05"},{"lineNumber":458,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 otherModule.getProfessors().equals(getProfessors())","lastModifiedDate":"2022-03-05"},{"lineNumber":459,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 otherModule.getStudents().equals(getStudents())","lastModifiedDate":"2022-03-24"},{"lineNumber":460,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 otherModule.getGroups().equals(getGroups())","lastModifiedDate":"2022-03-24"},{"lineNumber":461,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 otherModule.getKeyEvents().equals(getKeyEvents());","lastModifiedDate":"2022-03-24"},{"lineNumber":462,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":463,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":464,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":465,"author":{"gitId":"geraldneo567"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":466,"author":{"gitId":"geraldneo567"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-05"},{"lineNumber":467,"author":{"gitId":"yokester98"},"content":"        return Objects.hash(moduleName, moduleCode);","lastModifiedDate":"2022-03-13"},{"lineNumber":468,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":469,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":470,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":471,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":472,"author":{"gitId":"geraldneo567"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-05"},{"lineNumber":473,"author":{"gitId":"geraldneo567"},"content":"        builder.append(getModuleCode())","lastModifiedDate":"2022-03-05"},{"lineNumber":474,"author":{"gitId":"geraldneo567"},"content":"            .append(\"; Name: \")","lastModifiedDate":"2022-03-05"},{"lineNumber":475,"author":{"gitId":"geraldneo567"},"content":"            .append(getModuleName())","lastModifiedDate":"2022-03-05"},{"lineNumber":476,"author":{"gitId":"sophiien"},"content":"            .append(\"; Module Code: \")","lastModifiedDate":"2022-03-07"},{"lineNumber":477,"author":{"gitId":"sophiien"},"content":"            .append(getModuleCode())","lastModifiedDate":"2022-03-07"},{"lineNumber":478,"author":{"gitId":"geraldneo567"},"content":"            .append(\"; Professors: \")","lastModifiedDate":"2022-03-05"},{"lineNumber":479,"author":{"gitId":"geraldneo567"},"content":"            .append(getProfessors())","lastModifiedDate":"2022-03-24"},{"lineNumber":480,"author":{"gitId":"geraldneo567"},"content":"            .append(\"; Groups: \")","lastModifiedDate":"2022-03-24"},{"lineNumber":481,"author":{"gitId":"geraldneo567"},"content":"            .append(getGroups())","lastModifiedDate":"2022-03-24"},{"lineNumber":482,"author":{"gitId":"geraldneo567"},"content":"            .append(\"; Key Events: \")","lastModifiedDate":"2022-03-24"},{"lineNumber":483,"author":{"gitId":"geraldneo567"},"content":"            .append(getKeyEvents());","lastModifiedDate":"2022-03-24"},{"lineNumber":484,"author":{"gitId":"geraldneo567"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-05"},{"lineNumber":485,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":486,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":116,"ryanwalterlee":55,"yokester98":77,"sophiien":33,"geraldneo567":205}},{"path":"src/main/java/unibook/model/module/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" * Represents a Module Code.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"public class ModuleCode {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"        \"Module codes should only contain up to 10 alphanumeric characters and cannot contain spaces.\";","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"     * A module code can contain any character that is not a whitespace.","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S*$\";","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"     * Constructs a {@code ModuleCode}.","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleCode A valid ModuleCode.","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        checkArgument(isValidModuleCode(moduleCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"ryanwalterlee"},"content":"        this.moduleCode \u003d moduleCode.toUpperCase();","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 10;","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        return this.moduleCode;","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"            || (other instanceof ModuleCode)// instanceof handles nulls","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 moduleCode.equals(((ModuleCode) other).moduleCode); // state check","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":6,"ryanwalterlee":1,"yokester98":3,"geraldneo567":46}},{"path":"src/main/java/unibook/model/module/ModuleKeyEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package unibook.model.module;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import static unibook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class ModuleKeyEvent {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_CONSTRAINTS_TYPE \u003d \"Key Event type can only take in values from 1 to 4.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"        + \"1 \u003d EXAM\\n2 \u003d QUIZ\\n3 \u003d ASSIGNMENT_RELEASE\\n4 \u003d ASSIGNMENT_DUE\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_CONSTRAINTS_MISSINGDT \u003d \"Missing datetime field in your input.\"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"        + \"Please specify the date and time of the key event in the following format!\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"        + \"dt/yyyy-MM-dd HH:mm\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    private LocalDateTime keyEventTiming;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"    private KeyEventType keyEventType;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    private Module module;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"     * Constructor for a ModuleKeyEvent.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"     * @param keyEventType","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * @param localDateTime","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     * @param module","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    public ModuleKeyEvent(KeyEventType keyEventType, LocalDateTime localDateTime, Module module) {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        requireAllNonNull(keyEventType, localDateTime, module);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventType \u003d keyEventType;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventTiming \u003d localDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"sophiien"},"content":"     * Constructor for a empty ModuleKeyEvent.","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"    public ModuleKeyEvent() {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"        this.keyEventType \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"        this.keyEventTiming \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"sophiien"},"content":"        this.module \u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    public void setDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventTiming \u003d localDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    public void setKeyDateType(KeyEventType keyEventType) {","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventType \u003d keyEventType;","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"    public KeyEventType getKeyEventType() {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        return this.keyEventType;","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"    public LocalDateTime getKeyEventTiming() {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"        return this.keyEventTiming;","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    public LocalDate getKeyEventDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        int year \u003d keyEventTiming.getYear();","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"        int month \u003d keyEventTiming.getMonthValue();","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        int dayOfMonth \u003d keyEventTiming.getDayOfMonth();","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"        return LocalDate.of(year, month, dayOfMonth);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    public Module getModule() {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        return this.module;","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        return this.keyEventType + \" (\" + this.keyEventTiming + \")\";","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"        if (!(o instanceof ModuleKeyEvent)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        ModuleKeyEvent other \u003d (ModuleKeyEvent) o;","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"        return other.getKeyEventTiming().equals(this.keyEventTiming)","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 other.getKeyEventType().equals(this.keyEventType);","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"    public enum KeyEventType {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        //More can be added later","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        EXAM, QUIZ, ASSIGNMENT_RELEASE, ASSIGNMENT_DUE","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":7,"yokester98":5,"sophiien":8,"geraldneo567":70}},{"path":"src/main/java/unibook/model/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import java.util.List;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":" * Represents a list of Modules in the UniBook.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"public class ModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        return internalList.stream().anyMatch(toCheck::isSameModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if the list contains a module with given module code.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode code to search for","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean variable indicating presence of this module with the moduleCode","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    public boolean contains(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        return internalList.stream().anyMatch(module -\u003e module.hasModuleCode(moduleCode));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     * Adds a Module to the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     * The Module must not already exist in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"     * Replaces the module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"     * The module name and code of {@code editedModule} must not be the same as another existing module in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            throw new ModuleNotFoundException(target);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        if (!target.isSameModule(editedModule) \u0026\u0026 contains(editedModule)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"        internalList.set(index, editedModule);","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"     * Removes the equivalent module from the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"     * The module must exist in the list.","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"            throw new ModuleNotFoundException(toRemove);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"ryanwalterlee"},"content":"     * Removes a module from ModuleList if it matches toRemove.","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"ryanwalterlee"},"content":"     * @param toRemove","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeByModuleCode(ModuleCode toRemove) {","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"ryanwalterlee"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"ryanwalterlee"},"content":"        Module remove \u003d null; // necessary to prevent concurrent modification exception","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"ryanwalterlee"},"content":"        for (Module module : internalList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"            if (module.hasModuleCode(toRemove)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"ryanwalterlee"},"content":"                remove \u003d module;","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"ryanwalterlee"},"content":"        internalList.remove(remove);","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove person from every module in ModuleList if present","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"     * @param person","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"    public void removePersonFromModule(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"        for (Module module : internalList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"            module.removePerson(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"    public void setModules(ModuleList replacement) {","lastModifiedDate":"2022-03-05"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-05"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-05"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"     * Replaces the contents of this list with {@code modules}.","lastModifiedDate":"2022-03-05"},{"lineNumber":121,"author":{"gitId":"geraldneo567"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-03-05"},{"lineNumber":122,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"geraldneo567"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"geraldneo567"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"geraldneo567"},"content":"        if (!modulesAreUnique(modules)) {","lastModifiedDate":"2022-03-05"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2022-03-05"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"     * Returns the module thats equivalent to the given module object.","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"     * @param searchModule","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"     * @return module object","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"     * @throws ModuleNotFoundException","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"    public Module getModule(Module searchModule) throws ModuleNotFoundException {","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(searchModule);","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        for (Module module : internalList) {","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"            if (module.equals(searchModule)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"                return module;","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"        throw new ModuleNotFoundException(searchModule);","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"     * Returns the module with given moduleCode if it exists in module list.","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"     * If not, throws ModuleNotExistException.","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode moudleCode of intended module.","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"     * @return the module with matching moduleCode.","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"    public Module getModuleByCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"        requireAllNonNull(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"        for (Module module : internalList) {","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"            if (module.hasModuleCode(moduleCode)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"                return module;","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"        throw new ModuleNotFoundException(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"geraldneo567"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"geraldneo567"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":179,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"            || (other instanceof ModuleList) // instanceof handles nulls","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 internalList.equals(((ModuleList) other).internalList);","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":186,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":187,"author":{"gitId":"geraldneo567"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":188,"author":{"gitId":"geraldneo567"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":189,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":190,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":191,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"geraldneo567"},"content":"     * Returns true if {@code modules} contains only unique modules.","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"geraldneo567"},"content":"    private boolean modulesAreUnique(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-05"},{"lineNumber":195,"author":{"gitId":"geraldneo567"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"geraldneo567"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"geraldneo567"},"content":"                if (modules.get(i).isSameModule(modules.get(j))) {","lastModifiedDate":"2022-03-05"},{"lineNumber":198,"author":{"gitId":"geraldneo567"},"content":"                    return false;","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"geraldneo567"},"content":"                }","lastModifiedDate":"2022-03-05"},{"lineNumber":200,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":201,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":202,"author":{"gitId":"geraldneo567"},"content":"        return true;","lastModifiedDate":"2022-03-05"},{"lineNumber":203,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":204,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":54,"ryanwalterlee":28,"yokester98":2,"geraldneo567":121}},{"path":"src/main/java/unibook/model/module/ModuleName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":" * Represents a Module Name.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class ModuleName {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"            \" Module Names \"","lastModifiedDate":"2022-04-04"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"                    + \"should only contain up to 50 alphabetical characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-04-04"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"    /*","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Alpha} ]*\";","lastModifiedDate":"2022-04-04"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    public final String moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * Constructs a {@code ModuleName}.","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"     *","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     * @param moduleName A valid moduleName.","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    public ModuleName(String moduleName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"        checkArgument(isValidModuleName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 50;","lastModifiedDate":"2022-04-04"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        return this.moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"            || (other instanceof ModuleName)// instanceof handles nulls","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"            \u0026\u0026 moduleName.equals(((ModuleName) other).moduleName); // state check","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":2,"geraldneo567":57}},{"path":"src/main/java/unibook/model/module/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Signals that a given operation would create duplicate groups in a module.","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(\"Operation would result in a duplicate group\");","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/unibook/model/module/exceptions/DuplicateKeyEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"public class DuplicateKeyEventException extends RuntimeException {","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"    public DuplicateKeyEventException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"        super(\"Operation would result in a duplicate key event\");","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"geraldneo567":8}},{"path":"src/main/java/unibook/model/module/exceptions/DuplicateMeetingTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Signals that an adding of a meeting time operation will result in duplicate meeting times.","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class DuplicateMeetingTimeException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public DuplicateMeetingTimeException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(\"Meeting time already exists\");","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/unibook/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":" * Signals that the operation will result in duplicate modules (modules are considered duplicates if they have the same","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":" * module code and name).","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":1,"geraldneo567":10}},{"path":"src/main/java/unibook/model/module/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Signals that a group does not exist in the list of groups in a module.","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public GroupNotFoundException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(\"Group not found in list of groups of module\");","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/unibook/model/module/exceptions/MeetingTimeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Signals that a given meeting date is not found in the list of meeting dates of a group.","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class MeetingTimeNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public MeetingTimeNotFoundException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(\"Meeting Time not found\");","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/unibook/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":" * Signals that a module does not exist in UniBook.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class ModuleNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"    static final String MODULE_NOT_FOUND_MESSAGE_FORMAT \u003d \"Module %s not found in UniBook\";","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    public ModuleNotFoundException(String message) {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        super(message);","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    public ModuleNotFoundException(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"        super(String.format(MODULE_NOT_FOUND_MESSAGE_FORMAT, moduleCode.toString()));","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public ModuleNotFoundException(Module module) {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"        super(String.format(MODULE_NOT_FOUND_MESSAGE_FORMAT, module.getModuleCode().toString()));","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":17,"geraldneo567":7}},{"path":"src/main/java/unibook/model/module/exceptions/PersonTagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sophiien"},"content":"package unibook.model.module.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"sophiien"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":" * Signals that the operation will result in duplicate modules (modules are considered duplicates if they have the same","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":" * module code and name).","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"public class PersonTagNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"    public PersonTagNotFoundException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"        super(\"Person should have professor/student tag.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"sophiien":12}},{"path":"src/main/java/unibook/model/module/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.module.group;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-04"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.DuplicateMeetingTimeException;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.MeetingTimeNotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":" * Represents a group of students within a module.","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"public class Group {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    public static final String NAME_CONSTRAINT_MESSAGE \u003d \"A group name cannot have whitespaces, and also must be\"","lastModifiedDate":"2022-04-04"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"            + \"limited in length to less than 50 characters.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    //Group name can only have alphanumeric characters","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S*$\";","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private static final int MAX_GROUP_NAME_LENGTH \u003d 50;","lastModifiedDate":"2022-04-04"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private final ObservableList\u003cStudent\u003e members;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private final ObservableList\u003cLocalDateTime\u003e meetingTimes;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private String name;","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    private Module module;","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * Instantiates a group object.","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * @param name         of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * @param module       that the group is in.","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     * @param members      of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * @param meetingTimes meeting times of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public Group(String name, Module module, ObservableList\u003cStudent\u003e members,","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"                 ObservableList\u003cLocalDateTime\u003e meetingTimes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        checkArgument(isValidName(name), NAME_CONSTRAINT_MESSAGE);","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        this.meetingTimes \u003d meetingTimes;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        this.members \u003d members;","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     * Instantiates a group object, with an empty list of associated students.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     * @param name         of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"     * @param module       that the group is in.","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     * @param meetingTimes meeting times of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    public Group(String name, Module module, ObservableList\u003cLocalDateTime\u003e meetingTimes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        this(name, module, FXCollections.observableArrayList(), meetingTimes);","lastModifiedDate":"2022-04-04"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"     * Instantiates a group object, with an empty list of meeting times and associated students.","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"yokester98"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"     * @param name   of the group.","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"yokester98"},"content":"     * @param module that the group is in.","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"    public Group(String name, Module module) {","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        this(name, module, FXCollections.observableArrayList(), FXCollections.observableArrayList());","lastModifiedDate":"2022-04-04"},{"lineNumber":69,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"ryanwalterlee"},"content":"     * Instantiates a group object with only the name, to be used to match groups to delete","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"ryanwalterlee"},"content":"    public Group(String name) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        this(name, null, FXCollections.observableArrayList(), FXCollections.observableArrayList());","lastModifiedDate":"2022-04-04"},{"lineNumber":76,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-04-04"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-04-04"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 50;","lastModifiedDate":"2022-04-04"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"     * Returns the group name of the group object.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"     * @return group name of the group object.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    public String getGroupName() {","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        return name;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"sophiien"},"content":"     * Returns of whether student in group","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"sophiien"},"content":"     * @return boolean of whether student exists.","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"sophiien"},"content":"    public boolean hasMember(Student s) {","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"sophiien"},"content":"        for (Student student : members) {","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"sophiien"},"content":"            if (student.equals(s)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"sophiien"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"sophiien"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"sophiien"},"content":"     * Edit the group name of the group object.","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"sophiien"},"content":"    public void editGroupName(String name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"sophiien"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"sophiien"},"content":"     * Edit the module of the group object.","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"sophiien"},"content":"    public void editModule(Module module) {","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"sophiien"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"    public Module getModule() {","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"        return module;","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"     * Returns the member students of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"     * @return members of the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cStudent\u003e getMembers() {","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"        return members;","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"     * Adds a member to the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"     * @param student","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"    public void addMember(Student student) {","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        members.add(student);","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"     * Removes the specific student from the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"     * @param student","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"    public void removeMember(Student student) {","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"        if (!members.contains(student)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"        members.remove(student);","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"     * Removes the groups in the group list of each student that has this group","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeStudentsFromThisGroup() {","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"        for (Student student : members) {","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"            student.removeGroup(module.getModuleCode(), this);","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"     * Add a meeting datetime to the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":"     * @param meetingTime meeting datetime to add.","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"    public void addMeetingTime(LocalDateTime meetingTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"        //ensure no duplicate meeting times can exist","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"        if (meetingTimes.contains(meetingTime)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"            throw new DuplicateMeetingTimeException();","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"        meetingTimes.add(meetingTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"     * Remove a meeting datetime from the group.","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"     * @param meetingTime meeting datetime to remove.","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"    public void removeMeetingTime(LocalDateTime meetingTime) {","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"        if (!meetingTimes.contains(meetingTime)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"            throw new MeetingTimeNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"benmurphyy"},"content":"        meetingTimes.remove(meetingTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"sophiien"},"content":"     * Remove a meeting based on Index given","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"sophiien"},"content":"     * @param index","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"sophiien"},"content":"    public void removeMeetingTime(int index) {","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"sophiien"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"sophiien"},"content":"        meetingTimes.remove(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"sophiien"},"content":"     * Edit a meeting datetime from the group.","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"sophiien"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"sophiien"},"content":"     * @param idx         index of the meeting time to edit","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"sophiien"},"content":"     * @param meetingTime meeting datetime to remove.","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"sophiien"},"content":"    public void editMeetingTime(int idx, LocalDateTime meetingTime) {","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"sophiien"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"sophiien"},"content":"        this.meetingTimes.set(idx, meetingTime);","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns true only if the name of the group provided and this group name","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"ryanwalterlee"},"content":"     * are the same.","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean sameGroupName(Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"ryanwalterlee"},"content":"        return this.name.equalsIgnoreCase(group.getGroupName());","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns True if group name and module code are the same else False","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"ryanwalterlee"},"content":"     * @param groupName","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"ryanwalterlee"},"content":"     * @return","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean sameGroupNameAndModule(String moduleCode, String groupName) {","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"ryanwalterlee"},"content":"        if (moduleCode.equals(this.module.getModuleCode().toString())","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"ryanwalterlee"},"content":"            \u0026\u0026 groupName.equalsIgnoreCase(this.getGroupName())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"ryanwalterlee"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"ryanwalterlee"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"benmurphyy"},"content":"     * Returns true only if the name of the group, its meeting times, and the module code of the module it is linked to","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"benmurphyy"},"content":"     * are the same.","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"benmurphyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"benmurphyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"benmurphyy"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"benmurphyy"},"content":"        } else if (other instanceof Group) {","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"benmurphyy"},"content":"            Group otherGroup \u003d (Group) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"benmurphyy"},"content":"            return getGroupName().equals(otherGroup.getGroupName())","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"benmurphyy"},"content":"                \u0026\u0026 meetingTimes.equals(otherGroup.getMeetingTimes())","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"benmurphyy"},"content":"                \u0026\u0026 getModule().getModuleCode().equals(otherGroup.getModule().getModuleCode());","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"benmurphyy"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"benmurphyy"},"content":"     * Returns the list of meeting times for a group.","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"benmurphyy"},"content":"     * @return list of meeting times for a group.","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cLocalDateTime\u003e getMeetingTimes() {","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"benmurphyy"},"content":"        return meetingTimes;","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"geraldneo567"},"content":"    public ObservableList\u003cLocalDate\u003e getMeetingDates() {","lastModifiedDate":"2022-03-28"},{"lineNumber":266,"author":{"gitId":"geraldneo567"},"content":"        return FXCollections.observableArrayList(this.meetingTimes.stream().map(mt -\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":267,"author":{"gitId":"geraldneo567"},"content":"            int year \u003d mt.getYear();","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"geraldneo567"},"content":"            int month \u003d mt.getMonthValue();","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"geraldneo567"},"content":"            int dayOfMonth \u003d mt.getDayOfMonth();","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"geraldneo567"},"content":"            return LocalDate.of(year, month, dayOfMonth);","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"geraldneo567"},"content":"        }).collect(Collectors.toList()));","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":273,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"yokester98"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"yokester98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"yokester98"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"yokester98"},"content":"        builder.append(getGroupName())","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"yokester98"},"content":"            .append(\"; Module: \")","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"benmurphyy"},"content":"            .append(getModule().getModuleCode());","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":281,"author":{"gitId":"sophiien"},"content":"        ObservableList\u003cLocalDateTime\u003e meetingTimes \u003d getMeetingTimes();","lastModifiedDate":"2022-03-27"},{"lineNumber":282,"author":{"gitId":"sophiien"},"content":"        if (!meetingTimes.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":283,"author":{"gitId":"sophiien"},"content":"            builder.append(\"; Meeting Times: \");","lastModifiedDate":"2022-03-27"},{"lineNumber":284,"author":{"gitId":"sophiien"},"content":"            meetingTimes.forEach(builder::append);","lastModifiedDate":"2022-03-27"},{"lineNumber":285,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":286,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":287,"author":{"gitId":"yokester98"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":167,"ryanwalterlee":37,"yokester98":17,"sophiien":57,"geraldneo567":11}},{"path":"src/main/java/unibook/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.AppUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":" * Represents a Person\u0027s email in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"     * Constructs an empty {@code Email}.","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"    public Email() {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":4,"yokester98":8,"-":67}},{"path":"src/main/java/unibook/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.AppUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":" * Represents a Person\u0027s name in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"        \"Names should only contain up to 50 alphabetical characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Alpha} ]*\";","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 50;","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":4,"yokester98":4,"-":52}},{"path":"src/main/java/unibook/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.StringUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"benmurphyy":2,"-":29}},{"path":"src/main/java/unibook/model/person/Office.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":" * Represents a Professor\u0027s Office in the UniBook.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"ryanwalterlee"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOffice(String)}","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"public class Office {","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"ryanwalterlee"},"content":"     * The first character of the office must not be a whitespace,","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    private static final int NAME_MAX_LENGTH \u003d 20;","lastModifiedDate":"2022-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"     * Constructs an {@code Office}.","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"     * @param office A valid office.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"    public Office(String office) {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"ryanwalterlee"},"content":"        requireNonNull(office);","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"ryanwalterlee"},"content":"        checkArgument(isValidOffice(office), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"ryanwalterlee"},"content":"        value \u003d office;","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"     * Constructs an empty {@code Office}.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"    public Office() {","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"yokester98"},"content":"     * Returns true if a given string is a valid office.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"ryanwalterlee"},"content":"    public static boolean isValidOffice(String test) {","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d NAME_MAX_LENGTH;","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"            || (other instanceof Office // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"ryanwalterlee"},"content":"            \u0026\u0026 value.equals(((Office) other).value)); // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":4,"ryanwalterlee":13,"yokester98":8,"-":38}},{"path":"src/main/java/unibook/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.exceptions.PersonNoSubtypeException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":" * Represents a Person in the UniBook. Class is abstract as only its subtypes {@code Student} and {@code Professor}","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":" * should be instantiable.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"public abstract class Person {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cModule\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags, Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"ryanwalterlee"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"     * Empty constructor of a null person.","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"    public Person() {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"        this.name \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"        this.phone \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"        this.email \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"ryanwalterlee"},"content":"    public abstract Person deletePhone();","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"ryanwalterlee"},"content":"    public abstract Person deleteEmail();","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"    public abstract Person deleteTag(String tag);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"ryanwalterlee"},"content":"    public Tag getTag(String tagName) {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"ryanwalterlee"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"ryanwalterlee"},"content":"            if (tag.tagName.equals(tagName)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"ryanwalterlee"},"content":"                return tag;","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"ryanwalterlee"},"content":"        return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"sophiien"},"content":"     * Returns a modifiable module set.","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    public Set\u003cModule\u003e getModules() {","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"sophiien"},"content":"        return modules;","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"     * Sets peron\u0027s modules","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"    public void setModules(Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"     * Deletes a module from the set of modules the person has by checking through each module","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"ryanwalterlee"},"content":"     * in the set and removing it from the set if the module code matches.","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"     * @param other","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeModule(ModuleCode other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"        Module toRemove \u003d null; // necessary to prevent concurrent modification exception","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"        for (Module module : modules) {","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"            if (module.hasModuleCode(other)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"ryanwalterlee"},"content":"                toRemove \u003d module;","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"                break;","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"ryanwalterlee"},"content":"        modules.remove(toRemove);","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns true if this person object only has 1 module which has the same module code as","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"ryanwalterlee"},"content":"     * the one provided","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"ryanwalterlee"},"content":"     * @return","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean onlyHasModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"ryanwalterlee"},"content":"        if (modules.size() !\u003d 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"ryanwalterlee"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"ryanwalterlee"},"content":"        for (Module module : modules) {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"ryanwalterlee"},"content":"            if (module.hasModuleCode(moduleCode)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"ryanwalterlee"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"ryanwalterlee"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"sophiien"},"content":"     * Adds this person to all the modules that they are associated with, into the","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"sophiien"},"content":"     * correct personnel list (professor/student) in module depending on the runtime type","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"sophiien"},"content":"     * of this person.","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"sophiien"},"content":"    public void addPersonToAllTheirModules() throws PersonNoSubtypeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"sophiien"},"content":"        for (Module module : this.getModules()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"sophiien"},"content":"            if (this instanceof Student) {","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"sophiien"},"content":"                module.addStudent((Student) this);","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"sophiien"},"content":"            } else if (this instanceof Professor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"sophiien"},"content":"                module.addProfessor((Professor) this);","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"sophiien"},"content":"                throw new PersonNoSubtypeException();","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove this person from Person List in all modules that this person is involved in","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"    public void removePersonFromAllTheirModules() {","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"        for (Module module : this.getModules()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"            module.removePerson(this);","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":165,"author":{"gitId":"yokester98"},"content":"     * Returns a mutable module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"yokester98"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"yokester98"},"content":"    public Set\u003cModule\u003e getModulesModifiable() {","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"yokester98"},"content":"        return modules;","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"geraldneo567"},"content":"     * Returns true if the specified Module exists in the person\u0027s","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"     * module list, otherwise returns false.","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"geraldneo567"},"content":"    public boolean hasModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"geraldneo567"},"content":"        for (Module m : modules) {","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"geraldneo567"},"content":"            if (m.hasModuleCode(moduleCode)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"geraldneo567"},"content":"                return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"        return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"yokester98"},"content":"     * Adds a module to the module set","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"yokester98"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"yokester98"},"content":"        modules.add(module);","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"     * returns true if both persons contain the exact same fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"        return otherPerson.equals(this);","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"     * Checks that the module codes of the modules associated with the persons are equivalent.","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModuleCode\u003e moduleCodes \u003d getModules().stream().map(Module::getModuleCode).collect(Collectors.toSet());","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModuleCode\u003e otherModuleCodes \u003d ((Person) other).getModules().stream().map(Module::getModuleCode)","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"benmurphyy"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":221,"author":{"gitId":"sophiien"},"content":"            \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-03-08"},{"lineNumber":222,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 otherModuleCodes.equals(moduleCodes);","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"yokester98"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":238,"author":{"gitId":"ryanwalterlee"},"content":"            .append(getEmail());","lastModifiedDate":"2022-03-02"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":245,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":246,"author":{"gitId":"sophiien"},"content":"        Set\u003cModule\u003e modules \u003d getModules();","lastModifiedDate":"2022-03-08"},{"lineNumber":247,"author":{"gitId":"sophiien"},"content":"        if (!modules.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":248,"author":{"gitId":"sophiien"},"content":"            builder.append(\"; Modules: \");","lastModifiedDate":"2022-03-08"},{"lineNumber":249,"author":{"gitId":"sophiien"},"content":"            modules.forEach(builder::append);","lastModifiedDate":"2022-03-08"},{"lineNumber":250,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":34,"ryanwalterlee":63,"yokester98":27,"sophiien":28,"-":91,"geraldneo567":11}},{"path":"src/main/java/unibook/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.AppUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":" * Represents a Person\u0027s phone number in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"        \"Phone numbers should only contain numbers, and it should be between 7 - 15 digits long.\";","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{7,15}\";","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"     * Constructs an empty {@code Phone}","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"    public Phone() {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":4,"yokester98":10,"-":47}},{"path":"src/main/java/unibook/model/person/Professor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":" * Represents a Professor in the UniBook.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"ryanwalterlee"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"ryanwalterlee"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"ryanwalterlee"},"content":"public class Professor extends Person {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"    private final Office office;","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public Professor(Name name, Phone phone, Email email, Set\u003cTag\u003e tags, Office office, Set\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        super(name, phone, email, tags, modules);","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"        this.office \u003d office;","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"     * Constructor for creating a professor from a person class with additional field office.","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * @param person person to create this professor from","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     * @param office office that this professor is located at","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    public Professor(Person person, Office office) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        this(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"            person.getTags(), office, person.getModules());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Professor Object with phone removed","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Professor with phone deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"ryanwalterlee"},"content":"    public Professor deletePhone() {","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"        return new Professor(getName(), new Phone(), getEmail(), getTags(), getOffice(), getModules());","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Professor Object with email removed","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Professor with email deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"ryanwalterlee"},"content":"    public Professor deleteEmail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ryanwalterlee"},"content":"        return new Professor(getName(), getPhone(), new Email(), getTags(), getOffice(), getModules());","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Professor Object with tag removed","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"ryanwalterlee"},"content":"     * @param tagNameToDelete A String of the tag name","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Professor with that specific tag deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"ryanwalterlee"},"content":"    public Professor deleteTag(String tagNameToDelete) {","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"ryanwalterlee"},"content":"        for (Tag tag: tags) {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"ryanwalterlee"},"content":"            if (!tag.tagName.equalsIgnoreCase(tagNameToDelete)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"ryanwalterlee"},"content":"                newTags.add(tag);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"        return new Professor(getName(), getPhone(), getEmail(), newTags, getOffice(), getModules());","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Professor Object with office removed","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Professor with that specific office deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"ryanwalterlee"},"content":"    public Professor deleteOffice() {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"ryanwalterlee"},"content":"        return new Professor(getName(), getPhone(), getEmail(), getTags(), new Office(), getModules());","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns the Office object that this professor has","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Office","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"ryanwalterlee"},"content":"    public Office getOffice() {","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"ryanwalterlee"},"content":"        return this.office;","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"ryanwalterlee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"ryanwalterlee"},"content":"            return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"ryanwalterlee"},"content":"        if (!(other instanceof Professor)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"ryanwalterlee"},"content":"            return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"ryanwalterlee"},"content":"        Professor otherPerson \u003d (Professor) other;","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"        return super.equals(other) \u0026\u0026 otherPerson.getOffice().equals(getOffice());","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getTags(), office);","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"ryanwalterlee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"ryanwalterlee"},"content":"            .append(getPhone())","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"ryanwalterlee"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"            .append(getEmail())","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"            .append(\"; Office: \")","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"            .append(office);","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"ryanwalterlee"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"ryanwalterlee"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"ryanwalterlee"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"ryanwalterlee"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"ryanwalterlee"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"benmurphyy":18,"ryanwalterlee":112}},{"path":"src/main/java/unibook/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand.EditGroupDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.exceptions.GroupNotFoundException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":" * Represents a Student in the UniBook.","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"ryanwalterlee"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"ryanwalterlee"},"content":"public class Student extends Person {","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private final Set\u003cGroup\u003e groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    public Student(Name name, Phone phone, Email email, Set\u003cTag\u003e tags, Set\u003cModule\u003e modules, Set\u003cGroup\u003e groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        super(name, phone, email, tags, modules);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(groups);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * Another constructor to create a student from a given person and set of groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     * @param person person to create student from.","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * @param groups list of groups student is in.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public Student(Person person, Set\u003cGroup\u003e groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        this(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"            person.getTags(), person.getModules(), groups);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Student Object with phone removed","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Student with phone deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"ryanwalterlee"},"content":"    public Student deletePhone() {","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"ryanwalterlee"},"content":"        return new Student(getName(), new Phone(), getEmail(), getTags(), getModules(), groups);","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Student Object with email removed","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Student with email deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"ryanwalterlee"},"content":"    public Student deleteEmail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"ryanwalterlee"},"content":"        return new Student(getName(), getPhone(), new Email(), getTags(), getModules(), groups);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"ryanwalterlee"},"content":"     * Returns a new Student Object with specific tag removed","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"     * @return Student with specific tag deleted","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"    public Student deleteTag(String tagNameToDelete) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"ryanwalterlee"},"content":"        for (Tag tag: tags) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"            if (!tag.tagName.equalsIgnoreCase(tagNameToDelete)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"ryanwalterlee"},"content":"                newTags.add(tag);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"ryanwalterlee"},"content":"        return new Student(getName(), getPhone(), getEmail(), newTags, getModules(), groups);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"ryanwalterlee"},"content":"     * Add Student to all their groups.","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"ryanwalterlee"},"content":"    public void addStudentToAllTheirGroups() {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group group: groups) {","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"ryanwalterlee"},"content":"            group.addMember(this);","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove this student from all their groups.","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeStudentFromAllTheirGroups() {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group group: groups) {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"ryanwalterlee"},"content":"            group.removeMember(this);","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"     * Returns true only if the other student has all the same fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"     * @param other","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"            return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"ryanwalterlee"},"content":"            return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"        Student otherPerson \u003d (Student) other;","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"sophiien"},"content":"        return super.equals(other);","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"     * Returns the groups this student is in.","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"    public Set\u003cGroup\u003e getGroups() {","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        return groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"sophiien"},"content":"     * Edits the information of the group in the respective module","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"sophiien"},"content":"    public void editGroupByMod(Module module, EditGroupDescriptor editGroupDescriptor) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"sophiien"},"content":"        for (Group g : groups) {","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"sophiien"},"content":"            if (g.getModule().equals(module)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"sophiien"},"content":"                Group group \u003d g;","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"sophiien"},"content":"                groups.remove(g);","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"sophiien"},"content":"                Group newGroup \u003d EditCommand.createEditedGroup(g, editGroupDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"sophiien"},"content":"                groups.add(newGroup);","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"sophiien"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"sophiien"},"content":"     * Edits the information of the group in the respective module","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"sophiien"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"sophiien"},"content":"    public Group getGroupByName(Group group) throws GroupNotFoundException {","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"sophiien"},"content":"        for (Group g : groups) {","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"sophiien"},"content":"            if (g.equals(group)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"sophiien"},"content":"                return g;","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"sophiien"},"content":"        // TODO EDIT GROUP NOT FOUND EXCEPTION MSG","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"sophiien"},"content":"        throw new GroupNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove Group from this student","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"     * @param group","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeGroup(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cGroup\u003e toBeDeleted \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group g : groups) {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"ryanwalterlee"},"content":"            if (g.sameGroupNameAndModule(moduleCode.toString(), group.getGroupName())) {","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"ryanwalterlee"},"content":"                toBeDeleted.add(g);","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group g : toBeDeleted) {","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"ryanwalterlee"},"content":"            groups.remove(g);","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove all groups that is part of the module from this student","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeGroup(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cGroup\u003e toBeDeleted \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group g : groups) {","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"ryanwalterlee"},"content":"            if (g.getModule().getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"ryanwalterlee"},"content":"                toBeDeleted.add(g);","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"ryanwalterlee"},"content":"        for (Group g : toBeDeleted) {","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"ryanwalterlee"},"content":"            groups.remove(g);","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":192,"author":{"gitId":"ryanwalterlee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-02"},{"lineNumber":193,"author":{"gitId":"ryanwalterlee"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-02"},{"lineNumber":194,"author":{"gitId":"yokester98"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getTags());","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":196,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":197,"author":{"gitId":"ryanwalterlee"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":198,"author":{"gitId":"ryanwalterlee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-02"},{"lineNumber":199,"author":{"gitId":"ryanwalterlee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-02"},{"lineNumber":200,"author":{"gitId":"ryanwalterlee"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-02"},{"lineNumber":201,"author":{"gitId":"ryanwalterlee"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2022-03-02"},{"lineNumber":202,"author":{"gitId":"ryanwalterlee"},"content":"            .append(getPhone())","lastModifiedDate":"2022-03-02"},{"lineNumber":203,"author":{"gitId":"ryanwalterlee"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2022-03-02"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":"            .append(getEmail());","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":206,"author":{"gitId":"ryanwalterlee"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-02"},{"lineNumber":207,"author":{"gitId":"ryanwalterlee"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":208,"author":{"gitId":"ryanwalterlee"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-02"},{"lineNumber":209,"author":{"gitId":"ryanwalterlee"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-02"},{"lineNumber":210,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":211,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":212,"author":{"gitId":"sophiien"},"content":"        Set\u003cModule\u003e modules \u003d getModules();","lastModifiedDate":"2022-03-08"},{"lineNumber":213,"author":{"gitId":"sophiien"},"content":"        if (!modules.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":214,"author":{"gitId":"sophiien"},"content":"            builder.append(\"; Modules: \");","lastModifiedDate":"2022-03-08"},{"lineNumber":215,"author":{"gitId":"sophiien"},"content":"            modules.forEach(builder::append);","lastModifiedDate":"2022-03-08"},{"lineNumber":216,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"benmurphyy"},"content":"        if (!groups.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"benmurphyy"},"content":"            builder.append(\"; Groups: \");","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"benmurphyy"},"content":"            groups.forEach(builder::append);","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"ryanwalterlee"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-02"},{"lineNumber":223,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":224,"author":{"gitId":"ryanwalterlee"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"benmurphyy":44,"ryanwalterlee":136,"yokester98":6,"sophiien":38}},{"path":"src/main/java/unibook/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if the list contains an equivalent person (using equals) as the given argument.","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove module that matches with moduleCode from every person in UniquePersonList","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeModuleFromAllPersons(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"ryanwalterlee"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"ryanwalterlee"},"content":"            person.removeModule(moduleCode);","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"ryanwalterlee"},"content":"     * Delete all students and professors from unique person list if they exist in the 2 list provided","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"ryanwalterlee"},"content":"     * @param listOfStudents","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"ryanwalterlee"},"content":"     * @param listOfProfessors","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteStudentsAndProfs(List\u003cStudent\u003e listOfStudents, List\u003cProfessor\u003e listOfProfessors) {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"ryanwalterlee"},"content":"        for (Student student: listOfStudents) {","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"            internalList.remove(student);","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"        for (Professor professor: listOfProfessors) {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"            internalList.remove(professor);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"     * Delete all professors from unique person list if they exist in the list provided","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"ryanwalterlee"},"content":"     * @param listOfProfessors","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteProfs(List\u003cProfessor\u003e listOfProfessors) {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"ryanwalterlee"},"content":"        for (Professor professor: listOfProfessors) {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"ryanwalterlee"},"content":"            internalList.remove(professor);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if {@code persons} contains person with given phone number.","lastModifiedDate":"2022-04-04"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"    public boolean phoneNumberBeingUsed(Phone phone) {","lastModifiedDate":"2022-04-04"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-04-04"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"            if (internalList.get(i).getPhone().equals(phone)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"                return true;","lastModifiedDate":"2022-04-04"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-04-04"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"        return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":191,"author":{"gitId":"benmurphyy"},"content":"     * Returns true if {@code persons} contains person with given email.","lastModifiedDate":"2022-04-04"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"    public boolean emailBeingUsed(Email email) {","lastModifiedDate":"2022-04-04"},{"lineNumber":194,"author":{"gitId":"benmurphyy"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-04-04"},{"lineNumber":195,"author":{"gitId":"benmurphyy"},"content":"            if (internalList.get(i).getEmail().equals(email)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"                return true;","lastModifiedDate":"2022-04-04"},{"lineNumber":197,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-04-04"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":199,"author":{"gitId":"benmurphyy"},"content":"        return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":202,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"ryanwalterlee"},"content":"     * Delete the specified Group from all persons in person list","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"ryanwalterlee"},"content":"     * @param group","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"ryanwalterlee"},"content":"    public void deleteGroupFromAllPersons(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"ryanwalterlee"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"ryanwalterlee"},"content":"            if (person instanceof Student \u0026\u0026 person.hasModule(moduleCode)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"ryanwalterlee"},"content":"                Student student \u003d (Student) person;","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"ryanwalterlee"},"content":"                student.removeGroup(moduleCode, group);","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"ryanwalterlee"},"content":"     * Remove all groups from all students that are associated with this module code","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"ryanwalterlee"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"ryanwalterlee"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"ryanwalterlee"},"content":"    public void removeGroupFromAllStudents(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"ryanwalterlee"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"ryanwalterlee"},"content":"            if (person instanceof Student) {","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"ryanwalterlee"},"content":"                Student student \u003d (Student) person;","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"ryanwalterlee"},"content":"                student.removeGroup(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"ryanwalterlee"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":35,"ryanwalterlee":67,"-":128}},{"path":"src/main/java/unibook/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"benmurphyy":1,"-":10}},{"path":"src/main/java/unibook/model/person/exceptions/PersonNoSubtypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person.exceptions;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Thrown when a person object is not one of the proper subtypes, Professor or Student.","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" * TODO: when commands have been updated, can just make Person class abstract.","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"public class PersonNoSubtypeException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"    static final String DEFAULT_MESSAGE \u003d \"Person object is not a subtype of Person class\";","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"    public PersonNoSubtypeException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        super(DEFAULT_MESSAGE);","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"benmurphyy":13}},{"path":"src/main/java/unibook/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":7}},{"path":"src/main/java/unibook/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.AppUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":" * Represents a Tag in the UniBook.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"            \"Tags names should be alphanumeric and at most 20 characters long. Tags should also not contain spaces.\";","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 20;","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"benmurphyy":4,"yokester98":4,"-":48}},{"path":"src/main/java/unibook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":" * Contains utility methods for populating {@code UniBook} with sample data.","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Instantiates sample modules.","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    public static Module[] getSampleModules() {","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        Module sampleModule1 \u003d new Module(new ModuleName(\"Software Engineering\"), new ModuleCode(\"CS2103\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"        Module sampleModule2 \u003d new Module(new ModuleName(\"Introduction to Operating Systems\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"            new ModuleCode(\"CS2106\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        return new Module[] {sampleModule1, sampleModule2};","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Instantiates sample groups, using passed in modules array.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     * @param sampleModules","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     * @return array of sample groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    public static Group[] getSampleGroups(Module[] sampleModules) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        //Sample meeting time collection for group","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        ObservableList\u003cLocalDateTime\u003e sampleMeetingTimes1 \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        sampleMeetingTimes1.add(LocalDateTime.of(2022, 5, 4, 13, 0));","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        Group sampleGroup1 \u003d new Group(\"W16-1\", sampleModules[0], sampleMeetingTimes1);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        return new Group[] {sampleGroup1};","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"     * Instantiates sample key events, using passed in modules array.","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"     * @param sampleModules","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"     * @return array of key events","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    public static ModuleKeyEvent[] getSampleEvents(Module[] sampleModules) {","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"        LocalDateTime sampleTime \u003d LocalDateTime.of(2022, 5, 4, 14, 0);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"        ModuleKeyEvent sampleModuleKeyEvent1 \u003d new ModuleKeyEvent(ModuleKeyEvent.KeyEventType.EXAM, sampleTime,","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"            sampleModules[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"        return new ModuleKeyEvent[] {sampleModuleKeyEvent1};","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"    public static ReadOnlyUniBook getSampleUniBook() {","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"yokester98"},"content":"        UniBook sampleAb \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        //modules[0] \u003d\u003d cs2103, modules[1] \u003d\u003d cs2106","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"        Module[] modules \u003d getSampleModules();","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        //groups[0] \u003d\u003d W16-1","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        Group[] groups \u003d getSampleGroups(modules);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"        //keyEvents[0] \u003d exam on May 4th, 2022 at 2PM","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"        ModuleKeyEvent[] keyEvents \u003d getSampleEvents(modules);","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        //Initialising sample module sets to pass into Student constructor","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e sampleModuleSet1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e sampleModuleSet2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e sampleModuleSet3 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"        //Sample module sets for s1, s2, p1 respectively","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        sampleModuleSet1.add(modules[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        sampleModuleSet1.add(modules[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        sampleModuleSet2.add(modules[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"        sampleModuleSet3.add(modules[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"        //Initialising sample group sets to pass into Student constructor","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cGroup\u003e sampleGroupSet1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cGroup\u003e sampleGroupSet2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        //Sample group sets for s1","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        sampleGroupSet1.add(groups[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        sampleGroupSet2.add(groups[0]);","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"        //Initialising students and professor objects","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"        Student s1 \u003d new Student(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"            new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"            getTagSet(\"friend\", \"roommate\"), sampleModuleSet1, sampleGroupSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"        Student s2 \u003d new Student(new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"            new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"            getTagSet(\"friend\"), sampleModuleSet2, sampleGroupSet2);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        Professor p1 \u003d new Professor(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"            new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"            getTagSet(\"helpful\"), new Office(\"COM1 02-10\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"            sampleModuleSet3);","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"        //Add persons to their module\u0027s list of associated people","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"        modules[0].addStudent(s1);","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"        modules[1].addStudent(s1);","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"        modules[0].addStudent(s2);","lastModifiedDate":"2022-03-08"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"        modules[0].addProfessor(p1);","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        //Add students to their groups","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"        groups[0].addMember(s1);","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"        groups[0].addMember(s2);","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"        //Add people to sample Unibook","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"geraldneo567"},"content":"        sampleAb.addPerson(s1);","lastModifiedDate":"2022-03-08"},{"lineNumber":127,"author":{"gitId":"geraldneo567"},"content":"        sampleAb.addPerson(s2);","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"        sampleAb.addPerson(p1);","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"geraldneo567"},"content":"        //Add modules to sample Unibook","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"        sampleAb.addModule(modules[0]);","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"geraldneo567"},"content":"        sampleAb.addModule(modules[1]);","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"        //Add groups to sample Unibook","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"        sampleAb.addGroupToModule(groups[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"geraldneo567"},"content":"        //Add key events to sample Unibook","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"geraldneo567"},"content":"        sampleAb.addKeyEventToModule(keyEvents[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"     * Returns a set of Module objects that have the given moduleCodes.","lastModifiedDate":"2022-03-07"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCodes module codes of the module objects","lastModifiedDate":"2022-03-07"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"     * @return set of Module objects","lastModifiedDate":"2022-03-07"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"    public static Set\u003cModule\u003e getModuleSet(String... moduleCodes) {","lastModifiedDate":"2022-03-07"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"        return Arrays.stream(moduleCodes)","lastModifiedDate":"2022-03-07"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"            .map(moduleCode -\u003e new Module(new ModuleName(\"placeholder module\"), new ModuleCode(moduleCode)))","lastModifiedDate":"2022-03-07"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"benmurphyy":91,"yokester98":3,"-":23,"geraldneo567":47}},{"path":"src/main/java/unibook/storage/JsonSerializableUniBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNoSubtypeException;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedModule;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedPerson;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedProfessor;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedStudent;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":" * An Immutable UniBook that is serializable to JSON format.","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"@JsonRootName(value \u003d \"unibook\")","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"class JsonSerializableUniBook {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Module list contains duplicate module(s).\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"     * Constructs a {@code JsonSerializableUniBook} with the given persons.","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    public JsonSerializableUniBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"                                   @JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules) {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"     * Converts a given {@code ReadOnlyUniBook} into this class for Jackson use.","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUniBook}.","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"    public JsonSerializableUniBook(ReadOnlyUniBook source) {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        for (Person p : source.getPersonList()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"            if (p instanceof Student) {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"                persons.add(new JsonAdaptedStudent((Student) p));","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"            } else if (p instanceof Professor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"                persons.add(new JsonAdaptedProfessor((Professor) p));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"                //person should be either a student or a professor","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"                throw new PersonNoSubtypeException();","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        //all JsonAdaptedGroups are instantiated within the instantiation of a JsonAdaptedModule","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"     * Converts this UniBook into the model\u0027s {@code UniBook} object.","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    public UniBook toModelType() throws IllegalValueException, PersonNoSubtypeException {","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"yokester98"},"content":"        UniBook uniBook \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        //add all stored modules and groups (part of module) to unibook first","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"        for (JsonAdaptedModule jsonAdaptedModule : modules) {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"            if (uniBook.hasModule(module)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"            uniBook.addModule(module);","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        //add all stored people to unibook","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType(uniBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"            if (uniBook.hasPerson(person)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"            uniBook.addPerson(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        //add all stored people to their associated modules in unibook","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        //add all students to their groups","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"        for (Person p : uniBook.getPersonList()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"            uniBook.addPersonToAllTheirModules(p);","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"            if (p instanceof Student) {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"                uniBook.addStudentToAllTheirGroups((Student) p);","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"yokester98"},"content":"        return uniBook;","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benmurphyy":44,"yokester98":15,"-":29,"geraldneo567":15}},{"path":"src/main/java/unibook/storage/JsonUniBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.FileUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNoSubtypeException;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":" * A class to access UniBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"public class JsonUniBookStorage implements UniBookStorage {","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUniBookStorage.class);","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"    public JsonUniBookStorage(Path filePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"    public Path getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"    public Optional\u003cReadOnlyUniBook\u003e readUniBook() throws DataConversionException {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"        return readUniBook(filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"     * Similar to {@link #readUniBook()}.","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"    public Optional\u003cReadOnlyUniBook\u003e readUniBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"        Optional\u003cJsonSerializableUniBook\u003e jsonUniBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"            filePath, JsonSerializableUniBook.class);","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"        if (!jsonUniBook.isPresent()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"yokester98"},"content":"            return Optional.of(jsonUniBook.get().toModelType());","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        } catch (PersonNoSubtypeException pe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Stored person(s) found in \" + filePath + \": \" + \"have no specific Person subtype.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"            throw new DataConversionException(pe);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"    public void saveUniBook(ReadOnlyUniBook uniBook) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"        saveUniBook(uniBook, filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"     * Similar to {@link #saveUniBook(ReadOnlyUniBook)}.","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"    public void saveUniBook(ReadOnlyUniBook uniBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"        requireNonNull(uniBook);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUniBook(uniBook), filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benmurphyy":11,"yokester98":20,"-":53}},{"path":"src/main/java/unibook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benmurphyy":6,"-":42}},{"path":"src/main/java/unibook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"public interface Storage extends UniBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"    Path getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"    Optional\u003cReadOnlyUniBook\u003e readUniBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"    void saveUniBook(ReadOnlyUniBook uniBook) throws IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"benmurphyy":5,"yokester98":8,"-":19}},{"path":"src/main/java/unibook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":" * Manages storage of UniBook data in local storage.","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"    private UniBookStorage uniBookStorage;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"     * Creates a {@code StorageManager} with the given {@code UniBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"    public StorageManager(UniBookStorage uniBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"        this.uniBookStorage \u003d uniBookStorage;","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UniBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"    public Path getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"yokester98"},"content":"        return uniBookStorage.getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"    public Optional\u003cReadOnlyUniBook\u003e readUniBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"yokester98"},"content":"        return readUniBook(uniBookStorage.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"    public Optional\u003cReadOnlyUniBook\u003e readUniBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"        return uniBookStorage.readUniBook(filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"    public void saveUniBook(ReadOnlyUniBook uniBook) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"yokester98"},"content":"        saveUniBook(uniBook, uniBookStorage.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"yokester98"},"content":"    public void saveUniBook(ReadOnlyUniBook uniBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"yokester98"},"content":"        uniBookStorage.saveUniBook(uniBook, filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":6,"yokester98":21,"-":51}},{"path":"src/main/java/unibook/storage/UniBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":" * Represents a storage for {@link UniBook}.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"public interface UniBookStorage {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"    Path getUniBookFilePath();","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"     * Returns UniBook data as a {@link ReadOnlyUniBook}.","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"    Optional\u003cReadOnlyUniBook\u003e readUniBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"     * @see #getUniBookFilePath()","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"    Optional\u003cReadOnlyUniBook\u003e readUniBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"     * Saves the given {@link ReadOnlyUniBook} to the storage.","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"yokester98"},"content":"     * @param uniBook cannot be null.","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"    void saveUniBook(ReadOnlyUniBook uniBook) throws IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"     * @see #saveUniBook(ReadOnlyUniBook)","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"    void saveUniBook(ReadOnlyUniBook uniBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"benmurphyy":6,"yokester98":42}},{"path":"src/main/java/unibook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benmurphyy":8,"-":30}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.DuplicateMeetingTimeException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":" * Jackson-friendly version of Group.","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    public static final String DUPLICATE_KEY_EVENT_MESSAGE_FORMAT \u003d \"Duplicate key event on %s found in group %s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private final String groupName;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private final Set\u003cLocalDateTime\u003e meetingTimes;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * Creates a JsonAdaptedGroup object using json properties.","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * @param groupName","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * @param meetingTimes","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"groupName\") String groupName,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"                            @JsonProperty(\"meetingTimes\") Set\u003cLocalDateTime\u003e meetingTimes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        this.meetingTimes \u003d meetingTimes;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     * Creates a JsonAdaptedGroup object using group object.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"     * @param source","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        this.groupName \u003d source.getGroupName();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        this.meetingTimes \u003d new HashSet\u003c\u003e(source.getMeetingTimes());","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     *  Returns group name.","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    public String getGroupName() {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        return this.groupName;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     * @param module that this group is inside.","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Group.","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    public Group toModelType(Module module) throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        if (groupName \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        if (meetingTimes \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        Group group \u003d new Group(groupName, module);","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        for (LocalDateTime meetingTime : meetingTimes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"            try {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"                group.addMeetingTime(meetingTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            } catch (DuplicateMeetingTimeException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"                throw new IllegalValueException(String.format(DUPLICATE_KEY_EVENT_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"                        meetingTime.toString(), group.getGroupName()));","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        return group;","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":85,"geraldneo567":2}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedGroupCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.GroupNotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":" * Jackson-friendly group code comprising the module and group name of a group.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":" * Used for identifying the groups that a student is in.","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedGroupCode {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    public static final String GROUP_MODULE_DOES_NOT_EXIST \u003d \"Module with code %s does not exist in UniBook\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    public static final String GROUP_NAME_DOES_NOT_EXIST \u003d \"Group with code %s does not exist in UniBook\";","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    private final JsonAdaptedModuleCode moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    private final String groupName;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     * Instantiates a JsonAdaptedGroupCode class.","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode module code of the module that contains the group.","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"     * @param groupName  name of the group.","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedGroupCode(@JsonProperty(\"moduleCode\") JsonAdaptedModuleCode moduleCode,","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"                                @JsonProperty(\"groupName\") String groupName) {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * Returns the json adapted module code of the module group is associated with.","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * @return json adapted module code.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedModuleCode getModuleCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        return moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     * Returns the group converted to its model type.","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if given group does not exist in UniBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    public Group toModelType(UniBook uniBook) throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"            return uniBook.getGroupByModuleCodeAndGroupName(moduleCode.toModelType(), groupName);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        } catch (ModuleNotFoundException m) {","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(GROUP_MODULE_DOES_NOT_EXIST, moduleCode.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        } catch (GroupNotFoundException g) {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(GROUP_NAME_DOES_NOT_EXIST, groupName));","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":60}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedModule {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Modules\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    public static final String GROUP_ALREADY_IN_MODULE_MESSAGE_FORMAT \u003d \"Group with name %s already in module %s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    public static final String KEY_EVENT_ALREADY_IN_MODULE_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"            \"Key event with name %s and date %s already in module %s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    private final String moduleName;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private final Set\u003cJsonAdaptedGroup\u003e groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    private final Set\u003cJsonAdaptedModuleKeyEvent\u003e keyEvents;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     * Creates a JsonAdaptedModule object using json properties.","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleName","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * @param moduleCode","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * @param groups","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    public JsonAdaptedModule(@JsonProperty(\"moduleName\") String moduleName,","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"                             @JsonProperty(\"moduleCode\") String moduleCode,","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"                             @JsonProperty(\"groups\") Set\u003cJsonAdaptedGroup\u003e groups,","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"                             @JsonProperty(\"keyEvents\") Set\u003cJsonAdaptedModuleKeyEvent\u003e keyEvents) {","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d keyEvents;","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     * Creates a JsonAdaptedModule object using module object.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     * @param source","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        this.moduleName \u003d source.getModuleName().toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"        this.moduleCode \u003d source.getModuleCode().toString();","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d new HashSet\u003c\u003e(source.getGroups().stream()","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            .map(grp -\u003e new JsonAdaptedGroup(grp.getGroupName(), new HashSet\u003c\u003e(grp.getMeetingTimes())))","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"            .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"        this.keyEvents \u003d new HashSet\u003c\u003e(source.getKeyEvents().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"            .map(k -\u003e new JsonAdaptedModuleKeyEvent(k))","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"            .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted module.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        if (moduleName \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"                ModuleName.class.getSimpleName()));","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"                ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        if (groups \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Groups\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"        if (keyEvents \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Key Events\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        Module module \u003d new Module(new ModuleName(moduleName), new ModuleCode(moduleCode));","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"        for (JsonAdaptedGroup jsonGroup : groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"            if (module.hasGroupName(jsonGroup.getGroupName())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"                throw new IllegalValueException(String.format(GROUP_ALREADY_IN_MODULE_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"                        jsonGroup.getGroupName(), module.getModuleCode()));","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"            module.getGroups().add(jsonGroup.toModelType(module));","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"        for (JsonAdaptedModuleKeyEvent jsonKeyEvent : keyEvents) {","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"            ModuleKeyEvent moduleKeyEvent \u003d jsonKeyEvent.toModelType(module);","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"            if (module.hasEvent(moduleKeyEvent.getKeyEventType(), moduleKeyEvent.getKeyEventTiming())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"                throw new IllegalValueException(String.format(KEY_EVENT_ALREADY_IN_MODULE_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"                        moduleKeyEvent.getKeyEventType(), moduleKeyEvent.getKeyEventDate(), module.getModuleCode()));","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"            module.addKeyEvent(moduleKeyEvent);","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        return module;","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"benmurphyy":49,"geraldneo567":64}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedModuleCode {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"     * Constructs a {@code JsonAdaptedModuleCode} with the given {@code moduleCode}.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedModuleCode(String moduleCode) {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     * Converts a given {@code ModuleCode} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedModuleCode(ModuleCode source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"        moduleCode \u003d source.moduleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    @JsonValue","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        return moduleCode;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code ModuleCode} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public ModuleCode toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        return new ModuleCode(moduleCode);","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"benmurphyy":44}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedModuleKeyEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":" * Jackson friendly version of ModuleKeyEvent.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"public class JsonAdaptedModuleKeyEvent {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    private final String keyEventType;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    private final LocalDateTime keyEventTiming;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"     * Creates a JsonAdaptedModuleKeyEvent using a keyEventType string and keyEventTiming.","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"     * @param keyEventType","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"     * @param keyEventTiming","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    public JsonAdaptedModuleKeyEvent(@JsonProperty(\"keyEventType\") String keyEventType,","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"                                     @JsonProperty(\"keyEventTiming\") LocalDateTime keyEventTiming) {","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventType \u003d keyEventType;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventTiming \u003d keyEventTiming;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"     * Creates a JsonAdaptedModuleKeyEvent from a source ModuleKeyEvent.","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"     * @param source","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    public JsonAdaptedModuleKeyEvent(ModuleKeyEvent source) {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventType \u003d source.getKeyEventType().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"        this.keyEventTiming \u003d source.getKeyEventTiming();","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"     * Converts a JsonAdaptedModuleKeyEvent to its respective model-compatible ModuleKeyEvent.","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"     * @param module","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"     * @return the module key event.","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"    public ModuleKeyEvent toModelType(Module module) throws IllegalValueException {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"        if (keyEventType \u003d\u003d null || keyEventTiming \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT));","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"        return new ModuleKeyEvent(ModuleKeyEvent.KeyEventType.valueOf(keyEventType), keyEventTiming, module);","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":3,"geraldneo567":59}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"@JsonTypeInfo(","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    use \u003d JsonTypeInfo.Id.NAME,","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    include \u003d JsonTypeInfo.As.PROPERTY,","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    property \u003d \"type\")","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"@JsonSubTypes({","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedProfessor.class, name \u003d \"Professor\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedStudent.class, name \u003d \"Student\")","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"})","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"public abstract class JsonAdaptedPerson {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public static final String MODULE_DOES_NOT_EXIST_MESSAGE \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        \"Module with code %s that this person is associated with does not exist not in unibook!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    protected final String name;","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    protected final String phone;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    protected final String email;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    protected final Set\u003cJsonAdaptedModuleCode\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    protected final Set\u003cJsonAdaptedGroupCode\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"                             @JsonProperty(\"tagged\") Set\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"                             @JsonProperty(\"modules\") Set\u003cJsonAdaptedModuleCode\u003e modules) {","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"            .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        modules.addAll(source.getModules().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"            .map(module -\u003e module.getModuleCode())","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"            .map(JsonAdaptedModuleCode::new)","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"            .collect(Collectors.toSet()));","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"     * Abstract method.","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"     * @param unibook unibook application main object","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    public abstract Person toModelType(UniBook unibook) throws IllegalValueException, ModuleNotFoundException;","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"     * Returns the {@code Name} object to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if name string being parsed is null or invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"    public Name getModelName() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"        return modelName;","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"     * Returns the {@code Email} object to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if email string being parsed is null or invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    public Email getModelEmail() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"        Email modelEmail;","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"        } else if (email.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"            modelEmail \u003d new Email();","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"        return modelEmail;","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"     * Returns the {@code Phone} object to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if phone string being parsed is null or invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"    public Phone getModelPhone() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"        Phone modelPhone;","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"        } else if (phone.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"            modelPhone \u003d new Phone();","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"        return modelPhone;","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"     * Returns the Set of {@code Tag} objects to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if any tag is invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"    public Set\u003cTag\u003e getModelTags() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"        final Set\u003cTag\u003e personTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"        return personTags;","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"     * Returns the Set of {@code Module} objects to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"     * @param uniBook reference to UniBook instance in model, to check if module with given code exists.","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if any module is invalid (invalid name, or module does not exist in UniBook).","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"benmurphyy"},"content":"    public Set\u003cModule\u003e getModelModules(UniBook uniBook) throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"        final Set\u003cModule\u003e moduleObjs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"        //check if the given modules exist in unibook","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"        //throw IllegalValueException if not the case","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"        for (JsonAdaptedModuleCode moduleCode : modules) {","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"                moduleObjs.add(uniBook.getModuleByCode(moduleCode.toModelType()));","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"            } catch (ModuleNotFoundException m) {","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"                throw new IllegalValueException(String.format(MODULE_DOES_NOT_EXIST_MESSAGE, moduleCode));","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"        return moduleObjs;","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benmurphyy":135,"ryanwalterlee":1,"-":48}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedProfessor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedProfessor extends JsonAdaptedPerson {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    private final String office;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"     * Constructs a {@code JsonAdaptedProfessor} with the given person details.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedProfessor(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"                                @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                                @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                                @JsonProperty(\"tagged\") Set\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"                                @JsonProperty(\"modules\") Set\u003cJsonAdaptedModuleCode\u003e modules,","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"                                @JsonProperty(\"office\") String office) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        super(name, phone, email, tagged, modules);","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        this.office \u003d office;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * Converts a given {@code Professor} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedProfessor(Professor source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        super(source);","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        office \u003d source.getOffice().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * Returns the {@code Office} object to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if email string being parsed is null or invalid.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    public Office getModelOffice() throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        Office modelOffice;","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        if (office \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Office.class.getSimpleName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        } else if (office.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"            modelOffice \u003d new Office();","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        } else if (!Office.isValidOffice(office)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"            throw new IllegalValueException(Office.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"            modelOffice \u003d new Office(office);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        return modelOffice;","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     * Converts this Jackson-friendly adapted professor object into the model\u0027s {@code Professor} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    public Professor toModelType(UniBook uniBook) throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        return new Professor(getModelName(), getModelPhone(), getModelEmail(),","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"            getModelTags(), getModelOffice(), getModelModules(uniBook));","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"benmurphyy":69}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedStudent extends JsonAdaptedPerson {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cJsonAdaptedGroupCode\u003e groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given person details.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                              @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"                              @JsonProperty(\"tagged\") Set\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"                              @JsonProperty(\"modules\") Set\u003cJsonAdaptedModuleCode\u003e modules,","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"                              @JsonProperty(\"groups\") Set\u003cJsonAdaptedGroupCode\u003e groups) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        super(name, phone, email, tagged, modules);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        super(source);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        this.groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        //construct the json group code object for each group the student is in","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        for (Group group : source.getGroups()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"            this.groups.add(new JsonAdaptedGroupCode(new JsonAdaptedModuleCode(group.getModule().getModuleCode()),","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"                group.getGroupName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Returns the Set of {@code Group} objects to use for the converted model.","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     * Performs checks on the validity of the field in the Json before returning.","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     * @param uniBook reference to UniBook instance in group, to check if group with given code exists.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if any module is invalid (invalid name, or group does not exist in UniBook).","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    public Set\u003cGroup\u003e getModelGroups(UniBook uniBook) throws IllegalValueException {","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cGroup\u003e modelGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        for (JsonAdaptedGroupCode groupCode : groups) {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"            modelGroups.add(groupCode.toModelType(uniBook));","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        return modelGroups;","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    public Student toModelType(UniBook uniBook) throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        return new Student(getModelName(), getModelPhone(), getModelEmail(),","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            getModelTags(), getModelModules(uniBook), getModelGroups(uniBook));","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"benmurphyy":69}},{"path":"src/main/java/unibook/storage/adaptedmodeltypes/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage.adaptedmodeltypes;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benmurphyy":4,"-":44}},{"path":"src/main/java/unibook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.Logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"ryanwalterlee"},"content":"         * @see Logic#execute(String, MainWindow)","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"benmurphyy":5,"ryanwalterlee":1,"-":80}},{"path":"src/main/java/unibook/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-w16-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":5,"-":97}},{"path":"src/main/java/unibook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.Logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.listpanels.GroupListPanel;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.listpanels.ModuleListPanel;","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.listpanels.PersonListPanel;","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Flag to indicate what is being shown in the list pane, initial value is PEOPLE.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    private ListPaneFlag listPaneFlag \u003d ListPaneFlag.PEOPLE;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.getFilteredModuleList(), this);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"        //by default the listPanel holds person list on startup","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"        listPanelPlaceholder.getChildren().setAll(personListPanel.getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"yokester98"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"     * Returns the list of groups in mainwindow, i.e. the groups that are shown in gui.","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cGroup\u003e getShowingGroups() {","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"        return groupListPanel.getGroupsList();","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"     * Replaces the child of listPanelPlaceholder with moduleListPanel.","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"    public void setModuleListPanel() {","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        //only need to take action if currently not showing modules","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"        if (listPaneFlag !\u003d ListPaneFlag.MODULES) {","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Changing the view of list panel to show list of modules.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"            listPaneFlag \u003d ListPaneFlag.MODULES;","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"            listPanelPlaceholder.getChildren().setAll(moduleListPanel.getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"     * Replaces the child of listPanelPlaceholder with groupListPanel.","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"     * @param groups the list of groups to show.","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"    public void setGroupListPanel(ObservableList\u003cGroup\u003e groups) {","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"        logger.info(\"Changing the view of list panel to show a given list of groups.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"        groupListPanel \u003d new GroupListPanel(groups);","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"        listPaneFlag \u003d ListPaneFlag.GROUPS;","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"        listPanelPlaceholder.getChildren().setAll(groupListPanel.getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"     * Replaces the child of the listPanelPlaceholder with personListPanel.","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":"    public void setPersonListPanel() {","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"benmurphyy"},"content":"        //only need to take action if currently not showing people","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"        if (listPaneFlag !\u003d ListPaneFlag.PEOPLE) {","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Changing the view of list panel to show list of people.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"            listPaneFlag \u003d ListPaneFlag.PEOPLE;","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"            listPanelPlaceholder.getChildren().setAll(personListPanel.getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"     * Utility method for checking if person list currently being shown.","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean value indicating if person list being shown","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"    public boolean isPersonListShowing() {","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"        return listPaneFlag \u003d\u003d ListPaneFlag.PEOPLE;","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"     * Utility method for checking if module list currently being shown.","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean value indicating if module list being shown.","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"    public boolean isModuleListShowing() {","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"benmurphyy"},"content":"        return listPaneFlag \u003d\u003d ListPaneFlag.MODULES;","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":197,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":"     * Utility method for showing if a group list is currently being shown.","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean value indicating if group list being shown.","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"benmurphyy"},"content":"    public boolean isGroupListShowing() {","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"benmurphyy"},"content":"        return listPaneFlag \u003d\u003d ListPaneFlag.GROUPS;","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"benmurphyy"},"content":"    public CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"ryanwalterlee"},"content":"            CommandResult commandResult \u003d logic.execute(commandText,","lastModifiedDate":"2022-03-12"},{"lineNumber":256,"author":{"gitId":"ryanwalterlee"},"content":"                this.isPersonListShowing(),","lastModifiedDate":"2022-03-12"},{"lineNumber":257,"author":{"gitId":"geraldneo567"},"content":"                this.isModuleListShowing(),","lastModifiedDate":"2022-03-26"},{"lineNumber":258,"author":{"gitId":"geraldneo567"},"content":"                this.isGroupListShowing());","lastModifiedDate":"2022-03-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":278,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":279,"author":{"gitId":"benmurphyy"},"content":"     * Enum definition for flag to indicate when list panel is showing modules or people.","lastModifiedDate":"2022-03-06"},{"lineNumber":280,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":281,"author":{"gitId":"benmurphyy"},"content":"    private enum ListPaneFlag {","lastModifiedDate":"2022-03-06"},{"lineNumber":282,"author":{"gitId":"benmurphyy"},"content":"        PEOPLE, MODULES, GROUPS;","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":284,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":104,"ryanwalterlee":2,"yokester98":1,"-":176,"geraldneo567":2}},{"path":"src/main/java/unibook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":1,"-":27}},{"path":"src/main/java/unibook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":1,"-":27}},{"path":"src/main/java/unibook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":" * API of UI component","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"public interface Ui {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * Display the list of Modules instead of People.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    void seeModuleList();","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     * Display the list of Persons instead of Modules.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    void seePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"     * Check if module list showing in gui.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean variable indicating if module list being shown","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    boolean isModuleListShowing();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * Check if person list showing in gui.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * @return boolean variable indicating if person list being shown","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    boolean isPersonListShowing();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"     * Check if group list showing in gui.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     * @return boolean variable indicating if person list being shown","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    boolean isGroupListShowing();","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     * Set the view to show list of modules.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    void setModuleListPanel();","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     * Set the view to show list of persons.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    void setPersonListPanel();","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * Gets the list of groups shown in the ui.","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    ObservableList\u003cGroup\u003e getShowingGroupList();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"     * Set the view to show given list of groups.","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"     * @param group list of groups to show.","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"    void setGroupListPanel(ObservableList\u003cGroup\u003e group);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":62,"geraldneo567":8}},{"path":"src/main/java/unibook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.MainApp;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.StringUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.Logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/unibook_icon.png\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"                                               String contentText) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/MainTheme.css\");","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        alert.setTitle(title);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"    public void seeModuleList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        mainWindow.setModuleListPanel();","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    public void seePersonList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        mainWindow.setPersonListPanel();","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"    public boolean isPersonListShowing() {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        return mainWindow.isPersonListShowing();","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    public boolean isModuleListShowing() {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        return mainWindow.isModuleListShowing();","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"    public boolean isGroupListShowing() {","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"        return mainWindow.isGroupListShowing();","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"    public void setModuleListPanel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"        mainWindow.setModuleListPanel();","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"    public void setPersonListPanel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"        mainWindow.setPersonListPanel();","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"    public void setGroupListPanel(ObservableList\u003cGroup\u003e groups) {","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        mainWindow.setGroupListPanel(groups);","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cGroup\u003e getShowingGroupList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"        return mainWindow.getShowingGroups();","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":58,"-":64,"geraldneo567":13}},{"path":"src/main/java/unibook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.MainApp;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":18,"-":75}},{"path":"src/main/java/unibook/ui/cards/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.cards;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.util.CustomListChangeListeners;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.util.CustomPaneListFiller;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":" * A class that displays the information of a {@code Group}.","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"cards/GroupCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on UniBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    public final Group group;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupCard.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    private HBox groupPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    private Label id;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    private Label groupName;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    private GridPane moreGroupDetails;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    private VBox membersList;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    private VBox meetingTimesList;","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    //flag that indicates if the additional details - members and meeting times are being shown","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    private boolean additionalDetailsVisible \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code GroupCode} with the given {@code Group} and index to display.","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     * @param group           to display.","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     * @param displayedIndex  index to display with the group.","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     * @param singleGroupFlag indicates if only this group being displayed in view.","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    public GroupCard(Group group, int displayedIndex, boolean singleGroupFlag) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"        this.group \u003d group;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        moduleCode.setText(group.getModule().getModuleCode().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        groupName.setText(group.getGroupName());","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        setUpVBoxLists();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        setUpListChangeListeners();","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        if (!singleGroupFlag) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"            groupPane.addEventHandler(MouseEvent.MOUSE_CLICKED,","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"                new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"                    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"                    public void handle(MouseEvent e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"                        logger.info(\"Group card clicked. Mouse Event fired.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"                        additionalDetailsVisible \u003d !additionalDetailsVisible;","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"                        moreGroupDetails.setVisible(additionalDetailsVisible);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"                        moreGroupDetails.setManaged(additionalDetailsVisible);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"                    }","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"                });","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"            additionalDetailsVisible \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"        moreGroupDetails.setVisible(additionalDetailsVisible);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"        moreGroupDetails.setManaged(additionalDetailsVisible);","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"     * Set up listeners for changes in all the tab content lists, so that","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"     * when a change in one of them is detected, the list shown in ui","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     * can change accordingly.","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"    private void setUpListChangeListeners() {","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"        CustomListChangeListeners.addIndexedListChangeListener(membersList, group.getMembers(), (member, index) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"            new StudentCard(member, index + 1).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        CustomListChangeListeners.addIndexedListChangeListener(meetingTimesList,","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"            group.getMeetingTimes(), (meetingTime, index) -\u003e createLabelFromMeetingTime(meetingTime, index + 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"     * Converts a given {@code MeetingTime} to a {@code Label} for display in GUI.","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"    private Label createLabelFromMeetingTime(LocalDateTime meetingTime, int index) {","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"        Label label \u003d new Label(index + \".    \"","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"            + meetingTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        label.getStyleClass().add(\"group-meeting-time-label\");","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"        //meeting time is on the current day, highlight it","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        if (meetingTime.toLocalDate().equals(LocalDate.now())) {","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"            label.getStyleClass().add(\"group-meeting-time-label-today\");","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"        return label;","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"     * Sets up all the vbox lists which display lists of fields of a group to user.","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"    private void setUpVBoxLists() {","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"        CustomPaneListFiller.fillPaneFromList(membersList, group.getMembers(), (member, i) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"            new StudentCard(member, i + 1).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"        CustomPaneListFiller.fillPaneFromList(meetingTimesList, group.getMeetingTimes(), (meetingTime, i) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"            createLabelFromMeetingTime(meetingTime, i + 1));","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"        if (!(other instanceof ModuleCard)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"        // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"benmurphyy":147}},{"path":"src/main/java/unibook/ui/cards/ModuleAndGroupMiniCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.cards;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomListChangeListeners.addBasicListChangeListener;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomPaneListFiller.fillPaneFromList;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.MainWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.exceptions.ButtonActionException;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"public class ModuleAndGroupMiniCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"cards/ModuleAndGroupMiniCard.fxml\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private final Module module;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleAndGroupMiniCard.class);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    private HBox moduleAndGroupMiniPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    private FlowPane groupNameList;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"     * A Card displaying module code and the group names of groups of that module.","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     * @param module to display.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     * @param index index of this mini card.","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"     * @param mainWindow of the UI.","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    public ModuleAndGroupMiniCard(Module module, Integer index, MainWindow mainWindow) {","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        logger.info(String.format(\"Instantiating a moduleAndGroupMiniCard with module code %s\",","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"            module.getModuleCode()));","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        moduleCode.setText(module.getModuleCode().toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        //common function to use in generating group name labels","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        Function\u003cGroup, Label\u003e f \u003d new Function\u003cGroup, Label\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            public Label apply(Group group) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"                Label label \u003d new Label(group.getGroupName());","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"                label.getStyleClass().add(\"mini-pane-group-name-label\");","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"                //handler to navigate to the specific module","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"                label.addEventHandler(MouseEvent.MOUSE_CLICKED, new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"                    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"                    public void handle(MouseEvent event) {","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"                        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"                            switchToModulePage();","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"                            mainWindow.executeCommand(\"list o/group g/\" + group.getGroupName());","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"                        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"                            throw new ButtonActionException();","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"                    }","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"                });","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"                return label;","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        };","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        //fill in all the group codes","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(groupNameList, module.getGroups(), f);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        //set up list listener to update group name on event of underlying list change","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        addBasicListChangeListener(groupNameList, module.getGroups(), f);","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        //basic commmon style class for all mini cards","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        moduleAndGroupMiniPane.getStyleClass().add(\"mini-pane\");","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        //change background colour according to index of module card","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        if (index % 2 \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"            moduleAndGroupMiniPane.getStyleClass().add(\"odd-mini-pane\");","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"            moduleAndGroupMiniPane.getStyleClass().add(\"even-mini-pane\");","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        moduleCode.addEventHandler(MouseEvent.MOUSE_CLICKED,","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"            new EventHandler\u003c\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"                @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"                public void handle(MouseEvent event) {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"                    try {","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"                        switchToModulePage();","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"                    } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"                        throw new ButtonActionException();","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"                    }","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"            });","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"     * Navigates to the module page of the {@code Module} with the {@code moduleCode} of this card.","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"    private void switchToModulePage() throws CommandException, ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        mainWindow.setModuleListPanel();","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"        mainWindow.executeCommand(\"list m/\" + moduleCode.getText());","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"benmurphyy":113}},{"path":"src/main/java/unibook/ui/cards/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.cards;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomListChangeListeners.addIndexedAndFlagListChangeListener;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomListChangeListeners.addIndexedListChangeListener;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomPaneListFiller.fillPaneFromList;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":" * A UI component that displays information of {@code Module}.","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"cards/ModuleCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on UniBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    private final Module module;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    private final List\u003cNode\u003e allTabContents;","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleCard.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    private HBox modulePane;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    private Label id;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    private Label moduleName;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    private VBox professors;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    private VBox students;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    private VBox keyEvents;","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    private VBox groups;","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    //tab headings of module card","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    private Label professorsTab;","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    private Label studentsTab;","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    private Label groupsTab;","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    private Label keyEventsTab;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"    private ModuleCardTab currentTab \u003d ModuleCardTab.NONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code ModuleCode} with the given {@code Module} and index to display.","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"    public ModuleCard(Module module, int displayedIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        logger.info(String.format(\"Instantiating module card with code %s at index %s\", module.getModuleCode(),","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"            displayedIndex));","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        moduleCode.setText(module.getModuleCode().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        moduleName.setText(module.getModuleName().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        //collect all tabs in list of tabs for easy management","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"        allTabContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        allTabContents.add(professors);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        allTabContents.add(students);","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        allTabContents.add(groups);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        allTabContents.add(keyEvents);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        //set up all the vbox lists, make them all invisible in the ui at the start","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"        setUpVBoxLists();","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        //Set up all the listeners to the underlying lists of module","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        setUpListChangeListeners();","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"        //set up mouse click handlers for each tab","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"        setUpTabMouseClickHandlers();","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"     * Sets up all the vbox lists which display lists of fields of a module to user.","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"     * Initially all Vboxes are not visible, until one tab is clicked by user.","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"    private void setUpVBoxLists() {","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(professors, module.getProfessors(), (professor, i) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"            new ProfessorCard(professor, i + 1).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(students, module.getStudents(), (student, i) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"            new StudentCard(student, i + 1).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(groups, module.getGroups(), (group, i, flag) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"            new GroupCard(group, i + 1, flag).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(keyEvents, module.getKeyEvents(), (keyEvent, i) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"            new ModuleKeyEventCard(keyEvent, i + 1).getRoot());","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"        students.setManaged(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        students.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"        professors.setManaged(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        professors.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"        groups.setManaged(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"        groups.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"        keyEvents.setManaged(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"        keyEvents.setVisible(false);","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"     * Sets up all the mouseevent handlers for switch tabs of the view of a module","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"    private void setUpTabMouseClickHandlers() {","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"        setUpProfessorHeaderClickHandler();","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        setUpStudentsHeaderClickHandler();","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"        setUpGroupsHeaderClickHandler();","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"        setUpModuleKeyEventsHeaderClickHandler();","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"     * Sets up the mouse click handler for professor tab.","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"    private void setUpProfessorHeaderClickHandler() {","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"        professorsTab.addEventHandler(MouseEvent.MOUSE_CLICKED,","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"            new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"                @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"                public void handle(MouseEvent e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"                    logger.info(String.format(\"Professors tab clicked. Professors of module %s now showing.\",","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"                        module.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"                    changeTab(ModuleCardTab.PROFESSORS);","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"            });","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"     * Sets up the mouse click handler for students tab.","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"    private void setUpStudentsHeaderClickHandler() {","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"        studentsTab.addEventHandler(MouseEvent.MOUSE_CLICKED,","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"            new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"                @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"                public void handle(MouseEvent event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"                    logger.info(String.format(\"Students tab clicked. Students of module %s now showing.\",","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"                        module.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"                    changeTab(ModuleCardTab.STUDENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"            });","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"     * Sets up the mouse click handler for groups tab.","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"    private void setUpGroupsHeaderClickHandler() {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"        groupsTab.addEventHandler(MouseEvent.MOUSE_CLICKED,","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"            new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"                @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"                public void handle(MouseEvent event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"benmurphyy"},"content":"                    logger.info(","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":"                        String.format(\"Groups tab clicked. Groups of module %s now showing.\", module.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"benmurphyy"},"content":"                    changeTab(ModuleCardTab.GROUPS);","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"            });","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"     * Sets up the mouse click handler for module key events tab.","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"    private void setUpModuleKeyEventsHeaderClickHandler() {","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"        keyEventsTab.addEventHandler(MouseEvent.MOUSE_CLICKED,","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"            new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"                @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"                public void handle(MouseEvent event) {","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"                    logger.info(String.format(\"Key events tab clicked. Key events of module %s now showing.\",","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"                        module.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"                    changeTab(ModuleCardTab.KEY_EVENTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"            });","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"     * Triggers switch to show correct tab based on the tab clicked.","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"benmurphyy"},"content":"     * @param tab the tab heading that was clicked.","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"    private void changeTab(ModuleCardTab tab) {","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"benmurphyy"},"content":"        //make all tabs not visible first","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":"        for (Node node : allTabContents) {","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"benmurphyy"},"content":"            node.setVisible(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"            node.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"benmurphyy"},"content":"        //same tab was clicked twice, just close the tab","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":"        if (tab \u003d\u003d currentTab) {","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"benmurphyy"},"content":"            logger.info(String.format(\"Changed to no tab being shown for module %s\", module.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"benmurphyy"},"content":"            lightenTab(tab);","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"benmurphyy"},"content":"            currentTab \u003d ModuleCardTab.NONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"benmurphyy"},"content":"            return;","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"benmurphyy"},"content":"        lightenAllTabs();","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"benmurphyy"},"content":"        darkenTab(tab);","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"benmurphyy"},"content":"        if (tab \u003d\u003d ModuleCardTab.STUDENTS) {","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"benmurphyy"},"content":"            students.setManaged(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"benmurphyy"},"content":"            students.setVisible(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.PROFESSORS) {","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"benmurphyy"},"content":"            professors.setManaged(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"benmurphyy"},"content":"            professors.setVisible(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.GROUPS) {","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"benmurphyy"},"content":"            groups.setManaged(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"benmurphyy"},"content":"            groups.setVisible(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.KEY_EVENTS) {","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"benmurphyy"},"content":"            keyEvents.setManaged(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"benmurphyy"},"content":"            keyEvents.setVisible(true);","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"benmurphyy"},"content":"            throw new RuntimeException(\"This pathway should not happen\");","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"benmurphyy"},"content":"        logger.info(String.format(\"Changed to %s tab being shown for module %s\", tab, module.getModuleCode()));","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"benmurphyy"},"content":"        currentTab \u003d tab;","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"benmurphyy"},"content":"     * Darkens the button of specified tab.","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"benmurphyy"},"content":"    private void darkenTab(ModuleCardTab tab) {","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"benmurphyy"},"content":"        if (tab \u003d\u003d ModuleCardTab.STUDENTS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"benmurphyy"},"content":"            studentsTab.getStyleClass().add(\"module-student-list-heading-pressed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.PROFESSORS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"benmurphyy"},"content":"            professorsTab.getStyleClass().add(\"module-professor-list-heading-pressed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.GROUPS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"benmurphyy"},"content":"            groupsTab.getStyleClass().add(\"module-groups-list-heading-pressed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.KEY_EVENTS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"benmurphyy"},"content":"            keyEventsTab.getStyleClass().add(\"module-key-events-list-heading-pressed\");","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"benmurphyy"},"content":"            throw new RuntimeException(\"This pathway should not happen\");","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"benmurphyy"},"content":"     * Lightens the button of specified tab when unpressed.","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"benmurphyy"},"content":"    private void lightenTab(ModuleCardTab tab) {","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"benmurphyy"},"content":"        if (tab \u003d\u003d ModuleCardTab.STUDENTS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"benmurphyy"},"content":"            studentsTab.getStyleClass().removeIf(style -\u003e style.equals(\"module-student-list-heading-pressed\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.PROFESSORS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"benmurphyy"},"content":"            professorsTab.getStyleClass().removeIf(style -\u003e style.equals(\"module-professor-list-heading-pressed\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.GROUPS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"benmurphyy"},"content":"            groupsTab.getStyleClass().removeIf(style -\u003e style.equals(\"module-groups-list-heading-pressed\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"benmurphyy"},"content":"        } else if (tab \u003d\u003d ModuleCardTab.KEY_EVENTS) {","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"benmurphyy"},"content":"            keyEventsTab.getStyleClass().removeIf(style -\u003e style.equals(\"module-key-events-list-heading-pressed\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"benmurphyy"},"content":"            throw new RuntimeException(\"This pathway should not happen\");","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"benmurphyy"},"content":"     * Lightens all tabs.","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"benmurphyy"},"content":"    private void lightenAllTabs() {","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"benmurphyy"},"content":"        lightenTab(ModuleCardTab.STUDENTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"benmurphyy"},"content":"        lightenTab(ModuleCardTab.PROFESSORS);","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"benmurphyy"},"content":"        lightenTab(ModuleCardTab.GROUPS);","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"benmurphyy"},"content":"        lightenTab(ModuleCardTab.KEY_EVENTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"benmurphyy"},"content":"     * Set up listeners for changes in all the tab content lists, so that","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"benmurphyy"},"content":"     * when a change in one of them is detected, the list shown in ui","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"benmurphyy"},"content":"     * can change accordingly.","lastModifiedDate":"2022-03-25"},{"lineNumber":282,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"benmurphyy"},"content":"    private void setUpListChangeListeners() {","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"benmurphyy"},"content":"        addIndexedListChangeListener(professors, module.getProfessors(), (professor, index) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"benmurphyy"},"content":"                new ProfessorCard(professor, index + 1).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"benmurphyy"},"content":"        addIndexedListChangeListener(students, module.getStudents(), (student, index) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"benmurphyy"},"content":"                new StudentCard(student, index + 1).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"benmurphyy"},"content":"        addIndexedAndFlagListChangeListener(groups, module.getGroups(), (group, index, flag) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"benmurphyy"},"content":"                new GroupCard(group, index + 1, flag).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"benmurphyy"},"content":"        addIndexedListChangeListener(keyEvents, module.getKeyEvents(), (keyEvent, index) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"benmurphyy"},"content":"                new ModuleKeyEventCard(keyEvent, index + 1).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":293,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"benmurphyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"benmurphyy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"benmurphyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"benmurphyy"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":302,"author":{"gitId":"benmurphyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"benmurphyy"},"content":"        if (!(other instanceof ModuleCard)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"benmurphyy"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":306,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"benmurphyy"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"benmurphyy"},"content":"        ModuleCard card \u003d (ModuleCard) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"benmurphyy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 module.equals(card.module);","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":313,"author":{"gitId":"benmurphyy"},"content":"    //Tracks which field of Module is visible at a time","lastModifiedDate":"2022-03-25"},{"lineNumber":314,"author":{"gitId":"benmurphyy"},"content":"    public enum ModuleCardTab {","lastModifiedDate":"2022-03-25"},{"lineNumber":315,"author":{"gitId":"benmurphyy"},"content":"        STUDENTS, PROFESSORS, GROUPS, KEY_EVENTS, NONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":316,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"benmurphyy":318}},{"path":"src/main/java/unibook/ui/cards/ModuleKeyEventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.cards;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"public class ModuleKeyEventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"cards/ModuleKeyEventCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on UniBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    public final ModuleKeyEvent moduleKeyEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleKeyEventCard.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    private GridPane gridPane;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    private Label id;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    private Label moduleKeyEventType;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    private Label moduleKeyEventTime;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code ProfessorCard} with the given {@code Professor} and index to display.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    public ModuleKeyEventCard(ModuleKeyEvent keyEvent, int displayedIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        logger.info(String.format(\"Instantiating a moduleKeyEventCard\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        this.moduleKeyEvent \u003d keyEvent;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        moduleKeyEventType.setText(this.moduleKeyEvent.getKeyEventType().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        moduleKeyEventTime.setText(this.moduleKeyEvent.getKeyEventTiming().format(","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"            DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        setStyle();","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     * Set styling for important module events.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    private void setStyle() {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        if (moduleKeyEvent.getKeyEventType() \u003d\u003d ModuleKeyEvent.KeyEventType.EXAM","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            || moduleKeyEvent.getKeyEventType() \u003d\u003d ModuleKeyEvent.KeyEventType.ASSIGNMENT_DUE) {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"            gridPane.getStyleClass().add(\"module-key-event-card-important\");","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        if (!(other instanceof ProfessorCard)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        ModuleKeyEventCard card \u003d (ModuleKeyEventCard) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 moduleKeyEvent.equals(card.moduleKeyEvent);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"benmurphyy":81}},{"path":"src/main/java/unibook/ui/cards/ProfessorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.cards;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":" * A UI component that displays information of a {@code Professor}.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"public class ProfessorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"cards/ProfessorCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on UniBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private final Professor professor;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ProfessorCard.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    private Label office;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code ProfessorCard} with the given {@code Professor} and index to display.","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorCard(Professor professor, int displayedIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        logger.info(String.format(\"Instantiating professor card with index %s\", displayedIndex));","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        this.professor \u003d professor;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        name.setText(professor.getName().fullName);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        if (professor.getPhone().value.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Professor has no phone number, making phone label invisible\");","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            //no phone number, dont show phone field","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"            phone.setVisible(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            phone.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            phone.setText(\"Phone: \" + professor.getPhone().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        if (professor.getEmail().value.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Professor has no email, making email label invisible\");","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"            //no email, dont show email field","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            email.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"            email.setVisible(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"            email.setText(\"Email: \" + professor.getEmail().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        if (professor.getOffice().value.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Professor has no office, making office label invisible\");","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"            //no office, dont show office field","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"            office.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"            office.setVisible(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"            office.setText(\"Office: \" + professor.getOffice().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        professor.getTags().stream()","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"        if (!(other instanceof ProfessorCard)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        ProfessorCard card \u003d (ProfessorCard) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 professor.equals(card.professor);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"benmurphyy":48,"yokester98":1,"-":55}},{"path":"src/main/java/unibook/ui/cards/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.cards;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"cards/StudentCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on UniBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    public final Student student;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentCard.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        logger.info(\"Instantiating student card with index \" + displayedIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        if (student.getPhone().value.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Student has no phone number, making phone label invisible\");","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            //no phone number, dont show phone field","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            phone.setVisible(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"            phone.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"            phone.setText(\"Phone: \" + student.getPhone().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        if (student.getEmail().value.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"            logger.info(\"Student has no email, making email label invisible\");","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            //no email, dont show email field","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"            email.setManaged(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            email.setVisible(false);","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"            email.setText(\"Email: \" + student.getEmail().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"            \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"benmurphyy":37,"yokester98":1,"-":55}},{"path":"src/main/java/unibook/ui/exceptions/ButtonActionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.exceptions;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":" * Exception that is thrown when a button action has a exception that should not happen at all.","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class ButtonActionException extends RuntimeException {","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public ButtonActionException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        super(\"An exception has occured with a button press\");","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"benmurphyy":10}},{"path":"src/main/java/unibook/ui/listpanels/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.listpanels;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomListChangeListeners.addIndexedAndFlagListChangeListener;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomPaneListFiller.fillPaneFromList;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.TriFunction;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.cards.GroupCard;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"listpanels/GroupListPanel.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    //Flag that indicates if only a single group is being shown","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    private boolean singleGroupFlag \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private VBox groupListView;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private ObservableList\u003cGroup\u003e groupList;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    public GroupListPanel(ObservableList\u003cGroup\u003e groupList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        logger.info(\"Instantiating a new group list panel\");","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        this.groupList \u003d groupList;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        if (groupList.size() \u003d\u003d 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"            singleGroupFlag \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        TriFunction\u003cGroup, Integer, Boolean, Node\u003e cardConverter \u003d new TriFunction\u003c\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"            @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"            public Node apply(Group group, Integer index, Boolean singleFlag) {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"                return new GroupCard(group, index + 1, singleFlag).getRoot();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        };","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(groupListView, this.groupList, cardConverter);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        addIndexedAndFlagListChangeListener(groupListView, this.groupList, cardConverter);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     * Returns the list of groups showing in this list panel.","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    public ObservableList\u003cGroup\u003e getGroupsList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        return groupList;","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"benmurphyy":57}},{"path":"src/main/java/unibook/ui/listpanels/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.listpanels;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomListChangeListeners.addIndexedListChangeListener;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomPaneListFiller.fillPaneFromList;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.cards.ModuleCard;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":" * Panel containing the list of modules.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"listpanels/ModuleListPanel.fxml\";","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private ObservableList\u003cModule\u003e moduleList;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private VBox moduleListView;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        this.moduleList \u003d moduleList;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        BiFunction\u003cModule, Integer, Node\u003e cardCreator \u003d new BiFunction\u003cModule, Integer, Node\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"            @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"            public Node apply(Module module, Integer index) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"                return new ModuleCard(module, index + 1).getRoot();","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        };","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(moduleListView, this.moduleList, cardCreator);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        addIndexedListChangeListener(moduleListView, this.moduleList, cardCreator);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":50}},{"path":"src/main/java/unibook/ui/listpanels/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.listpanels;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomListChangeListeners.addIndexedListChangeListener;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.ui.util.CustomPaneListFiller.fillPaneFromList;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.LogsCenter;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNoSubtypeException;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.MainWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.UiPart;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.cards.ModuleAndGroupMiniCard;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.cards.ProfessorCard;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.ui.cards.StudentCard;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private static final String FXML \u003d \"listpanels/PersonListPanel.fxml\";","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    private ObservableList\u003cModule\u003e moduleList;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    private VBox personListView;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    private VBox moduleAndGroupListView;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ObservableList\u003cModule\u003e moduleList,","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"                           MainWindow mainWindow) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        logger.info(\"Instantiating person list\");","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        this.moduleList \u003d moduleList;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        //functon for creating a person card","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        BiFunction\u003cPerson, Integer, Node\u003e cardCreator \u003d new BiFunction\u003cPerson, Integer, Node\u003e() {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"            public Node apply(Person person, Integer index) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"                if (person instanceof Student) {","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"                    return new StudentCard((Student) person, index + 1).getRoot();","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"                } else if (person instanceof Professor) {","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"                    return new ProfessorCard((Professor) person, index + 1).getRoot();","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"                } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"                    //Since a person must always be a Student or Professor, this","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"                    //should never run","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"                    throw new PersonNoSubtypeException();","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        };","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        //set up the basic vbox list","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(personListView, this.personList, cardCreator);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        //set up listener for changes to underlying personlist","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        addIndexedListChangeListener(personListView, this.personList, cardCreator);","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        //fill in the moduleandgroup pane","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        fillPaneFromList(moduleAndGroupListView, this.moduleList, (module, index) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"                new ModuleAndGroupMiniCard(module, index, mainWindow).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        //set up list event listener pane","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        addIndexedListChangeListener(moduleAndGroupListView, this.moduleList, (module, index) -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"                new ModuleAndGroupMiniCard(module, index, mainWindow).getRoot());","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"benmurphyy":60,"-":23}},{"path":"src/main/java/unibook/ui/util/CustomListChangeListeners.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.util;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.TriFunction;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":" * Util class for adding custom {@code ListChangeListener} to a given pane object, so that it updates when","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":" * the underlying list updates.","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"public class CustomListChangeListeners {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     * Adds a basic {@code ListChangeListener} to the given {@code underlyingList}. Updates the children nodes","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     * of {@code pane} with nodes produced by the Function {@code toChildNode}.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     * @param pane           the pane object whose children to update.","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"     * @param underlyingList list whose updates to are being tracked.","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     * @param toChildNode    converter function that converts a given object of type U to a {@code Node}.","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cT\u003e            type of pane object.","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cU\u003e            type of object in the underlyingList.","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    public static \u003cT extends Pane, U\u003e void addBasicListChangeListener(T pane, ObservableList\u003cU\u003e underlyingList,","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"                                                                      Function\u003cU, ? extends Node\u003e toChildNode) {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        underlyingList.addListener(new ListChangeListener\u003c\u003e() {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"            /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"             * Update the children of the given pane shown to viewer on any kind of change to underlyingList.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"             */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"            @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"            public void onChanged(Change\u003c? extends U\u003e c) {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"                while (c.next()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"                    if (c.wasPermutated()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"                        ArrayList\u003cNode\u003e nodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"                            //save old objects at permuted positions","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"                            nodes.add(pane.getChildren().get(i));","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"                        int startIndex \u003d c.getFrom();","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren().set(c.getPermutation(i), nodes.get(startIndex - i));","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"                    } else if (c.wasUpdated()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren()","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"                                .set(i, toChildNode.apply(underlyingList.get(i)));","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"                    } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"                        //just refresh whole pane on add or remove","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"                        pane.getChildren().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d 0; i \u003c underlyingList.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren().add(i, toChildNode.apply(underlyingList.get(i)));","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"        });","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"     * Adds a basic {@code ListChangeListener} to a given pane object, that updates the children nodes of","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"     * the pane object, with the index of the object in the underlying list,","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"     * given any kind of change to the underlyingList of type U.","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"     * @param pane           the pane object whose children to update.","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"     * @param underlyingList list whose updates to are being tracked.","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"     * @param toChildNode    converter function that converts a given object of type U to a {@code Node},","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"     *                       using a given index, to add to the children list of {@code pane}","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cT\u003e            type of pane object.","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cU\u003e            type of object in the underlyingList.","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"    public static \u003cT extends Pane, U\u003e void addIndexedListChangeListener(T pane, ObservableList\u003cU\u003e underlyingList,","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            BiFunction\u003cU, Integer, ? extends Node\u003e toChildNode) {","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        underlyingList.addListener(new ListChangeListener\u003c\u003e() {","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"            /**","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"             * Update the children of the given pane shown to viewer on any kind of change to underlyingList.","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"             * Passes in the index of the affected item in underlying list to the {@code toChildNode} function.","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"             */","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"            @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"            public void onChanged(Change\u003c? extends U\u003e c) {","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"                while (c.next()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"                    if (c.wasPermutated()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"                        ArrayList\u003cNode\u003e nodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"                            //save old objects at permuted positions","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"                            nodes.add(pane.getChildren().get(i));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"                        int startIndex \u003d c.getFrom();","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren().set(c.getPermutation(i), nodes.get(startIndex - i));","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"                    } else if (c.wasUpdated()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren()","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"                                .set(i, toChildNode.apply(underlyingList.get(i), i));","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"                    } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"                        //just refresh whole pane on add or remove","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"                        pane.getChildren().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d 0; i \u003c underlyingList.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren().add(i, toChildNode.apply(underlyingList.get(i), i));","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"        });","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"     * Adds a basic {@code ListChangeListener} to a given pane object, that updates the children nodes of","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"     * the pane object, with the index of the object in the underlying list, and a flag indicating if","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"     * it is the only object being shown.","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"     * given any kind of change to the underlyingList of type U.","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"     * @param pane           the pane object whose children to update.","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"     * @param underlyingList list whose updates to are being tracked.","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"     * @param toChildNode    converter function that converts a given object of type U to a {@code Node},","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"     *                       using a given index and flag, to add to the children list of {@code pane}","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cT\u003e            type of pane object.","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cU\u003e            type of object in the underlyingList.","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"    public static \u003cT extends Pane, U\u003e void addIndexedAndFlagListChangeListener(T pane, ObservableList\u003cU\u003e underlyingList,","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"                                                                               TriFunction\u003cU, Integer, Boolean,","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"                                                                                   ? extends Node\u003e toChildNode) {","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"        underlyingList.addListener(new ListChangeListener\u003c\u003e() {","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"            /**","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"             * Update the children of the given pane shown to viewer on any kind of change to underlyingList.","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"             * Passes in the index of the affected item in underlying list to the {@code toChildNode} function.","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"             */","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"            @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"            public void onChanged(Change\u003c? extends U\u003e c) {","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"                while (c.next()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"                    if (c.wasPermutated()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"                        ArrayList\u003cNode\u003e nodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"                            //save old objects at permuted positions","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"                            nodes.add(pane.getChildren().get(i));","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"                        int startIndex \u003d c.getFrom();","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren().set(c.getPermutation(i), nodes.get(startIndex - i));","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"                    } else if (c.wasUpdated()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d c.getFrom(); i \u003c c.getTo(); ++i) {","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren()","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"                                .set(i, toChildNode.apply(underlyingList.get(i), i, underlyingList.size() \u003d\u003d 1));","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"                    } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"                        //just refresh whole pane on add or remove","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"                        pane.getChildren().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"                        for (int i \u003d 0; i \u003c underlyingList.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"                            pane.getChildren().add(i, toChildNode.apply(underlyingList.get(i),","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"                                i, underlyingList.size() \u003d\u003d 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"                        }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"                    }","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"                }","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"        });","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"benmurphyy":165}},{"path":"src/main/java/unibook/ui/util/CustomPaneListFiller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui.util;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.TriFunction;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":" * Util class for {@code Pane} filler functions.","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"public class CustomPaneListFiller {","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"     * Fills a {@code Pane} from given list with {@code Node} objects genreated using {@code converter}.","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     * @param pane           to fill.","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"     * @param underlyingList to fill from.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"     * @param converter      to use to convert a list item to node.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cT\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    public static \u003cT\u003e void fillPaneFromList(Pane pane, List\u003cT\u003e underlyingList, Function\u003cT, ? extends Node\u003e converter) {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"        pane.getChildren().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        for (T item : underlyingList) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"            pane.getChildren().add(converter.apply(item));","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"     * Fills a {@code Pane} from given list with {@code Node} objects genreated using {@code converter}, with indexes.","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     * @param pane           to fill.","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"     * @param underlyingList to fill from.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"     * @param converter      to use to convert a list item to node.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cT\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    public static \u003cT\u003e void fillPaneFromList(Pane pane, List\u003cT\u003e underlyingList, BiFunction\u003cT, Integer,","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        ? extends Node\u003e converter) {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        pane.getChildren().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        for (int i \u003d 0; i \u003c underlyingList.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"            pane.getChildren().add(converter.apply(underlyingList.get(i), i));","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"     * Fills a {@code Pane} from given list with {@code Node} objects genreated using {@code converter},","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"     * with indexes, and flag to represent if only one item in the list of children in pane.","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     * @param pane           to fill.","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     * @param underlyingList to fill from.","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"     * @param converter      to use to convert a list item to node.","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"     * @param \u003cT\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    public static \u003cT\u003e void fillPaneFromList(Pane pane, List\u003cT\u003e underlyingList, TriFunction\u003cT, Integer, Boolean,","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"        ? extends Node\u003e converter) {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        pane.getChildren().clear();","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        for (int i \u003d 0; i \u003c underlyingList.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"            pane.getChildren().add(converter.apply(underlyingList.get(i), i, underlyingList.size() \u003d\u003d 1));","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"benmurphyy":63}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"benmurphyy":1,"-":7}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"/* Person related styling */","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":".person-list-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    -fx-control-inner-background: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":".scroll-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    -fx-background: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 8;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":".student-card-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"   -fx-background-color: #BCC2C2;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"   -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"   -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"   -fx-padding: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":".professor-card-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"   -fx-background-color: #D1D0CE;","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"   -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"   -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"   -fx-padding: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"/* Module related styling*/","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":".module-code {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":".module-name {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 0 0 0 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":".module-professor-list-heading {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #5B4B49;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 5 0 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 5 0 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":".module-professor-list-heading:hover, .module-professor-list-heading-pressed {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #493c3a;","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":".module-professor-list-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 8;","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":".module-student-list-heading {","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #8DA7BE;","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":".module-student-list-heading:hover, .module-student-list-heading-pressed  {","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #718698;","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":".module-student-list-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 8;","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":".module-groups-list-heading {","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #5E8C61;","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":".module-groups-list-heading:hover, .module-groups-list-heading-pressed {","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #4b704e;","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":".module-groups-list-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 8;","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":".module-key-events-list-heading {","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #CA895F;","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 0 5 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 0 5 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":".module-key-events-list-heading:hover, .module-key-events-list-heading-pressed {","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #a26e4c;","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":".module-key-events-list-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 8;","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 0 10 10 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"/* GroupCard related classes */","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":".group-headings {","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":".group-module-code {","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #C1CAD6;","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 4;","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":".group-name {","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 4;","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #333333","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":".group-subheadings {","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"    -fx-underline: true;","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"/* ModuleKeyEventCard related classes */","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":".module-key-event-index {","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":".module-key-event-type {","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":".module-key-event-time {","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"/* person list page classes */","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":".person-list-header {","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"benmurphyy"},"content":".person-list-groups-header-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-style: hidden hidden hidden solid;","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-color: #333333","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"benmurphyy"},"content":".module-group-mini-cards-header-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #989898;","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10 10 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10 10 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"benmurphyy"},"content":".module-group-mini-cards {","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"benmurphyy"},"content":".mini-pane-module-code {","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 28px;","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 3 24 3 24;","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"benmurphyy"},"content":".mini-pane-module-code:hover {","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #bcbbb9;","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"benmurphyy"},"content":".module-group-list-scroll-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"benmurphyy"},"content":"    -fx-background: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"benmurphyy"},"content":".module-list-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"benmurphyy"},"content":".mini-pane-group-code-list {","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-style: hidden hidden hidden solid;","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-color: #333333;","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"benmurphyy"},"content":".mini-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 3;","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"benmurphyy"},"content":".odd-mini-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #b2beb5;","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"benmurphyy"},"content":".even-mini-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #c4c3d0;","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"benmurphyy"},"content":".mini-pane-group-name-label {","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #cfcfc4;","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 2 3 2 3;","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 16;","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"benmurphyy"},"content":".mini-pane-group-name-label:hover {","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #babab0;","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"benmurphyy"},"content":".module-group-card {","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"benmurphyy"},"content":"/* modules pane */","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"benmurphyy"},"content":".modules-scroll-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"benmurphyy"},"content":"    -fx-background: #D1D0CE;","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"benmurphyy"},"content":".module-key-event-card {","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #ead0bf;","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":304,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"benmurphyy"},"content":".group-card-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":306,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #cfddd0;","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"benmurphyy"},"content":".group-card-pane:hover {","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #bac7bb;","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":314,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"benmurphyy"},"content":".module-key-event-card-important {","lastModifiedDate":"2022-03-29"},{"lineNumber":316,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #e38381;","lastModifiedDate":"2022-03-29"},{"lineNumber":317,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":318,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":319,"author":{"gitId":"benmurphyy"},"content":".group-meeting-time-label {","lastModifiedDate":"2022-03-29"},{"lineNumber":320,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 24;","lastModifiedDate":"2022-03-29"},{"lineNumber":322,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":323,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":324,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":325,"author":{"gitId":"benmurphyy"},"content":".group-meeting-time-label-today {","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #e38381;","lastModifiedDate":"2022-03-29"},{"lineNumber":327,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"benmurphyy":307,"-":20}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"benmurphyy":3,"-":41}},{"path":"src/main/resources/view/MainTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"/*","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"}*/","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"/*","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"} */","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":".cell_medium_label {","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-family: \"Segoe UI Italic\";","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":".result-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #F5F5F5;","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #333333;","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: derive(#A5A5A8, 25%);","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: derive(#787276, 20%);","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-color: #D1D0CE;","lastModifiedDate":"2022-03-29"},{"lineNumber":350,"author":{"gitId":"benmurphyy"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":351,"author":{"gitId":"benmurphyy"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":352,"author":{"gitId":"benmurphyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"benmurphyy"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2022-03-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"benmurphyy"},"content":"    -fx-font-size: 16;","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"benmurphyy":28,"-":339}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"         title\u003d\"UniBook\" minWidth\u003d\"1080\" minHeight\u003d\"720\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        \u003cImage url\u003d\"@/images/unibook_icon.png\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"                \u003cURL value\u003d\"@MainTheme.css\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"                    \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"benmurphyy":9,"-":51}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"result-pane\"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"benmurphyy":2,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"benmurphyy":1,"-":10}},{"path":"src/main/resources/view/cards/GroupCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"groupPane\" fx:id\u003d\"groupPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane styleClass\u003d\"group-card-pane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"        \u003cVBox fx:id\u003d\"groupDetailsPane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"            \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"group-headings\" text\u003d\"\\$id\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"moduleCode\" styleClass\u003d\"group-module-code\" text\u003d\"\\$moduleCode\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"groupName\" styleClass\u003d\"group-name\" text\u003d\"\\$groupName\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"            \u003cGridPane fx:id\u003d\"moreGroupDetails\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"0\" percentWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"0\" percentWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"                \u003cScrollPane fitToWidth\u003d\"true\" prefViewportHeight\u003d\"350\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"                    \u003cVBox fx:id\u003d\"members\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"                        \u003cLabel fx:id\u003d\"membersHeading\" style\u003d\"-fx-padding: 0 0 0 15\" styleClass\u003d\"group-subheadings\"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"                               text\u003d\"Members\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"                        \u003cVBox fx:id\u003d\"membersList\" spacing\u003d\"5\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"                \u003cScrollPane fitToWidth\u003d\"true\" prefHeight\u003d\"200\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"                    \u003cVBox fx:id\u003d\"meetingTimes\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"                        \u003cLabel fx:id\u003d\"meetingTimesHeading\" styleClass\u003d\"group-subheadings\" text\u003d\"Meetings\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"                        \u003cVBox fx:id\u003d\"meetingTimesList\" spacing\u003d\"5\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"benmurphyy":45}},{"path":"src/main/resources/view/cards/ModuleAndGroupMiniCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"moduleAndGroupMiniPane\" fx:id\u003d\"moduleAndGroupMiniPane\"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" styleClass\u003d\"module-group-card\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" percentWidth\u003d\"40\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" percentWidth\u003d\"60\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        \u003cLabel GridPane.halignment\u003d\"CENTER\" fx:id\u003d\"moduleCode\" text\u003d\"\\$moduleCode\" styleClass\u003d\"mini-pane-module-code\"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"               GridPane.columnIndex\u003d\"0\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        \u003cFlowPane hgap\u003d\"5\" vgap\u003d\"7\" alignment\u003d\"CENTER\" fx:id\u003d\"groupNameList\" styleClass\u003d\"mini-pane-group-code-list\"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"                  GridPane.columnIndex\u003d\"1\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"benmurphyy":22}},{"path":"src/main/resources/view/cards/ModuleCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"modulePane\" fx:id\u003d\"modulePane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"module-code\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"moduleCode\" text\u003d\"\\$moduleCode\" styleClass\u003d\"module-code\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"moduleName\" styleClass\u003d\"module-name\" text\u003d\"\\$moduleCode\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"professorsTab\" styleClass\u003d\"module-professor-list-heading\" text\u003d\"Professors\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"studentsTab\" styleClass\u003d\"module-student-list-heading\" text\u003d\"Students\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"groupsTab\" styleClass\u003d\"module-groups-list-heading\" text\u003d\"Groups\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"keyEventsTab\" styleClass\u003d\"module-key-events-list-heading\" text\u003d\"Key Events\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"            \u003cVBox fx:id\u003d\"professors\" styleClass\u003d\"module-professor-list-pane\" spacing\u003d\"5\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"            \u003cVBox fx:id\u003d\"students\" styleClass\u003d\"module-student-list-pane\" spacing\u003d\"5\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"            \u003cVBox fx:id\u003d\"keyEvents\" styleClass\u003d\"module-key-events-list-pane\" spacing\u003d\"5\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"            \u003cVBox fx:id\u003d\"groups\" styleClass\u003d\"module-groups-list-pane\" spacing\u003d\"5\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":31}},{"path":"src/main/resources/view/cards/ModuleKeyEventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane styleClass\u003d\"module-key-event-card-normal\" fx:id\u003d\"gridPane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        \u003cGridPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"                \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" percentWidth\u003d\"10\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"                \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" percentWidth\u003d\"30\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"                \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" percentWidth\u003d\"60\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"module-key-event-index\" GridPane.columnIndex\u003d\"0\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"moduleKeyEventType\" styleClass\u003d\"module-key-event-type\" GridPane.columnIndex\u003d\"1\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"moduleKeyEventTime\" styleClass\u003d\"module-key-event-time\" GridPane.columnIndex\u003d\"2\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"benmurphyy":28}},{"path":"src/main/resources/view/cards/ProfessorCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane styleClass\u003d\"professor-card-pane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_medium_label\" text\u003d\"Professor\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"office\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$office\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":32}},{"path":"src/main/resources/view/cards/StudentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane styleClass\u003d\"student-card-pane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_medium_label\" text\u003d\"Student\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"            \u003cRowConstraints/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":35}},{"path":"src/main/resources/view/listpanels/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003cScrollPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fitToWidth\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"    \u003cVBox fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"benmurphyy":7}},{"path":"src/main/resources/view/listpanels/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003cScrollPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\" fitToWidth\u003d\"true\"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"            styleClass\u003d\"modules-scroll-pane\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    \u003cVBox fx:id\u003d\"moduleListView\" spacing\u003d\"10\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"benmurphyy":8}},{"path":"src/main/resources/view/listpanels/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\" styleClass\u003d\"person-list-pane\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"    \u003cGridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"59.6\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints percentWidth\u003d\"0.8\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"39.6\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        \u003cScrollPane fitToWidth\u003d\"true\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"            \u003cVBox fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" spacing\u003d\"5\" styleClass\u003d\"person-list-pane\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"        \u003cVBox GridPane.columnIndex\u003d\"2\" spacing\u003d\"5\" styleClass\u003d\"module-group-mini-cards\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"            \u003cGridPane styleClass\u003d\"module-group-mini-cards-header-pane\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"40\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"60\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"                \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"                    \u003cLabel text\u003d\"Modules\" styleClass\u003d\"person-list-header\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"                \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\" styleClass\u003d\"person-list-groups-header-pane\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"                    \u003cLabel text\u003d\"Groups\" styleClass\u003d\"person-list-header\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"            \u003cScrollPane fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"module-group-list-scroll-pane\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"                \u003cVBox fx:id\u003d\"moduleAndGroupListView\" VBox.vgrow\u003d\"ALWAYS\" spacing\u003d\"5\" styleClass\u003d\"module-list-pane\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":37}},{"path":"src/test/java/unibook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"benmurphyy":1,"-":57}},{"path":"src/test/java/unibook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"benmurphyy":1,"-":26}},{"path":"src/test/java/unibook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":4,"-":132}},{"path":"src/test/java/unibook/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.core.index;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"benmurphyy":5,"-":56}},{"path":"src/test/java/unibook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"        assertNotNull(AppUtil.getImage(\"/images/unibook_icon.png\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"            -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"benmurphyy":8,"-":30}},{"path":"src/test/java/unibook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"benmurphyy":6,"-":103}},{"path":"src/test/java/unibook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.Config;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benmurphyy":8,"-":108}},{"path":"src/test/java/unibook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":4,"-":20}},{"path":"src/test/java/unibook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.SerializableTestClass;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.TestUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":3,"-":42}},{"path":"src/test/java/unibook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"benmurphyy":9,"-":136}},{"path":"src/test/java/unibook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ListCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.JsonUniBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.StorageManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    public static final Boolean GROUP_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"    public static final Boolean GROUP_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"        JsonUniBookStorage uniBookStorage \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"            new JsonUniBookStorage(temporaryFolder.resolve(\"uniBook.json\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"        StorageManager storage \u003d new StorageManager(uniBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"yokester98"},"content":"        // Setup LogicManager with JsonUniBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"yokester98"},"content":"        JsonUniBookStorage uniBookStorage \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"            new JsonUniBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionUniBook.json\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"yokester98"},"content":"        StorageManager storage \u003d new StorageManager(uniBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_ALEX + CommandTestUtil.EMAIL_DESC_ALEX;","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        Person expectedPerson \u003d getTypicalUniBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    } */","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"        CommandResult result \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"                logic.execute(inputCommand, PERSON_LIST_SHOWING, MODULE_LIST_SHOWING, GROUP_LIST_SHOWING);","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"        Model expectedModel \u003d new ModelManager(model.getUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"ryanwalterlee"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand,","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"geraldneo567"},"content":"            PERSON_LIST_SHOWING, MODULE_LIST_SHOWING, GROUP_LIST_SHOWING));","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"yokester98"},"content":"    private static class JsonUniBookIoExceptionThrowingStub extends JsonUniBookStorage {","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"yokester98"},"content":"        private JsonUniBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"yokester98"},"content":"        public void saveUniBook(ReadOnlyUniBook uniBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"benmurphyy":25,"ryanwalterlee":7,"yokester98":12,"-":121,"geraldneo567":5}},{"path":"src/test/java/unibook/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"//package unibook.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"//import static unibook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.ModelManager;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"///**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"// * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"// */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"//public class AddCommandIntegrationTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"//    private Model model;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"//        model \u003d new ModelManager(TypicalPersons.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_newPerson_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"//        Model expectedModel \u003d new ModelManager(model.getUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"//        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"//        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"//            String.format(AddCommand.MESSAGE_SUCCESS_PERSON, validPerson), expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"//        Person personInList \u003d model.getUniBook().getPersonList().get(0);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"//              AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"//}","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"benmurphyy":43,"-":2}},{"path":"src/test/java/unibook/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"ryanwalterlee"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub,","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"ryanwalterlee"},"content":"                PERSON_LIST_SHOWING, MODULE_LIST_NOT_SHOWING);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS_PERSON, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"ryanwalterlee"},"content":"            -\u003e addCommand.execute(modelStub, PERSON_LIST_SHOWING, MODULE_LIST_NOT_SHOWING));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"yokester98"},"content":"        public Path getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"        public void setUniBookFilePath(Path uniBookFilePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        public ReadOnlyUniBook getUniBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        public void setUniBook(ReadOnlyUniBook newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2022-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"yokester98"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"yokester98"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"yokester98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"        public Group removeGroup(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"        public List\u003cGroup\u003e getShowingGroupList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":175,"author":{"gitId":"yokester98"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"yokester98"},"content":"        public void addPersonToTheirGroups(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"yokester98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"geraldneo567"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"geraldneo567"},"content":"        public boolean hasModule(Module person) {","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"geraldneo567"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":183,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":184,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":185,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"ryanwalterlee"},"content":"        public boolean hasModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"ryanwalterlee"},"content":"        public boolean hasModuleAndGroup(ModuleCode moduleCode, Group group) {","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"ryanwalterlee"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"geraldneo567"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"geraldneo567"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"geraldneo567"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":198,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":199,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":200,"author":{"gitId":"yokester98"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"yokester98"},"content":"        public void addPersonToTheirModules(Person person) {","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"yokester98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"ryanwalterlee"},"content":"        public void deleteByModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"ryanwalterlee"},"content":"        public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"ryanwalterlee"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"ryanwalterlee"},"content":"        public boolean isModuleExist(Set\u003cModuleCode\u003e moduleCodeSet) {","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"ryanwalterlee"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":219,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"geraldneo567"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":221,"author":{"gitId":"ryanwalterlee"},"content":"        public void deleteModuleAndPersons(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"geraldneo567"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":223,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":224,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":225,"author":{"gitId":"yokester98"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"ryanwalterlee"},"content":"        public void deleteProfModule(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"yokester98"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":231,"author":{"gitId":"yokester98"},"content":"        public Module getModuleByCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-13"},{"lineNumber":232,"author":{"gitId":"yokester98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":234,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":235,"author":{"gitId":"geraldneo567"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":236,"author":{"gitId":"geraldneo567"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":237,"author":{"gitId":"geraldneo567"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":238,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":239,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":240,"author":{"gitId":"geraldneo567"},"content":"        @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":241,"author":{"gitId":"geraldneo567"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-03-05"},{"lineNumber":242,"author":{"gitId":"geraldneo567"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":243,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"yokester98"},"content":"        public ReadOnlyUniBook getUniBook() {","lastModifiedDate":"2022-03-02"},{"lineNumber":284,"author":{"gitId":"yokester98"},"content":"            return new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"benmurphyy":16,"ryanwalterlee":47,"yokester98":30,"-":170,"geraldneo567":25}},{"path":"src/test/java/unibook/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"    public void execute_emptyUniBook_success() {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"    public void execute_nonEmptyUniBook_success() {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        Model model \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        Model expectedModel \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"        expectedModel.setUniBook(new UniBook());","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"benmurphyy":9,"yokester98":6,"-":18}},{"path":"src/test/java/unibook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"benmurphyy":1,"-":53}},{"path":"src/test/java/unibook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.CliSyntax;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":" * Also contains static text fields for testing parsing of commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    //Data for objects to be created from scratch for testing","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_MODULE_NAME_CS2100 \u003d \"Computer Organisation\";","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_MODULE_CODE_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_NAME_STUDENT_AMY \u003d \"Amy Beasley\";","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_NAME_PROFESSOR_CHARLES \u003d \"Charles Tootkins\";","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_PHONE_STUDENT_AMY \u003d \"89092807\";","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_PHONE_PROFESSOR_CHARLES \u003d \"91230283\";","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_EMAIL_STUDENT_AMY \u003d \"amybee@example.com\";","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_EMAIL_PROFESSOR_CHARLES \u003d \"charles@example.com\";","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_OFFICE_2 \u003d \"COM2 03-12\";","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"    public static final String VALID_TAG \u003d \"friend\";","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    //Option fields","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yokester98"},"content":"    public static final String VALID_OPTION_MODULE \u003d \"module\";","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"    public static final String VALID_OPTION_STUDENT \u003d \"student\";","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"    public static final String VALID_OPTION_PROFESSOR \u003d \"professor\";","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"    public static final String OPTION_DESC_MODULE \u003d \" \" + CliSyntax.PREFIX_OPTION + VALID_OPTION_MODULE;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"    public static final String OPTION_DESC_STUDENT \u003d \" \" + CliSyntax.PREFIX_OPTION + VALID_OPTION_STUDENT;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"    public static final String OPTION_DESC_PROFESSOR \u003d \" \" + CliSyntax.PREFIX_OPTION + VALID_OPTION_PROFESSOR;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_STUDENT_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    public static final String MODULE_NAME_DESC_CS2100 \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_MODULE_NAME_CS2100;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_STUDENT_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_STUDENT_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    public static final String MODULE_CODE_DESC_CS2100 \u003d \" \" + CliSyntax.PREFIX_MODULE + VALID_MODULE_CODE_CS2100;","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"sophiien"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"    public static final String INVALID_OPTION_DESC \u003d \" \"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OPTION + \"STUDENT\"; // only \u0027student\u0027/\u0027module\u0027/\u0027professor\u0027 allowed in option","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"        + CliSyntax.PREFIX_OFFICE + \" \"; // empty string not allowed for addresses","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"    public static final Boolean GROUP_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"    public static final Boolean GROUP_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"            CommandResult result \u003d command.execute(actualModel, PERSON_LIST_SHOWING, MODULE_LIST_SHOWING,","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"                    GROUP_LIST_SHOWING);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    /**d","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"ryanwalterlee"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"ryanwalterlee"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"ryanwalterlee"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"ryanwalterlee"},"content":"     * Meant to test result on calling Methods on a certain correct page","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"ryanwalterlee"},"content":"    public static void assertCommandSuccessPage(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"                                                Model expectedModel, boolean personListShowing,","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"                                                boolean moduleListShowing, boolean groupListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"ryanwalterlee"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"            CommandResult result \u003d command.execute(actualModel, personListShowing, moduleListShowing,","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"                    groupListShowing);","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"ryanwalterlee"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"ryanwalterlee"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"ryanwalterlee"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"ryanwalterlee"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"ryanwalterlee"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"ryanwalterlee"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"ryanwalterlee"},"content":"     * Able to modify page showing","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"ryanwalterlee"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"ryanwalterlee"},"content":"    public static void assertCommandSuccessPage(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"                                                Model expectedModel, boolean personListShowing,","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"geraldneo567"},"content":"                                                boolean moduleListShowing, boolean groupListShowing) {","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"ryanwalterlee"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"ryanwalterlee"},"content":"        assertCommandSuccessPage(command, actualModel, expectedCommandResult,","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"geraldneo567"},"content":"            expectedModel, personListShowing, moduleListShowing, groupListShowing);","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"yokester98"},"content":"     * - the unibook, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"yokester98"},"content":"        UniBook expectedUniBook \u003d new UniBook(actualModel.getUniBook());","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"ryanwalterlee"},"content":"        Assert.assertThrows(CommandException.class,","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"geraldneo567"},"content":"            expectedMessage, () -\u003e command.execute(actualModel, PERSON_LIST_SHOWING, MODULE_LIST_SHOWING,","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"geraldneo567"},"content":"                        GROUP_LIST_SHOWING));","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"ryanwalterlee"},"content":"        assertEquals(expectedUniBook, actualModel.getUniBook());","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"ryanwalterlee"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"ryanwalterlee"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"ryanwalterlee"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"ryanwalterlee"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"ryanwalterlee"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"ryanwalterlee"},"content":"     * - the unibook, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"ryanwalterlee"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"ryanwalterlee"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"ryanwalterlee"},"content":"                                            Boolean personListShowing, Boolean moduleListShowing) {","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"ryanwalterlee"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"ryanwalterlee"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"ryanwalterlee"},"content":"        UniBook expectedUniBook \u003d new UniBook(actualModel.getUniBook());","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"ryanwalterlee"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"ryanwalterlee"},"content":"        Assert.assertThrows(CommandException.class,","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"geraldneo567"},"content":"            expectedMessage, () -\u003e command.execute(actualModel, personListShowing, moduleListShowing,","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"geraldneo567"},"content":"                        GROUP_LIST_SHOWING));","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"yokester98"},"content":"        assertEquals(expectedUniBook, actualModel.getUniBook());","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"yokester98"},"content":"     * {@code model}\u0027s unibook.","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"benmurphyy":37,"ryanwalterlee":49,"yokester98":14,"sophiien":4,"-":70,"geraldneo567":13}},{"path":"src/test/java/unibook/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean PERSON_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_SHOWING \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"ryanwalterlee"},"content":"    public static final Boolean MODULE_LIST_NOT_SHOWING \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    private Model model \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    /* TODO fix failing tests","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"ryanwalterlee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"ryanwalterlee"},"content":"    public void execute_validModuleUnfilteredList_success() {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        ModuleCode moduleToDelete \u003d model.getFilteredModuleList()","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()).getModuleCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"ryanwalterlee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalModuleCodes.CS2103);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"ryanwalterlee"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"ryanwalterlee"},"content":"        expectedModel.deleteByModuleCode(moduleToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"ryanwalterlee"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"ryanwalterlee"},"content":"    public void execute_validIndexWrongPage_throwsCommandException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"ryanwalterlee"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"ryanwalterlee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"ryanwalterlee"},"content":"        String expectedMessage \u003d Messages.MESSAGE_CHANGE_TO_PERSON_PAGE;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"ryanwalterlee"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage,","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"ryanwalterlee"},"content":"                PERSON_LIST_NOT_SHOWING, MODULE_LIST_SHOWING);","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ryanwalterlee"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"ryanwalterlee"},"content":"    public void execute_validModuleWrongPage_throwsCommandException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"ryanwalterlee"},"content":"        Person moduleToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"ryanwalterlee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"ryanwalterlee"},"content":"        String expectedMessage \u003d Messages.MESSAGE_CHANGE_TO_PERSON_PAGE;","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"ryanwalterlee"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage,","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"ryanwalterlee"},"content":"                PERSON_LIST_NOT_SHOWING, MODULE_LIST_SHOWING);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"ryanwalterlee"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"        Model expectedModel \u003d new ModelManager(model.getUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"yokester98"},"content":"        // ensures that outOfBoundIndex is still in bounds of unibook list","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"yokester98"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUniBook().getPersonList().size());","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"benmurphyy":21,"ryanwalterlee":37,"yokester98":6,"-":76}},{"path":"src/test/java/unibook/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"//package unibook.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.ModelManager;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"//import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"//import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"///**","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.TODO","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"// */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"//public class EditCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"//    private Model model \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"//    /* TODO dont create editdescriptor inside commandutil, commandutil is just used for holding parsing text.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"//        Model expectedModel \u003d new ModelManager(new UniBook(model.getUniBook()), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"//        Person editedPerson \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"//            personInList.withName(CommandTestUtil.VALID_NAME_BOB).withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"//                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"//            .withPhone(CommandTestUtil.VALID_PHONE_BOB).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"//        Model expectedModel \u003d new ModelManager(new UniBook(model.getUniBook()), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"//        Model expectedModel \u003d new ModelManager(new UniBook(model.getUniBook()), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"//        Person personInFilteredList \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"//            model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"//              .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"//            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"//        Model expectedModel \u003d new ModelManager(new UniBook(model.getUniBook()), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"//        // edit person in filtered list into a duplicate in unibook","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"//        Person personInList \u003d model.getUniBook().getPersonList()","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"//              .get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"//            new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"//            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"//     */","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"//    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"//     * but smaller than size of unibook","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"//     */","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"//    /*","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"//        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"//        // ensures that outOfBoundIndex is still in bounds of unibook list","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getUniBook().getPersonList().size());","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"//            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"//        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"//        final EditCommand standardCommand \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"//            new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"//            standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON, CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"//            standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"//    */","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"//}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":162}},{"path":"src/test/java/unibook/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"//TODO","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"//package unibook.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"//import unibook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"//import unibook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"//public class EditPersonDescriptorTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"//    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_ALEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"//        assertTrue(DESC_ALEX.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"//        assertTrue(DESC_ALEX.equals(DESC_ALEX));","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(5));","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(DESC_BERNICE));","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"//        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"//              .withName(VALID_NAME_STUDENT_BERNICE).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withPhone(VALID_PHONE_STUDENT_BERNICE).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withEmail(VALID_EMAIL_STUDENT_BERNICE).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"//","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withTags(VALID_TAG_FRIEND, VALID_TAG_ROOMMATE).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"//        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"//    }","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"//}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":49}},{"path":"src/test/java/unibook/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"benmurphyy":5,"-":15}},{"path":"src/test/java/unibook/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.StudentBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private Model model \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"        //Multiple persons matching predicate","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"        Student john \u003d new StudentBuilder().withName(\"John Anes\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        Student johnb \u003d new StudentBuilder().withName(\"John Bones\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        List\u003cStudent\u003e multipleStudents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        multipleStudents.add(john);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        model.addPerson(john);","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        expectedModel.addPerson(john);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        multipleStudents.add(johnb);","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        model.addPerson(johnb);","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"        expectedModel.addPerson(johnb);","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"John\");","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        assertEquals(multipleStudents, model.getFilteredPersonList());","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"benmurphyy":29,"-":67}},{"path":"src/test/java/unibook/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"benmurphyy":5,"-":15}},{"path":"src/test/java/unibook/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package unibook.logic.commands;","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import static unibook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"import static unibook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.ModelManager;","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"import unibook.testutil.typicalclasses.TypicalIndexes;","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"        model \u003d new ModelManager(TypicalUniBook.getTypicalUniBook(), new UserPrefs());","lastModifiedDate":"2022-04-03"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"        expectedModel \u003d new ModelManager(model.getUniBook(), new UserPrefs());","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"-":28,"geraldneo567":11}},{"path":"src/test/java/unibook/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"    /*","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        Person expectedPerson \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"            new PersonBuilder(TypicalPersons.BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"            CommandTestUtil.PREAMBLE_WHITESPACE + CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"                    + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"                    + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"        assertParseSuccess(parser, CommandTestUtil.OPTION_DESC_STUDENT + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"        assertParseSuccess(parser, CommandTestUtil.OPTION_DESC_STUDENT + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"        assertParseSuccess(parser, CommandTestUtil.OPTION_DESC_STUDENT + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"                CommandTestUtil.OPTION_DESC_STUDENT + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        Person expectedPersonMultipleTags \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"                new PersonBuilder(TypicalPersons.BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"                    CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"        assertParseSuccess(parser, CommandTestUtil.OPTION_DESC_STUDENT + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        // zero tags","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"yokester98"},"content":"        assertParseSuccess(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.EMAIL_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"        String expectedMessageStudent \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE_STUDENT);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"yokester98"},"content":"        // missing option prefix","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_OPTION_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"                expectedMessage);","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"            expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        // missing phone prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.VALID_PHONE_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB, expectedMessageStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        // missing email prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"                        + CommandTestUtil.VALID_EMAIL_BOB, expectedMessageStudent);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_OPTION_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.VALID_PHONE_BOB + CommandTestUtil.VALID_EMAIL_BOB,","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"            expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"yokester98"},"content":"        // invalid option","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_OPTION_DESC","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, AddCommandParser.MESSAGE_CONSTRAINTS_OPTION);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"        // invalid name","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"        // invalid phone","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"        // invalid email","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        // invalid tag","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"yokester98"},"content":"        assertParseFailure(parser, CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"yokester98"},"content":"                + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"yokester98"},"content":"            CommandTestUtil.PREAMBLE_NON_EMPTY + CommandTestUtil.OPTION_DESC_STUDENT","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"yokester98"},"content":"                    + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"    */","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":78,"yokester98":55}},{"path":"src/test/java/unibook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"benmurphyy":1,"-":149}},{"path":"src/test/java/unibook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"benmurphyy":3,"-":35}},{"path":"src/test/java/unibook/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalIndexes;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"benmurphyy":7,"-":24}},{"path":"src/test/java/unibook/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"sophiien"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT_1;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_EMAIL_STUDENT_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_NAME_STUDENT_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_PHONE_STUDENT_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_TAG;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"sophiien"},"content":"import static unibook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"sophiien"},"content":"import static unibook.testutil.typicalclasses.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"sophiien"},"content":"import static unibook.testutil.typicalclasses.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"sophiien"},"content":"import static unibook.testutil.typicalclasses.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"sophiien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"sophiien"},"content":"import unibook.logic.commands.EditCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"sophiien"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"sophiien"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"sophiien"},"content":"import unibook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d MESSAGE_INVALID_COMMAND_FORMAT_1","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"sophiien"},"content":"            + EditCommand.PERSON_MESSAGE_USAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        // no field specified","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \" 1 o/person \", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"sophiien"},"content":"        // no option and no field specified","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \" 1 \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"sophiien"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"sophiien"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"sophiien"},"content":"        // negative index","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"edit -5\" + \" o/person \" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"sophiien"},"content":"        // zero index","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"edit 0\" + \" o/person \" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"sophiien"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"edit 1 some random string o/person\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"sophiien"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"edit 1 i/ string o/person\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"sophiien"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"sophiien"},"content":"        // invalid name","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\" + \" o/person \" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"sophiien"},"content":"        // invalid phone","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\" + \" o/person \" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"sophiien"},"content":"        // invalid email","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\" + \" o/person \" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"sophiien"},"content":"        // invalid tag","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\" + \" o/person \" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        assertParseFailure(parser, \"1\" + \" o/person \"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"sophiien"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\" + \" o/person\" + PHONE_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"                + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"sophiien"},"content":"                                    + \" o/person \"","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"sophiien"},"content":"                                    + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"sophiien"},"content":"                                    + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"sophiien"},"content":"                                   + \" o/person \"","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"sophiien"},"content":"                                   + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"                                   + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"sophiien"},"content":"                                    + \" o/person \"","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"sophiien"},"content":"                                    + TAG_EMPTY","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"                                    + TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"sophiien"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"sophiien"},"content":"                                    + \" o/person \"","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"sophiien"},"content":"                                    + INVALID_NAME_DESC","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"                                    + INVALID_EMAIL_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"sophiien"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"sophiien"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" o/person \" + PHONE_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"sophiien"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"sophiien"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_STUDENT_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"sophiien"},"content":"                .withPhone(VALID_PHONE_STUDENT_AMY).withEmail(VALID_EMAIL_STUDENT_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"sophiien"},"content":"                .withTags(VALID_TAG).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"sophiien"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"sophiien"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" o/person \" + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"sophiien"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"sophiien"},"content":"                .withPhone(VALID_PHONE_STUDENT_AMY).withEmail(VALID_EMAIL_STUDENT_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"        // name","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"sophiien"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-07"},{"lineNumber":140,"author":{"gitId":"sophiien"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" o/person \" + NAME_DESC_AMY;","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"sophiien"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"sophiien"},"content":"                .withName(VALID_NAME_STUDENT_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        // phone","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"sophiien"},"content":"        userInput \u003d targetIndex.getOneBased() + \" o/person \" + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"sophiien"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_STUDENT_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"        // email","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"sophiien"},"content":"        userInput \u003d targetIndex.getOneBased() + \" o/person \" + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"sophiien"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_STUDENT_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"        // tags","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"sophiien"},"content":"        userInput \u003d targetIndex.getOneBased() + \" o/person \" + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"sophiien"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"        // no other valid values specified","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"sophiien"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-07"},{"lineNumber":170,"author":{"gitId":"sophiien"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" o/person \" + INVALID_PHONE_DESC + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"sophiien"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"sophiien"},"content":"                .withPhone(VALID_PHONE_STUDENT_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"        // other valid values specified","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"sophiien"},"content":"        userInput \u003d targetIndex.getOneBased() + \" o/person \" + EMAIL_DESC_AMY + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"sophiien"},"content":"                + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"sophiien"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_STUDENT_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"sophiien"},"content":"                .withEmail(VALID_EMAIL_STUDENT_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"sophiien"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-07"},{"lineNumber":188,"author":{"gitId":"sophiien"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" o/person \" + TAG_EMPTY;","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"sophiien"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"benmurphyy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"benmurphyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"},{"lineNumber":197,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":91,"sophiien":107}},{"path":"src/test/java/unibook/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.FindCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"            new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":33}},{"path":"src/test/java/unibook/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"geraldneo567"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-04-03"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":3,"author":{"gitId":"geraldneo567"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-03"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.commands.ListCommand;","lastModifiedDate":"2022-04-03"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.commands.ListCommand.ListCommandType;","lastModifiedDate":"2022-04-03"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import unibook.logic.commands.ListCommand.ListView;","lastModifiedDate":"2022-04-03"},{"lineNumber":8,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2022-04-03"},{"lineNumber":10,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"geraldneo567"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2022-04-03"},{"lineNumber":12,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"    public void viewChange_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list o/view v/groups\",","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(ListView.GROUPS, ListCommandType.VIEW));","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"    //Tests for parsing commands for \"People view\"","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":21,"author":{"gitId":"geraldneo567"},"content":"    public void people_listSpecificType_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list type/professors\",","lastModifiedDate":"2022-04-03"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"professors\", ListCommandType.TYPE));","lastModifiedDate":"2022-04-03"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":27,"author":{"gitId":"geraldneo567"},"content":"    public void people_listModuleAndCode_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list o/module m/CS2103\",","lastModifiedDate":"2022-04-03"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"CS2103\", ListCommandType.MODULE));","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    public void people_listModuleAndCodeAndType_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list o/module m/CS2103 type/students\",","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"CS2103\", \"students\", ListCommandType.MODULEANDTYPE));","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"    public void people_listGroupAndModuleCodeAndGroupName_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list o/group m/CS2103 g/W16-1\",","lastModifiedDate":"2022-04-03"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"w16-1\", \"CS2103\", ListCommandType.PEOPLEINGROUP));","lastModifiedDate":"2022-04-03"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":43,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"    //Tests for parsing commands for \"Modules\" view","lastModifiedDate":"2022-04-03"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"    public void modules_moduleCode_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list m/CS2103\",","lastModifiedDate":"2022-04-03"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"CS2103\", ListCommandType.MODULE));","lastModifiedDate":"2022-04-03"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":50,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    public void modules_name_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list n/Software\",","lastModifiedDate":"2022-04-03"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"Software\", ListCommandType.MODULEWITHNAMEMATCH));","lastModifiedDate":"2022-04-03"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":58,"author":{"gitId":"geraldneo567"},"content":"    public void modules_keyEvent_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list ke/EXAM\",","lastModifiedDate":"2022-04-03"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"EXAM\", ListCommandType.MODULESWITHKEYEVENT));","lastModifiedDate":"2022-04-03"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"    public void modules_date_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list dt/2022-05-04\",","lastModifiedDate":"2022-04-03"},{"lineNumber":66,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"2022-05-04\", ListCommandType.MODULESWITHEVENTDATE));","lastModifiedDate":"2022-04-03"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"    public void modules_dateAndKeyEvent_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":71,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list dt/2022-05-04 ke/ASSIGNMENT_DUE\",","lastModifiedDate":"2022-04-03"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"2022-05-04\", \"ASSIGNMENT_DUE\", ListCommandType.MODULESWITHDATEANDKEYEVENT));","lastModifiedDate":"2022-04-03"},{"lineNumber":73,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":74,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"    public void modules_dateAndName_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list dt/2022-05-04 n/Network\",","lastModifiedDate":"2022-04-03"},{"lineNumber":78,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"2022-05-04\", \"Network\", ListCommandType.MODULESWITHDATEANDNAME));","lastModifiedDate":"2022-04-03"},{"lineNumber":79,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":80,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":81,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":82,"author":{"gitId":"geraldneo567"},"content":"    public void modules_nameAndKeyEvent_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":83,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list n/Network ke/ASSIGNMENT_DUE\",","lastModifiedDate":"2022-04-03"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"Network\", \"ASSIGNMENT_DUE\", ListCommandType.MODULESWITHNAMEANDKEYEVENT));","lastModifiedDate":"2022-04-03"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"    public void modules_nameAndKeyEventAndDate_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list n/Network ke/ASSIGNMENT_DUE dt/2022-05-04\",","lastModifiedDate":"2022-04-03"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"Network\", \"2022-05-04\", \"ASSIGNMENT_DUE\",","lastModifiedDate":"2022-04-03"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"                        ListCommandType.MODULESWITHDATEANDKEYEVENTANDNAME));","lastModifiedDate":"2022-04-03"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"    public void modules_groupAndGroupName_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list o/group g/w16-1\",","lastModifiedDate":"2022-04-03"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"w16-1\", ListCommandType.GROUPFROMMODULEVIEW));","lastModifiedDate":"2022-04-03"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"    //Tests for parsing commands for \"Groups\" view","lastModifiedDate":"2022-04-03"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"    public void groups_groupName_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list g/w16-1\",","lastModifiedDate":"2022-04-03"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"w16-1\", ListCommandType.GROUPFROMGROUPVIEW));","lastModifiedDate":"2022-04-03"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":107,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":108,"author":{"gitId":"geraldneo567"},"content":"    public void groups_groupNameAndModuleCode_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":109,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list g/w16-1 m/CS2107\",","lastModifiedDate":"2022-04-03"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"w16-1\", \"CS2107\", ListCommandType.SPECIFICGROUPFROMGROUPVIEW));","lastModifiedDate":"2022-04-03"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":113,"author":{"gitId":"geraldneo567"},"content":"    @Test","lastModifiedDate":"2022-04-03"},{"lineNumber":114,"author":{"gitId":"geraldneo567"},"content":"    public void groups_meeting_returnsCorrectCommand() {","lastModifiedDate":"2022-04-03"},{"lineNumber":115,"author":{"gitId":"geraldneo567"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"list mt/2022-04-03\",","lastModifiedDate":"2022-04-03"},{"lineNumber":116,"author":{"gitId":"geraldneo567"},"content":"                new ListCommand(\"2022-04-03\", ListCommandType.GROUPWITHMEETINGDATE));","lastModifiedDate":"2022-04-03"},{"lineNumber":117,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-04-03"},{"lineNumber":118,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":119,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"geraldneo567":119}},{"path":"src/test/java/unibook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalIndexes;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2022-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"benmurphyy":23,"yokester98":1,"-":147}},{"path":"src/test/java/unibook/logic/parser/UniBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import static unibook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"sophiien"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"sophiien"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.EditCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.FindCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.ListCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"sophiien"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.PersonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.StudentBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalIndexes;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"public class UniBookParserTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"    private final UniBookParser parser \u003d new UniBookParser();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    /* TODO add command parser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        Person person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    } */","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        Person person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"sophiien"},"content":"        Set\u003cModule\u003e modSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"sophiien"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"sophiien"},"content":"        tagSet.add(new Tag(\"friends\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"sophiien"},"content":"        ModuleCode moduleCode \u003d new ModuleCode(\"CS2103\");","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"sophiien"},"content":"        ModuleName moduleName \u003d new ModuleName(\"Software Engineering\");","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"sophiien"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"sophiien"},"content":"        Module module \u003d new Module(moduleName, moduleCode);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"sophiien"},"content":"        modSet.add(module);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"sophiien"},"content":"        descriptor.setModules(modSet);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"sophiien"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor, moduleCode);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"sophiien"},"content":"        System.out.println(PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"sophiien"},"content":"        System.out.println(EditCommand.COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"sophiien"},"content":"            + \" \" + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"sophiien"},"content":"            + \" o/person \"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"sophiien"},"content":"            + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"sophiien"},"content":"            + \" \" + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"sophiien"},"content":"            + \" o/person \"","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"            + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"sophiien"},"content":"        EditCommand editCommand1 \u003d command;","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"sophiien"},"content":"        assertEquals(editCommand1, command);","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"benmurphyy":30,"yokester98":11,"sophiien":26,"-":58}},{"path":"src/test/java/unibook/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import static unibook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.UniBookBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalStudents;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"        assertEquals(new UniBook(), new UniBook(modelManager.getUniBook()));","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        userPrefs.setUniBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"        userPrefs.setUniBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"yokester98"},"content":"    public void setUniBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUniBookFilePath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"    public void setUniBookFilePath_validPath_setsUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"yokester98"},"content":"        modelManager.setUniBookFilePath(path);","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"yokester98"},"content":"        assertEquals(path, modelManager.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"yokester98"},"content":"    public void hasPerson_personNotInUniBook_returnsFalse() {","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"        assertFalse(modelManager.hasPerson(TypicalStudents.ALICE));","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"yokester98"},"content":"    public void hasPerson_personInUniBook_returnsTrue() {","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        modelManager.addPerson(TypicalStudents.ALICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(modelManager.hasPerson(TypicalStudents.ALICE));","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"        UniBook uniBook \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"            new UniBookBuilder().withPerson(TypicalStudents.ALICE).withPerson(TypicalStudents.BENSON).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"yokester98"},"content":"        UniBook differentUniBook \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"yokester98"},"content":"        modelManager \u003d new ModelManager(uniBook, userPrefs);","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"yokester98"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(uniBook, userPrefs);","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"yokester98"},"content":"        // different uniBook -\u003e returns false","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"yokester98"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentUniBook, userPrefs)));","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"        String[] keywords \u003d TypicalStudents.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"yokester98"},"content":"        assertFalse(modelManager.equals(new ModelManager(uniBook, userPrefs)));","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"yokester98"},"content":"        differentUserPrefs.setUniBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"yokester98"},"content":"        assertFalse(modelManager.equals(new ModelManager(uniBook, differentUserPrefs)));","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"benmurphyy":18,"yokester98":17,"-":97}},{"path":"src/test/java/unibook/model/UniBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"geraldneo567"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.StudentBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalStudents;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"public class UniBookTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"    private final UniBook uniBook \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private final StudentBuilder studentBuilder \u003d new StudentBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"        assertEquals(Collections.emptyList(), uniBook.getPersonList());","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniBook.resetData(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"    public void resetData_withValidReadOnlyUniBook_replacesData() {","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        UniBook newData \u003d TypicalUniBook.getTypicalUniBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"        uniBook.resetData(newData);","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"        assertEquals(newData, uniBook);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        // Two default persons created with studentBuilder","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(studentBuilder.build(), studentBuilder.build());","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        List\u003cModule\u003e newModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"        UniBookStub newData \u003d new UniBookStub(newPersons, newModules);","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e uniBook.resetData(newData));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniBook.hasPerson(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"    public void hasPerson_personNotInUniBook_returnsFalse() {","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        assertFalse(uniBook.hasPerson(studentBuilder.build()));","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"    public void hasPerson_personInUniBook_returnsTrue() {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        uniBook.addPerson(TypicalStudents.ALICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(uniBook.hasPerson(TypicalStudents.ALICE));","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e uniBook.getPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"yokester98"},"content":"     * A stub ReadOnlyUniBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"yokester98"},"content":"    private static class UniBookStub implements ReadOnlyUniBook {","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"geraldneo567"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"geraldneo567"},"content":"        UniBookStub(Collection\u003cPerson\u003e persons, Collection\u003cModule\u003e modules) {","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"            this.modules.setAll(modules);","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"            return modules;","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"benmurphyy":19,"yokester98":10,"-":61,"geraldneo567":11}},{"path":"src/test/java/unibook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"    public void setUniBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setUniBookFilePath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"benmurphyy":5,"yokester98":4,"-":12}},{"path":"src/test/java/unibook/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"benmurphyy":6,"-":63}},{"path":"src/test/java/unibook/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.StudentBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"yokester98"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"1234567\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-04-03"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"1234567\")","lastModifiedDate":"2022-04-03"},{"lineNumber":73,"author":{"gitId":"ryanwalterlee"},"content":"            .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"benmurphyy":8,"ryanwalterlee":1,"yokester98":2,"-":64}},{"path":"src/test/java/unibook/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"        assertFalse(Name.isValidName(\"1234567\")); // numbers only","lastModifiedDate":"2022-04-03"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"        assertFalse(Name.isValidName(\"Robert Downey Jr 2nd\")); // contains numbers","lastModifiedDate":"2022-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr\")); // long names","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"benmurphyy":6,"yokester98":3,"-":32}},{"path":"src/test/java/unibook/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"        assertTrue(Phone.isValidPhone(\"1234567\")); // exactly 7 numbers","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // exactly 15 numbers","lastModifiedDate":"2022-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"benmurphyy":6,"yokester98":2,"-":33}},{"path":"src/test/java/unibook/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import static unibook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import static unibook.testutil.typicalclasses.TypicalStudents.ALICE;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import static unibook.testutil.typicalclasses.TypicalStudents.BENSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.StudentBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private final StudentBuilder studentBuilder \u003d new StudentBuilder();","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        uniquePersonList.add(studentBuilder.build());","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        assertTrue(uniquePersonList.contains(studentBuilder.build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     * Test if all fields of a person are the same.","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    public void contains_personWithSameFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        Person editedAlice \u003d ALICE;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        uniquePersonList.add(studentBuilder.build());","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(studentBuilder.build()));","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        uniquePersonList.setPerson(ALICE, BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"        expectedUniquePersonList.add(BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"            uniquePersonList.setPerson(ALICE, BENSON));","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"        expectedUniquePersonList.add(BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"        expectedUniquePersonList.add(BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"            -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":161,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"benmurphyy":34,"-":130}},{"path":"src/test/java/unibook/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.model.tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"benmurphyy":6,"-":20}},{"path":"src/test/java/unibook/storage/JsonAdaptedProfessorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.storage.adaptedmodeltypes.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedModuleCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedProfessor;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedTag;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalProfessors;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedProfessorTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_NAME \u003d TypicalProfessors.BENJAMIN.getName().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_PHONE \u003d TypicalProfessors.BENJAMIN.getPhone().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_EMAIL \u003d TypicalProfessors.BENJAMIN.getEmail().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    private static final Set\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalProfessors.BENJAMIN.getTags().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        .collect(Collectors.toSet());","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    private static final Set\u003cJsonAdaptedModuleCode\u003e VALID_MODULES \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_OFFICE \u003d TypicalProfessors.BENJAMIN.getOffice().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_validPersonDetails_returnsStudent() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d new JsonAdaptedProfessor(TypicalProfessors.BENJAMIN);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        assertEquals(TypicalProfessors.BENJAMIN, prof.toModelType(TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedProfessor(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS, VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d new JsonAdaptedProfessor(null, VALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedProfessor(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS, VALID_MODULES,","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"                VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d new JsonAdaptedProfessor(VALID_NAME, null, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedProfessor(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS, VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d new JsonAdaptedProfessor(VALID_NAME, VALID_PHONE, null, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidOffice_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d new JsonAdaptedProfessor(VALID_NAME, VALID_PHONE, null, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cJsonAdaptedTag\u003e invalidTags \u003d new HashSet\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedProfessor prof \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedProfessor(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags, VALID_MODULES, VALID_OFFICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e prof.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"    //TODO invalid modules test","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"benmurphyy":120}},{"path":"src/test/java/unibook/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedGroupCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedModuleCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedStudent;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.storage.adaptedmodeltypes.JsonAdaptedTag;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalStudents;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_NAME \u003d TypicalStudents.BENSON.getName().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_PHONE \u003d TypicalStudents.BENSON.getPhone().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    private static final String VALID_EMAIL \u003d TypicalStudents.BENSON.getEmail().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    private static final Set\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalStudents.BENSON.getTags().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"        .collect(Collectors.toSet());","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    private static final Set\u003cJsonAdaptedModuleCode\u003e VALID_MODULES \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    private static final Set\u003cJsonAdaptedGroupCode\u003e VALID_GROUPS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(TypicalStudents.BENSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        assertEquals(TypicalStudents.BENSON, person.toModelType(TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS, VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"            String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS, VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"            String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS, VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null, VALID_TAGS,","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"            VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"            String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cJsonAdaptedTag\u003e invalidTags \u003d new HashSet\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags, VALID_MODULES, VALID_GROUPS);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, () -\u003e person.toModelType(","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"            TypicalUniBook.getTypicalUniBook()));","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"benmurphyy"},"content":"    //TODO invalid modules test","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"benmurphyy":114}},{"path":"src/test/java/unibook/storage/JsonSerializableUniBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"public class JsonSerializableUniBookTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableUniBookTest\");","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    private static final Path TYPICAL_UNIBOOK_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalUniBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidUniBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonUniBook.json\");","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    private static final Path DUPLICATE_MODULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateModuleUniBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    private static final Path DUPLICATE_MODULE_CODE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateModuleCodeUniBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    private static final Path DUPLICATE_GROUP_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGroupUniBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private static final Path DUPLICATE_GROUP_CODE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGroupCodeUniBook.json\");","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    public void toModelType_typicalUniBookFile_success() throws Exception {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        JsonSerializableUniBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_UNIBOOK_FILE,","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"            JsonSerializableUniBook.class).get();","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"        UniBook uniBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"        UniBook typicalPersonsUniBook \u003d TypicalUniBook.getTypicalUniBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"        assertEquals(uniBookFromFile, typicalPersonsUniBook);","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"yokester98"},"content":"        JsonSerializableUniBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"            JsonSerializableUniBook.class).get();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"        JsonSerializableUniBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"            JsonSerializableUniBook.class).get();","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableUniBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"    //TODO add other duplicate tests","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"benmurphyy":21,"yokester98":14,"-":18}},{"path":"src/test/java/unibook/storage/JsonUniBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"yokester98"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"//import unibook.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalStudents;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"//import unibook.testutil.typicalclasses.TypicalStudents;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"//import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"public class JsonUniBookStorageTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUniBookStorageTest\");","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"    @TempDir","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"    public void readUniBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUniBook(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"yokester98"},"content":"    private java.util.Optional\u003cReadOnlyUniBook\u003e readUniBook(String filePath) throws Exception {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"yokester98"},"content":"        return new JsonUniBookStorage(Paths.get(filePath)).readUniBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"yokester98"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"yokester98"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"yokester98"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"yokester98"},"content":"            : null;","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"yokester98"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"yokester98"},"content":"        assertFalse(readUniBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"yokester98"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUniBook(\"notJsonFormatUniBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"yokester98"},"content":"    public void readUniBook_invalidPersonUniBook_throwDataConversionException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUniBook(\"invalidPersonUniBook.json\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"yokester98"},"content":"    public void readUniBook_invalidAndValidPersonUniBook_throwDataConversionException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUniBook(\"invalidAndValidPersonUniBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"yokester98"},"content":"    public void readAndSaveUniBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"yokester98"},"content":"        Path filePath \u003d testFolder.resolve(\"TempUniBook.json\");","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        UniBook original \u003d TypicalUniBook.getTypicalUniBook();","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"yokester98"},"content":"        JsonUniBookStorage jsonUniBookStorage \u003d new JsonUniBookStorage(filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"yokester98"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"yokester98"},"content":"        jsonUniBookStorage.saveUniBook(original, filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"yokester98"},"content":"        ReadOnlyUniBook readBack \u003d jsonUniBookStorage.readUniBook(filePath).get();","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"yokester98"},"content":"        assertEquals(original, new UniBook(readBack));","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"yokester98"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"        original.addPerson(TypicalStudents.ALICE);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        original.removePerson(original.getPersonList().get(0));","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        for (Person person : original.getPersonList()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"            System.out.println(person);","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"yokester98"},"content":"        jsonUniBookStorage.saveUniBook(original, filePath);","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"yokester98"},"content":"        readBack \u003d jsonUniBookStorage.readUniBook(filePath).get();","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        UniBook ub \u003d new UniBook(readBack);","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"        for (Person person : ub.getPersonList()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"            System.out.println(person);","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"yokester98"},"content":"        assertEquals(original, new UniBook(readBack));","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"yokester98"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"        original.addPerson(TypicalStudents.IDA);","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"yokester98"},"content":"        jsonUniBookStorage.saveUniBook(original); // file path not specified","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"yokester98"},"content":"        readBack \u003d jsonUniBookStorage.readUniBook().get(); // file path not specified","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"yokester98"},"content":"        assertEquals(original, new UniBook(readBack));","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"yokester98"},"content":"    public void saveUniBook_nullUniBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUniBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"yokester98"},"content":"     * Saves {@code uniBook} at the specified {@code filePath}.","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"yokester98"},"content":"    private void saveUniBook(ReadOnlyUniBook uniBook, String filePath) {","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"yokester98"},"content":"        try {","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"yokester98"},"content":"            new JsonUniBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"yokester98"},"content":"                .saveUniBook(uniBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"yokester98"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"yokester98"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"yokester98"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"yokester98"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"yokester98"},"content":"    public void saveUniBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUniBook(new UniBook(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"yokester98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"benmurphyy":26,"yokester98":94}},{"path":"src/test/java/unibook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"yokester98"},"content":"        userPrefs.setUniBookFilePath(Paths.get(\"unibook.json\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"benmurphyy":9,"yokester98":1,"-":113}},{"path":"src/test/java/unibook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.ReadOnlyUniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.typicalclasses.TypicalUniBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"        JsonUniBookStorage uniBookStorage \u003d new JsonUniBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"        storageManager \u003d new StorageManager(uniBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"yokester98"},"content":"    public void uniBookReadSave() throws Exception {","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"yokester98"},"content":"         * {@link JsonUniBookStorage} class.","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"yokester98"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUniBookStorageTest} class.","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"        UniBook original \u003d TypicalUniBook.getTypicalUniBook();","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"yokester98"},"content":"        storageManager.saveUniBook(original);","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"yokester98"},"content":"        ReadOnlyUniBook retrieved \u003d storageManager.readUniBook().get();","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"yokester98"},"content":"        assertEquals(original, new UniBook(retrieved));","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"yokester98"},"content":"    public void getUniBookFilePath() {","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"yokester98"},"content":"        assertNotNull(storageManager.getUniBookFilePath());","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":7,"yokester98":10,"-":51}},{"path":"src/test/java/unibook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"benmurphyy":1,"-":33}},{"path":"src/test/java/unibook/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"sophiien"},"content":"        descriptor.setModules(person.getModules());","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"benmurphyy":7,"sophiien":1,"-":77}},{"path":"src/test/java/unibook/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.logic.parser.CliSyntax;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"sophiien"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":" * A utility class for Person.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"public class PersonUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"        return AddCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_OPTION + \"student \" + getPersonDetails(person);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        sb.append(CliSyntax.PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"        sb.append(CliSyntax.PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"        );","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"sophiien"},"content":"        person.getModules().stream().forEach(","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"sophiien"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_MODULE + s.getModuleCode().toString() + \" \")","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"sophiien"},"content":"        );","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(CliSyntax.PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(CliSyntax.PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"sophiien"},"content":"                sb.append(CliSyntax.PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"            } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"sophiien"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"sophiien"},"content":"        if (descriptor.getModules().isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"sophiien"},"content":"            Set\u003cModule\u003e modules \u003d descriptor.getModules().get();","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"sophiien"},"content":"            if (modules.isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"sophiien"},"content":"                sb.append(CliSyntax.PREFIX_NEWMOD).append(\" \");","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"sophiien"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"sophiien"},"content":"                modules.forEach(s -\u003e sb.append(CliSyntax.PREFIX_NEWMOD)","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"sophiien"},"content":"                    .append(s.getModuleCode().toString())","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"sophiien"},"content":"                    .append(\" \"));","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"sophiien"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"sophiien"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"benmurphyy":53,"yokester98":1,"sophiien":16}},{"path":"src/test/java/unibook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":1,"-":71}},{"path":"src/test/java/unibook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"benmurphyy":4,"-":51}},{"path":"src/test/java/unibook/testutil/UniBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"yokester98"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"yokester98"},"content":" * A utility class to help with building UniBook objects.","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"yokester98"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"yokester98"},"content":" * {@code UniBook ab \u003d new UniBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"yokester98"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"yokester98"},"content":"public class UniBookBuilder {","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"yokester98"},"content":"    private UniBook uniBook;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"yokester98"},"content":"    public UniBookBuilder() {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"yokester98"},"content":"        uniBook \u003d new UniBook();","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"yokester98"},"content":"    public UniBookBuilder(UniBook uniBook) {","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"yokester98"},"content":"        this.uniBook \u003d uniBook;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"yokester98"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"yokester98"},"content":"     * Adds a new {@code Person} to the {@code UniBook} that we are building.","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"yokester98"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"yokester98"},"content":"    public UniBookBuilder withPerson(Person person) {","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"yokester98"},"content":"        uniBook.addPerson(person);","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"yokester98"},"content":"        return this;","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"yokester98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"yokester98"},"content":"    public UniBook build() {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"yokester98"},"content":"        return uniBook;","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"yokester98"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"yokester98"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"benmurphyy":3,"yokester98":31}},{"path":"src/test/java/unibook/testutil/builders/ModuleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.builders;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"geraldneo567"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"geraldneo567"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":" * A utility class to help with building Module objects.","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"geraldneo567"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"geraldneo567"},"content":"public class ModuleBuilder {","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_CODE \u003d \"CS2107\";","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_NAME \u003d \"Introduction to Information Security\";","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"geraldneo567"},"content":"    private ModuleName moduleName;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"geraldneo567"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"geraldneo567"},"content":"    private ObservableList\u003cProfessor\u003e professors;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"geraldneo567"},"content":"    private ObservableList\u003cStudent\u003e students;","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private ObservableList\u003cGroup\u003e groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"geraldneo567"},"content":"    private ObservableList\u003cModuleKeyEvent\u003e keyEvents;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"geraldneo567"},"content":"     * Creates a {@code ModuleBuilder} with the default details.","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"geraldneo567"},"content":"    public ModuleBuilder() {","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"geraldneo567"},"content":"        moduleName \u003d new ModuleName(DEFAULT_NAME);","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"geraldneo567"},"content":"        moduleCode \u003d new ModuleCode(DEFAULT_CODE);","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"geraldneo567"},"content":"        professors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"geraldneo567"},"content":"        students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"geraldneo567"},"content":"        keyEvents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"     * Initializes the ModuleBuilder with the data of {@code moduleToCopy}.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"geraldneo567"},"content":"    public ModuleBuilder(Module moduleToCopy) {","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"geraldneo567"},"content":"        moduleName \u003d moduleToCopy.getModuleName();","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"geraldneo567"},"content":"        moduleCode \u003d moduleToCopy.getModuleCode();","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"geraldneo567"},"content":"        professors \u003d moduleToCopy.getProfessors();","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"geraldneo567"},"content":"        students \u003d moduleToCopy.getStudents();","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        groups \u003d moduleToCopy.getGroups();","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"geraldneo567"},"content":"        keyEvents \u003d moduleToCopy.getKeyEvents();","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"     * Sets the {@code moduleName} of the {@code Module} that we are building.","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"geraldneo567"},"content":"    public ModuleBuilder withModuleName(String name) {","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        moduleName \u003d new ModuleName(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"geraldneo567"},"content":"        return this;","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"geraldneo567"},"content":"     * Sets the {@code moduleCode} of the {@code Module} that we are building.","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"geraldneo567"},"content":"    public ModuleBuilder withModuleCode(String code) {","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        moduleCode \u003d new ModuleCode(code);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"geraldneo567"},"content":"        return this;","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code professors} of the {@code Module} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    public ModuleBuilder withProfessors(ObservableList\u003cProfessor\u003e professors) {","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        this.professors \u003d professors;","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"geraldneo567"},"content":"        return this;","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code students} of the {@code Module} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    public ModuleBuilder withStudents(ObservableList\u003cStudent\u003e students) {","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        this.students \u003d students;","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code groups} of the {@code Module} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"    public ModuleBuilder withGroups(Set\u003cGroup\u003e groupName) {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        groups \u003d FXCollections.observableArrayList(groupName);","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"     * Sets the {@code keyEvents} of the {@code Module} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"    public ModuleBuilder withKeyEvents(Set\u003cModuleKeyEvent\u003e keyEventSet) {","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"geraldneo567"},"content":"        keyEvents \u003d FXCollections.observableArrayList(keyEventSet);","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"geraldneo567"},"content":"        return this;","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"geraldneo567"},"content":"    public Module build() {","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"geraldneo567"},"content":"        return new Module(moduleName, moduleCode, professors, students, groups, keyEvents);","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"geraldneo567"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"benmurphyy":35,"geraldneo567":71}},{"path":"src/test/java/unibook/testutil/builders/ProfessorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.builders;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_EMAIL_PROFESSOR_CHARLES;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_NAME_PROFESSOR_CHARLES;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_OFFICE_2;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import static unibook.logic.commands.CommandTestUtil.VALID_PHONE_PROFESSOR_CHARLES;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":" * Used to instantiate a {@code Professor} object for testing.","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":" * Recommended to use default fields where possible.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"public class ProfessorBuilder {","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_NAME \u003d VALID_NAME_PROFESSOR_CHARLES;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_PHONE \u003d VALID_PHONE_PROFESSOR_CHARLES;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_EMAIL \u003d VALID_EMAIL_PROFESSOR_CHARLES;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_OFFICE \u003d VALID_OFFICE_2;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private String option;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"    private Name name;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    private Email email;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    private Office office;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code ProfessorBuilder} with the default details.","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder() {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"        office \u003d new Office(DEFAULT_OFFICE);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"     * Initializes the ProfessorBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder(Professor professorToCopy) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"        name \u003d professorToCopy.getName();","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"        phone \u003d professorToCopy.getPhone();","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"        email \u003d professorToCopy.getEmail();","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"        office \u003d professorToCopy.getOffice();","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"        tags \u003d new HashSet\u003c\u003e(professorToCopy.getTags());","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"        modules \u003d new HashSet\u003c\u003e(professorToCopy.getModules());","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Name} of the {@code Professor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder withName(String name) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Professor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Phone} of the {@code Professor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Email} of the {@code Professor} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Office} of the {@code Office} that we are building.","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"    public ProfessorBuilder withOffice(String officeStr) {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"        this.office \u003d new Office(officeStr);","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"    public Professor build() {","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"        return new Professor(name, phone, email, tags, office, modules);","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":108}},{"path":"src/test/java/unibook/testutil/builders/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.builders;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":" * Used for instantiating a {@code Student} object for use in testing.","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":" * Recommended to use default fields where possible.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_NAME \u003d \"James\";","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_PHONE \u003d \"91893940\";","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    public static final String DEFAULT_EMAIL \u003d \"bond@m16.com\";","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    private Name name;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"    private Email email;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cModule\u003e modules;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"    private Set\u003cGroup\u003e groups;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"        groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"     * Initializes the StudentBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"        modules \u003d new HashSet\u003c\u003e(studentToCopy.getModules());","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"        groups \u003d new HashSet\u003c\u003e(studentToCopy.getGroups());","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"    public StudentBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"        return this;","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"benmurphyy"},"content":"    public Student build() {","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"benmurphyy"},"content":"        return new Student(name, phone, email, tags, modules, groups);","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":92}},{"path":"src/test/java/unibook/testutil/typicalclasses/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.typicalclasses;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"benmurphyy":2,"-":10}},{"path":"src/test/java/unibook/testutil/typicalclasses/TypicalModuleCodes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.typicalclasses;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"ryanwalterlee"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"ryanwalterlee"},"content":"public class TypicalModuleCodes {","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"ryanwalterlee"},"content":"    public static final ModuleCode CS2103 \u003d new ModuleCode(\"CS2103\");","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"ryanwalterlee"},"content":"    public static final ModuleCode CS2105 \u003d new ModuleCode(\"CS2105\");","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"ryanwalterlee"},"content":"    public static final ModuleCode CS1231S \u003d new ModuleCode(\"CS1231S\");","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"ryanwalterlee"},"content":"    public static final ModuleCode CS2100 \u003d new ModuleCode(\"CS2100\");","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"ryanwalterlee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"ryanwalterlee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"benmurphyy":1,"ryanwalterlee":10}},{"path":"src/test/java/unibook/testutil/typicalclasses/TypicalModules.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.typicalclasses;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.ModuleBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class TypicalModules {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public static final Module CS1231S \u003d new ModuleBuilder().withModuleName(\"Discrete Structures\")","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        .withModuleCode(\"CS1231S\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"    public static final Module CS2102 \u003d new ModuleBuilder().withModuleName(\"Database Systems\")","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"        .withModuleCode(\"CS2102\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":11}},{"path":"src/test/java/unibook/testutil/typicalclasses/TypicalProfessors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.typicalclasses;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.ProfessorBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":" * A utility class containing a list of {@code Professor} objects to be used in tests.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"public class TypicalProfessors {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"    public static final Professor AMANDA \u003d new ProfessorBuilder().withName(\"Amanda Ginsburg\")","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        .withPhone(\"94351223\").withEmail(\"amanda@example.com\")","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        .withTags(\"helpful\").withOffice(\"COM1 10-2\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"    public static final Professor BENJAMIN \u003d new ProfessorBuilder().withName(\"Benjamin Mcdonald\")","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"ben@example.com\").withPhone(\"94365423\").withOffice(\"FASS1 1-23\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    public static final Professor CATHERINE \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        new ProfessorBuilder().withName(\"Catherine Keratusa\").withPhone(\"92352903\")","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"            .withTags(\"friendly\").withEmail(\"catherine@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"    public static final Professor DAVID \u003d new ProfessorBuilder().withName(\"David Melner\").withPhone(\"87654533\")","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"david@example.com\").withTags(\"stern\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    private TypicalProfessors() {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"    } //prevents instantiation","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":23}},{"path":"src/test/java/unibook/testutil/typicalclasses/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.typicalclasses;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.builders.StudentBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"        .withPhone(\"94351253\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"        .withTags(\"friends\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"        .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"    private TypicalStudents() {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"    } //prevents instantiation","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"benmurphyy":30}},{"path":"src/test/java/unibook/testutil/typicalclasses/TypicalUniBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.testutil.typicalclasses;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"benmurphyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"benmurphyy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"benmurphyy"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"benmurphyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"benmurphyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.UniBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.Module;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"geraldneo567"},"content":"import unibook.model.module.ModuleKeyEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.ModuleName;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.module.group.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Email;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Office;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Professor;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.person.Student;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"benmurphyy"},"content":"import unibook.model.tag.Tag;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"benmurphyy"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":" * Contains method to instantiate a typical instance of UniBook.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"benmurphyy"},"content":"public class TypicalUniBook {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"benmurphyy"},"content":"    //Data for objects already in typical unibook","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_MODULE_NAME_CS2103 \u003d \"Software Engineering\";","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_MODULE_NAME_CS2106 \u003d \"Introduction to Operating Systems\";","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_MODULE_CODE_CS2106 \u003d \"CS2106\";","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_MODULE_CODE_CS2103 \u003d \"CS2103\";","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_NAME_STUDENT_ALEX \u003d \"Alex Yeoh\";","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_NAME_STUDENT_BERNICE \u003d \"Bernice Yu\";","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_NAME_PROFESSOR_CHARLOTTE \u003d \"Charlotte Oliveiro\";","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_PHONE_STUDENT_ALEX \u003d \"87438807\";","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_PHONE_STUDENT_BERNICE \u003d \"99272758\";","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_PHONE_PROFESSOR_CHARLOTTE \u003d \"93210283\";","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_EMAIL_STUDENT_ALEX \u003d \"alexyeoh@example.com\";","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_EMAIL_STUDENT_BERNICE \u003d \"berniceyu@example.com\";","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_EMAIL_PROFESSOR_CHARLOTTE \u003d \"charlotte@example.com\";","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_TAG_ROOMMATE \u003d \"roommate\";","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_TAG_HELPFUL \u003d \"helpful\";","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"benmurphyy"},"content":"    public static final LocalDateTime VALID_MEETING_TIME \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"benmurphyy"},"content":"        LocalDateTime.of(2022, 5, 4, 13, 0);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_GROUP_NAME \u003d \"W16-1\";","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"benmurphyy"},"content":"    public static final String VALID_OFFICE_1 \u003d \"COM1 02-10\";","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"geraldneo567"},"content":"    public static final ModuleKeyEvent.KeyEventType VALID_EVENT_TYPE \u003d ModuleKeyEvent.KeyEventType.valueOf(\"EXAM\");","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"geraldneo567"},"content":"    public static final LocalDateTime VALID_EVENT_TIME \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"geraldneo567"},"content":"            LocalDateTime.of(2022, 5, 4, 14, 0);","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"benmurphyy"},"content":"     * Generate the typical modules.","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"benmurphyy"},"content":"     * @return array of typical modules","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"    public static Module[] generateTypicalModules() {","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"benmurphyy"},"content":"        Module sampleModule1 \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"benmurphyy"},"content":"            new Module(new ModuleName(VALID_MODULE_NAME_CS2103), new ModuleCode(VALID_MODULE_CODE_CS2103));","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"benmurphyy"},"content":"        Module sampleModule2 \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"benmurphyy"},"content":"            new Module(new ModuleName(VALID_MODULE_NAME_CS2106), new ModuleCode(VALID_MODULE_CODE_CS2106));","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        return new Module[] {sampleModule1, sampleModule2};","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"benmurphyy"},"content":"     * Generate the typical groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"     * @param typicalModules typical modules that typical groups are under.","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"benmurphyy"},"content":"     * @return array of typical groups.","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"benmurphyy"},"content":"    public static Group[] generateTypicalGroups(Module[] typicalModules) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"benmurphyy"},"content":"        //Sample meeting time collection for group","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"benmurphyy"},"content":"        ObservableList\u003cLocalDateTime\u003e typicalMeetingTimes1 \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"benmurphyy"},"content":"        typicalMeetingTimes1.add(VALID_MEETING_TIME);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"benmurphyy"},"content":"        Group sampleGroup1 \u003d new Group(VALID_GROUP_NAME, typicalModules[0], typicalMeetingTimes1);","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"benmurphyy"},"content":"        return new Group[] {sampleGroup1};","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"geraldneo567"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"geraldneo567"},"content":"     * Instantiates sample key events, using passed in modules array.","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"geraldneo567"},"content":"     * @param sampleModules","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"geraldneo567"},"content":"     * @return array of key events","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"geraldneo567"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"geraldneo567"},"content":"    public static ModuleKeyEvent[] getSampleEvents(Module[] sampleModules) {","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"geraldneo567"},"content":"        ModuleKeyEvent sampleModuleKeyEvent1 \u003d new ModuleKeyEvent(VALID_EVENT_TYPE, VALID_EVENT_TIME,","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"geraldneo567"},"content":"                sampleModules[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"geraldneo567"},"content":"        return new ModuleKeyEvent[] {sampleModuleKeyEvent1};","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"geraldneo567"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"benmurphyy"},"content":"     * Generate a typical instance of UniBook.","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"benmurphyy"},"content":"    public static UniBook getTypicalUniBook() {","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"benmurphyy"},"content":"        UniBook typicalUniBook \u003d new UniBook();","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"benmurphyy"},"content":"        //modules[0] \u003d\u003d cs2103, modules[1] \u003d\u003d cs2106","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"benmurphyy"},"content":"        Module[] modules \u003d generateTypicalModules();","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"benmurphyy"},"content":"        //groups[0] \u003d\u003d W16-1","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"benmurphyy"},"content":"        Group[] groups \u003d generateTypicalGroups(modules);","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"geraldneo567"},"content":"        //keyEvents[0] \u003d exam on May 4th, 2022 at 2PM","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"geraldneo567"},"content":"        ModuleKeyEvent[] keyEvents \u003d getSampleEvents(modules);","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"geraldneo567"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"benmurphyy"},"content":"        //Initialising sample module sets to pass into Student constructor","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e typicalModuleSet1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e typicalModuleSet2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cModule\u003e typicalModuleSet3 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"benmurphyy"},"content":"        //Sample module sets for s1, s2, p1 respectively","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"benmurphyy"},"content":"        typicalModuleSet1.add(modules[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"benmurphyy"},"content":"        typicalModuleSet2.add(modules[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"benmurphyy"},"content":"        typicalModuleSet3.add(modules[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"benmurphyy"},"content":"        //Initialising sample group sets to pass into Student constructor","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"benmurphyy"},"content":"        Set\u003cGroup\u003e typicalGroupSet1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"benmurphyy"},"content":"        //Sample group sets for s1","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"benmurphyy"},"content":"        typicalGroupSet1.add(groups[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"benmurphyy"},"content":"        //Initialising students and professor objects","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"benmurphyy"},"content":"        Student s1 \u003d new Student(new Name(VALID_NAME_STUDENT_ALEX),","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"benmurphyy"},"content":"            new Phone(VALID_PHONE_STUDENT_ALEX), new Email(VALID_EMAIL_STUDENT_ALEX),","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"benmurphyy"},"content":"            getTagSet(VALID_TAG_FRIEND, VALID_TAG_ROOMMATE), typicalModuleSet1, typicalGroupSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"benmurphyy"},"content":"        Student s2 \u003d new Student(new Name(VALID_NAME_STUDENT_BERNICE),","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"benmurphyy"},"content":"            new Phone(VALID_PHONE_STUDENT_BERNICE), new Email(VALID_EMAIL_STUDENT_BERNICE),","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"benmurphyy"},"content":"            getTagSet(VALID_TAG_FRIEND), typicalModuleSet2, typicalGroupSet1);","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"benmurphyy"},"content":"        Professor p1 \u003d new Professor(new Name(VALID_NAME_PROFESSOR_CHARLOTTE),","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"benmurphyy"},"content":"            new Phone(VALID_PHONE_PROFESSOR_CHARLOTTE), new Email(VALID_EMAIL_PROFESSOR_CHARLOTTE),","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"benmurphyy"},"content":"            getTagSet(VALID_TAG_HELPFUL), new Office(VALID_OFFICE_1),","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"benmurphyy"},"content":"            typicalModuleSet3);","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"benmurphyy"},"content":"        //Add persons to their module\u0027s list of associated people","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"benmurphyy"},"content":"        modules[1].addStudent(s1);","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"benmurphyy"},"content":"        modules[0].addStudent(s2);","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"benmurphyy"},"content":"        modules[0].addProfessor(p1);","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"benmurphyy"},"content":"        //Add students to their groups","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"benmurphyy"},"content":"        groups[0].addMember(s1);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"benmurphyy"},"content":"        //Add people to sample Unibook","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"benmurphyy"},"content":"        typicalUniBook.addPerson(s1);","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"benmurphyy"},"content":"        typicalUniBook.addPerson(s2);","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"benmurphyy"},"content":"        typicalUniBook.addPerson(p1);","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"benmurphyy"},"content":"        //Add modules to sample Unibook","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"benmurphyy"},"content":"        typicalUniBook.addModule(modules[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"benmurphyy"},"content":"        typicalUniBook.addModule(modules[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"benmurphyy"},"content":"        //Add groups to sample Unibook","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"benmurphyy"},"content":"        typicalUniBook.addGroupToModule(groups[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"geraldneo567"},"content":"        //Add key events to modules in sample Unibook","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"geraldneo567"},"content":"        typicalUniBook.addKeyEventToModule(keyEvents[0]);","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"benmurphyy"},"content":"        return typicalUniBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"benmurphyy"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"benmurphyy"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"benmurphyy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"benmurphyy"},"content":"            .map(Tag::new)","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"benmurphyy"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"benmurphyy"},"content":"     * Returns the typical modules in typical unibook as a list.","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"benmurphyy"},"content":"    public static List\u003cModule\u003e getTypicalModules() {","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"benmurphyy"},"content":"        return new ArrayList\u003c\u003e(getTypicalUniBook().getModuleList());","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"benmurphyy"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"benmurphyy"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"benmurphyy"},"content":"     * Returns the typical persons in typical unibook as a list.","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"benmurphyy"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"benmurphyy"},"content":"     * @return","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"benmurphyy"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"benmurphyy"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"benmurphyy"},"content":"        return new ArrayList\u003c\u003e(getTypicalUniBook().getPersonList());","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"benmurphyy"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"benmurphyy":170,"geraldneo567":20}},{"path":"src/test/java/unibook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"benmurphyy"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"benmurphyy":3,"-":33}},{"path":"src/test/java/unibook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"benmurphyy"},"content":"package unibook.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"benmurphyy"},"content":"import unibook.MainApp;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"benmurphyy"},"content":"import unibook.testutil.Assert;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"benmurphyy"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"benmurphyy":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import unibook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"benmurphyy":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"benmurphyy"},"content":"\u003c?import unibook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"benmurphyy"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"unibook.ui.TestFxmlObject\"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"benmurphyy"},"content":"         xmlns\u003d\"http://javafx.com/javafx\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"benmurphyy":3,"-":4}}]
